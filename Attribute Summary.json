{
"/MultiRowOptions.json/MultiRowOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.task": {
        "type": "hidden",
        "val": "multi_row"
      },
      "options.add_columns": {
        "type": "fieldset",
        "label": "Add New Columns",
        "repeat": true,
        "fields": {
          "new_column_name": {
            "type": "text",
            "label": "New Column Name",
            "val": "",
            "breakLine": true
          },
          "multi_row_functions__function": {
            "type": "select",
            "label": "Function",
            "required": true,
            "options": {
              "trailing_row_n_average": {
                "label": "Trailing Row-N Average"
              },
              "index_from_row_n": {
                "label": "Index from Row-N"
              },
              "absolute_growth": {
                "label": "Absolute Growth"
              },
              "relative_growth": {
                "label": "Relative Growth"
              },
              "compound_growth": {
                "label": "Compound Growth"
              }
            },
            "val": "trailing_row_n_average"
          },
          "multi_row_functions__sel_column": {
            "type": "select",
            "label": "Column",
            "show_if": "this.multi_row_functions__function=='trailing_row_n_average' || this.multi_row_functions__function=='index_from_row_n' || this.multi_row_functions__function=='absolute_growth' || this.multi_row_functions__function=='relative_growth' || this.multi_row_functions__function=='compound_growth'",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "multi_row_functions__n_value": {
            "type": "text",
            "label": "N (positive integer)",
            "show_if": "this.multi_row_functions__function=='trailing_row_n_average' || this.multi_row_functions__function=='index_from_row_n' || this.multi_row_functions__function=='compound_growth'",
            "val": "1",
            "required": true,
            "breakLine": true
          },
          "rounding": {
            "type": "select",
            "label": "Rounding",
            "required": true,
            "options": {
              "no_rounding": {
                "label": "No rounding"
              },
              "0": {
                "label": "0 digits"
              },
              "1": {
                "label": "1 digits"
              },
              "2": {
                "label": "2 digits"
              },
              "3": {
                "label": "3 digits"
              },
              "4": {
                "label": "4 digits"
              },
              "5": {
                "label": "5 digits"
              },
              "6": {
                "label": "6 digits"
              },
              "7": {
                "label": "7 digits"
              },
              "8": {
                "label": "8 digits"
              },
              "9": {
                "label": "9 digits"
              }
            },
            "val": "no_rounding"
          },
          "format__category": {
            "type": "select",
            "label": "Display Format",
            "required": true,
            "options": {
              "standard": {
                "label": "Standard"
              },
              "number": {
                "label": "Number"
              },
              "percentage": {
                "label": "Percentage"
              },
              "text": {
                "label": "Text"
              },
              "date": {
                "label": "Date"
              },
              "currency": {
                "label": "Currency"
              }
            },
            "val": "standard"
          },
          "format__rounding": {
            "type": "select",
            "label": "Decimal Places for display",
            "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
            "required": true,
            "options": {
              "no_rounding": {
                "label": "No rounding"
              },
              "0": {
                "label": "0 digits"
              },
              "1": {
                "label": "1 digits"
              },
              "2": {
                "label": "2 digits"
              },
              "3": {
                "label": "3 digits"
              },
              "4": {
                "label": "4 digits"
              },
              "5": {
                "label": "5 digits"
              },
              "6": {
                "label": "6 digits"
              },
              "7": {
                "label": "7 digits"
              },
              "8": {
                "label": "8 digits"
              },
              "9": {
                "label": "9 digits"
              }
            },
            "val": "2"
          },
          "format__use_1000_separator": {
            "type": "checkbox",
            "label": "Use 1000 Separator(.)",
            "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
            "val": "true",
            "isOn": "true",
            "isOff": "false"
          },
          "format__currency_symbol": {
            "type": "select",
            "label": "Symbol",
            "show_if": "this.format__category=='currency'",
            "required": true,
            "options": {
              "dollar": {
                "label": "$"
              },
              "euro": {
                "label": "€"
              },
              "pound": {
                "label": "£"
              },
              "yen": {
                "label": "¥ (Yen, currency of Japan)"
              },
              "colon": {
                "label": "₡ (Colón, currency of Costa Rica)"
              },
              "naira": {
                "label": "₦ (Naira, currency of Nigeria)"
              },
              "rupee": {
                "label": "₨ (Rupee, currency of India)"
              },
              "rupie": {
                "label": "₹ (Rupee, currency of India)"
              },
              "won": {
                "label": "₩ (Won, currency in South Korea and North Korea)"
              },
              "hebrew": {
                "label": "₪ (Currency of Israel)"
              },
              "dong": {
                "label": "₫ (Currency of Vietnam)"
              },
              "kip": {
                "label": "₭ (Kip, currency of Laos)"
              },
              "mongolia": {
                "label": "₮ (Currency of Mongolia)"
              },
              "peso": {
                "label": "₱ (Peso, currency of the Philippines)"
              },
              "guarani": {
                "label": "₲ (Guaraní, currency of Paraguay)"
              },
              "hryvnia": {
                "label": "₴ (Hryvnia, currency of Ukraine)"
              },
              "tenge": {
                "label": "₸ (Tenge, currency of Kazakhstan)"
              },
              "lira": {
                "label": "₺ (Lira, currency of Turkey)"
              },
              "manat": {
                "label": "₼ (Manat, currency of Azerbaijan)"
              },
              "rubles": {
                "label": "₽ (Rubles, currency of Russia)"
              },
              "lari": {
                "label": "₾ (Lari, currency of Georgia)"
              },
              "bitcoin": {
                "label": "₿ (Bitcoin, crypto currency)"
              }
            },
            "val": "dollar"
          },
          "format__date_format": {
            "type": "select",
            "label": "Type",
            "show_if": "this.format__category=='date'",
            "required": true,
            "options": {
              "mm/dd/yyyy": {
                "label": "3/14/2012"
              },
              "D, M dd, Y": {
                "label": "Wednesday, March 14, 2012"
              },
              "yyyy-mm-dd": {
                "label": "2012-03-14"
              },
              "m.dd.yyyy": {
                "label": "3.14.2012"
              },
              "m.dd.yy": {
                "label": "3.14.12"
              },
              "dd.m.yyyy": {
                "label": "14.3.2012"
              },
              "dd.m.yy": {
                "label": "14.3.12"
              },
              "M dd, Y": {
                "label": "March 14, 2012"
              },
              "dd-mm-yyyy": {
                "label": "14-03-2012"
              },
              "mm-dd-yyyy": {
                "label": "03-14-2012"
              },
              "dd-mm-yy": {
                "label": "14-03-12"
              },
              "mm-dd-yy": {
                "label": "03-14-12"
              }
            },
            "val": "mm/dd/yyyy",
            "breakLine": true
          },
          "apply_to_group__enabled": {
            "type": "checkbox",
            "label": "Apply to Group",
            "show_if": "this.task_type!='static_value'",
            "val": "false",
            "isOn": "true",
            "isOff": "false"
          },
          "apply_to_group__group_columns": {
            "type": "select",
            "label": "Group Column(s)",
            "show_if": "this.apply_to_group__enabled == 'true' && this.task_type!='static_value'",
            "table": "table_id",
            "bind": "COLUMNS",
            "multiple": true,
            "required": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.use_filter": {
        "type": "checkbox",
        "label": "Use Filter",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "filter_box": {
        "type": "fieldset",
        "label": "Filter Options",
        "show_if": "options.use_filter=='true'",
        "repeat": false,
        "fields": {
          "options.filter": {
            "type": "fieldset",
            "label": "Add Filter Conditions",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if" :  "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if" :  "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table_id": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table_id",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group",
            "show_if": "options.apply_to_record=='false'",
            "repeat": false,
            "fields": {
              "options.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "required": true,
                "width": "100%",
                "table": "table_id",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      }
    }
  }
}
,
"/UniqueOptions.json/UniqueOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "column_names": {
        "type": "select",
        "label": "Select columns to find unique values from",
        "table": "table_id",
        "multiple": true,
        "bind": "COLUMNS",
        "required": true,
        "width": "100%",
        "breakLine": true
      }
    }
  }
}
,
"/ChameleonOptions.json/ChameleonOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "params": {
        "type": "fieldset",
        "label": "Modify Parameters",
        "breakLine": true,
        "repeat": true,
        "fields": {
          "attr_name": {
            "type": "text",
            "label": "Field Name",
            "required": true,
            "val": ""
          },
          "use_field_label": {
            "type": "checkbox",
            "label": "Use field label",
            "val": "true",
            "isOn": "true",
            "isOff": "false"
          },
          "attr_instance": {
            "type": "number",
            "label": "Field Instance",
            "required": true,
            "val": 1
          },
          "value_type": {
            "type": "select",
            "label": "Replace with",
            "required": true,
            "options": {
              "single_value": {
                "label": "Single Field Value"
              },
              "value_series": {
                "label": "Field Value List"
              },
              "table_values": {
                "label": "Table Values"
              }
            },
            "val": "single_value"
          },
          "attr_value": {
            "type": "text",
            "label": "Field Value",
            "required": true,
            "val": "",
            "show_if": "this.value_type=='single_value'"
          },
          "attr_values": {
            "type": "text",
            "label": "Field Values ( ; - separated )",
            "required": true,
            "val": "",
            "show_if": "this.value_type=='value_series'"
          },
          "table_id": {
            "type": "select",
            "label": "Select Table",
            "bind": "TABLES",
            "show_if": "this.value_type=='table_values'",
            "empty": "",
            "required": true
          },
          "column": {
            "type": "select",
            "label": "Select Column",
            "required": true,
            "table": "this.table_id",
            "bind": "COLUMNS",
            "show_if": "this.value_type=='table_values'"
          },
          "use_waiting_time": {
            "type": "checkbox",
            "label": "Add waiting time",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "show_if": "this.value_type!='single_value'"
          },
          "waiting_period": {
            "type": "number",
            "label": "Waiting time (sec)",
            "val": 0,
            "show_if": "this.value_type!='single_value' && this.use_waiting_time!='false'"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "task_chain": {
        "type": "checkbox",
        "label": "Task Chain",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "schedule_options": {
        "type": "fieldset",
        "label": "Tasks to schedule",
        "show_if": "task_chain == 'true'",
        "repeat": true,
        "fields": {
          "input_task": {
            "type": "select",
            "label": "Select Task",
            "bind": "TASKS",
            "empty": "",
            "required": true
          },
          "waiting_time": {
            "type": "number",
            "label": "Waiting time (sec)",
            "val": 0,
            "required": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      }
    }
  }
}
,
"/PayOptions.json/PayOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.provider": {
        "type": "select",
        "label": "Payment Provider",
        "options": {
          "stripe": {
            "label": "Stripe"
          },
          "paypal": {
            "label": "Paypal"
          },
          "payoneer": {
            "label": "Payoneer"
          }
        },
        "val": "stripe",
        "required": true
      },
      "options.type": {
        "type": "select",
        "label": "Payment Type",
        "options": {
          "charge": {
            "label": "Charge"
          },
          "transfer": {
            "label": "Transfer"
          }
        },
        "val": "charge",
        "required": true
      },
      "options.stripe.secret_key": {
        "type": "password",
        "label": "Stripe Secret Key",
        "show_if": "options.provider=='stripe'",
        "required": true,
        "val": "",
        "width": "100%",
        "breakLine": true
      }
    }
  }
},
"/WebAccessInput.json/WebAccessInput.json": {
  "input": {
    "type": "fieldset",
    "label": "Select Input Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "options.type=='embed_code'",
    "repeat": false,
    "fields": {
      "table_id": {
        "type": "select",
        "label": "Select Table",
        "bind": "TABLES",
        "empty": "",
        "required": true
      },
      "remove_input_table_after_processing": {
        "type": "hidden",
        "val": "false"
      },
      "is_word": {
        "type": "hidden",
        "val": "false"
      }
    }
  }
},
"/EmailEmbedOutput.json/EmailEmbedOutput.json": {
  "embed_output_frame": {
    "type": "fieldset",
    "label": "Define Embed(Attach) Table Name",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "options.add_table=='true'",
    "repeat": false,
    "fields": {
      "embed_output.custom_text": {
        "type": "text",
        "label": "Output Table Name",
        "show_if": "embed_output.compose_table_name=='false'",
        "minLength": 1,
        "val": "",
        "width": "100%",
        "breakLine": true
      },
      "embed_output.custom_options": {
        "type": "checkbox",
        "label": "Output Options",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "embed_output.compose_table_name": {
        "type": "checkbox",
        "label": "Compose Table Name",
        "show_if": "embed_output.custom_options=='true'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "embed_output_compose_table_name_frame": {
        "type": "fieldset",
        "label": "Compose Output Table Name",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "embed_output.custom_options=='true' && embed_output.compose_table_name=='true'",
        "repeat": false,
        "fields": {
          "embed_output.prefix_rule": {
            "type": "select",
            "label": "Prefix",
            "val": "empty",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "embed_output.prefix_text": {
            "type": "text",
            "label": "Prefix Text",
            "show_if": "embed_output.prefix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "embed_output.core_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "show_if": "embed_output.prefix_rule!='empty'",
            "val": "_",
            "width": "50px"
          },
          "embed_output.core_rule": {
            "type": "select",
            "label": "Table Name",
            "val": "input_table_name",
            "options": {
              "input_table_name": {
                "label": "Input Table Name"
              },
              "script_name": {
                "label": "Task Name"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "embed_output.core_text": {
            "type": "text",
            "label": "Main Table Name",
            "show_if": "embed_output.core_rule=='custom'",
            "required": true,
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "embed_output.suffix_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "val": "_",
            "width": "50px"
          },
          "embed_output.suffix_rule": {
            "type": "select",
            "label": "Suffix",
            "val": "script_name",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "embed_output.suffix_text": {
            "type": "text",
            "label": "Suffix Text",
            "show_if": "embed_output.suffix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": "",
            "breakLine": true
          },
          "embed_output.timezone": {
            "type": "select",
            "label": "Timezone",
            "show_if": "embed_output.prefix_rule=='date_string_type1' || embed_output.prefix_rule=='date_string_type2' || embed_output.prefix_rule=='time_string' || embed_output.prefix_rule=='datetime_string' || embed_output.suffix_rule=='date_string_type1' || embed_output.suffix_rule=='date_string_type2' || embed_output.suffix_rule=='time_string' || embed_output.suffix_rule=='datetime_string'",
            "val": "Europe/Berlin",
            "required": true,
            "options": {
              "America/Adak": {
                "label": "Adak, Gambier"
              },
              "Australia/Adelaide": {
                "label": "Adelaide, Broken Hill, Darwin"
              },
              "America/Anchorage": {
                "label": "Anchorage, Juneau, Sitka"
              },
              "Pacific/Apia": {
                "label": "Apia, Asau, Mulifanua, Afega, Leulumoega"
              },
              "Pacific/Enderbury": {
                "label": "Apia, Fiji, Tongatapu"
              },
              "Antarctica/McMurdo": {
                "label": "Auckland, Casey, Davis"
              },
              "Pacific/Auckland": {
                "label": "Auckland, Wellington, Christchurch"
              },
              "Asia/Bangkok": {
                "label": "Bangkok, Jakarta, Novosibirsk"
              },
              "Europe/Berlin": {
                "label": "Berlin, Paris, Amsterdam"
              },
              "Australia/Perth": {
                "label": "Brunei, Singapore, Perth"
              },
              "Atlantic/Cape_Verde": {
                "label": "Cape Verde,Praia, Mindelo, Santa Maria"
              },
              "America/Belize": {
                "label": "Costa Rica, El Salvador, Denver"
              },
              "Antarctica/Vostok": {
                "label": "Dhaka, Bishkek, Omsk"
              },
              "Europe/Astrakhan": {
                "label": "Dubai, Baku, Tbilisi"
              },
              "Australia/Eucla": {
                "label": "Eucla"
              },
              "Pacific/Honolulu": {
                "label": "Honolulu, Rarotonga, Tahiti"
              },
              "Asia/Kabul": {
                "label": "Kabul, Kandahār, Mazār-e Sharīf, Herāt, Jalālābād"
              },
              "Asia/Aqtau": {
                "label": "Karachi, Tashkent, Maldives"
              },
              "Asia/Kathmandu": {
                "label": "Kathmandu, Pokhara, Pātan, Biratnagar"
              },
              "Pacific/Kiritimati": {
                "label": "Kiritimati"
              },
              "Asia/Colombo": {
                "label": "Kolkata, Colombo, Jaffna, Negombo"
              },
              "Europe/Guernsey": {
                "label": "London, Dublin, Lisbon"
              },
              "Australia/Lord_Howe": {
                "label": "Lord Howe"
              },
              "America/Creston": {
                "label": "Los Angeles, Vancouver, Hermosillo"
              },
              "Pacific/Marquesas": {
                "label": "Marquesas, Taiohae"
              },
              "America/Cayman": {
                "label": "Mexico City, Panama, Chicago"
              },
              "Pacific/Niue": {
                "label": "Midway, Niue, Pago Pago"
              },
              "Europe/Mariehamn": {
                "label": "Moscow, Istanbul, Qatar"
              },
              "Asia/Kolkata": {
                "label": "Mumbai, Delhi, Bengaluru, Kolkata, Chennai"
              },
              "America/Miquelon": {
                "label": "Noronha, Nuuk, Miquelon"
              },
              "America/Danmarkshavn": {
                "label": "Reykjavik, Dakar, Casablanca"
              },
              "Pacific/Bougainville": {
                "label": "Sakhalin, Norfolk, Bougainville"
              },
              "America/Araguaina": {
                "label": "Sao Paulo, Buenos Aires, Montevideo"
              },
              "America/St_Johns": {
                "label": "St. Johns, Mount Pearl, Corner Brook"
              },
              "Asia/Tehran": {
                "label": "Tehran, Mashhad, Isfahan, Karaj, Tabriz"
              },
              "Asia/Tokyo": {
                "label": "Tokyo, Seoul, Jayapura"
              },
              "America/New_York": {
                "label": "Toronto, Santiago, New York"
              },
              "Australia/Sydney": {
                "label": "Vladivostok, Sydney, Brisbane"
              },
              "Asia/Yangon": {
                "label": "Yangon, Cocos, Mandalay, Nay Pyi Taw, Mawlamyine"
              },
              "Indian/Cocos": {
                "label": "Yangon, Cocos, West Island"
              }
            },
            "breakLine": true
          }
        }
      },
      "embed_output.select_output_columns": {
        "type": "checkbox",
        "label": "Select Output Columns",
        "show_if": "embed_output.custom_options=='true'",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "embed_output.output_columns": {
        "type": "fieldset",
        "label": "Select Output Columns",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "embed_output.custom_options=='true' && embed_output.select_output_columns=='true'",
        "repeat": true,
        "fields": {
          "field_name": {
            "type": "select",
            "label": "Select Column",
            "table": "options.embed_table",
            "bind": "COLUMNS",
            "required": true
          },
          "order": {
            "type": "select",
            "label": "Order",
            "options": {
              "-": {
                "label": "-"
              },
              "asc": {
                "label": "Asc"
              },
              "desc": {
                "label": "Desc"
              }
            },
            "val": "-"
          },
          "is_rename": {
            "type": "checkbox",
            "label": "Rename",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-right: 10px"
          },
          "rename": {
            "show_if": "this.is_rename == 'true'",
            "type": "text",
            "required": true,
            "minLength": 1,
            "maxLength": 255,
            "label": "New Column Name",
            "style": "margin-left: 10px"
          },
          "format__category": {
            "type": "select",
            "label": "Display Format",
            "required": true,
            "options": {
              "standard": {
                "label": "Standard"
              },
              "number": {
                "label": "Number"
              },
              "percentage": {
                "label": "Percentage"
              },
              "text": {
                "label": "Text"
              },
              "date": {
                "label": "Date"
              },
              "currency": {
                "label": "Currency"
              }
            },
            "val": "standard"
          },
          "format__rounding": {
            "type": "select",
            "label": "Decimal Places for display",
            "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
            "required": true,
            "options": {
              "no_rounding": {
                "label": "No rounding"
              },
              "0": {
                "label": "0 digits"
              },
              "1": {
                "label": "1 digits"
              },
              "2": {
                "label": "2 digits"
              },
              "3": {
                "label": "3 digits"
              },
              "4": {
                "label": "4 digits"
              },
              "5": {
                "label": "5 digits"
              },
              "6": {
                "label": "6 digits"
              },
              "7": {
                "label": "7 digits"
              },
              "8": {
                "label": "8 digits"
              },
              "9": {
                "label": "9 digits"
              }
            },
            "val": "2"
          },
          "format__use_1000_separator": {
            "type": "checkbox",
            "label": "Use 1000 Separator(.)",
            "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-right: 15px"
          },
          "format__currency_symbol": {
            "type": "select",
            "label": "Symbol",
            "show_if": "this.format__category=='currency'",
            "required": true,
            "options": {
              "dollar": {
                "label": "$"
              },
              "euro": {
                "label": "€"
              },
              "pound": {
                "label": "£"
              },
              "yen": {
                "label": "¥ (Yen, currency of Japan)"
              },
              "colon": {
                "label": "₡ (Colón, currency of Costa Rica)"
              },
              "naira": {
                "label": "₦ (Naira, currency of Nigeria)"
              },
              "rupee": {
                "label": "₨ (Rupee, currency of India)"
              },
              "rupie": {
                "label": "₹ (Rupee, currency of India)"
              },
              "won": {
                "label": "₩ (Won, currency in South Korea and North Korea)"
              },
              "hebrew": {
                "label": "₪ (Currency of Israel)"
              },
              "dong": {
                "label": "₫ (Currency of Vietnam)"
              },
              "kip": {
                "label": "₭ (Kip, currency of Laos)"
              },
              "mongolia": {
                "label": "₮ (Currency of Mongolia)"
              },
              "peso": {
                "label": "₱ (Peso, currency of the Philippines)"
              },
              "guarani": {
                "label": "₲ (Guaraní, currency of Paraguay)"
              },
              "hryvnia": {
                "label": "₴ (Hryvnia, currency of Ukraine)"
              },
              "tenge": {
                "label": "₸ (Tenge, currency of Kazakhstan)"
              },
              "lira": {
                "label": "₺ (Lira, currency of Turkey)"
              },
              "manat": {
                "label": "₼ (Manat, currency of Azerbaijan)"
              },
              "rubles": {
                "label": "₽ (Rubles, currency of Russia)"
              },
              "lari": {
                "label": "₾ (Lari, currency of Georgia)"
              },
              "bitcoin": {
                "label": "₿ (Bitcoin, crypto currency)"
              }
            },
            "val": "dollar"
          },
          "format__date_format": {
            "type": "select",
            "label": "Type",
            "show_if": "this.format__category=='date'",
            "required": true,
            "options": {
              "mm/dd/yyyy": {
                "label": "3/14/2012"
              },
              "D, M dd, Y": {
                "label": "Wednesday, March 14, 2012"
              },
              "yyyy-mm-dd": {
                "label": "2012-03-14"
              },
              "m.dd.yyyy": {
                "label": "3.14.2012"
              },
              "m.dd.yy": {
                "label": "3.14.12"
              },
              "dd.m.yyyy": {
                "label": "14.3.2012"
              },
              "dd.m.yy": {
                "label": "14.3.12"
              },
              "M dd, Y": {
                "label": "March 14, 2012"
              },
              "dd-mm-yyyy": {
                "label": "14-03-2012"
              },
              "mm-dd-yyyy": {
                "label": "03-14-2012"
              },
              "dd-mm-yy": {
                "label": "14-03-12"
              },
              "mm-dd-yy": {
                "label": "03-14-12"
              }
            },
            "val": "mm/dd/yyyy",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        },
        "breakLine": true,
        "style": "margin-bottom: 20px"
      }
    }
  }
},
"/SortOptions.json/SortOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "sort": {
        "type": "fieldset",
        "label": "Select Sort Columns",
        "repeat": true,
        "fields": {
          "column": {
            "type": "select",
            "label": "Column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "order": {
            "type": "select",
            "label": "Order",
            "options": {
              "asc": {
                "label": "Asc"
              },
              "desc": {
                "label": "Desc"
              }
            },
            "val": "asc"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        },
        "breakLine": true
      }
    }
  }
}
,
"/AutoFillSelectOutputColumn.json/AutoFillSelectOutputColumn.json": {
  "output.select_output_columns_type": {
    "type": "select",
    "label": "Select Output Columns",
    "required": true,
    "options": {
      "all": {
        "label": "All"
      },
      "standard": {
        "label": "Standard Column Selection"
      },
      "advanced": {
        "label": "Advanced Column Selection"
      }
    },
    "val": "all",
    "style": "margin-right: 15px"
  },
  "output_columns_frame": {
    "type": "fieldset",
    "label": "Select Output Columns",
    "show_if": "output.select_output_columns_type=='standard'",
    "repeat": false,
    "fields": {
      "output.output_columns": {
        "type": "select",
        "label": "Output Column(s)",
        "table": "target_table.table_id",
        "bind": "COLUMNS",
        "multiple": true,
        "required": true,
        "breakLine": true
      },
      "output.all_but_selected": {
        "type": "checkbox",
        "label": "All but selected",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  },
  "output.detail_output_columns": {
    "type": "fieldset",
    "label": "Select Output Columns",
    "show_if": "output.select_output_columns_type=='advanced'",
    "repeat": true,
    "fields": {
      "field_name": {
        "type": "select",
        "label": "Select Column",
        "table": "target_table.table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "order": {
        "type": "select",
        "label": "Order",
        "options": {
          "-": {
            "label": "-"
          },
          "asc": {
            "label": "Asc"
          },
          "desc": {
            "label": "Desc"
          }
        },
        "val": "-"
      },
      "format__category": {
        "type": "select",
        "label": "Display Format",
        "required": true,
        "options": {
          "standard": {
            "label": "Standard"
          },
          "number": {
            "label": "Number"
          },
          "percentage": {
            "label": "Percentage"
          },
          "text": {
            "label": "Text"
          },
          "date": {
            "label": "Date"
          },
          "currency": {
            "label": "Currency"
          }
        },
        "val": "standard"
      },
      "format__rounding": {
        "type": "select",
        "label": "Decimal Places for display",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "required": true,
        "options": {
          "no_rounding": {
            "label": "No rounding"
          },
          "0": {
            "label": "0 digits"
          },
          "1": {
            "label": "1 digits"
          },
          "2": {
            "label": "2 digits"
          },
          "3": {
            "label": "3 digits"
          },
          "4": {
            "label": "4 digits"
          },
          "5": {
            "label": "5 digits"
          },
          "6": {
            "label": "6 digits"
          },
          "7": {
            "label": "7 digits"
          },
          "8": {
            "label": "8 digits"
          },
          "9": {
            "label": "9 digits"
          }
        },
        "val": "2"
      },
      "format__use_1000_separator": {
        "type": "checkbox",
        "label": "Use 1000 Separator(.)",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "format__currency_symbol": {
        "type": "select",
        "label": "Symbol",
        "show_if": "this.format__category=='currency'",
        "required": true,
        "options": {
          "dollar": {
            "label": "$"
          },
          "euro": {
            "label": "€"
          },
          "pound": {
            "label": "£"
          },
          "yen": {
            "label": "¥ (Yen, currency of Japan)"
          },
          "colon": {
            "label": "₡ (Colón, currency of Costa Rica)"
          },
          "naira": {
            "label": "₦ (Naira, currency of Nigeria)"
          },
          "rupee": {
            "label": "₨ (Rupee, currency of India)"
          },
          "rupie": {
            "label": "₹ (Rupee, currency of India)"
          },
          "won": {
            "label": "₩ (Won, currency in South Korea and North Korea)"
          },
          "hebrew": {
            "label": "₪ (Currency of Israel)"
          },
          "dong": {
            "label": "₫ (Currency of Vietnam)"
          },
          "kip": {
            "label": "₭ (Kip, currency of Laos)"
          },
          "mongolia": {
            "label": "₮ (Currency of Mongolia)"
          },
          "peso": {
            "label": "₱ (Peso, currency of the Philippines)"
          },
          "guarani": {
            "label": "₲ (Guaraní, currency of Paraguay)"
          },
          "hryvnia": {
            "label": "₴ (Hryvnia, currency of Ukraine)"
          },
          "tenge": {
            "label": "₸ (Tenge, currency of Kazakhstan)"
          },
          "lira": {
            "label": "₺ (Lira, currency of Turkey)"
          },
          "manat": {
            "label": "₼ (Manat, currency of Azerbaijan)"
          },
          "rubles": {
            "label": "₽ (Rubles, currency of Russia)"
          },
          "lari": {
            "label": "₾ (Lari, currency of Georgia)"
          },
          "bitcoin": {
            "label": "₿ (Bitcoin, crypto currency)"
          }
        },
        "val": "dollar"
      },
      "format__date_format": {
        "type": "select",
        "label": "Type",
        "show_if": "this.format__category=='date'",
        "required": true,
        "options": {
          "mm/dd/yyyy": {
            "label": "3/14/2012"
          },
          "D, M dd, Y": {
            "label": "Wednesday, March 14, 2012"
          },
          "yyyy-mm-dd": {
            "label": "2012-03-14"
          },
          "m.dd.yyyy": {
            "label": "3.14.2012"
          },
          "m.dd.yy": {
            "label": "3.14.12"
          },
          "dd.m.yyyy": {
            "label": "14.3.2012"
          },
          "dd.m.yy": {
            "label": "14.3.12"
          },
          "M dd, Y": {
            "label": "March 14, 2012"
          },
          "dd-mm-yyyy": {
            "label": "14-03-2012"
          },
          "mm-dd-yyyy": {
            "label": "03-14-2012"
          },
          "dd-mm-yy": {
            "label": "14-03-12"
          },
          "mm-dd-yy": {
            "label": "03-14-12"
          }
        },
        "val": "mm/dd/yyyy"
      },
      "is_rename": {
        "type": "checkbox",
        "label": "Rename",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "rename": {
        "show_if": "this.is_rename == 'true'",
        "type": "text",
        "required": true,
        "minLength": 1,
        "maxLength": 255,
        "label": "New Column Name",
        "style": "margin-left: 10px"
      },
      "delete": {
        "type": "button",
        "label": "Delete",
        "function": "DELETE_ROW"
      }
    },
    "breakLine": true
  }
},
"/ImportDirFromDropboxOptions.json/ImportDirFromDropboxOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.from": {
        "type": "hidden",
        "val": "web"
      },
      "options.webservice": {
        "type": "hidden",
        "val": "dropbox"
      },
      "options.output_format": {
        "type": "select",
        "label": "Select Type",
        "options": {
          "csv_table": {
            "label": "CSV-Table"
          },
          "line_by_line": {
            "label": "Line by Line"
          },
          "word_by_word": {
            "label": "Text"
          },
          "file_list": {
            "label": "File List"
          }
        },
        "val": "csv_table",
        "required": true
      },
      "options.word_pattern_type": {
        "type": "select",
        "label": "Word Pattern",
        "show_if": "options.output_format=='word_by_word' && options.specify_word_pattern=='true'",
        "options": {
          "regex": {
            "label": "Regular Expression"
          }
        },
        "val": "regex",
        "required": true
      },
      "options.word_pattern_regex": {
        "type": "text",
        "label": "Regular Expression",
        "show_if": "options.output_format=='word_by_word' && options.specify_word_pattern=='true' && options.word_pattern_type=='regex'",
        "required": true,
        "val": "[a-z][1-9]",
        "breakLine": true
      },
      "options.column_setting": {
        "type": "checkbox",
        "label": "Column Settings",
        "show_if": "options.output_format!='file_list'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "column_setting_frame": {
        "type": "fieldset",
        "label": "Column Settings",
        "show_if": "options.output_format!='file_list' && options.column_setting=='true'",
        "repeat": false,
        "fields": {
          "options.add_row_column": {
            "type": "checkbox",
            "label": "Add Row Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_word_count_column": {
            "type": "checkbox",
            "label": "Add 'Word Count' Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_word_nonword_column": {
            "type": "checkbox",
            "label": "Add 'Word & Non-Word' Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_section_column": {
            "type": "checkbox",
            "label": "Add Section Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "section_column_types_frame": {
            "type": "fieldset",
            "label": "Section Column Types",
            "show_if": "options.output_format=='word_by_word' && options.add_section_column=='true'",
            "repeat": false,
            "fields": {
              "options.section_columns.add_paragraph_section_column": {
                "type": "checkbox",
                "label": "Paragraph",
                "val": "false",
                "isOn": "true",
                "isOff": "false",
                "breakLine": true
              },
              "options.section_columns.add_custom_section_column": {
                "type": "checkbox",
                "label": "Custom Section Delimiter",
                "val": "false",
                "isOn": "true",
                "isOff": "false"
              },
              "options.section_columns.custom_delimiter": {
                "type": "text",
                "label": "Delimiter(1 character)",
                "show_if": "options.section_columns.add_custom_section_column=='true'",
                "maxLength": 1,
                "required": true,
                "breakLine": true
              },
              "options.section_columns.add_brackets_punctuation_section_column": {
                "type": "checkbox",
                "label": "Brackets and Punctuation",
                "val": "false",
                "isOn": "true",
                "isOff": "false"
              },
              "options.section_columns.brackets_punctuation_section_column_type": {
                "type": "select",
                "label": "Brackets Type",
                "show_if": "options.section_columns.add_brackets_punctuation_section_column=='true'",
                "options": {
                  "nesting_structure": {
                    "label": "Nesting Structure"
                  },
                  "inner_bracket": {
                    "label": "Inner Bracket"
                  },
                  "brackets_only": {
                    "label": "Brackets Only"
                  },
                  "show_all": {
                    "label": "Show All"
                  }
                },
                "val": "show_all",
                "required": true,
                "breakLine": true
              }
            }
          },
          "options.add_filename_column": {
            "type": "checkbox",
            "label": "Add Column for File Name",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "options.add_filepath_column": {
            "type": "checkbox",
            "label": "Add Column for File Path",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          }
        }
      },
      "options.is_cloud_dir": {
        "type": "hidden",
        "val": "true"
      },
      "if_dir_frame": {
        "type": "fieldset",
        "label": "Directory Import Options",
        "show_if": "options.output_format!='file_list' && options.is_cloud_dir=='true'",
        "repeat": false,
        "fields": {
          "options.unify_in_one_table": {
            "type": "checkbox",
            "label": "Unify in one table",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.suffix": {
            "type": "select",
            "label": "Output tables suffix",
            "show_if": "options.unify_in_one_table=='false'",
            "options": {
              "number": {
                "label": "Number"
              },
              "filename": {
                "label": "Filename"
              }
            },
            "val": "number",
            "required": true,
            "breakLine": true
          },
          "options.include_subdir": {
            "type": "checkbox",
            "label": "Include Subdirectories",
            "show_if": "options.output_format!='file_list' && options.is_cloud_dir=='true'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true,
            "style": "margin-top: 10px"
          }
        }
      },
      "options.file_list.include_subdir": {
        "type": "checkbox",
        "label": "Include Subdirectories",
        "show_if": "options.output_format=='file_list'",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true,
        "style": "margin-top: 10px"
      },
      "options.file_list.add_change_date_column": {
        "type": "checkbox",
        "label": "Add Change Date Column",
        "show_if": "options.output_format=='file_list'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  },
  "import_link_token_frame": {
    "type": "fieldset",
    "label": "Import Link",
    "repeat": false,
    "fields": {
      "options.link_csv_file": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test/blob/main/example.csv",
        "show_if": "options.webservice=='github' && options.is_cloud_dir=='false' && options.output_format=='csv_table'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.link_text_file": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test/blob/main/example.txt(json, csv, etc)",
        "show_if": "options.webservice=='github' && options.is_cloud_dir=='false' && options.output_format!='csv_table' && options.output_format!='file_list'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.one_drive.file_path": {
        "type": "text",
        "label": "Enter path to file e.g. ZippyDoc/Subdir1/test.txt",
        "show_if": "options.webservice=='ms_one_drive' && options.output_format!='file_list' && options.is_cloud_dir=='false'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox.file_path": {
        "type": "text",
        "label": "Enter path to file e.g. ZippyDoc/Subdir1/test.txt",
        "show_if": "options.webservice=='dropbox' && options.output_format!='file_list' && options.is_cloud_dir=='false'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dir_path_filter": {
        "type": "fieldset",
        "label": "Import Path and File Filter",
        "show_if": "options.output_format=='file_list' || options.is_cloud_dir=='true'",
        "repeat": true,
        "fields": {
          "github__link_directory": {
            "type": "text",
            "label": "Enter link e.g. https://github.com/zippydoc/test",
            "show_if": "options.webservice=='github'",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "one_drive__dir_path": {
            "type": "text",
            "label": "Enter path to dir e.g. ZippyDoc/Subdir1",
            "show_if": "options.webservice=='ms_one_drive'",
            "width": "100%",
            "breakLine": true
          },
          "dropbox__dir_path": {
            "type": "text",
            "label": "Enter path to dir e.g. ZippyDoc/Subdir1",
            "show_if": "options.webservice=='dropbox'",
            "width": "100%",
            "breakLine": true
          },
          "google_drive__dir_path": {
            "type": "text",
            "label": "Enter path to dir",
            "show_if": "options.webservice=='google_drive'",
            "width": "100%",
            "breakLine": true
          },
          "dir_filter__filter_type": {
            "type": "select",
            "label": "Filter Type",
            "options": {
              "all": {
                "label": "All"
              },
              "contains": {
                "label": "Contains"
              },
              "starts_with": {
                "label": "Starts With"
              },
              "ends_with": {
                "label": "Ends With"
              },
              "regex": {
                "label": "Regular Expression"
              }
            },
            "val": "all",
            "required": true
          },
          "dir_filter__filter_string": {
            "type": "text",
            "label": "Filter",
            "show_if": "this.dir_filter__filter_type!='all'",
            "required": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.is_github_private": {
        "type": "checkbox",
        "label": "Github repository is private",
        "show_if": "options.webservice=='github'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "options.github_token": {
        "type": "text",
        "label": "Github personal access token",
        "show_if": "options.webservice=='github' && options.is_github_private=='true'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.one_drive.access_token": {
        "type": "text",
        "label": "One Drive Access Token",
        "show_if": "options.webservice=='ms_one_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox.auth_code": {
        "type": "text",
        "label": "Dropbox Authorization Code",
        "show_if": "options.webservice=='dropbox'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.google_drive.access_token": {
        "type": "text",
        "label": "Google Drive Access Token",
        "show_if": "options.webservice=='google_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      }
    }
  }
}
,
"/DCCrimeOptions.json/DCCrimeOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.all_countries": {
        "type": "hidden",
        "val": "false"
      },
      "options.stat_vars": {
        "type": "fieldset",
        "label": "Statistics data category(s)",
        "repeat": true,
        "fields": {
          "stat_var_name": {
            "type": "select",
            "label": "Crime Data",
            "required": true,
            "options": {
              "Count_CriminalActivities_MurderAndNonNegligentManslaughter_AsFractionOf_Count_Person": {
                "label": "Count of Murder And Non Negligent Manslaughter Per Capita"
              },
              "Count_CriminalActivities_MurderAndNonNegligentManslaughter_Female_AsFractionOf_Count_Person_Female": {
                "label": "Count of Female Murder And Non Negligent Manslaughter Per Female Capita"
              },
              "Count_CriminalActivities_MurderAndNonNegligentManslaughter_Male_AsFractionOf_Count_Person_Male": {
                "label": "Count of Male Murder And Non Negligent Manslaughter Per Male Capita"
              }
            }
          },
          "per_capita": {
            "type": "checkbox",
            "label": "Per capita",
            "show_if": "false",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "help_Count_CriminalActivities_MurderAndNonNegligentManslaughter_AsFractionOf_Count_Person": {
            "type": "textarea",
            "label": "",
            "show_if": "this.stat_var_name=='Count_CriminalActivities_MurderAndNonNegligentManslaughter_AsFractionOf_Count_Person'",
            "val": "Intentional homicides are unlawful homicides purposely inflicted as a result of domestic disputes, interpersonal violence, violent conflicts over land resources, intergang violence over turf or control, and predatory violence and killing by armed groups. Intentional homicide does not include all intentional killing; the difference is usually in the organization of the killing. Individuals or small groups usually commit homicide, whereas killing in armed conflict is usually committed by fairly cohesive groups of up to several hundred members and is thus usually excluded.",
            "md_no_resize": false,
            "rows": 9,
            "disabled": true,
            "width": "100%"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.output_as_chart": {
        "type": "checkbox",
        "label": "Output a Graph",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
}
,
"/NewTableOptions.json/NewTableOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.add_columns": {
        "type": "fieldset",
        "label": "Define Columns",
        "repeat": true,
        "fields": {
          "first_new_column_name": {
            "type": "text",
            "label": "Column Name",
            "show_if" :  "$index == 0",
            "val": "Welcome to ZIPPYDOC"
          },
          "new_column_name": {
            "type": "text",
            "label": "Column Name",
            "show_if" :  "$index > 0",
            "val": ""
          },
          "initial_content": {
            "type": "text",
            "label": "Initial Content",
            "val": "Click to copy & paste own table",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.number_of_rows": {
        "type": "number",
        "label": "Number of Rows",
        "required": true,
        "val": 1,
        "breakLine": true
      }
    }
  }
}
,
"/SaveTaskTemplateOptions.json/SaveTaskTemplateOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.base_script_name": {
        "type": "text",
        "label": "Base script name(e.g. `clean`)",
        "val": "clean",
        "width": "100%",
        "breakLine": true
      },
      "options.table_id": {
        "type": "select",
        "label": "Script Entity JSON table",
        "bind": "TABLES",
        "required": true,
        "breakLine": true
      },
      "help_1": {
        "type": "text",
        "label": "",
        "val": "You may get base table with `Get Task Template` task",
        "disabled": true,
        "width": "100%",
        "breakLine": true
      },
      "options.publish_type": {
        "type": "select",
        "label": "Publish Type",
        "options": {
          "private": {
            "label": "As private task"
          },
          "public": {
            "label": "As public task"
          }
        },
        "val": "private",
        "required": true,
        "breakLine": true
      }
    }
  }
}
,
"/RunByParameterComposeTableName.json/RunByParameterComposeTableName.json": {
  "output.table_name_type": {
    "type": "select",
    "label": "Table Name",
    "required": true,
    "options": {
      "task_name": {
        "label": "Task Name (Flow Name)"
      },
      "custom_name": {
        "label": "Custom Name"
      },
      "compose_name": {
        "label": "Compose Name"
      }
    },
    "val": "task_name",
    "breakLine": true
  },
  "output.custom_text": {
    "type": "text",
    "label": "Output Table Name",
    "show_if": "output.table_name_type=='custom_name'",
    "minLength": 1,
    "val": "",
    "width": "100%",
    "breakLine": true
  },
  "compose_table_name_frame": {
    "type": "fieldset",
    "label": "Compose Output Table Name",
    "show_if": "output.table_name_type=='compose_name'",
    "repeat": false,
    "fields": {
      "output.prefix_rule": {
        "type": "select",
        "label": "Prefix",
        "val": "empty",
        "options": {
          "empty": {
            "label": "-"
          },
          "script_name": {
            "label": "Task Name"
          },
          "date_string_type1": {
            "label": "Date: dd_mm_yyyy"
          },
          "date_string_type2": {
            "label": "Date: yyyy_mm_dd"
          },
          "time_string": {
            "label": "Time: h_min_sec"
          },
          "datetime_string": {
            "label": "Date_Time"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.prefix_text": {
        "type": "text",
        "label": "Prefix Text",
        "show_if": "output.prefix_rule=='custom'",
        "minLength": 1,
        "maxLength": 31,
        "val": ""
      },
      "output.core_delimiter": {
        "type": "text",
        "label": "Delimiter",
        "show_if": "output.prefix_rule!='empty'",
        "val": "_",
        "width": "50px"
      },
      "output.core_rule": {
        "type": "select",
        "label": "Table Name",
        "val": "script_name",
        "options": {
          "input_table_name": {
            "label": "Input Table Name"
          },
          "script_name": {
            "label": "Task Name"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.core_text": {
        "type": "text",
        "label": "Main Table Name",
        "show_if": "output.core_rule=='custom'",
        "required": true,
        "minLength": 1,
        "maxLength": 31,
        "val": ""
      },
      "output.suffix_delimiter": {
        "type": "text",
        "label": "Delimiter",
        "val": " ",
        "width": "50px"
      },
      "output.suffix_rule": {
        "type": "select",
        "label": "Suffix",
        "val": "flow_name",
        "options": {
          "empty": {
            "label": "-"
          },
          "flow_name": {
            "label": "(Flow Name)"
          },
          "script_name": {
            "label": "Task Name"
          },
          "date_string_type1": {
            "label": "Date: dd_mm_yyyy"
          },
          "date_string_type2": {
            "label": "Date: yyyy_mm_dd"
          },
          "time_string": {
            "label": "Time: h_min_sec"
          },
          "datetime_string": {
            "label": "Date_Time"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.suffix_text": {
        "type": "text",
        "label": "Suffix Text",
        "show_if": "output.suffix_rule=='custom'",
        "minLength": 1,
        "maxLength": 31,
        "val": "",
        "breakLine": true
      },
      "output.timezone": {
        "type": "select",
        "label": "Timezone",
        "show_if": "output.prefix_rule=='date_string_type1' || output.prefix_rule=='date_string_type2' || output.prefix_rule=='time_string' || output.prefix_rule=='datetime_string' || output.suffix_rule=='date_string_type1' || output.suffix_rule=='date_string_type2' || output.suffix_rule=='time_string' || output.suffix_rule=='datetime_string'",
        "val": "Europe/Berlin",
        "required": true,
        "options": {
          "America/Adak": {
            "label": "Adak, Gambier"
          },
          "Australia/Adelaide": {
            "label": "Adelaide, Broken Hill, Darwin"
          },
          "America/Anchorage": {
            "label": "Anchorage, Juneau, Sitka"
          },
          "Pacific/Apia": {
            "label": "Apia, Asau, Mulifanua, Afega, Leulumoega"
          },
          "Pacific/Enderbury": {
            "label": "Apia, Fiji, Tongatapu"
          },
          "Antarctica/McMurdo": {
            "label": "Auckland, Casey, Davis"
          },
          "Pacific/Auckland": {
            "label": "Auckland, Wellington, Christchurch"
          },
          "Asia/Bangkok": {
            "label": "Bangkok, Jakarta, Novosibirsk"
          },
          "Europe/Berlin": {
            "label": "Berlin, Paris, Amsterdam"
          },
          "Australia/Perth": {
            "label": "Brunei, Singapore, Perth"
          },
          "Atlantic/Cape_Verde": {
            "label": "Cape Verde,Praia, Mindelo, Santa Maria"
          },
          "America/Belize": {
            "label": "Costa Rica, El Salvador, Denver"
          },
          "Antarctica/Vostok": {
            "label": "Dhaka, Bishkek, Omsk"
          },
          "Europe/Astrakhan": {
            "label": "Dubai, Baku, Tbilisi"
          },
          "Australia/Eucla": {
            "label": "Eucla"
          },
          "Pacific/Honolulu": {
            "label": "Honolulu, Rarotonga, Tahiti"
          },
          "Asia/Kabul": {
            "label": "Kabul, Kandahār, Mazār-e Sharīf, Herāt, Jalālābād"
          },
          "Asia/Aqtau": {
            "label": "Karachi, Tashkent, Maldives"
          },
          "Asia/Kathmandu": {
            "label": "Kathmandu, Pokhara, Pātan, Biratnagar"
          },
          "Pacific/Kiritimati": {
            "label": "Kiritimati"
          },
          "Asia/Colombo": {
            "label": "Kolkata, Colombo, Jaffna, Negombo"
          },
          "Europe/Guernsey": {
            "label": "London, Dublin, Lisbon"
          },
          "Australia/Lord_Howe": {
            "label": "Lord Howe"
          },
          "America/Creston": {
            "label": "Los Angeles, Vancouver, Hermosillo"
          },
          "Pacific/Marquesas": {
            "label": "Marquesas, Taiohae"
          },
          "America/Cayman": {
            "label": "Mexico City, Panama, Chicago"
          },
          "Pacific/Niue": {
            "label": "Midway, Niue, Pago Pago"
          },
          "Europe/Mariehamn": {
            "label": "Moscow, Istanbul, Qatar"
          },
          "Asia/Kolkata": {
            "label": "Mumbai, Delhi, Bengaluru, Kolkata, Chennai"
          },
          "America/Miquelon": {
            "label": "Noronha, Nuuk, Miquelon"
          },
          "America/Danmarkshavn": {
            "label": "Reykjavik, Dakar, Casablanca"
          },
          "Pacific/Bougainville": {
            "label": "Sakhalin, Norfolk, Bougainville"
          },
          "America/Araguaina": {
            "label": "Sao Paulo, Buenos Aires, Montevideo"
          },
          "America/St_Johns": {
            "label": "St. Johns, Mount Pearl, Corner Brook"
          },
          "Asia/Tehran": {
            "label": "Tehran, Mashhad, Isfahan, Karaj, Tabriz"
          },
          "Asia/Tokyo": {
            "label": "Tokyo, Seoul, Jayapura"
          },
          "America/New_York": {
            "label": "Toronto, Santiago, New York"
          },
          "Australia/Sydney": {
            "label": "Vladivostok, Sydney, Brisbane"
          },
          "Asia/Yangon": {
            "label": "Yangon, Cocos, Mandalay, Nay Pyi Taw, Mawlamyine"
          },
          "Indian/Cocos": {
            "label": "Yangon, Cocos, West Island"
          }
        },
        "breakLine": true
      }
    },
    "breakLine": true
  }
},
"/D3TreeOptions.json/D3TreeOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.chart_type": {
        "type": "select",
        "label": "Tree Type",
        "required": true,
        "options": {
          "collapsible_tree": {
            "label": "Collapsible Tree"
          },
          "tidy_tree": {
            "label": "Tidy Tree"
          },
          "radial_dendrogram": {
            "label": "Radial Dendrogram"
          }
        },
        "val": "collapsible_tree",
        "breakLine": true
      },
      "options.group_cols": {
        "type": "fieldset",
        "label": "Select Group Column(s) in Order",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.configure_manual=='true'",
        "repeat": true,
        "fields": {
          "group_col": {
            "type": "select",
            "label": "Group column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      }
    }
  }
}
,
"/LabelToHeaderOptions.json/LabelToHeaderOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.label_column": {
        "type": "select",
        "label": "Label Column",
        "required": true,
        "table": "table_id",
        "bind": "COLUMNS"
      },
      "options.search_tables__label_column_text": {
        "type": "text",
        "label": "Label Column Name",
        "show_if": "search_tables=='true' && search_tables__select_columns_by=='by_name_text'",
        "val": "",
        "required": true
      },
      "options.search_tables__label_column_order": {
        "type": "select",
        "label": "Label Column",
        "required": true,
        "show_if" :  "search_tables=='true' && search_tables__select_columns_by=='by_order'",
        "options": {
          "col1": {
            "label": "Column 1"
          },
          "col2": {
            "label": "Column 2"
          },
          "col3": {
            "label": "Column 3"
          },
          "col4": {
            "label": "Column 4"
          },
          "col5": {
            "label": "Column 5"
          },
          "col6": {
            "label": "Column 6"
          },
          "col7": {
            "label": "Column 7"
          },
          "col8": {
            "label": "Column 8"
          },
          "col9": {
            "label": "Column 9"
          },
          "col10": {
            "label": "Column 10"
          },
          "col11": {
            "label": "Column 11"
          },
          "col12": {
            "label": "Column 12"
          },
          "col13": {
            "label": "Column 13"
          },
          "col14": {
            "label": "Column 14"
          },
          "col15": {
            "label": "Column 15"
          },
          "col16": {
            "label": "Column 16"
          },
          "col17": {
            "label": "Column 17"
          },
          "col18": {
            "label": "Column 18"
          },
          "col19": {
            "label": "Column 19"
          },
          "col20": {
            "label": "Column 20"
          }
        },
        "val": "",
        "breakLine": true
      },
      "options.value_column": {
        "type": "select",
        "label": "Value Column",
        "required": true,
        "table": "table_id",
        "bind": "COLUMNS"
      },
      "options.search_tables__value_column_text": {
        "type": "text",
        "label": "Label Column Name",
        "show_if": "search_tables=='true' && search_tables__select_columns_by=='by_name_text'",
        "val": "",
        "required": true
      },
      "options.search_tables__value_column_order": {
        "type": "select",
        "label": "Label Column",
        "required": true,
        "show_if" :  "search_tables=='true' && search_tables__select_columns_by=='by_order'",
        "options": {
          "col1": {
            "label": "Column 1"
          },
          "col2": {
            "label": "Column 2"
          },
          "col3": {
            "label": "Column 3"
          },
          "col4": {
            "label": "Column 4"
          },
          "col5": {
            "label": "Column 5"
          },
          "col6": {
            "label": "Column 6"
          },
          "col7": {
            "label": "Column 7"
          },
          "col8": {
            "label": "Column 8"
          },
          "col9": {
            "label": "Column 9"
          },
          "col10": {
            "label": "Column 10"
          },
          "col11": {
            "label": "Column 11"
          },
          "col12": {
            "label": "Column 12"
          },
          "col13": {
            "label": "Column 13"
          },
          "col14": {
            "label": "Column 14"
          },
          "col15": {
            "label": "Column 15"
          },
          "col16": {
            "label": "Column 16"
          },
          "col17": {
            "label": "Column 17"
          },
          "col18": {
            "label": "Column 18"
          },
          "col19": {
            "label": "Column 19"
          },
          "col20": {
            "label": "Column 20"
          }
        },
        "val": "",
        "breakLine": true
      }
    }
  }
},
"/LookupOptions.json/LookupOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.task_type": {
        "type": "select",
        "label": "Task Type",
        "required": true,
        "options": {
          "generate_lookup_table": {
            "label": "Generate Lookup-Table"
          },
          "apply_lookup_table": {
            "label": "Apply Lookup-Table"
          },
          "apply_regex_table": {
            "label": "Apply Regex-Table"
          },
          "apply_lookup_table_to_cells": {
            "label": "Apply Lookup-Table to Cells"
          },
          "apply_regex_table_to_cells": {
            "label": "Apply Regex-Table to Cells"
          }
        },
        "val": "generate_lookup_table"
      },
      "options.pattern_type": {
        "type": "select",
        "label": "Pattern Type",
        "show_if": "options.task_type=='generate_lookup_table' || options.task_type=='apply_lookup_table' || options.task_type=='apply_lookup_table_to_cells'",
        "required": true,
        "options": {
          "duplicate_pattern": {
            "label": "Word Pattern"
          },
          "number_range": {
            "label": "Ranges(e.g. 10 < x <= 100)"
          }
        },
        "val": "duplicate_pattern"
      },
      "duplicate_option_box": {
        "type": "fieldset",
        "label": "Duplicate Patterns Option",
        "show_if": "options.task_type=='label_duplicates' || (options.task_type=='generate_lookup_table' && options.pattern_type=='duplicate_pattern')",
        "repeat": false,
        "fields": {
          "options.minimum_number_of_matching_characters": {
            "type": "text",
            "label": "Minimum Number of matching Characters",
            "val": "3",
            "required": true,
            "style": "min-width: 240px"
          },
          "options.minimum_number_of_duplicates": {
            "type": "text",
            "label": "Minimum Number of duplicates",
            "val": "2",
            "required": true,
            "style": "min-width: 240px",
            "breakLine": true
          }
        }
      },
      "number_range_option_box": {
        "type": "fieldset",
        "label": "Number Ranges Option",
        "show_if": "options.task_type=='generate_lookup_table' && options.pattern_type=='number_range'",
        "repeat": false,
        "fields": {
          "options.number_range.range_type": {
            "type": "select",
            "label": "Range Type",
            "required": true,
            "options": {
              "equal_interval": {
                "label": "N Equal Intervals"
              },
              "equal_range": {
                "label": "Equal Range"
              },
              "custom_range": {
                "label": "Custom Range"
              }
            },
            "val": "equal_interval"
          },
          "options.number_range.n_value": {
            "type": "text",
            "label": "N",
            "show_if": "options.number_range.range_type=='equal_interval'",
            "val": "3",
            "required": true
          },
          "options.number_range.range_value": {
            "type": "text",
            "label": "Range",
            "show_if": "options.number_range.range_type=='equal_range'",
            "val": "10",
            "required": true
          },
          "options.number_range.custom_ranges": {
            "type": "fieldset",
            "label": "Add Custom Range Pattern",
            "show_if": "options.number_range.range_type=='custom_range'",
            "repeat": true,
            "fields": {
              "pattern": {
                "type": "text",
                "label": "Pattern",
                "val": "0<=x<10",
                "required": true
              },
              "label": {
                "type": "text",
                "label": "Label",
                "val": "positive10",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          }
        }
      },
      "options.custom_lookup_table": {
        "type": "checkbox",
        "label": "Custom Lookup Table",
        "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells'",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.lookup_table_type": {
        "type": "select",
        "label": "Lookup Table Type",
        "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells'",
        "required": true,
        "options": {
          "select_lookup_table": {
            "label": "Select Lookup Table"
          },
          "custom_lookup_table": {
            "label": "Custom Lookup Table"
          }
        },
        "val": "select_lookup_table"
      },
      "lookup_table_frame": {
        "type": "fieldset",
        "label": "",
        "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells'",
        "repeat": false,
        "fields": {
          "options.lookup_table_id": {
            "type": "select",
            "label": "Lookup Table",
            "show_if": "options.custom_lookup_table=='false'",
            "bind": "TABLES",
            "empty": "",
            "required": true,
            "breakLine": true
          },
          "options.custom_lookup_table": {
            "type": "fieldset",
            "label": "Custom Lookup Table",
            "show_if": "options.custom_lookup_table=='true'",
            "repeat": true,
            "fields": {
              "lookup": {
                "type": "text",
                "label": "Lookup",
                "placeholder": "10 < x <= 100",
                "val": "",
                "required": true
              },
              "label": {
                "type": "text",
                "label": "Label",
                "placeholder": "10 < x <= 100",
                "val": "",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.partial_match": {
            "type": "checkbox",
            "label": "Partial Match",
            "show_if": "options.pattern_type=='duplicate_pattern' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_lookup_table_to_cells')",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "options.case_sensitive": {
            "type": "checkbox",
            "label": "Case Sensitive",
            "show_if": "options.pattern_type=='duplicate_pattern' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_lookup_table_to_cells')",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.use_delimiter": {
            "type": "checkbox",
            "label": "Custom Delimiter",
            "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_lookup_table_to_cells'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px"
          },
          "options.delimiter": {
            "type": "text",
            "label": "Input Delimiter",
            "show_if": "options.use_delimiter=='true' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_lookup_table_to_cells')",
            "val": ";",
            "required": true,
            "breakLine": true
          }
        }
      },
      "options.input_table.use_filter": {
        "type": "checkbox",
        "label": "Use Filter for Input table",
        "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "input_table_filter_box": {
        "type": "fieldset",
        "label": "Input Table Filter Options",
        "show_if": "options.input_table.use_filter=='true' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells')",
        "repeat": false,
        "fields": {
          "options.input_table.filter": {
            "type": "fieldset",
            "label": "Add Filter Conditions for Input table",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "input_table",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.input_table.apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record for Input table filter",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "input_table_apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group of Input table",
            "show_if": "options.input_table.apply_to_record=='false'",
            "repeat": false,
            "fields": {
              "options.input_table.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "required": true,
                "width": "100%",
                "table": "input_table",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      },
      "options.lookup_table.use_filter": {
        "type": "checkbox",
        "label": "Use Filter for Lookup table",
        "show_if": "options.custom_lookup_table=='false' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells')",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "lookup_table_filter_box": {
        "type": "fieldset",
        "label": "Lookup Table Filter Options",
        "show_if": "options.lookup_table.use_filter=='true' && options.custom_lookup_table=='false' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells')",
        "repeat": false,
        "fields": {
          "options.lookup_table.filter": {
            "type": "fieldset",
            "label": "Add Filter Conditions for Lookup table",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "options.lookup_table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.lookup_table.apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record for Lookup table filter",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "lookup_table_apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group of Lookup table",
            "show_if": "options.lookup_table.apply_to_record=='false'",
            "repeat": false,
            "fields": {
              "options.lookup_table.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "required": true,
                "width": "100%",
                "table": "options.lookup_table",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      },
      "options.input_table.apply_to_group_for_concatenation.enabled": {
        "type": "checkbox",
        "label": "Apply to Group for Rows Concatenation",
        "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "options.input_table.apply_to_group_for_concatenation.allow_group_lists": {
        "type": "checkbox",
        "label": "Allow Group-Lists",
        "show_if": "options.input_table.apply_to_group_for_concatenation.enabled=='true' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table')",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "options.input_table.apply_to_group_for_concatenation.group_column": {
        "type": "select",
        "label": "Select Group Column for Rows Concatenation",
        "show_if": "options.input_table.apply_to_group_for_concatenation.enabled=='true' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table')",
        "required": true,
        "width": "100%",
        "table": "input_table",
        "bind": "COLUMNS",
        "breakLine": true
      }
    }
  }
}
,
"/FindDuplicatesOptions.json/FindDuplicatesOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.task": {
        "type": "hidden",
        "val": "find_duplicates"
      },
      "options.task_type": {
        "type": "hidden",
        "val": "label_duplicates"
      },
      "options.pattern_type": {
        "type": "select",
        "label": "Pattern Type",
        "show_if": "options.task_type=='generate_lookup_table' || options.task_type=='apply_lookup_table' || options.task_type=='apply_lookup_table_to_cells'",
        "required": true,
        "options": {
          "duplicate_pattern": {
            "label": "Word Pattern"
          },
          "number_range": {
            "label": "Ranges(e.g. 10 < x <= 100)"
          }
        },
        "val": "duplicate_pattern"
      },
      "duplicate_option_box": {
        "type": "fieldset",
        "label": "Duplicate Patterns Option",
        "show_if": "options.task_type=='label_duplicates' || (options.task_type=='generate_lookup_table' && options.pattern_type=='duplicate_pattern')",
        "repeat": false,
        "fields": {
          "options.minimum_number_of_matching_characters": {
            "type": "text",
            "label": "Minimum Number of matching Characters",
            "val": "3",
            "required": true,
            "style": "min-width: 240px"
          },
          "options.minimum_number_of_duplicates": {
            "type": "text",
            "label": "Minimum Number of duplicates",
            "val": "2",
            "required": true,
            "style": "min-width: 240px",
            "breakLine": true
          }
        }
      },
      "number_range_option_box": {
        "type": "fieldset",
        "label": "Number Ranges Option",
        "show_if": "options.task_type=='generate_lookup_table' && options.pattern_type=='number_range'",
        "repeat": false,
        "fields": {
          "options.number_range.range_type": {
            "type": "select",
            "label": "Range Type",
            "required": true,
            "options": {
              "equal_interval": {
                "label": "N Equal Intervals"
              },
              "equal_range": {
                "label": "Equal Range"
              },
              "custom_range": {
                "label": "Custom Range"
              }
            },
            "val": "equal_interval"
          },
          "options.number_range.n_value": {
            "type": "text",
            "label": "N",
            "show_if": "options.number_range.range_type=='equal_interval'",
            "val": "3",
            "required": true
          },
          "options.number_range.range_value": {
            "type": "text",
            "label": "Range",
            "show_if": "options.number_range.range_type=='equal_range'",
            "val": "10",
            "required": true
          },
          "options.number_range.custom_ranges": {
            "type": "fieldset",
            "label": "Add Custom Range Pattern",
            "show_if": "options.number_range.range_type=='custom_range'",
            "repeat": true,
            "fields": {
              "pattern": {
                "type": "text",
                "label": "Pattern",
                "val": "0<=x<10",
                "required": true
              },
              "label": {
                "type": "text",
                "label": "Label",
                "val": "positive10",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          }
        },
        "breakLine": true
      },
      "options.lookup_table_id": {
        "type": "select",
        "label": "Lookup Table",
        "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells'",
        "bind": "TABLES",
        "empty": "",
        "required": true
      },
      "options.partial_match": {
        "type": "checkbox",
        "label": "Partial Match",
        "show_if": "options.pattern_type=='duplicate_pattern' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_lookup_table_to_cells')",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "options.case_sensitive": {
        "type": "checkbox",
        "label": "Case Sensitive",
        "show_if": "options.pattern_type=='duplicate_pattern' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_lookup_table_to_cells')",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.use_delimiter": {
        "type": "checkbox",
        "label": "Custom Delimiter",
        "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_lookup_table_to_cells'",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "options.delimiter": {
        "type": "text",
        "label": "Input Delimiter",
        "show_if": "options.use_delimiter=='true' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_lookup_table_to_cells')",
        "val": ";",
        "required": true,
        "breakLine": true
      },
      "options.input_table.use_filter": {
        "type": "checkbox",
        "label": "Use Filter for Input table",
        "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "input_table_filter_box": {
        "type": "fieldset",
        "label": "Input Table Filter Options",
        "show_if": "options.input_table.use_filter=='true' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells')",
        "repeat": false,
        "fields": {
          "options.input_table.filter": {
            "type": "fieldset",
            "label": "Add Filter Conditions for Input table",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table_id": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table_id",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.input_table.apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record for Input table filter",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "input_table_apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group of Input table",
            "show_if": "options.input_table.apply_to_record=='false'",
            "repeat": false,
            "fields": {
              "options.input_table.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "required": true,
                "width": "100%",
                "table": "table_id",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      },
      "options.lookup_table.use_filter": {
        "type": "checkbox",
        "label": "Use Filter for Lookup table",
        "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "lookup_table_filter_box": {
        "type": "fieldset",
        "label": "Lookup Table Filter Options",
        "show_if": "options.lookup_table.use_filter=='true' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells')",
        "repeat": false,
        "fields": {
          "options.lookup_table.filter": {
            "type": "fieldset",
            "label": "Add Filter Conditions for Lookup table",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "options.lookup_table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table_id": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table_id",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.lookup_table.apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record for Lookup table filter",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "lookup_table_apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group of Lookup table",
            "show_if": "options.lookup_table.apply_to_record=='false'",
            "repeat": false,
            "fields": {
              "options.lookup_table.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "required": true,
                "width": "100%",
                "table": "options.lookup_table",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      },
      "options.input_table.apply_to_group_for_concatenation.enabled": {
        "type": "checkbox",
        "label": "Apply to Group for Rows Concatenation",
        "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px"
      },
      "options.input_table.apply_to_group_for_concatenation.allow_group_lists": {
        "type": "checkbox",
        "label": "Allow Group-Lists",
        "show_if": "options.input_table.apply_to_group_for_concatenation.enabled=='true' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table')",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "options.input_table.apply_to_group_for_concatenation.group_column": {
        "type": "select",
        "label": "Select Group Column for Rows Concatenation",
        "show_if": "options.input_table.apply_to_group_for_concatenation.enabled=='true' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table')",
        "required": true,
        "width": "100%",
        "table": "table_id",
        "bind": "COLUMNS",
        "breakLine": true
      },
      "options.output_type": {
        "type": "select",
        "label": "Output Type",
        "required": true,
        "options": {
          "list_all_duplicates_once": {
            "label": "List all duplicates once"
          },
          "list_found_duplicates_per_item": {
            "label": "List found duplicates per item"
          }
        },
        "val": "list_all_duplicates_once",
        "breakLine": true
      },
      "options.add_filename": {
        "type": "checkbox",
        "label": "Add File Name",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
}
,
"/WorldPopulationInput.json/WorldPopulationInput.json": {
  "input": {
    "type": "fieldset",
    "label": "Select Input Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "options.configure_input_table == 'true'",
    "repeat": false,
    "fields": {
      "table_id": {
        "type": "select",
        "label": "Select Table",
        "bind": "TABLES",
        "empty": "",
        "required": true,
        "breakLine": true
      },
      "remove_input_table_after_processing": {
        "type": "hidden",
        "val": "false"
      },
      "is_word": {
        "type": "hidden",
        "val": "false"
      },
      "help_text_stripe_charge": {
        "type": "text",
        "label": "",
        "val": "Table Structure ( Region | Income Group | Country | State | Population (2020) | GDP in USD (2020) )",
        "disabled": true,
        "width": "100%"
      }
    }
  }
}
,
"/BinningOptions.json/BinningOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "number_of_tiles": {
        "type": "number",
        "label": "Number of Bins",
        "val": 2,
        "required": true,
        "breakLine": true
      },
      "binning_type": {
        "type": "select",
        "label": "Binning Type",
        "style": "float: left; width: 40%",
        "options": {
          "equal_records": {
            "label": "Simple Binning"
          },
          "equal_intervals": {
            "label": "Equal Interval Binning"
          }
        },
        "val": "equal_records"
      },
      "equal_records_order": {
        "type": "select",
        "label": "Order",
        "style": "float: right; width: 40%",
        "show_if": "binning_type=='equal_records'",
        "options": {
          "keep_current": {
            "label": "Keep Current"
          },
          "asc": {
            "label": "Ascending"
          },
          "desc": {
            "label": "Descending"
          }
        },
        "val": "keep_current"
      },
      "equal_intervals_order": {
        "type": "select",
        "label": "Order",
        "style": "float: right; width: 40%",
        "show_if": "binning_type=='equal_intervals'",
        "options": {
          "asc": {
            "label": "Ascending"
          },
          "desc": {
            "label": "Descending"
          }
        },
        "val": "asc",
        "breakLine": true
      }
    },
    "breakLine": true
  }
}
,
"/SelectPeriod.json/SelectPeriod.json": {
  "output.add_period": {
    "type": "checkbox",
    "label": "Add Periodicy",
    "show_if": "options.type=='process' || options.type=='custom'",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "style": "margin-top: 10px",
    "breakLine": true
  },
  "output.period": {
    "type": "select",
    "label": "Periodicy",
    "show_if": "(options.type=='process' || options.type=='custom') && output.add_period=='true'",
    "multiple": true,
    "options": {
      "year": {
        "label": "Year"
      },
      "half-year": {
        "label": "Half-Year"
      },
      "quarter": {
        "label": "Quarter"
      },
      "month": {
        "label": "Month"
      },
      "week": {
        "label": "Week"
      }
    },
    "val": "",
    "required": true
  },
  "output.period_concatenate": {
    "type": "checkbox",
    "label": "Concatenate",
    "show_if": "(options.type=='process' || options.type=='custom') && output.add_period=='true'",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  }
},
"/TimeTrackerOptions.json/TimeTrackerOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "start_stop": {
        "type": "radio",
        "label": "Track",
        "required": true,
        "values": {
          "start": "Start",
          "stop": "Stop"
        },
        "val": "start",
        "breakLine": true
      },
      "notes": {
        "type": "textarea",
        "label": "Notes",
        "val": "",
        "md_no_resize": true,
        "rows": 2,
        "width": "100%",
        "breakLine": true
      }
    }
  }
}
,
"/ExpandCompressOptions.json/ExpandCompressOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.type": {
        "type": "radio",
        "label": "List Action",
        "val": "expand",
        "values": {
          "expand": "Expand",
          "compress": "Compress"
        },
        "breakLine": true
      },
      "options.column_to_expand": {
        "type": "select",
        "label": "Column to expand",
        "show_if": "options.type=='expand'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "options.column_to_group": {
        "type": "select",
        "label": "Column to group",
        "show_if": "options.type=='compress'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "options.column_to_compress": {
        "type": "select",
        "label": "Column to compress",
        "show_if": "options.type=='compress'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "options.delimiter": {
        "type": "text",
        "label": "Delimiter",
        "val": ";",
        "trim": "false",
        "required": true
      },
      "options.new_col_name": {
        "type": "text",
        "label": "New Column Name",
        "show_if": "options.type=='expand' && options.expand__output_in_new_column=='true'",
        "val": "label",
        "required": true,
        "breakLine": true
      },
      "options.expand__output_in_new_column": {
        "type": "checkbox",
        "label": "Output in new column",
        "show_if": "options.type=='expand'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
}
,
"/HolidayOutput.json/HolidayOutput.json": {
  "output": {
    "type": "fieldset",
    "label": "Define Output Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "output.custom_text": {
        "type": "text",
        "label": "Output Table Name",
        "show_if": "output.custom_options=='false' || (output.custom_options=='true' && output.compose_table_name=='false')",
        "minLength": 1,
        "val": "",
        "width": "100%",
        "breakLine": true
      },
      "output.custom_options": {
        "type": "checkbox",
        "label": "Output Options",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "output.select_output_columns": {
        "type": "checkbox",
        "label": "Select Output Columns",
        "show_if": "options.is_generate_holiday_table=='add_column' && output.custom_options=='true'",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "output_columns": {
        "type": "fieldset",
        "label": "Select OutputColumns",
        "show_if": "options.is_generate_holiday_table=='add_column' && output.custom_options=='true' && output.select_output_columns=='true'",
        "repeat": true,
        "fields": {
          "field_name": {
            "type": "select",
            "label": "Select Column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "order": {
            "type": "select",
            "label": "Order",
            "options": {
              "-": {
                "label": "-"
              },
              "asc": {
                "label": "Asc"
              },
              "desc": {
                "label": "Desc"
              }
            },
            "val": "-"
          },
          "is_rename": {
            "type": "checkbox",
            "label": "Rename",
            "val": "false",
            "isOn": "true",
            "isOff": "false"
          },
          "rename": {
            "show_if": "this.is_rename == 'true'",
            "type": "text",
            "required": true,
            "minLength": 1,
            "maxLength": 255,
            "label": "New Column Name",
            "style": "margin-left: 10px"
          },
          "format__category": {
            "type": "select",
            "label": "Display Format",
            "required": true,
            "options": {
              "standard": {
                "label": "Standard"
              },
              "number": {
                "label": "Number"
              },
              "percentage": {
                "label": "Percentage"
              },
              "text": {
                "label": "Text"
              },
              "date": {
                "label": "Date"
              },
              "currency": {
                "label": "Currency"
              }
            },
            "val": "standard"
          },
          "format__rounding": {
            "type": "select",
            "label": "Decimal Places for display",
            "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
            "required": true,
            "options": {
              "no_rounding": {
                "label": "No rounding"
              },
              "0": {
                "label": "0 digits"
              },
              "1": {
                "label": "1 digits"
              },
              "2": {
                "label": "2 digits"
              },
              "3": {
                "label": "3 digits"
              },
              "4": {
                "label": "4 digits"
              },
              "5": {
                "label": "5 digits"
              },
              "6": {
                "label": "6 digits"
              },
              "7": {
                "label": "7 digits"
              },
              "8": {
                "label": "8 digits"
              },
              "9": {
                "label": "9 digits"
              }
            },
            "val": "2"
          },
          "format__use_1000_separator": {
            "type": "checkbox",
            "label": "Use 1000 Separator(.)",
            "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
            "val": "true",
            "isOn": "true",
            "isOff": "false"
          },
          "format__currency_symbol": {
            "type": "select",
            "label": "Symbol",
            "show_if": "this.format__category=='currency'",
            "required": true,
            "options": {
              "dollar": {
                "label": "$"
              },
              "euro": {
                "label": "€"
              },
              "pound": {
                "label": "£"
              },
              "yen": {
                "label": "¥ (Yen, currency of Japan)"
              },
              "colon": {
                "label": "₡ (Colón, currency of Costa Rica)"
              },
              "naira": {
                "label": "₦ (Naira, currency of Nigeria)"
              },
              "rupee": {
                "label": "₨ (Rupee, currency of India)"
              },
              "rupie": {
                "label": "₹ (Rupee, currency of India)"
              },
              "won": {
                "label": "₩ (Won, currency in South Korea and North Korea)"
              },
              "hebrew": {
                "label": "₪ (Currency of Israel)"
              },
              "dong": {
                "label": "₫ (Currency of Vietnam)"
              },
              "kip": {
                "label": "₭ (Kip, currency of Laos)"
              },
              "mongolia": {
                "label": "₮ (Currency of Mongolia)"
              },
              "peso": {
                "label": "₱ (Peso, currency of the Philippines)"
              },
              "guarani": {
                "label": "₲ (Guaraní, currency of Paraguay)"
              },
              "hryvnia": {
                "label": "₴ (Hryvnia, currency of Ukraine)"
              },
              "tenge": {
                "label": "₸ (Tenge, currency of Kazakhstan)"
              },
              "lira": {
                "label": "₺ (Lira, currency of Turkey)"
              },
              "manat": {
                "label": "₼ (Manat, currency of Azerbaijan)"
              },
              "rubles": {
                "label": "₽ (Rubles, currency of Russia)"
              },
              "lari": {
                "label": "₾ (Lari, currency of Georgia)"
              },
              "bitcoin": {
                "label": "₿ (Bitcoin, crypto currency)"
              }
            },
            "val": "dollar"
          },
          "format__date_format": {
            "type": "select",
            "label": "Type",
            "show_if": "this.format__category=='date'",
            "required": true,
            "options": {
              "mm/dd/yyyy": {
                "label": "3/14/2012"
              },
              "D, M dd, Y": {
                "label": "Wednesday, March 14, 2012"
              },
              "yyyy-mm-dd": {
                "label": "2012-03-14"
              },
              "m.dd.yyyy": {
                "label": "3.14.2012"
              },
              "m.dd.yy": {
                "label": "3.14.12"
              },
              "dd.m.yyyy": {
                "label": "14.3.2012"
              },
              "dd.m.yy": {
                "label": "14.3.12"
              },
              "M dd, Y": {
                "label": "March 14, 2012"
              },
              "dd-mm-yyyy": {
                "label": "14-03-2012"
              },
              "mm-dd-yyyy": {
                "label": "03-14-2012"
              },
              "dd-mm-yy": {
                "label": "14-03-12"
              },
              "mm-dd-yy": {
                "label": "03-14-12"
              }
            },
            "val": "mm/dd/yyyy",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        },
        "breakLine": true,
        "style": "margin-bottom: 20px"
      },
      "output.compose_table_name": {
        "type": "checkbox",
        "label": "Compose Table Name",
        "show_if": "output.custom_options=='true'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "compose_table_name_frame": {
        "type": "fieldset",
        "label": "Compose Output Table Name",
        "show_if": "output.custom_options=='true' && output.compose_table_name=='true'",
        "repeat": false,
        "fields": {
          "output.prefix_rule": {
            "type": "select",
            "label": "Prefix",
            "show_if": "output.compose_table_name=='true'",
            "val": "empty",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.prefix_text": {
            "type": "text",
            "label": "Prefix Text",
            "show_if": "output.compose_table_name=='true' && output.prefix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "output.core_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "show_if": "output.compose_table_name=='true' && output.prefix_rule!='empty'",
            "val": "_",
            "width": "50px"
          },
          "output.generate_core_rule": {
            "type": "select",
            "label": "Table Name",
            "show_if": "output.compose_table_name=='true' && options.is_generate_holiday_table=='generate_table'",
            "val": "script_name",
            "options": {
              "script_name": {
                "label": "Task Name"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.core_rule": {
            "type": "select",
            "label": "Table Name",
            "show_if": "output.compose_table_name=='true' && options.is_generate_holiday_table=='add_column'",
            "val": "input_table_name",
            "options": {
              "input_table_name": {
                "label": "Input Table Name"
              },
              "script_name": {
                "label": "Task Name"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.core_text": {
            "type": "text",
            "label": "Main Table Name",
            "show_if": "output.compose_table_name=='true' && output.core_rule=='custom'",
            "required": true,
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "output.suffix_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "show_if": "output.compose_table_name=='true'",
            "val": "_",
            "width": "50px"
          },
          "output.suffix_rule": {
            "type": "select",
            "label": "Suffix",
            "show_if": "output.compose_table_name=='true'",
            "val": "script_name",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.suffix_text": {
            "type": "text",
            "label": "Suffix Text",
            "show_if": "output.compose_table_name=='true' && output.suffix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": "",
            "breakLine": true
          },
          "output.timezone": {
            "type": "select",
            "label": "Timezone",
            "show_if": "output.compose_table_name=='true' && (output.prefix_rule=='date_string_type1' || output.prefix_rule=='date_string_type2' || output.prefix_rule=='time_string' || output.prefix_rule=='datetime_string' || output.suffix_rule=='date_string_type1' || output.suffix_rule=='date_string_type2' || output.suffix_rule=='time_string' || output.suffix_rule=='datetime_string')",
            "val": "Europe/Berlin",
            "required": true,
            "options": {
              "America/Adak": {
                "label": "Adak, Gambier"
              },
              "Australia/Adelaide": {
                "label": "Adelaide, Broken_Hill, Darwin"
              },
              "America/Anchorage": {
                "label": "Anchorage, Juneau, Sitka"
              },
              "Pacific/Apia": {
                "label": "Apia, Asau, Mulifanua, Afega, Leulumoega"
              },
              "Pacific/Enderbury": {
                "label": "Apia, Fiji, Tongatapu"
              },
              "Antarctica/McMurdo": {
                "label": "Auckland, Casey, Davis"
              },
              "Pacific/Auckland": {
                "label": "Auckland, Wellington, Christchurch"
              },
              "Asia/Bangkok": {
                "label": "Bangkok, Jakarta, Novosibirsk"
              },
              "Europe/Berlin": {
                "label": "Berlin, Paris, Amsterdam"
              },
              "Australia/Perth": {
                "label": "Brunei, Singapore, Perth"
              },
              "Atlantic/Cape_Verde": {
                "label": "Cape_Verde,Praia, Mindelo, Santa Maria"
              },
              "America/Belize": {
                "label": "Costa_Rica, El_Salvador, Denver"
              },
              "Antarctica/Vostok": {
                "label": "Dhaka, Bishkek, Omsk"
              },
              "Europe/Astrakhan": {
                "label": "Dubai, Baku, Tbilisi"
              },
              "Australia/Eucla": {
                "label": "Eucla"
              },
              "Pacific/Honolulu": {
                "label": "Honolulu, Rarotonga, Tahiti"
              },
              "Asia/Kabul": {
                "label": "Kabul, Kandahār, Mazār-e Sharīf, Herāt, Jalālābād"
              },
              "Asia/Aqtau": {
                "label": "Karachi, Tashkent, Maldives"
              },
              "Asia/Kathmandu": {
                "label": "Kathmandu,Pokhara, Pātan, Biratnagar"
              },
              "Pacific/Kiritimati": {
                "label": "Kiritimati"
              },
              "Asia/Colombo": {
                "label": "Kolkata, Colombo,Jaffna, Negombo"
              },
              "Europe/Guernsey": {
                "label": "London. Dublin, Lisbon"
              },
              "Australia/Lord_Howe": {
                "label": "Lord_Howe"
              },
              "America/Creston": {
                "label": "Los_Angeles, Vancouver, Hermosillo"
              },
              "Pacific/Marquesas": {
                "label": "Marquesas,Taiohae"
              },
              "America/Cayman": {
                "label": "Mexico_City, Panama, Chicago"
              },
              "Pacific/Niue": {
                "label": "Midway, Niue, Pago_Pago"
              },
              "Europe/Mariehamn": {
                "label": "Moscow, Istanbul, Qatar"
              },
              "Asia/Kolkata": {
                "label": "Mumbai, Delhi, Bengaluru, Kolkata, Chennai"
              },
              "America/Miquelon": {
                "label": "Noronha, Nuuk, Miquelon"
              },
              "America/Danmarkshavn": {
                "label": "Reykjavik, Dakar, Casablanca"
              },
              "Pacific/Bougainville": {
                "label": "Sakhalin, Norfolk, Bougainville"
              },
              "America/Araguaina": {
                "label": "Sao_Paulo, Buenos_Aires, Montevideo"
              },
              "America/St_Johns": {
                "label": "St_Johns,Mount Pearl, Corner Brook"
              },
              "Asia/Tehran": {
                "label": "Tehran, Mashhad, Isfahan, Karaj, Tabriz"
              },
              "Asia/Tokyo": {
                "label": "Tokyo, Seoul, Jayapura"
              },
              "America/New_York": {
                "label": "Toronto, Santiago, New_York"
              },
              "Australia/Sydney": {
                "label": "Vladivostok, Sydney, Brisbane"
              },
              "Asia/Yangon": {
                "label": "Yangon, Cocos,Mandalay, Nay Pyi Taw, Mawlamyine"
              },
              "Indian/Cocos": {
                "label": "Yangon, Cocos,West Island"
              }
            },
            "breakLine": true
          }
        }
      }
    }
  }
},
"/CompareTablesOptions.json/CompareTablesOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Options",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "compare_set": {
        "type": "fieldset",
        "label": "Select Patterns",
        "repeat": true,
        "fields": {
          "pattern": {
            "type": "select",
            "label": "Table Pattern Type",
            "options": {
              "all_col": {
                "label": "All column identity"
              },
              "two_col": {
                "label": "Two column identity"
              }
            },
            "val": "all_col",
            "required": true
          },
          "compare_type": {
            "type": "select",
            "label": "Cell Pattern Type",
            "options": {
              "equal": {
                "label": "Equal"
              },
              "contain": {
                "label": "Contains"
              },
              "start_with": {
                "label": "Starts With"
              },
              "end_with": {
                "label": "Ends With"
              },
              "reg_exp": {
                "label": "Regular Expression"
              }
            },
            "val": "equal",
            "required": true
          },
          "case_sensitive": {
            "type": "select",
            "label": "Case Sensitivity",
            "required": true,
            "options": {
              "yes": {
                "label": "Case Sensitive"
              },
              "no": {
                "label": "Case Insensitive"
              }
            },
            "val": "no"
          },
          "expression": {
            "type": "text",
            "label": "Expression",
            "show_if": "this.compare_type != 'equal'",
            "required": true,
            "val": ""
          },
          "delete": {
            "show_if": "this.field_name != ''",
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        },
        "breakLine": true
      },
      "target": {
        "type": "select",
        "label": "Target",
        "options": {
          "to_table": {
            "label": "Apply to table"
          },
          "to_rows": {
            "label": "Row by Row"
          }
        },
        "val": "to_table",
        "required": true
      },
      "match_type": {
        "type": "select",
        "show_if": "target != 'to_table'",
        "label": "Match Type",
        "options": {
          "match": {
            "label": "Matches Only"
          },
          "nonmatch": {
            "label": "Non Matches Only"
          },
          "all": {
            "label": "All"
          }
        },
        "val": "match",
        "required": true,
        "breakLine": true
      },
      "create_sql": {
        "type": "checkbox",
        "label": "Show SQL-Details",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      }
    }
  }
},
"/FindRangesOptions.json/FindRangesOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.task": {
        "type": "hidden",
        "val": "find_ranges"
      },
      "options.task_type": {
        "type": "hidden",
        "val": "generate_lookup_table"
      },
      "options.pattern_type": {
        "type": "hidden",
        "val": "number_range"
      },
      "duplicate_option_box": {
        "type": "fieldset",
        "label": "Duplicate Patterns Option",
        "show_if": "options.task_type=='label_duplicates' || (options.task_type=='generate_lookup_table' && options.pattern_type=='duplicate_pattern')",
        "repeat": false,
        "fields": {
          "options.minimum_number_of_matching_characters": {
            "type": "text",
            "label": "Minimum Number of matching Characters",
            "val": "3",
            "required": true,
            "style": "min-width: 240px"
          },
          "options.minimum_number_of_duplicates": {
            "type": "text",
            "label": "Minimum Number of duplicates",
            "val": "2",
            "required": true,
            "style": "min-width: 240px",
            "breakLine": true
          }
        }
      },
      "number_range_option_box": {
        "type": "fieldset",
        "label": "Number Ranges Option",
        "show_if": "options.task_type=='generate_lookup_table' && options.pattern_type=='number_range'",
        "repeat": false,
        "fields": {
          "options.number_range.range_type": {
            "type": "select",
            "label": "Range Type",
            "required": true,
            "options": {
              "equal_interval": {
                "label": "N Equal Intervals"
              },
              "equal_range": {
                "label": "Equal Range"
              },
              "custom_range": {
                "label": "Custom Range"
              }
            },
            "val": "equal_interval"
          },
          "options.number_range.n_value": {
            "type": "text",
            "label": "N",
            "show_if": "options.number_range.range_type=='equal_interval'",
            "val": "3",
            "required": true
          },
          "options.number_range.range_value": {
            "type": "text",
            "label": "Range",
            "show_if": "options.number_range.range_type=='equal_range'",
            "val": "10",
            "required": true
          },
          "options.number_range.custom_ranges": {
            "type": "fieldset",
            "label": "Add Custom Range Pattern",
            "show_if": "options.number_range.range_type=='custom_range'",
            "repeat": true,
            "fields": {
              "pattern": {
                "type": "text",
                "label": "Pattern",
                "val": "0<=x<10",
                "required": true
              },
              "label": {
                "type": "text",
                "label": "Label",
                "val": "positive10",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          }
        },
        "breakLine": true
      },
      "options.lookup_table_id": {
        "type": "select",
        "label": "Lookup Table",
        "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells'",
        "bind": "TABLES",
        "empty": "",
        "required": true
      },
      "options.partial_match": {
        "type": "checkbox",
        "label": "Partial Match",
        "show_if": "options.pattern_type=='duplicate_pattern' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_lookup_table_to_cells')",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "options.case_sensitive": {
        "type": "checkbox",
        "label": "Case Sensitive",
        "show_if": "options.pattern_type=='duplicate_pattern' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_lookup_table_to_cells')",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.use_delimiter": {
        "type": "checkbox",
        "label": "Custom Delimiter",
        "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_lookup_table_to_cells'",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "options.delimiter": {
        "type": "text",
        "label": "Input Delimiter",
        "show_if": "options.use_delimiter=='true' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_lookup_table_to_cells')",
        "val": ";",
        "required": true,
        "breakLine": true
      },
      "options.input_table.use_filter": {
        "type": "checkbox",
        "label": "Use Filter for Input table",
        "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "input_table_filter_box": {
        "type": "fieldset",
        "label": "Input Table Filter Options",
        "show_if": "options.input_table.use_filter=='true' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells')",
        "repeat": false,
        "fields": {
          "options.input_table.filter": {
            "type": "fieldset",
            "label": "Add Filter Conditions for Input table",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table_id": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table_id",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.input_table.apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record for Input table filter",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "input_table_apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group of Input table",
            "show_if": "options.input_table.apply_to_record=='false'",
            "repeat": false,
            "fields": {
              "options.input_table.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "required": true,
                "width": "100%",
                "table": "table_id",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      },
      "options.lookup_table.use_filter": {
        "type": "checkbox",
        "label": "Use Filter for Lookup table",
        "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "lookup_table_filter_box": {
        "type": "fieldset",
        "label": "Lookup Table Filter Options",
        "show_if": "options.lookup_table.use_filter=='true' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells')",
        "repeat": false,
        "fields": {
          "options.lookup_table.filter": {
            "type": "fieldset",
            "label": "Add Filter Conditions for Lookup table",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "options.lookup_table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table_id": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table_id",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.lookup_table.apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record for Lookup table filter",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "lookup_table_apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group of Lookup table",
            "show_if": "options.lookup_table.apply_to_record=='false'",
            "repeat": false,
            "fields": {
              "options.lookup_table.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "required": true,
                "width": "100%",
                "table": "options.lookup_table",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      },
      "options.input_table.apply_to_group_for_concatenation.enabled": {
        "type": "checkbox",
        "label": "Apply to Group for Rows Concatenation",
        "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px"
      },
      "options.input_table.apply_to_group_for_concatenation.allow_group_lists": {
        "type": "checkbox",
        "label": "Allow Group-Lists",
        "show_if": "options.input_table.apply_to_group_for_concatenation.enabled=='true' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table')",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "options.input_table.apply_to_group_for_concatenation.group_column": {
        "type": "select",
        "label": "Select Group Column for Rows Concatenation",
        "show_if": "options.input_table.apply_to_group_for_concatenation.enabled=='true' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table')",
        "required": true,
        "width": "100%",
        "table": "table_id",
        "bind": "COLUMNS",
        "breakLine": true
      },
      "options.output_type": {
        "type": "select",
        "label": "Output Type",
        "required": true,
        "options": {
          "list_all_ranges": {
            "label": "List all ranges"
          },
          "allocate_items_to_ranges": {
            "label": "Allocate items to ranges"
          }
        },
        "val": "list_all_ranges",
        "breakLine": true
      },
      "options.add_filename": {
        "type": "checkbox",
        "label": "Add File Name",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
}
,
"/DCEducationOptions.json/DCEducationOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.all_countries": {
        "type": "hidden",
        "val": "false"
      },
      "options.stat_vars": {
        "type": "fieldset",
        "label": "Statistics data category(s)",
        "repeat": true,
        "fields": {
          "stat_var_name": {
            "type": "select",
            "label": "Education Data",
            "required": true,
            "options": {
              "Count_Person_25OrMoreYears_BachelorsDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears": {
                "label": "Bachelors Degree or Higher Population Per Capita 25 or More Years"
              },
              "Count_Person_25OrMoreYears_Female_BachelorsDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears_Female": {
                "label": "Bachelors Degree or Higher, Female Population Per Capita 25 or More Years Female"
              },
              "Count_Person_25OrMoreYears_Male_BachelorsDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears_Male": {
                "label": "Bachelors Degree or Higher, Male Population Per Capita 25 or More Years Male"
              },
              "Count_Person_25OrMoreYears_DoctorateDegree_AsFractionOf_Count_Person_25OrMoreYears": {
                "label": "Doctorate Degree Population Per Capita 25 or More Years"
              },
              "Count_Person_25OrMoreYears_Female_DoctorateDegree_AsFractionOf_Count_Person_25OrMoreYears_Female": {
                "label": "Doctorate Degree, Female Population Per Capita 25 or More Years Female"
              },
              "Count_Person_25OrMoreYears_Male_DoctorateDegree_AsFractionOf_Count_Person_25OrMoreYears_Male": {
                "label": "Doctorate Degree, Male Population Per Capita 25 or More Years Male"
              },
              "Count_Person_25OrMoreYears_MastersDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears": {
                "label": "Masters Degree or Higher Population Per Capita 25 or More Years"
              },
              "Count_Person_25OrMoreYears_Female_MastersDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears_Female": {
                "label": "Masters Degree or Higher, Female Population Per Capita 25 or More Years Female"
              },
              "Count_Person_25OrMoreYears_Male_MastersDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears_Male": {
                "label": "Masters Degree or Higher, Male Population Per Capita 25 or More Years Male"
              },
              "Count_Person_25OrMoreYears_TertiaryEducation_AsFractionOf_Count_Person_25OrMoreYears": {
                "label": "Tertiary Education Population Per Capita 25 or More Years"
              },
              "Count_Person_25OrMoreYears_Female_TertiaryEducation_AsFractionOf_Count_Person_25OrMoreYears_Female": {
                "label": "Tertiary Education, Female Population Per Capita 25 or More Years Female"
              },
              "Count_Person_25OrMoreYears_Male_TertiaryEducation_AsFractionOf_Count_Person_25OrMoreYears_Male": {
                "label": "Tertiary Education, Male Population Per Capita 25 or More Years Male"
              }
            }
          },
          "per_capita": {
            "type": "checkbox",
            "label": "Per capita",
            "show_if": "false",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.output_as_chart": {
        "type": "checkbox",
        "label": "Output a Graph",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
}
,
"/NoteTrackerOptions.json/NoteTrackerOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": true,
    "fields": {
      "category": {
        "type": "select",
        "label": "Category",
        "options": {
          "empty": {
            "label": "Not Specified"
          },
          "bills": {
            "label": "Bills"
          },
          "holidays": {
            "label": "Holidays"
          },
          "illness": {
            "label": "Illness"
          },
          "working_days": {
            "label": "Working Days"
          },
          "working_hours": {
            "label": "Working Hours"
          },
          "tasks": {
            "label": "Tasks"
          },
          "bonus": {
            "label": "Bonus"
          },
          "business_bills": {
            "label": "Business Bills"
          }
        },
        "val": "empty"
      },
      "subcategory": {
        "type": "select",
        "label": "Sub-Category",
        "show_if": "this.category=='bills' || this.category=='business_bills'",
        "options": {
          "empty": {
            "label": "Not Specified"
          },
          "food": {
            "label": "Food"
          },
          "drinks": {
            "label": "Drinks"
          },
          "gifts": {
            "label": "Gifts"
          },
          "tickets": {
            "label": "Tickets"
          },
          "fuel": {
            "label": "Fuel"
          },
          "rent": {
            "label": "Rent"
          },
          "car": {
            "label": "Car"
          },
          "fun": {
            "label": "Fun"
          },
          "assets": {
            "label": "Assets"
          }
        },
        "val": "empty"
      },
      "subcategory_days": {
        "type": "select",
        "label": "Sub-Category",
        "show_if": "this.category=='holidays' || this.category=='illness' || this.category=='working_days'",
        "options": {
          "new": {
            "label": "New"
          },
          "cancel": {
            "label": "Cancel"
          }
        },
        "val": "new"
      },
      "linebreak_placeholder2": {
        "type": "hidden",
        "val": "false",
        "breakLine": true
      },
      "days_option": {
        "type": "select",
        "label": "Options",
        "show_if": "this.category=='holidays' || this.category=='illness' || this.category=='working_days'",
        "options": {
          "full_day": {
            "label": "Full Day"
          },
          "half_day": {
            "label": "Half Day"
          },
          "custom": {
            "label": "Custom in %"
          }
        },
        "val": "full_day"
      },
      "custom_percentage": {
        "type": "number",
        "label": "Percentage",
        "show_if": "this.days_option=='custom' && this.category=='holidays' || this.days_option=='custom' && this.category=='illness' || this.days_option=='custom' && this.category=='working_days'",
        "val": 100,
        "maxVal": 100,
        "minVal": 0,
        "placeholder": "90",
        "breakLine": true
      },
      "start_date_value": {
        "type": "date",
        "label": "Start Date",
        "show_if": "this.category=='holidays' || this.category=='illness' || this.category=='working_days' || this.category=='working_hours'",
        "val": "",
        "required": true
      },
      "end_date_value": {
        "type": "date",
        "label": "End Date",
        "show_if": "this.category=='holidays' || this.category=='illness' || this.category=='working_days'",
        "val": "",
        "required": false
      },
      "due_date_value": {
        "type": "date",
        "label": "Due Date",
        "show_if": "this.category=='tasks'",
        "val": "",
        "required": true
      },
      "linebreak_placeholder": {
        "type": "hidden",
        "val": "false",
        "show_if": "this.category=='working_hours'",
        "breakLine": true
      },
      "starting_hour": {
        "type": "select",
        "label": "Starting Hour",
        "show_if": "this.category=='working_hours'",
        "options": {
          "00": {
            "label": "00"
          },
          "01": {
            "label": "01"
          },
          "02": {
            "label": "02"
          },
          "03": {
            "label": "03"
          },
          "04": {
            "label": "04"
          },
          "05": {
            "label": "05"
          },
          "06": {
            "label": "06"
          },
          "07": {
            "label": "07"
          },
          "08": {
            "label": "08"
          },
          "09": {
            "label": "09"
          },
          "10": {
            "label": "10"
          },
          "11": {
            "label": "11"
          },
          "12": {
            "label": "12"
          },
          "13": {
            "label": "13"
          },
          "14": {
            "label": "14"
          },
          "15": {
            "label": "15"
          },
          "16": {
            "label": "16"
          },
          "17": {
            "label": "17"
          },
          "18": {
            "label": "18"
          },
          "19": {
            "label": "19"
          },
          "20": {
            "label": "20"
          },
          "21": {
            "label": "21"
          },
          "22": {
            "label": "22"
          },
          "23": {
            "label": "23"
          }
        },
        "val": "00",
        "required": true
      },
      "starting_minute": {
        "type": "select",
        "label": "Starting Minute",
        "show_if": "this.category=='working_hours'",
        "breakLine": true,
        "options": {
          "00": {
            "label": "00"
          },
          "01": {
            "label": "01"
          },
          "02": {
            "label": "02"
          },
          "03": {
            "label": "03"
          },
          "04": {
            "label": "04"
          },
          "05": {
            "label": "05"
          },
          "06": {
            "label": "06"
          },
          "07": {
            "label": "07"
          },
          "08": {
            "label": "08"
          },
          "09": {
            "label": "09"
          },
          "10": {
            "label": "10"
          },
          "11": {
            "label": "11"
          },
          "12": {
            "label": "12"
          },
          "13": {
            "label": "13"
          },
          "14": {
            "label": "14"
          },
          "15": {
            "label": "15"
          },
          "16": {
            "label": "16"
          },
          "17": {
            "label": "17"
          },
          "18": {
            "label": "18"
          },
          "19": {
            "label": "19"
          },
          "20": {
            "label": "20"
          },
          "21": {
            "label": "21"
          },
          "22": {
            "label": "22"
          },
          "23": {
            "label": "23"
          },
          "24": {
            "label": "24"
          },
          "25": {
            "label": "25"
          },
          "26": {
            "label": "26"
          },
          "27": {
            "label": "27"
          },
          "28": {
            "label": "28"
          },
          "29": {
            "label": "29"
          },
          "30": {
            "label": "30"
          },
          "31": {
            "label": "31"
          },
          "32": {
            "label": "32"
          },
          "33": {
            "label": "33"
          },
          "34": {
            "label": "34"
          },
          "35": {
            "label": "35"
          },
          "36": {
            "label": "36"
          },
          "37": {
            "label": "37"
          },
          "38": {
            "label": "38"
          },
          "39": {
            "label": "39"
          },
          "40": {
            "label": "40"
          },
          "41": {
            "label": "41"
          },
          "42": {
            "label": "42"
          },
          "43": {
            "label": "43"
          },
          "44": {
            "label": "44"
          },
          "45": {
            "label": "45"
          },
          "46": {
            "label": "46"
          },
          "47": {
            "label": "47"
          },
          "48": {
            "label": "48"
          },
          "49": {
            "label": "49"
          },
          "50": {
            "label": "50"
          },
          "51": {
            "label": "51"
          },
          "52": {
            "label": "52"
          },
          "53": {
            "label": "53"
          },
          "54": {
            "label": "54"
          },
          "55": {
            "label": "55"
          },
          "56": {
            "label": "56"
          },
          "57": {
            "label": "57"
          },
          "58": {
            "label": "58"
          },
          "59": {
            "label": "59"
          }
        },
        "val": "00",
        "required": true
      },
      "ending_hour": {
        "type": "select",
        "label": "Ending Hour",
        "show_if": "this.category=='working_hours'",
        "options": {
          "00": {
            "label": "00"
          },
          "01": {
            "label": "01"
          },
          "02": {
            "label": "02"
          },
          "03": {
            "label": "03"
          },
          "04": {
            "label": "04"
          },
          "05": {
            "label": "05"
          },
          "06": {
            "label": "06"
          },
          "07": {
            "label": "07"
          },
          "08": {
            "label": "08"
          },
          "09": {
            "label": "09"
          },
          "10": {
            "label": "10"
          },
          "11": {
            "label": "11"
          },
          "12": {
            "label": "12"
          },
          "13": {
            "label": "13"
          },
          "14": {
            "label": "14"
          },
          "15": {
            "label": "15"
          },
          "16": {
            "label": "16"
          },
          "17": {
            "label": "17"
          },
          "18": {
            "label": "18"
          },
          "19": {
            "label": "19"
          },
          "20": {
            "label": "20"
          },
          "21": {
            "label": "21"
          },
          "22": {
            "label": "22"
          },
          "23": {
            "label": "23"
          }
        },
        "val": "00",
        "required": true
      },
      "ending_minute": {
        "type": "select",
        "label": "Ending Minute",
        "show_if": "this.category=='working_hours'",
        "breakLine": true,
        "options": {
          "00": {
            "label": "00"
          },
          "01": {
            "label": "01"
          },
          "02": {
            "label": "02"
          },
          "03": {
            "label": "03"
          },
          "04": {
            "label": "04"
          },
          "05": {
            "label": "05"
          },
          "06": {
            "label": "06"
          },
          "07": {
            "label": "07"
          },
          "08": {
            "label": "08"
          },
          "09": {
            "label": "09"
          },
          "10": {
            "label": "10"
          },
          "11": {
            "label": "11"
          },
          "12": {
            "label": "12"
          },
          "13": {
            "label": "13"
          },
          "14": {
            "label": "14"
          },
          "15": {
            "label": "15"
          },
          "16": {
            "label": "16"
          },
          "17": {
            "label": "17"
          },
          "18": {
            "label": "18"
          },
          "19": {
            "label": "19"
          },
          "20": {
            "label": "20"
          },
          "21": {
            "label": "21"
          },
          "22": {
            "label": "22"
          },
          "23": {
            "label": "23"
          },
          "24": {
            "label": "24"
          },
          "25": {
            "label": "25"
          },
          "26": {
            "label": "26"
          },
          "27": {
            "label": "27"
          },
          "28": {
            "label": "28"
          },
          "29": {
            "label": "29"
          },
          "30": {
            "label": "30"
          },
          "31": {
            "label": "31"
          },
          "32": {
            "label": "32"
          },
          "33": {
            "label": "33"
          },
          "34": {
            "label": "34"
          },
          "35": {
            "label": "35"
          },
          "36": {
            "label": "36"
          },
          "37": {
            "label": "37"
          },
          "38": {
            "label": "38"
          },
          "39": {
            "label": "39"
          },
          "40": {
            "label": "40"
          },
          "41": {
            "label": "41"
          },
          "42": {
            "label": "42"
          },
          "43": {
            "label": "43"
          },
          "44": {
            "label": "44"
          },
          "45": {
            "label": "45"
          },
          "46": {
            "label": "46"
          },
          "47": {
            "label": "47"
          },
          "48": {
            "label": "48"
          },
          "49": {
            "label": "49"
          },
          "50": {
            "label": "50"
          },
          "51": {
            "label": "51"
          },
          "52": {
            "label": "52"
          },
          "53": {
            "label": "53"
          },
          "54": {
            "label": "54"
          },
          "55": {
            "label": "55"
          },
          "56": {
            "label": "56"
          },
          "57": {
            "label": "57"
          },
          "58": {
            "label": "58"
          },
          "59": {
            "label": "59"
          }
        },
        "val": "00",
        "required": true
      },
      "number_value": {
        "type": "number",
        "label": "Number",
        "show_if": "this.category=='bonus' || this.category=='bills' || this.category=='business_bills'",
        "val": 0,
        "breakLine": true,
        "required": true
      },
      "notes": {
        "type": "textarea",
        "label": "Notes",
        "val": "",
        "md_no_resize": true,
        "rows": 2,
        "width": "100%",
        "breakLine": true
      },
      "delete": {
        "type": "button",
        "label": "Delete",
        "function": "DELETE_ROW"
      }
    }
  }
}
,
"/ExtractOptions.json/ExtractOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "apply_framing_condition_box": {
        "type": "fieldset",
        "label": "Framing conditions",
        "repeat": false,
        "fields": {
          "options.framing_condition.pattern": {
            "type": "select",
            "label": "Framing conditions",
            "required": true,
            "options": {
              "name_x": {
                "label": "name : x"
              },
              "curly_brackets": {
                "label": "{x}"
              },
              "square_brackets": {
                "label": "[x]"
              },
              "round_brackets": {
                "label": "(x)"
              },
              "tag_x": {
                "label": "&lt;tag&gt;x&lt;/tag&gt;"
              },
              "tag1_x_tag2": {
                "label": "tag1 x tag2"
              },
              "name_1_name_2_x": {
                "label": "name-1 : { name-2 : x }"
              },
              "x_bracket": {
                "label": "x : { } , x : ( ) , x : [ ]"
              },
              "name_bracket_x": {
                "label": "name : { x } , name : ( x ) , name : [ x ]"
              },
              "f_x": {
                "label": "f(x)"
              },
              "f_x_bracket": {
                "label": "f(){x}"
              }
            },
            "val": "name_x"
          },
          "options.framing_condition.name_x_name": {
            "type": "text",
            "label": "Name",
            "show_if": "options.framing_condition.pattern=='name_x'",
            "val": "",
            "required": true
          },
          "options.framing_condition.tag_x_tag": {
            "type": "text",
            "label": "Tag",
            "show_if": "options.framing_condition.pattern=='tag_x'",
            "val": "",
            "required": true
          },
          "options.framing_condition.tag1_x_tag2__tag1": {
            "type": "text",
            "label": "Tag1",
            "show_if": "options.framing_condition.pattern=='tag1_x_tag2'",
            "val": "",
            "required": true
          },
          "options.framing_condition.tag1_x_tag2__tag2": {
            "type": "text",
            "label": "Tag2",
            "show_if": "options.framing_condition.pattern=='tag1_x_tag2'",
            "val": "",
            "required": true
          },
          "options.framing_condition.name_1_name_2_x__name1": {
            "type": "text",
            "label": "Name1",
            "show_if": "options.framing_condition.pattern=='name_1_name_2_x'",
            "val": "",
            "required": true
          },
          "options.framing_condition.name_1_name_2_x__name2": {
            "type": "text",
            "label": "Name2",
            "show_if": "options.framing_condition.pattern=='name_1_name_2_x'",
            "val": "",
            "required": true
          },
          "options.framing_condition.name_bracket_x__name": {
            "type": "text",
            "label": "Name",
            "show_if": "options.framing_condition.pattern=='name_bracket_x'",
            "val": "",
            "required": true
          },
          "options.framing_condition.customize_colon": {
            "type": "checkbox",
            "label": "Customize :",
            "show_if": "options.framing_condition.pattern=='name_x' || options.framing_condition.pattern=='x_bracket' || options.framing_condition.pattern=='name_1_name_2_x'",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.framing_condition.custom_colon": {
            "type": "text",
            "label": "Input symbol",
            "show_if": "(options.framing_condition.pattern=='name_x' || options.framing_condition.pattern=='x_bracket' || options.framing_condition.pattern=='name_1_name_2_x') && options.framing_condition.customize_colon=='true'",
            "val": ":",
            "required": true
          },
          "options.framing_condition.customize_f": {
            "type": "checkbox",
            "label": "Customize f",
            "show_if": "options.framing_condition.pattern=='f_x' || options.framing_condition.pattern=='f_x_bracket'",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.framing_condition.custom_f": {
            "type": "text",
            "label": "Input f",
            "show_if": "(options.framing_condition.pattern=='f_x' || options.framing_condition.pattern=='f_x_bracket') && options.framing_condition.customize_f=='true'",
            "val": ":",
            "required": true
          },
          "options.framing_condition.parantheses": {
            "type": "select",
            "label": "Parantheses",
            "required": true,
            "options": {
              "optional": {
                "label": "Optional parantheses"
              },
              "including": {
                "label": "Including parantheses"
              },
              "no": {
                "label": "No parantheses"
              }
            },
            "val": "optional"
          },
          "options.framing_condition.sel_parantheses": {
            "type": "select",
            "label": "Select Parantheses",
            "show_if": "options.framing_condition.parantheses=='optional' || options.framing_condition.parantheses=='including'",
            "required": true,
            "options": {
              "p1": {
                "label": "'"
              },
              "p2": {
                "label": "\""
              },
              "p3": {
                "label": "`"
              },
              "p4": {
                "label": "´"
              }
            },
            "val": "p1",
            "breakLine": true
          },
          "options.framing_condition.allow_whitespace": {
            "type": "checkbox",
            "label": "Allow whitespace",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          }
        }
      },
      "options.apply_section_by_section": {
        "type": "checkbox",
        "label": "Section by Section",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px"
      },
      "section_columns_frame": {
        "type": "fieldset",
        "label": "Select Section Column(s)",
        "show_if": "options.apply_section_by_section=='true'",
        "repeat": false,
        "fields": {
          "options.section_columns__all_but_selected": {
            "type": "checkbox",
            "label": "All but selected",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.section_columns": {
            "type": "select",
            "label": "Section column(s)",
            "table": "table_id",
            "bind": "COLUMNS",
            "multiple": true,
            "breakLine": true
          }
        }
      }
    }
  }
}
,
"/EmailByTableOptions.json/EmailByTableOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "Select Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.task_type": {
        "type": "hidden",
        "val": "write_series"
      },
      "table_id": {
        "type": "select",
        "label": "Select Table",
        "bind": "TABLES",
        "empty": "",
        "required": true
      },
      "info2": {
        "type": "text",
        "label": "",
        "val": "Table-Type: TO | CC | BCC | SUBJECT | BODY",
        "disabled": true,
        "style": "width: 100%"
      },
      "options.add_table": {
        "type": "checkbox",
        "label": "Embed a Table",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.embed_mode": {
        "type": "select",
        "label": "Table Embed Type",
        "show_if": "options.add_table=='true'",
        "options": {
          "embed": {
            "label": "Embed"
          },
          "attach_csv_comma_separated": {
            "label": "Attach as csv (',' - separated)"
          },
          "attach_csv_semicolon_separated": {
            "label": "Attach as csv (';' - separated)"
          }
        },
        "val": "embed",
        "breakLine": true
      },
      "options.embed_table_footer": {
        "type": "text",
        "label": "Table Footer",
        "show_if": "options.add_table=='true'",
        "val": "",
        "style": "width: 100%"
      },
      "info3": {
        "type": "text",
        "label": "",
        "val": "This task only supports users logged in via Microsoft Login",
        "disabled": true,
        "style": "width: 100%"
      }
    }
  }
},
"/RunByParameterOutput.json/RunByParameterOutput.json": {
  "output": {
    "type": "fieldset",
    "label": "Output and Settings",
    "show_if": "output.output_and_setting=='true' && options.output_type=='unify_output_tables'",
    "repeat": false,
    "fields": {

    }
  }
},
"/GetTaskTemplateOptions.json/GetTaskTemplateOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.script_name": {
        "type": "text",
        "label": "Script name(e.g. `clean`)",
        "val": "clean",
        "width": "100%",
        "breakLine": true
      }
    }
  }
}
,
"/InjectOptions.json/InjectOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.task_code": {
        "type": "hidden",
        "val": "find_replace_text"
      },
      "options.incoming_value_to_replace.type": {
        "type": "select",
        "label": "Incoming Value",
        "options": {
          "user_specified_value": {
            "label": "Equals"
          },
          "begins_with": {
            "label": "Begins with"
          },
          "ends_with": {
            "label": "Ends with"
          },
          "empty": {
            "label": "Empty"
          },
          "regex": {
            "label": "Regular Expression"
          }
        },
        "val": "user_specified_value",
        "style": "min-width: 190px"
      },
      "options.incoming_value_to_replace.value": {
        "type": "text",
        "label": "Incoming Value To Replace",
        "required": true,
        "show_if": "options.incoming_value_to_replace.type=='user_specified_value' || options.incoming_value_to_replace.type=='begins_with' || options.incoming_value_to_replace.type=='ends_with'",
        "val": "",
        "style": "min-width: 170px"
      },
      "options.incoming_value_to_replace.regex": {
        "type": "text",
        "label": "Regular Expression",
        "required": true,
        "show_if": "options.incoming_value_to_replace.type=='regex'",
        "val": "(.*),(.*),(.*)\\s(\\d{5})(-\\d{4})?",
        "style": "min-width: 200px"
      },
      "options.incoming_value_to_replace.partial_match": {
        "type": "select",
        "label": "Partial Match",
        "show_if": "options.incoming_value_to_replace.type=='user_specified_value'",
        "options": {
          "full_match": {
            "label": "Full match"
          },
          "full_and_partial_match": {
            "label": "Full and partial match"
          },
          "partial_match_only": {
            "label": "Partial match only"
          }
        },
        "val": "full_and_partial_match"
      },
      "options.incoming_value_to_replace.case_sensitivity": {
        "type": "select",
        "label": "Case Sensitivity",
        "show_if": "options.incoming_value_to_replace.type=='user_specified_value' || options.incoming_value_to_replace.type=='begins_with' || options.incoming_value_to_replace.type=='ends_with' || options.incoming_value_to_replace.type=='regex'",
        "options": {
          "sensitive": {
            "label": "Case Sensitive"
          },
          "insensitive": {
            "label": "Case Insensitive"
          }
        },
        "val": "sensitive"
      },
      "options.replace_with.value_type": {
        "type": "select",
        "label": "Replace With",
        "show_if": "options.incoming_value_to_replace.type!='regex'",
        "options": {
          "user_specified_value": {
            "label": "Custom Value"
          },
          "table": {
            "label": "Table Column"
          }
        },
        "val": "user_specified_value",
        "style": "min-width: 190px"
      },
      "options.replace_with.value": {
        "type": "text",
        "label": "Replace With Value",
        "show_if": "options.incoming_value_to_replace.type!='regex' && options.replace_with.value_type=='user_specified_value'",
        "val": ""
      },
      "options.replace_with.regex_value": {
        "type": "text",
        "label": "Replace With Value",
        "show_if": "options.incoming_value_to_replace.type=='regex'",
        "val": "\\4: \\2, \\3"
      },
      "options.replace_with.table_id": {
        "type": "select",
        "label": "Select Table",
        "show_if": "options.incoming_value_to_replace.type!='regex' && options.replace_with.value_type=='table'",
        "bind": "TABLES",
        "required": true
      },
      "options.replace_with.column": {
        "type": "select",
        "label": "Select Column",
        "show_if": "options.incoming_value_to_replace.type!='regex' && options.replace_with.value_type=='table'",
        "table": "options.replace_with.table_id",
        "bind": "COLUMNS",
        "required": true,
        "breakLine": true
      },
      "options.apply_framing_condition": {
        "type": "checkbox",
        "label": "Apply framing conditions",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "apply_framing_condition_box": {
        "type": "fieldset",
        "label": "Framing conditions",
        "show_if": "options.apply_framing_condition=='true'",
        "repeat": false,
        "fields": {
          "options.framing_condition.pattern": {
            "type": "select",
            "label": "Framing conditions",
            "required": true,
            "options": {
              "name_x": {
                "label": "name : x"
              },
              "curly_brackets": {
                "label": "{x}"
              },
              "square_brackets": {
                "label": "[x]"
              },
              "round_brackets": {
                "label": "(x)"
              },
              "tag_x": {
                "label": "&lt;tag&gt;x&lt;/tag&gt;"
              },
              "tag1_x_tag2": {
                "label": "tag1 x tag2"
              },
              "name_1_name_2_x": {
                "label": "name-1 : { name-2 : x }"
              },
              "x_bracket": {
                "label": "x : { } , x : ( ) , x : [ ]"
              },
              "name_bracket_x": {
                "label": "name : { x } , name : ( x ) , name : [ x ]"
              },
              "f_x": {
                "label": "f(x)"
              },
              "f_x_bracket": {
                "label": "f(){x}"
              }
            },
            "val": "name_x"
          },
          "options.framing_condition.name_x_name": {
            "type": "text",
            "label": "Name",
            "show_if": "options.framing_condition.pattern=='name_x'",
            "val": "",
            "required": true
          },
          "options.framing_condition.tag_x_tag": {
            "type": "text",
            "label": "Tag",
            "show_if": "options.framing_condition.pattern=='tag_x'",
            "val": "",
            "required": true
          },
          "options.framing_condition.tag1_x_tag2__tag1": {
            "type": "text",
            "label": "Tag1",
            "show_if": "options.framing_condition.pattern=='tag1_x_tag2'",
            "val": "",
            "required": true
          },
          "options.framing_condition.tag1_x_tag2__tag2": {
            "type": "text",
            "label": "Tag2",
            "show_if": "options.framing_condition.pattern=='tag1_x_tag2'",
            "val": "",
            "required": true
          },
          "options.framing_condition.name_1_name_2_x__name1": {
            "type": "text",
            "label": "Name1",
            "show_if": "options.framing_condition.pattern=='name_1_name_2_x'",
            "val": "",
            "required": true
          },
          "options.framing_condition.name_1_name_2_x__name2": {
            "type": "text",
            "label": "Name2",
            "show_if": "options.framing_condition.pattern=='name_1_name_2_x'",
            "val": "",
            "required": true
          },
          "options.framing_condition.name_bracket_x__name": {
            "type": "text",
            "label": "Name",
            "show_if": "options.framing_condition.pattern=='name_bracket_x'",
            "val": "",
            "required": true
          },
          "options.framing_condition.customize_colon": {
            "type": "checkbox",
            "label": "Customize :",
            "show_if": "options.framing_condition.pattern=='name_x' || options.framing_condition.pattern=='x_bracket' || options.framing_condition.pattern=='name_1_name_2_x'",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.framing_condition.custom_colon": {
            "type": "text",
            "label": "Input symbol",
            "show_if": "(options.framing_condition.pattern=='name_x' || options.framing_condition.pattern=='x_bracket' || options.framing_condition.pattern=='name_1_name_2_x') && options.framing_condition.customize_colon=='true'",
            "val": ":",
            "required": true
          },
          "options.framing_condition.customize_f": {
            "type": "checkbox",
            "label": "Customize f",
            "show_if": "options.framing_condition.pattern=='f_x' || options.framing_condition.pattern=='f_x_bracket'",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.framing_condition.custom_f": {
            "type": "text",
            "label": "Input f",
            "show_if": "(options.framing_condition.pattern=='f_x' || options.framing_condition.pattern=='f_x_bracket') && options.framing_condition.customize_f=='true'",
            "val": ":",
            "required": true
          },
          "options.framing_condition.parantheses": {
            "type": "select",
            "label": "Parantheses",
            "required": true,
            "options": {
              "optional": {
                "label": "Optional parantheses"
              },
              "including": {
                "label": "Including parantheses"
              },
              "no": {
                "label": "No parantheses"
              }
            },
            "val": "optional"
          },
          "options.framing_condition.sel_parantheses": {
            "type": "select",
            "label": "Select Parantheses",
            "show_if": "options.framing_condition.parantheses=='optional' || options.framing_condition.parantheses=='including'",
            "required": true,
            "options": {
              "p1": {
                "label": "'"
              },
              "p2": {
                "label": "\""
              },
              "p3": {
                "label": "`"
              },
              "p4": {
                "label": "´"
              }
            },
            "multiple": true,
            "val": ["p1", "p2", "p3", "p4"],
            "breakLine": true
          },
          "options.framing_condition.allow_whitespace": {
            "type": "checkbox",
            "label": "Allow whitespace",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          }
        }
      },
      "options.apply_section_by_section": {
        "type": "checkbox",
        "label": "Section by Section",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px"
      },
      "options.section_columns": {
        "type": "select",
        "label": "Section column(s)",
        "show_if": "options.apply_section_by_section=='true'",
        "table": "table_id",
        "bind": "COLUMNS",
        "multiple": true,
        "required": true,
        "breakLine": true
      },
      "options.use_replace_table_filter": {
        "type": "checkbox",
        "label": "Use Filter on \"Replace With\" Table",
        "show_if": "options.incoming_value_to_replace.type!='regex' && options.replace_with.value_type=='table'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "replace_table_filter_option_box": {
        "type": "fieldset",
        "label": "\"Replace With\" Table Filter Options",
        "show_if": "options.use_replace_table_filter=='true' && (options.incoming_value_to_replace.type!='regex' && options.replace_with.value_type=='table')",
        "repeat": false,
        "fields": {
          "options.replace_table_filter_option.filter": {
            "type": "fieldset",
            "label": "Add Filter Conditions on \"Replace With\" Table",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if" :  "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if" :  "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "options.replace_with.table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table_id": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table_id",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.replace_table_filter_option.apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record on \"Replace With\" Table",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "replace_table_filter_option_apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group on \"Replace With\" Table",
            "show_if": "options.replace_table_filter_option.apply_to_record=='false' && (options.incoming_value_to_replace.type!='regex' && options.replace_with.value_type=='table')",
            "repeat": false,
            "fields": {
              "options.replace_table_filter_option.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "required": true,
                "width": "100%",
                "table": "options.replace_with.table_id",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      }
    }
  }
}
,
"/LabelOptions.json/LabelOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Add Label",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "add_column": {
        "type": "text",
        "label": "Column name for label",
        "val": "Label",
        "required": true
      },
      "add_label": {
        "type": "text",
        "label": "Add label",
        "val": "label1",
        "required": true,
        "breakLine": true
      },
      "do_not_duplicate": {
        "type": "checkbox",
        "label": "Don't duplicate same labels",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "use_custom_delimiter": {
        "type": "checkbox",
        "label": "Custom Delimiter",
        "show_if": "do_not_duplicate=='false'",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "custom_delimiter": {
        "type": "text",
        "label": "Custom delimiter",
        "show_if": "use_custom_delimiter=='true'",
        "val": ";",
        "required": true,
        "breakLine": true
      },
      "filter_box": {
        "type": "fieldset",
        "label": "Filter Options",
        "repeat": false,
        "fields": {
          "filter": {
            "type": "fieldset",
            "label": "Select Conditions for Labeling",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if" :  "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "show_if" :  "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table_id": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table_id",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group",
            "show_if": "apply_to_record=='false'",
            "repeat": false,
            "fields": {
              "apply_to_group_columns__all_but_selected": {
                "type": "checkbox",
                "label": "All but selected",
                "val": "false",
                "isOn": "true",
                "isOff": "false",
                "breakLine": true
              },
              "apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "width": "100%",
                "table": "table_id",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      }
    }
  }
},
"/DCEconomicOptions.json/DCEconomicOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.all_countries": {
        "type": "hidden",
        "val": "false"
      },
      "options.stat_vars": {
        "type": "fieldset",
        "label": "Statistics data category(s)",
        "repeat": true,
        "fields": {
          "stat_var_name": {
            "type": "select",
            "label": "Statistics Data",
            "required": true,
            "options": {
              "Amount_EconomicActivity_GrossDomesticProduction_Nominal": {
                "label": "GDP"
              },
              "GrowthRate_Amount_EconomicActivity_GrossDomesticProduction": {
                "label": "Growth Rate of GDP"
              },
              "Amount_EconomicActivity_GrossNationalIncome_PurchasingPowerParity": {
                "label": "GNI (Purchasing Power Parity)"
              },
              "Count_Product_MobileCellularSubscription_AsFractionOf_Count_Person": {
                "label": "Mobile Subscriptions Per Capita"
              },
              "Amount_Debt_Government": {
                "label": "Debt With Government"
              },
              "Amount_Debt_Government_AsAFractionOfGrossDomesticProduction": {
                "label": "Debt With Government as Fraction of GDP"
              },
              "GiniIndex_EconomicActivity": {
                "label": "Gini Index of Economic Activity"
              },
              "Amount_EconomicActivity_ExpenditureActivity_MilitaryExpenditure_Government": {
                "label": "Military Expenditure, Government"
              },
              "Amount_EconomicActivity_ExpenditureActivity_MilitaryExpenditure_Government_AsFractionOf_Amount_EconomicActivity_GrossDomesticProduction_Nominal": {
                "label": "Military Expenditure, Government as Fraction of Economic Activity Gross Domestic Production Nominal"
              },
              "Amount_EconomicActivity_ExpenditureActivity_EducationExpenditure_Government_AsFractionOf_Amount_EconomicActivity_ExpenditureActivity_Government": {
                "label": "Education Expenditure, Government as Fraction of Economic Activity Expenditure Activity Government"
              },
              "Amount_EconomicActivity_ExpenditureActivity_EducationExpenditure_Government_AsFractionOf_Amount_EconomicActivity_GrossDomesticProduction_Nominal": {
                "label": "Education Expenditure, Government as Fraction of Economic Activity Gross Domestic Production Nominal"
              },
              "Amount_EconomicActivity_ExpenditureActivity_HealthcareExpenditure_AsFractionOf_Count_Person": {
                "label": "Healthcare Expenditure Per Capita"
              },
              "Amount_EconomicActivity_ExpenditureActivity_TertiaryEducationExpenditure_Government_AsFractionOf_Amount_EconomicActivity_ExpenditureActivity_EducationExpenditure_Government": {
                "label": "Tertiary Education Expenditure, Government as Fraction of Economic Activity Expenditure Activity Education Expenditure Government"
              },
              "Amount_EconomicActivity_GrossValueAdded_RealValue": {
                "label": "Gross Value Added (Real Value)"
              },
              "Amount_EconomicActivity_GrossValueAdded_ISICAgricultureHuntingForestryFishing_RealValue": {
                "label": "Gross Value Added, Agriculture, Hunting, Forestry, Fishing (Real Value)"
              },
              "Amount_EconomicActivity_GrossValueAdded_ISICConstruction_RealValue": {
                "label": "Gross Value Added, Construction (Real Value)"
              },
              "Amount_EconomicActivity_GrossValueAdded_ISICManufacturing_RealValue": {
                "label": "Gross Value Added, Manufacturing (Real Value)"
              },
              "Amount_EconomicActivity_GrossValueAdded_ISICMiningManufacturingUtilities_RealValue": {
                "label": "Gross Value Added, Mining, Manufacturing, Utilities (Real Value)"
              },
              "Amount_EconomicActivity_GrossValueAdded_ISICTransportStorageCommunications_RealValue": {
                "label": "Gross Value Added, Transport, Storage And Communications (Real Value)"
              },
              "Amount_EconomicActivity_GrossValueAdded_ISICWholesaleRetailTradeRestaurantsHotels_RealValue": {
                "label": "Gross Value Added, Wholesale, Retail Trade, Restaurants And Hotels (Real Value)"
              },
              "Amount_Remittance_OutwardRemittance": {
                "label": "Outward Remittance"
              },
              "Amount_Remittance_InwardRemittance": {
                "label": "Inward Remittance"
              },
              "Amount_Remittance_InwardRemittance_AsFractionOf_Amount_EconomicActivity_GrossDomesticProduction_Nominal": {
                "label": "Inward Remittance as Fraction of Economic Activity GDP"
              },
              "Amount_Stock": {
                "label": "Stock"
              },
              "Amount_Stock_AsFractionOf_Amount_EconomicActivity_GrossDomesticProduction_Nominal": {
                "label": "Stock as Fraction of Economic Activity GDP"
              }
            }
          },
          "per_capita": {
            "type": "checkbox",
            "label": "Per capita",
            "show_if": "this.stat_var_name=='Amount_EconomicActivity_GrossDomesticProduction_Nominal'||this.stat_var_name=='Amount_EconomicActivity_GrossNationalIncome_PurchasingPowerParity'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "help_1": {
            "type": "textarea",
            "label": "",
            "show_if": "this.stat_var_name=='Amount_EconomicActivity_ExpenditureActivity_MilitaryExpenditure_Government_AsFractionOf_Amount_EconomicActivity_GrossDomesticProduction_Nominal'",
            "val": "Military Expenditure, Government as Fraction of Economic Activity Gross Domestic Production Nominal",
            "disabled": true,
            "md_no_resize": false,
            "rows": 2,
            "width": "100%"
          },
          "help_2": {
            "type": "textarea",
            "label": "",
            "show_if": "this.stat_var_name=='Amount_EconomicActivity_ExpenditureActivity_EducationExpenditure_Government_AsFractionOf_Amount_EconomicActivity_ExpenditureActivity_Government'",
            "val": "Education Expenditure, Government as Fraction of Economic Activity Expenditure Activity Government",
            "disabled": true,
            "md_no_resize": false,
            "rows": 2,
            "width": "100%"
          },
          "help_3": {
            "type": "textarea",
            "label": "",
            "show_if": "this.stat_var_name=='Amount_EconomicActivity_ExpenditureActivity_EducationExpenditure_Government_AsFractionOf_Amount_EconomicActivity_GrossDomesticProduction_Nominal'",
            "val": "Education Expenditure, Government as Fraction of Economic Activity Gross Domestic Production Nominal",
            "disabled": true,
            "md_no_resize": false,
            "rows": 2,
            "width": "100%"
          },
          "help_4": {
            "type": "textarea",
            "label": "",
            "show_if": "this.stat_var_name=='Amount_EconomicActivity_ExpenditureActivity_TertiaryEducationExpenditure_Government_AsFractionOf_Amount_EconomicActivity_ExpenditureActivity_EducationExpenditure_Government'",
            "val": "Tertiary Education Expenditure, Government as Fraction of Economic Activity Expenditure Activity Education Expenditure Government",
            "disabled": true,
            "md_no_resize": false,
            "rows": 2,
            "width": "100%"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.output_as_chart": {
        "type": "checkbox",
        "label": "Output a Graph",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
}
,
"/JoinOutput.json/JoinOutput.json": {
  "output.output_table_types": {
    "type": "select",
    "label": "Output Table Type(s)",
    "required": true,
    "options": {
      "inner": {
        "label": "Inner Join Table"
      },
      "left": {
        "label": "Left Join Table"
      },
      "right": {
        "label": "Right Join Table"
      }
    },
    "multiple": true,
    "val": ["inner"],
    "breakLine": true
  },
  "output.unify_output_table": {
    "type": "checkbox",
    "label": "Unify output tables",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  },
  "output.standard_ending": {
    "type": "checkbox",
    "label": "Standard Ending",
    "show_if": "output.unify_output_table == 'false'",
    "val": "true",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  },
  "output.inner_ending": {
    "show_if": "output.unify_output_table == 'false' && output.standard_ending == 'false'",
    "type": "text",
    "label": "Inner Ending",
    "val": "_j",
    "style": "margin-left: 10px"
  },
  "output.left_ending": {
    "show_if": "output.unify_output_table == 'false' && output.standard_ending == 'false'",
    "type": "text",
    "label": "Left Ending",
    "val": "_l",
    "style": "margin-left: 10px"
  },
  "output.right_ending": {
    "show_if": "output.unify_output_table == 'false' && output.standard_ending == 'false'",
    "type": "text",
    "label": "Right Ending",
    "val": "_r",
    "style": "margin-left: 10px",
    "breakLine": true
  }
},
"/SetPointsOptions.json/SetPointsOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.user_ids": {
        "type": "text",
        "label": "User ID(s) (; separated list)",
        "required": true,
        "width": "100%"
      },
      "options.points": {
        "type": "number",
        "label": "Points",
        "val": 100,
        "required": true
      }
    }
  }
}
,
"/SystemAdminDataOptions.json/SystemAdminDataOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.table_type": {
        "type": "select",
        "label": "System Table",
        "options": {
          "resource_consumption": {
            "label": "Resource Consumption"
          },
          "my_flows_log": {
            "label": "My Flows Log"
          },
          "my_flows": {
            "label": "My Flows"
          },
          "my_table_permissions": {
            "label": "My Table Permissions"
          },
          "my_tables": {
            "label": "My Tables"
          },
          "my_tasks_log": {
            "label": "My Tasks Log"
          },
          "users_points": {
            "label": "User's points"
          },
          "users_points_logs": {
            "label": "User's points logs"
          },
          "task_usage_per_user": {
            "label": "Task usage per user"
          }
        },
        "val": "resource_consumption",
        "required": true
      },
      "options.resource_consumption_cols": {
        "type": "select",
        "label": "Import Columns",
        "show_if": "options.table_type=='resource_consumption'",
        "multiple": true,
        "options": {
          "Year": {
            "label": "Year"
          },
          "Month": {
            "label": "Month"
          },
          "Runs (per Month)": {
            "label": "Runs (per Month)"
          },
          "Processing Time(MS)": {
            "label": "Processing Time(MS)"
          },
          "Max Storage Space(MBytes)": {
            "label": "Max Storage Space(MBytes)"
          },
          "Point Consumption": {
            "label": "Point Consumption"
          }
        },
        "val": ["Year","Month","Runs (per Month)","Processing Time(MS)","Max Storage Space(MBytes)","Point Consumption"],
        "required": true
      },
      "options.my_flows_log_cols": {
        "type": "select",
        "label": "Import Columns",
        "show_if": "options.table_type=='my_flows_log'",
        "multiple": true,
        "options": {
          "Flow": {
            "label": "Flow"
          },
          "Task ID": {
            "label": "Task ID"
          },
          "Task-Order-Number": {
            "label": "Task-Order-Number"
          },
          "Task-Name": {
            "label": "Task-Name"
          },
          "Task Add/Delete": {
            "label": "Task Add/Delete"
          },
          "Parameter-Settings Old": {
            "label": "Parameter-Settings Old"
          },
          "Parameter-Settings New": {
            "label": "Parameter-Settings New"
          },
          "Schedule Old": {
            "label": "Schedule Old"
          },
          "Schedule New": {
            "label": "Schedule New"
          },
          "Timestamp": {
            "label": "Timestamp"
          },
          "UserId": {
            "label": "UserId"
          },
          "TableId": {
            "label": "TableId"
          }
        },
        "val": ["Flow","Task ID","Task-Order-Number","Task-Name","Task Add/Delete","Parameter-Settings Old","Parameter-Settings New","Schedule Old","Schedule New","Timestamp","UserId","TableId"],
        "required": true
      },
      "options.my_flows_cols": {
        "type": "select",
        "label": "Import Columns",
        "show_if": "options.table_type=='my_flows'",
        "multiple": true,
        "options": {
          "FlowID": {
            "label": "FlowID"
          },
          "Flow-Name": {
            "label": "Flow-Name"
          },
          "Flow Schedule": {
            "label": "Flow Schedule"
          },
          "Task ID": {
            "label": "Task ID"
          },
          "Task-Order-Number": {
            "label": "Task-Order-Number"
          },
          "Task-Name": {
            "label": "Task-Name"
          },
          "Parameter-Settings (JSON)": {
            "label": "Parameter-Settings (JSON)"
          },
          "Task Schedule": {
            "label": "Task Schedule"
          },
          "Permissions": {
            "label": "Permissions"
          }
        },
        "val": ["FlowID","Flow-Name","Flow Schedule","Task ID","Task-Order-Number","Task-Name","Parameter-Settings (JSON)","Task Schedule","Permissions"],
        "required": true
      },
      "options.my_table_permissions_cols": {
        "type": "select",
        "label": "Import Columns",
        "show_if": "options.table_type=='my_table_permissions'",
        "multiple": true,
        "options": {
          "FlowID": {
            "label": "FlowID"
          },
          "TableID": {
            "label": "TableID"
          },
          "PermissionID": {
            "label": "PermissionID"
          },
          "Type": {
            "label": "Type"
          },
          "Users": {
            "label": "Users"
          },
          "Headers": {
            "label": "Headers"
          },
          "Labels": {
            "label": "Labels"
          }
        },
        "val": ["FlowID","TableID","PermissionID","Type","Users","Headers","Labels"],
        "required": true
      },
      "options.my_tables_cols": {
        "type": "select",
        "label": "Import Columns",
        "show_if": "options.table_type=='my_tables'",
        "multiple": true,
        "options": {
          "TableID": {
            "label": "TableID"
          },
          "Table-Name": {
            "label": "Table-Name"
          },
          "Header Names per Table": {
            "label": "Header Names per Table"
          },
          "Label Names per Table": {
            "label": "Label Names per Table"
          },
          "Corner Info per Table": {
            "label": "Corner Info per Table"
          },
          "Table Info": {
            "label": "Table Info"
          },
          "Permissions per Table": {
            "label": "Permissions per Table"
          },
          "Creation Time": {
            "label": "Creation Time"
          },
          "Created by": {
            "label": "Created by"
          },
          "Latest Change Timestamp": {
            "label": "Latest Change Timestamp"
          },
          "Table-Tags": {
            "label": "Table-Tags"
          }
        },
        "val": ["TableID","Table-Name","Header Names per Table","Label Names per Table","Corner Info per Table","Table Info","Permissions per Table","Creation Time","Created by","Latest Change Timestamp","Table-Tags"],
        "required": true
      },
      "options.my_tasks_log_cols": {
        "type": "select",
        "label": "Import Columns",
        "show_if": "options.table_type=='my_tasks_log'",
        "multiple": true,
        "options": {
          "Flow": {
            "label": "Flow"
          },
          "Task ID": {
            "label": "Task ID"
          },
          "Task-Order-Number": {
            "label": "Task-Order-Number"
          },
          "Task-Name": {
            "label": "Task-Name"
          },
          "Parameter-Settings (JSON)": {
            "label": "Parameter-Settings (JSON)"
          },
          "Timestamp": {
            "label": "Timestamp"
          },
          "Scheduled": {
            "label": "Scheduled"
          },
          "Success": {
            "label": "Success"
          },
          "Message": {
            "label": "Message"
          }
        },
        "val": ["Flow","Task ID","Task-Order-Number","Task-Name","Parameter-Settings (JSON)","Timestamp","Scheduled","Success","Message"],
        "required": true
      },
      "options.users_points_cols": {
        "type": "select",
        "label": "Import Columns",
        "show_if": "options.table_type=='users_points'",
        "multiple": true,
        "options": {
          "User ID": {
            "label": "User ID"
          },
          "Guest Login": {
            "label": "Guest Login"
          },
          "Login": {
            "label": "Login"
          },
          "Available Points": {
            "label": "Available Points"
          },
          "Created At": {
            "label": "Created At"
          },
          "Last Used": {
            "label": "Last Used"
          }
        },
        "val": ["User ID","Guest Login","Login","Available Points","Created At","Last Used"],
        "required": true
      },
      "options.users_points_logs_cols": {
        "type": "select",
        "label": "Import Columns",
        "show_if": "options.table_type=='users_points_logs'",
        "multiple": true,
        "options": {
          "User ID": {
            "label": "User ID"
          },
          "Points": {
            "label": "Points"
          },
          "Type": {
            "label": "Type"
          },
          "Reason": {
            "label": "Reason"
          },
          "AdminID": {
            "label": "AdminID"
          },
          "Date": {
            "label": "Date"
          }
        },
        "val": ["User ID","Points","Type","Reason","AdminID","Date"],
        "required": true
      },
      "options.task_usage_per_user_cols": {
        "type": "select",
        "label": "Import Columns",
        "show_if": "options.table_type=='task_usage_per_user'",
        "multiple": true,
        "options": {
          "User ID": {
            "label": "User ID"
          },
          "User Login": {
            "label": "User Login"
          },
          "User Anonymous Login": {
            "label": "User Anonymous Login"
          },
          "Task Name": {
            "label": "Task Name"
          },
          "Number of Execution": {
            "label": "Number of Execution"
          }
        },
        "val": ["User ID","User Login","User Anonymous Login","Task Name","Number of Execution"],
        "required": true,
        "breakLine": true
      }
    }
  }
}
,
"/ImportFromFileOptions.json/ImportFromFileOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Select Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.from": {
        "type": "hidden",
        "val": "web"
      },
      "options.webservice": {
        "type": "select",
        "label": "Select Webservice",
        "options": {
          "github": {
            "label": "Github"
          },
          "ms_one_drive": {
            "label": "Microsoft OneDrive"
          },
          "dropbox": {
            "label": "Dropbox"
          },
          "google_drive": {
            "label": "Google Drive (Coming soon)"
          }
        },
        "val": "github",
        "required": true,
        "breakLine": true
      },
      "options.output_format": {
        "type": "select",
        "label": "Select Type",
        "options": {
          "csv_table": {
            "label": "CSV-Table"
          },
          "line_by_line": {
            "label": "Line by Line"
          },
          "word_by_word": {
            "label": "Text"
          }
        },
        "val": "csv_table",
        "required": true
      },
      "options.word_pattern_type": {
        "type": "select",
        "label": "Word Pattern",
        "show_if": "options.output_format=='word_by_word' && options.specify_word_pattern=='true'",
        "options": {
          "regex": {
            "label": "Regular Expression"
          }
        },
        "val": "regex",
        "required": true
      },
      "options.word_pattern_regex": {
        "type": "text",
        "label": "Regular Expression",
        "show_if": "options.output_format=='word_by_word' && options.specify_word_pattern=='true' && options.word_pattern_type=='regex'",
        "required": true,
        "val": "[a-z][1-9]",
        "breakLine": true
      },
      "options.column_setting": {
        "type": "checkbox",
        "label": "Column Settings",
        "show_if": "options.output_format!='file_list'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "column_setting_frame": {
        "type": "fieldset",
        "label": "Column Settings",
        "show_if": "options.output_format!='file_list' && options.column_setting=='true'",
        "repeat": false,
        "fields": {
          "options.add_row_column": {
            "type": "checkbox",
            "label": "Add Row Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_word_count_column": {
            "type": "checkbox",
            "label": "Add 'Word Count' Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_word_nonword_column": {
            "type": "checkbox",
            "label": "Add 'Word & Non-Word' Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_section_column": {
            "type": "checkbox",
            "label": "Add Section Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "section_column_types_frame": {
            "type": "fieldset",
            "label": "Section Column Types",
            "show_if": "options.output_format=='word_by_word' && options.add_section_column=='true'",
            "repeat": false,
            "fields": {
              "options.section_columns.add_paragraph_section_column": {
                "type": "checkbox",
                "label": "Paragraph",
                "val": "false",
                "isOn": "true",
                "isOff": "false",
                "breakLine": true
              },
              "options.section_columns.add_custom_section_column": {
                "type": "checkbox",
                "label": "Custom Section Delimiter",
                "val": "false",
                "isOn": "true",
                "isOff": "false"
              },
              "options.section_columns.custom_delimiter": {
                "type": "text",
                "label": "Delimiter(1 character)",
                "show_if": "options.section_columns.add_custom_section_column=='true'",
                "maxLength": 1,
                "required": true,
                "breakLine": true
              },
              "options.section_columns.add_brackets_punctuation_section_column": {
                "type": "checkbox",
                "label": "Brackets and Punctuation",
                "val": "false",
                "isOn": "true",
                "isOff": "false"
              },
              "options.section_columns.brackets_punctuation_section_column_type": {
                "type": "select",
                "label": "Brackets Type",
                "show_if": "options.section_columns.add_brackets_punctuation_section_column=='true'",
                "options": {
                  "nesting_structure": {
                    "label": "Nesting Structure"
                  },
                  "inner_bracket": {
                    "label": "Inner Bracket"
                  },
                  "brackets_only": {
                    "label": "Brackets Only"
                  },
                  "show_all": {
                    "label": "Show All"
                  }
                },
                "val": "show_all",
                "required": true,
                "breakLine": true
              }
            }
          },
          "options.add_filename_column": {
            "type": "checkbox",
            "label": "Add Column for File Name",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "options.add_filepath_column": {
            "type": "checkbox",
            "label": "Add Column for File Path",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          }
        }
      },
      "options.is_cloud_dir": {
        "type": "hidden",
        "val": "false"
      },
      "if_dir_frame": {
        "type": "fieldset",
        "label": "Directory Import Options",
        "show_if": "options.output_format!='file_list' && options.is_cloud_dir=='true'",
        "repeat": false,
        "fields": {
          "options.unify_in_one_table": {
            "type": "checkbox",
            "label": "Unify in one table",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.suffix": {
            "type": "select",
            "label": "Output tables suffix",
            "show_if": "options.unify_in_one_table=='false'",
            "options": {
              "number": {
                "label": "Number"
              },
              "filename": {
                "label": "Filename"
              }
            },
            "val": "number",
            "required": true,
            "breakLine": true
          },
          "options.include_subdir": {
            "type": "checkbox",
            "label": "Include Subdirectories",
            "show_if": "options.output_format!='file_list' && options.is_cloud_dir=='true'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true,
            "style": "margin-top: 10px"
          }
        }
      },
      "options.file_list.include_subdir": {
        "type": "checkbox",
        "label": "Include Subdirectories",
        "show_if": "options.output_format=='file_list'",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true,
        "style": "margin-top: 10px"
      },
      "options.file_list.add_change_date_column": {
        "type": "checkbox",
        "label": "Add Change Date Column",
        "show_if": "options.output_format=='file_list'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  },
  "import_link_token_frame": {
    "type": "fieldset",
    "label": "Import Link",
    "repeat": false,
    "fields": {
      "options.link_csv_file": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test/blob/main/example.csv",
        "show_if": "options.webservice=='github' && options.is_cloud_dir=='false' && options.output_format=='csv_table'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.link_text_file": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test/blob/main/example.txt(json, csv, etc)",
        "show_if": "options.webservice=='github' && options.is_cloud_dir=='false' && options.output_format!='csv_table' && options.output_format!='file_list'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.one_drive.file_path": {
        "type": "text",
        "label": "Enter path to file e.g. ZippyDoc/Subdir1/test.txt",
        "show_if": "options.webservice=='ms_one_drive' && options.output_format!='file_list' && options.is_cloud_dir=='false'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox.file_path": {
        "type": "text",
        "label": "Enter path to file e.g. ZippyDoc/Subdir1/test.txt",
        "show_if": "options.webservice=='dropbox' && options.output_format!='file_list' && options.is_cloud_dir=='false'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dir_path_filter": {
        "type": "fieldset",
        "label": "Import Path and File Filter",
        "show_if": "options.output_format=='file_list' || options.is_cloud_dir=='true'",
        "repeat": true,
        "fields": {
          "github__link_directory": {
            "type": "text",
            "label": "Enter link e.g. https://github.com/zippydoc/test",
            "show_if": "options.webservice=='github'",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "one_drive__dir_path": {
            "type": "text",
            "label": "Enter path to dir e.g. ZippyDoc/Subdir1",
            "show_if": "options.webservice=='ms_one_drive'",
            "width": "100%",
            "breakLine": true
          },
          "dropbox__dir_path": {
            "type": "text",
            "label": "Enter path to dir e.g. ZippyDoc/Subdir1",
            "show_if": "options.webservice=='dropbox'",
            "width": "100%",
            "breakLine": true
          },
          "google_drive__dir_path": {
            "type": "text",
            "label": "Enter path to dir",
            "show_if": "options.webservice=='google_drive'",
            "width": "100%",
            "breakLine": true
          },
          "dir_filter__filter_type": {
            "type": "select",
            "label": "Filter Type",
            "options": {
              "all": {
                "label": "All"
              },
              "contains": {
                "label": "Contains"
              },
              "starts_with": {
                "label": "Starts With"
              },
              "ends_with": {
                "label": "Ends With"
              },
              "regex": {
                "label": "Regular Expression"
              }
            },
            "val": "all",
            "required": true
          },
          "dir_filter__filter_string": {
            "type": "text",
            "label": "Filter",
            "show_if": "this.dir_filter__filter_type!='all'",
            "required": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.is_github_private": {
        "type": "checkbox",
        "label": "Github repository is private",
        "show_if": "options.webservice=='github'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "options.github_token": {
        "type": "text",
        "label": "Github personal access token",
        "show_if": "options.webservice=='github' && options.is_github_private=='true'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox.auth_code": {
        "type": "text",
        "label": "Dropbox Authorization Code",
        "show_if": "options.webservice=='dropbox'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.google_drive.access_token": {
        "type": "text",
        "label": "Google Drive Access Token",
        "show_if": "options.webservice=='google_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      }
    }
  }
}
,
"/JoinMultipleOutput.json/JoinMultipleOutput.json": {
  "output.output_table_types": {
    "type": "select",
    "label": "Output Table Type(s)",
    "required": true,
    "options": {
      "inner": {
        "label": "Inner Join Table"
      },
      "all_distinct": {
        "label": "All Distinct Tables"
      }
    },
    "multiple": true,
    "val": ["inner"],
    "breakLine": true
  },
  "output.unify_output_table": {
    "type": "checkbox",
    "label": "Unify output tables",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  },
  "output.standard_ending": {
    "type": "checkbox",
    "label": "Standard Ending",
    "show_if": "output.unify_output_table == 'false'",
    "val": "true",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  },
  "output.inner_ending": {
    "show_if": "output.unify_output_table == 'false' && output.standard_ending == 'false'",
    "type": "text",
    "label": "Inner Ending",
    "val": "_j",
    "style": "margin-left: 10px"
  },
  "output.distinct_tables_ending": {
    "show_if": "output.unify_output_table == 'false' && output.standard_ending == 'false'",
    "type": "text",
    "label": "Distinct Tables Ending",
    "val": "_d_",
    "style": "margin-left: 10px"
  },
  "output.distinct_tables_ending_suffix": {
    "show_if": "output.unify_output_table == 'false' && output.standard_ending == 'false'",
    "type": "select",
    "label": "Distinct Tables Ending Suffix",
    "options": {
      "serial_number": {
        "label": "Number"
      },
      "input_table_name": {
        "label": "Input table name"
      }
    },
    "val": "serial_number",
    "style": "margin-left: 10px",
    "breakLine": true
  }
},
"/PlanningAddTag.json/PlanningAddTag.json": {
  "output.add_tag": {
    "type": "checkbox",
    "label": "Add Tag",
    "show_if": "options.output_type=='table_output'",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "style": "margin-right: 15px"
  },
  "output.tag_name": {
    "type": "text",
    "label": "Tag Name",
    "show_if": "output.add_tag=='true'",
    "required": true,
    "minLength": 1,
    "maxLength": 255,
    "val": "",
    "breakLine": true,
    "style": "margin-left: 15px"
  }
},
"/AppendIfTableExist.json/AppendIfTableExist.json": {
  "output.if_table_exist.type": {
    "type": "select",
    "label": "If existing",
    "val": "drop_if_exist",
    "options": {
      "drop_if_exist": {
        "label": "Create or Drop (if already existing)"
      },
      "error_if_exist": {
        "label": "Create New (throw error if existing)"
      },
      "error_if_not_exist": {
        "label": "Drop (throw error if not-existing)"
      },
      "append_all": {
        "label": "Append All"
      },
      "append_not_existing": {
        "label": "Append not existing"
      }
    }
  },
  "output.if_table_exist.append_not_existing_cols": {
    "type": "select",
    "label": "Select Column(s)",
    "show_if": "output.if_table_exist.type=='append_not_existing'",
    "table": "target_table.table_id",
    "bind": "COLUMNS",
    "multiple": true,
    "required": true,
    "breakLine": true
  },
  "append_not_existing_info1": {
    "type": "text",
    "label": "",
    "show_if": "output.if_table_exist.type=='append_not_existing'",
    "val": "Appends rows only if the value of the selected column is new in the existing table.",
    "disabled": true,
    "style": "width: 100%"
  },
  "append_not_existing_info2": {
    "type": "text",
    "label": "",
    "show_if": "output.if_table_exist.type=='append_not_existing'",
    "val": "It is assumed that the selected column is found in the output and existing table",
    "disabled": true,
    "style": "width: 100%"
  }
}
,
"/TeamsChatOptions.json/TeamsChatOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "Select Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.to": {
        "type": "text",
        "label": "To",
        "required": true,
        "val": "",
        "placeholder": "user1@domain.com; user2@domain.com;",
        "width": "100%"
      },
      "options.message": {
        "type": "textarea",
        "label": "Message to send",
        "required": true,
        "val": "",
        "width": "100%",
        "rows": 3
      },
      "options.add_table": {
        "type": "checkbox",
        "label": "Embed Table",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      }
    }
  }
},
"/Test2Options.json/Test2Options.json": {
  "options_box": {
    "type": "fieldset",
    "label": "Select Options",
    "repeat": false,
    "fields": {
      "options.left_table": {
        "type": "select",
        "label": "Table 1",
        "bind": "TABLES",
        "empty": "",
        "required": true
      },
      "left_table_field": {
        "type": "select",
        "label": "Column 1",
        "required": true,
        "table": "options.left_table",
        "bind": "COLUMNS",
        "breakLine": true
      },
      "options.right_table": {
        "type": "select",
        "label": "Table 2",
        "bind": "TABLES",
        "empty": "",
        "required": true
      },
      "right_table_field": {
        "type": "select",
        "label": "Column 2",
        "required": true,
        "table": "options.right_table",
        "bind": "COLUMNS"
      }
    }
  }
},
"/SumupOptions.json/SumupOptions.json": {
  "actions": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": true,
    "fields": {
      "columns": {
        "type": "select",
        "label": "Column(s)",
        "table": "table_id",
		"assign_selected_value_to":"this.output_column_name",
        "bind": "COLUMNS",
        "multiple": true,
        "required": true
      },
      "action": {
        "type": "select",
        "label": "Action",
        "options": {
          "group_by": {
            "label": "Group By"
          },
          "count": {
            "label": "Count"
          },
          "sum": {
            "label": "Sum"
          },
          "first": {
            "label": "First"
          },
          "last": {
            "label": "Last"
          },
          "shortest": {
            "label": "Shortest"
          },
          "longest": {
            "label": "Longest"
          },
          "concatenate": {
            "label": "Concatenate"
          },
          "mathematics": {
            "label": "Mathematics"
          }
        },
        "val": "group_by"
      },
      "count_action_category": {
        "type": "select",
        "label": "Action Type",
        "show_if": "this.action=='count'",
        "options": {
          "all": {
            "label": "All"
          },
          "distinct": {
            "label": "Distinct"
          },
          "empty_or_zero": {
            "label": "Empty or 0"
          },
          "non_empty_or_zero": {
            "label": "Non Empty or 0"
          }
        },
        "val": "all"
      },
      "action_type1": {
        "type": "select",
        "label": "Action Sub Type",
        "show_if": "this.action=='count' && (this.count_action_category=='all' || this.count_action_category=='distinct')",
        "options": {
          "-": {
            "label": "-"
          },
          "non_zero": {
            "label": "Non 0"
          },
          "non_empty": {
            "label": "Non Empty"
          },
          "non_null": {
            "label": "Non Null"
          },
          "non_blank": {
            "label": "Non Blank"
          }
        },
        "val": "-"
      },
      "action_type2": {
        "type": "select",
        "label": "Action Sub Type",
        "show_if": "this.action=='count' && this.count_action_category=='empty_or_zero'",
        "options": {
          "zero": {
            "label": "0"
          },
          "empty": {
            "label": "Empty (Null & Blank)"
          },
          "null": {
            "label": "Null"
          },
          "blank": {
            "label": "Blank"
          }
        },
        "val": "zero"
      },
      "action_type3": {
        "type": "select",
        "label": "Action Sub Type",
        "show_if": "this.action=='count' && this.count_action_category=='non_empty_or_zero'",
        "options": {
          "non_zero": {
            "label": "Non 0"
          },
          "non_empty": {
            "label": "Non Empty"
          },
          "non_null": {
            "label": "Non Null"
          },
          "non_blank": {
            "label": "Non Blank"
          }
        },
        "val": "non_zero"
      },
      "mathematics_action_category": {
        "type": "select",
        "label": "Action Type",
        "show_if": "this.action=='mathematics'",
        "options": {
          "min": {
            "label": "Min"
          },
          "max": {
            "label": "Max"
          },
          "average": {
            "label": "Average"
          },
          "median": {
            "label": "Median"
          },
          "standard_deviation": {
            "label": "Standard Deviation"
          },
          "variance": {
            "label": "Variance"
          }
        },
        "val": "min"
      },
      "action_type4": {
        "type": "select",
        "label": "Action Sub Type",
        "show_if": "this.action=='mathematics'",
        "options": {
          "include_zero": {
            "label": "Include 0"
          },
          "exclude_zero": {
            "label": "Exclude 0"
          }
        },
        "val": "include_zero"
      },
      "concatenate_separator": {
        "type": "text",
        "label": "Separator",
        "show_if": "this.action=='concatenate'",
        "val": ","
      },
      "output_column_name": {
        "type": "text",
        "label": "Output Column Name",
        "val": ""
      },
      "rounding": {
        "type": "select",
        "label": "Rounding",
        "show_if": "this.action=='sum' || this.action=='mathematics'",
        "required": true,
        "options": {
          "no_rounding": {
            "label": "No rounding"
          },
          "0": {
            "label": "0 digits"
          },
          "1": {
            "label": "1 digits"
          },
          "2": {
            "label": "2 digits"
          },
          "3": {
            "label": "3 digits"
          },
          "4": {
            "label": "4 digits"
          },
          "5": {
            "label": "5 digits"
          },
          "6": {
            "label": "6 digits"
          },
          "7": {
            "label": "7 digits"
          },
          "8": {
            "label": "8 digits"
          },
          "9": {
            "label": "9 digits"
          }
        },
        "val": "no_rounding"
      },
      "delete": {
        "type": "button",
        "label": "Delete",
        "function": "DELETE_ROW"
      }
    }
  },
  "info1": {
    "type": "textarea",
    "label": "",
    "val": "If more than one columns selected, Output Column Name input value should be used as suffix",
    "disabled": true,
    "style": "width: 100%"
  }
}
,
"/DeleteOptions.json/DeleteOptions.json": {
  "placeholder": {
    "breakLine": true
  },
  "delete_options": {
    "type": "select",
    "label": "Delete Options",
    "required": true,
    "options": {
      "del_table": {
        "label": "Delete Table"
      },
      "del_columns": {
        "label": "Delete Selected Columns"
      },
      "del_rows": {
        "label": "Delete Selected Rows"
      }
    },
    "val": "del_table"
  },
  "apply_columns": {
    "type": "select",
    "label": "Select Columns to Delete",
    "show_if": "delete_options=='del_columns'",
    "required": true,
    "table": "table_id",
    "multiple": true,
    "bind": "COLUMNS"
  },
  "apply_rows": {
    "type": "select",
    "label": "Select Rows to Delete",
    "show_if": "delete_options=='del_rows'",
    "required": true,
    "table": "table_id",
    "multiple": true,
    "bind": "LABELS"
  }
}
,
"/D3StackedBarChartOptions.json/D3StackedBarChartOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.chart_type": {
        "type": "hidden",
        "val": "stacked_bar_chart"
      },
      "options.configure_manual": {
        "type": "hidden",
        "val": "true"
      },
      "options.x_axis_col": {
        "type": "select",
        "label": "X-axis column",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "options.category_col": {
        "type": "select",
        "label": "Category Column",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "options.value_col": {
        "type": "select",
        "label": "Value Column",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      }
    }
  }
}
,
"/AddCustomRowOptions.json/AddCustomRowOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.position": {
        "type": "select",
        "label": "Select Position",
        "required": true,
        "options": {
          "add_rows_below_selected_row": {
            "label": "Add rows below selected rows"
          },
          "add_rows_above_selected_row": {
            "label": "Add rows above selected rows"
          },
          "add_rows_at_table_end": {
            "label": "Add rows at table end"
          },
          "add_single_row_at_table_end": {
            "label": "Add single row at table end"
          },
          "add_row_after_each_group": {
            "label": "Add row after each group"
          }
        },
        "val": "add_rows_below_selected_row",
        "breakLine": true
      },
      "options.group_column": {
        "type": "select",
        "label": "Group Column",
        "show_if": "options.position=='add_row_after_each_group'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true,
        "breakLine": true
      },
      "options.use_filter": {
        "type": "select",
        "label": "Select Type",
        "show_if": "options.position=='add_rows_below_selected_row' || options.position=='add_rows_above_selected_row' || options.position=='add_rows_at_table_end'",
        "required": true,
        "options": {
          "false": {
            "label": "Add one row for each table row"
          },
          "true": {
            "label": "Add one row for each specified row"
          }
        },
        "val": "false",
        "breakLine": true
      },
      "filter_box": {
        "type": "fieldset",
        "label": "Filter Options",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.use_filter=='true' && (options.position=='add_rows_below_selected_row' || options.position=='add_rows_above_selected_row' || options.position=='add_rows_at_table_end')",
        "repeat": false,
        "fields": {
          "options.filter": {
            "type": "fieldset",
            "label": "Add Filter Conditions",
            "style": "border-radius: 3px; border: 1px solid #ccc",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group",
            "style": "border-radius: 3px; border: 1px solid #ccc",
            "show_if": "options.apply_to_record=='false'",
            "repeat": false,
            "fields": {
              "options.apply_to_group_columns__all_but_selected": {
                "type": "checkbox",
                "label": "All but selected",
                "val": "false",
                "isOn": "true",
                "isOff": "false",
                "breakLine": true
              },
              "options.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "width": "100%",
                "table": "table_id",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      },
      "options.target_cells": {
        "type": "fieldset",
        "label": "Define added Row(s)",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "repeat": true,
        "fields": {
          "column": {
            "type": "select",
            "label": "Select Column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "formula_type": {
            "type": "select",
            "label": "Formula Type",
            "required": true,
            "options": {
              "copy_selected": {
                "label": "Copy Selected"
              },
              "static_value": {
                "label": "Static Value"
              },
              "numeric_formula": {
                "label": "Numeric Formula"
              },
              "text_formula": {
                "label": "Text Formula"
              }
            },
            "val": "copy_selected"
          },
          "static_value": {
            "type": "text",
            "label": "Value",
            "show_if": "this.formula_type=='static_value'",
            "val": ""
          },
          "numeric_formula": {
            "type": "text",
            "label": "Formula, e.g. [Column1] + 2 * ([Row-1:Column3] - [Column1])",
            "show_if": "this.formula_type=='numeric_formula'",
            "val": "",
            "style": "width: 100%"
          },
          "rounding": {
            "type": "select",
            "label": "Rounding",
            "show_if": "this.formula_type=='numeric_formula'",
            "required": true,
            "options": {
              "no_rounding": {
                "label": "No rounding"
              },
              "0": {
                "label": "0 digits"
              },
              "1": {
                "label": "1 digits"
              },
              "2": {
                "label": "2 digits"
              },
              "3": {
                "label": "3 digits"
              },
              "4": {
                "label": "4 digits"
              },
              "5": {
                "label": "5 digits"
              },
              "6": {
                "label": "6 digits"
              },
              "7": {
                "label": "7 digits"
              },
              "8": {
                "label": "8 digits"
              },
              "9": {
                "label": "9 digits"
              }
            },
            "val": "no_rounding"
          },
          "text_formula": {
            "type": "text",
            "label": "Formula, e.g. [firstName] + ' ' + [lastName] + ' ' + [Row-1:Column3]",
            "show_if": "this.formula_type=='text_formula'",
            "val": "",
            "style": "width: 100%"
          },
          "use_multi_row": {
            "type": "checkbox",
            "label": "Multi-Row Options",
            "show_if": "options.position!='add_row_after_each_group' && (this.formula_type=='numeric_formula' || this.formula_type=='text_formula')",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-right: 15px"
          },
          "if_row_not_exist": {
            "type": "select",
            "label": "If referred row not exist",
            "show_if": "options.position!='add_row_after_each_group' && this.use_multi_row=='true' && (this.formula_type=='numeric_formula' || this.formula_type=='text_formula')",
            "required": true,
            "options": {
              "empty": {
                "label": "Empty or 0"
              },
              "closest": {
                "label": "Closest Row Value"
              }
            },
            "val": "empty",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        },
        "breakLine": true
      },
      "options.set_date_column": {
        "type": "checkbox",
        "label": "Apply time-shift to a selected date column",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 20px; margin-right: 15px",
        "breakLine": true
      },
      "options.date_column": {
        "type": "select",
        "label": "Select Date Column",
        "show_if": "options.set_date_column=='true'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "options.period_shift.number": {
        "type": "text",
        "label": "Period Shift",
        "show_if": "options.set_date_column=='true'",
        "required": true,
        "val": "0"
      },
      "options.period_shift.period": {
        "type": "select",
        "label": "Select Period",
        "show_if": "options.set_date_column=='true'",
        "options": {
          "day": {
            "label": "Days"
          },
          "week": {
            "label": "Weeks"
          },
          "month": {
            "label": "Months"
          },
          "year": {
            "label": "Years"
          }
        },
        "val": "month"
      }
    }
  }
}
,
"/TableTagsOptions.json/TableTagsOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.remove_all_tags": {
        "type": "checkbox",
        "label": "Remove all Tags",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.tags_config": {
        "type": "fieldset",
        "label": "Add/Remove tag configuration",
        "show_if": "options.remove_all_tags == 'false'",
        "repeat": true,
        "fields": {
          "operation_type": {
            "type": "select",
            "label": "Operation",
            "required": true,
            "options": {
              "add_tag": {
                "label": "Add Tag"
              },
              "remove_tag": {
                "label": "Remove Tag"
              }
            },
            "val": "add_tag"
          },
          "tag_text": {
            "type": "text",
            "label": "Tag Text",
            "val": "",
            "required": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        },
        "breakLine": true
      }
    }
  }
}
,
"/TranslateOptions.json/TranslateOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.target_lang": {
        "type": "select",
        "label": "Select Target Language",
        "options": {
          "BG": {
            "label": "Bulgarian"
          },
          "CS": {
            "label": "Czech"
          },
          "DA": {
            "label": "Danish"
          },
          "DE": {
            "label": "German"
          },
          "EL": {
            "label": "Greek"
          },
          "EN-GB": {
            "label": "English (British)"
          },
          "EN-US": {
            "label": "English (American)"
          },
          "EN": {
            "label": "English"
          },
          "ES": {
            "label": "Spanish"
          },
          "ET": {
            "label": "Estonian"
          },
          "FI": {
            "label": "Finnish"
          },
          "FR": {
            "label": "French"
          },
          "HU": {
            "label": "Hungarian"
          },
          "IT": {
            "label": "Italian"
          },
          "JA": {
            "label": "Japanese"
          },
          "LT": {
            "label": "Lithuanian"
          },
          "LV": {
            "label": "Latvian"
          },
          "NL": {
            "label": "Dutch"
          },
          "PL": {
            "label": "Polish"
          },
          "PT-PT": {
            "label": "Portuguese (all Portuguese varieties excluding Brazilian Portuguese)"
          },
          "PT-BR": {
            "label": "Portuguese (Brazilian)"
          },
          "PT": {
            "label": "Portuguese"
          },
          "RO": {
            "label": "Romanian"
          },
          "RU": {
            "label": "Russian"
          },
          "SK": {
            "label": "Slovak"
          },
          "SL": {
            "label": "Slovenian"
          },
          "SV": {
            "label": "Swedish"
          },
          "ZH": {
            "label": "Chinese"
          }
        },
        "val": "DE",
        "breakLine": true
      },
      "options.help_1": {
        "type": "text",
        "label": "",
        "show_if": "options.target_lang=='EN'",
        "val": "English (unspecified variant for backward compatibility; please select EN-GB or EN-US instead)",
        "disabled": true,
        "md_no_resize": false,
        "rows": 2,
        "width": "100%"
      },
      "options.help_2": {
        "type": "text",
        "label": "",
        "show_if": "options.target_lang=='PT'",
        "val": "Portuguese (unspecified variant for backward compatibility; please select PT-PT or PT-BR instead)",
        "disabled": true,
        "md_no_resize": false,
        "rows": 2,
        "width": "100%"
      },
      "options.select_source_lang": {
        "type": "checkbox",
        "label": "Select Source Language",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "options.source_lang": {
        "type": "select",
        "label": "Source Language",
        "show_if": "options.select_source_lang == 'true'",
        "options": {
          "BG": {
            "label": "Bulgarian"
          },
          "CS": {
            "label": "Czech"
          },
          "DA": {
            "label": "Danish"
          },
          "DE": {
            "label": "German"
          },
          "EL": {
            "label": "Greek"
          },
          "EN": {
            "label": "English"
          },
          "ES": {
            "label": "Spanish"
          },
          "ET": {
            "label": "Estonian"
          },
          "FI": {
            "label": "Finnish"
          },
          "FR": {
            "label": "French"
          },
          "HU": {
            "label": "Hungarian"
          },
          "IT": {
            "label": "Italian"
          },
          "JA": {
            "label": "Japanese"
          },
          "LT": {
            "label": "Lithuanian"
          },
          "LV": {
            "label": "Latvian"
          },
          "NL": {
            "label": "Dutch"
          },
          "PL": {
            "label": "Polish"
          },
          "PT": {
            "label": "Portuguese"
          },
          "RO": {
            "label": "Romanian"
          },
          "RU": {
            "label": "Russian"
          },
          "SK": {
            "label": "Slovak"
          },
          "SL": {
            "label": "Slovenian"
          },
          "SV": {
            "label": "Swedish"
          },
          "ZH": {
            "label": "Chinese"
          }
        },
        "val": "DE",
        "breakLine": true
      },
      "options.help_3": {
        "type": "text",
        "label": "",
        "val": "If Source Language is omitted, we will attempt to detect the language of the text and translate it.",
        "disabled": true,
        "md_no_resize": false,
        "rows": 2,
        "width": "100%"
      },
      "options.new_column": {
        "type": "checkbox",
        "label": "New Column",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "options.new_col_name": {
        "type": "text",
        "label": "New column name",
        "show_if": "options.new_column=='true'",
        "val": "Translated",
        "required": true,
        "style": "margin-left: 15px",
        "breakLine": true
      }
    }
  }
}
,
"/TablePermissionInput.json/TablePermissionInput.json": {
  "input": {
    "type": "fieldset",
    "label": "Select Input Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "input.table_or_flow": {
        "type": "hidden",
        "val": "set_table_permissions"
      },
      "input.table_id": {
        "type": "select",
        "label": "Select Table",
        "show_if": "input.table_or_flow=='set_table_permissions'",
        "bind": "TABLES",
        "empty": "",
        "required": true
      }
    }
  }
}
,
"/InjectByTableOptions.json/InjectByTableOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Replacement Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.task_code": {
        "type": "hidden",
        "val": "find_replace_text"
      },
      "options.incoming_value_to_replace.type": {
        "type": "hidden",
        "val": "replacement_table"
      },
      "options.replace_table.table_id": {
        "type": "select",
        "label": "Replacement Table",
        "bind": "TABLES",
        "required": true
      },
      "options.replace_table.find_column": {
        "type": "select",
        "label": "Find column",
        "table": "options.replace_table.table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "options.replace_table.replace_with_column": {
        "type": "select",
        "label": "Replace With column",
        "table": "options.replace_table.table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "options.incoming_value_to_replace.partial_match": {
        "type": "select",
        "label": "Partial Match",
        "options": {
          "full_match": {
            "label": "Full match"
          },
          "full_and_partial_match": {
            "label": "Full and partial match"
          },
          "partial_match_only": {
            "label": "Partial match only"
          }
        },
        "val": "full_and_partial_match"
      },
      "options.incoming_value_to_replace.case_sensitivity": {
        "type": "select",
        "label": "Case Sensitivity",
        "options": {
          "sensitive": {
            "label": "Case Sensitive"
          },
          "insensitive": {
            "label": "Case Insensitive"
          }
        },
        "val": "sensitive",
        "breakLine": true
      },
      "options.apply_framing_condition": {
        "type": "checkbox",
        "label": "Apply framing conditions",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "apply_framing_condition_box": {
        "type": "fieldset",
        "label": "Framing conditions",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.apply_framing_condition=='true'",
        "repeat": false,
        "fields": {
          "options.framing_condition.pattern": {
            "type": "select",
            "label": "Framing conditions",
            "required": true,
            "options": {
              "name_x": {
                "label": "name : x"
              },
              "curly_brackets": {
                "label": "{x}"
              },
              "square_brackets": {
                "label": "[x]"
              },
              "round_brackets": {
                "label": "(x)"
              },
              "tag_x": {
                "label": "&lt;tag&gt;x&lt;/tag&gt;"
              },
              "f_x": {
                "label": "f(x)"
              },
              "f_x_bracket": {
                "label": "f(){x}"
              }
            },
            "val": "name_x"
          },
          "options.framing_condition.name_x_name": {
            "type": "text",
            "label": "Name",
            "show_if": "options.framing_condition.pattern=='name_x'",
            "val": "",
            "required": true
          },
          "options.framing_condition.tag_x_tag": {
            "type": "text",
            "label": "Tag",
            "show_if": "options.framing_condition.pattern=='tag_x'",
            "val": "",
            "required": true
          },
          "options.framing_condition.parantheses": {
            "type": "select",
            "label": "Parantheses",
            "required": true,
            "options": {
              "optional": {
                "label": "Optional parantheses"
              },
              "including": {
                "label": "Including parantheses"
              },
              "no": {
                "label": "No parantheses"
              }
            },
            "val": "optional"
          },
          "options.framing_condition.sel_parantheses": {
            "type": "select",
            "label": "Select Parantheses",
            "show_if": "options.framing_condition.parantheses=='optional' || options.framing_condition.parantheses=='including'",
            "required": true,
            "options": {
              "p1": {
                "label": "'"
              },
              "p2": {
                "label": "\""
              },
              "p3": {
                "label": "`"
              },
              "p4": {
                "label": "´"
              }
            },
            "multiple": true,
            "val": ["p1", "p2", "p3", "p4"],
            "breakLine": true
          },
          "options.framing_condition.allow_whitespace": {
            "type": "checkbox",
            "label": "Allow whitespace",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          }
        }
      },
      "options.apply_section_by_section": {
        "type": "checkbox",
        "label": "Section by Section",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px; margin-right: 15px"
      },
      "options.section_columns": {
        "type": "select",
        "label": "Section column(s)",
        "show_if": "options.apply_section_by_section=='true'",
        "table": "table_id",
        "bind": "COLUMNS",
        "multiple": true,
        "required": true,
        "breakLine": true
      },
      "options.use_replace_table_filter": {
        "type": "checkbox",
        "label": "Use Filter on \"Replace With\" Table",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "replace_table_filter_option_box": {
        "type": "fieldset",
        "label": "\"Replace With\" Table Filter Options",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.use_replace_table_filter=='true'",
        "repeat": false,
        "fields": {
          "options.replace_table_filter_option.filter": {
            "type": "fieldset",
            "label": "Add Filter Conditions on \"Replace With\" Table",
            "style": "border-radius: 3px; border: 1px solid #ccc",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if" :  "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if" :  "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "options.replace_with.table",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table_id": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table_id",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.replace_table_filter_option.apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record on \"Replace With\" Table",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "replacement_table_filter_option_apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group on \"Replace With\" Table",
            "style": "border-radius: 3px; border: 1px solid #ccc",
            "show_if": "options.replace_table_filter_option.apply_to_record=='false'",
            "repeat": false,
            "fields": {
              "options.replacement_table_filter_option.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "required": true,
                "width": "100%",
                "table": "options.replace_table.table_id",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      }
    }
  }
},
"/PdfReProByTableOptions.json/PdfReProByTableOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.script_name": {
        "type": "hidden",
        "val": "PdfReProByTable"
      },
      "options.type": {
        "type": "hidden",
        "val": "create"
      },
      "options.template_id": {
        "type": "select",
        "label": "Document Type",
        "options": {
          "id_bd7c7b52449752d78436f5aaa893abd36e96b7a9": {
            "label": "Cover Letter"
          },
          "id_17b533f4f9c5d2960ba67455a81ef22918106d1e": {
            "label": "Appointment or Removal"
          }
        },
        "val": "id_bd7c7b52449752d78436f5aaa893abd36e96b7a9",
        "required": true
      },
      "options.lang": {
        "type": "select",
        "label": "Document Language",
        "show_if": "options.type=='create'",
        "options": {
          "standard": {
            "label": "Standard Language"
          },
          "einsprachig": {
            "label": "einsprachig"
          },
          "lt": {
            "label": "lt"
          },
          "it": {
            "label": "it"
          },
          "hu": {
            "label": "hu"
          },
          "hr": {
            "label": "hr"
          },
          "gl": {
            "label": "gl"
          },
          "ga": {
            "label": "ga"
          },
          "fr": {
            "label": "fr"
          },
          "fi": {
            "label": "fi"
          },
          "bg": {
            "label": "bg"
          },
          "ca": {
            "label": "ca"
          },
          "cs": {
            "label": "cs"
          },
          "cy": {
            "label": "cy"
          },
          "da": {
            "label": "da"
          },
          "de": {
            "label": "de"
          },
          "el": {
            "label": "el"
          },
          "en": {
            "label": "en"
          },
          "es": {
            "label": "es"
          },
          "ey": {
            "label": "et"
          },
          "eu": {
            "label": "eu"
          }
        },
        "val": "de",
        "required": true,
        "breakLine": true
      },
      "options.where_to_create": {
        "type": "select",
        "label": "Where to create",
        "options": {
          "only_open_in_browser": {
            "label": "Only open PDF in browser"
          },
          "only_export_to_cloud": {
            "label": "Only export to cloud"
          },
          "both_export_to_cloud_and_open_in_browser": {
            "label": "Both export to cloud and open pdf in browser"
          }
        },
        "val": "only_open_in_browser",
        "required": true
      },
      "options.configure_by_table_help": {
        "type": "text",
        "label": "",
        "val": "Table Structure ( Document | List Name | List Item | Field Name | Field Value )",
        "disabled": true,
        "width": "100%"
      },
      "options.input_table": {
        "type": "select",
        "label": "Select Table",
        "show_if": "options.type=='create'",
        "bind": "TABLES",
        "empty": "",
        "required": true,
        "breakLine": true
      },
      "options.webservice": {
        "type": "select",
        "label": "Select Webservice",
        "show_if": "options.type=='create'",
        "options": {
          "ms_one_drive": {
            "label": "Microsoft OneDrive"
          },
          "dropbox": {
            "label": "Dropbox"
          },
          "google_drive": {
            "label": "Google Drive"
          }
        },
        "val": "ms_one_drive",
        "required": true,
        "breakLine": true
      },
      "export_link_token_frame": {
        "type": "fieldset",
        "label": "Export Link",
        "show_if": "options.type=='create'",
        "repeat": false,
        "fields": {
          "options.github_url": {
            "type": "text",
            "label": "Enter link e.g. https://github.com/zippydoc/test",
            "show_if": "options.webservice=='github'",
            "val": "",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "options.export_dir": {
            "type": "text",
            "label": "Enter dir e.g. /MyZippyDocFiles/SubDir/",
            "show_if": "options.webservice!='github'",
            "val": "",
            "width": "100%",
            "breakLine": true
          },
          "options.github_token": {
            "type": "text",
            "label": "Specify the Github personal access token that has write permission:",
            "show_if": "options.webservice=='github'",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "options.google_authorization_code": {
            "type": "text",
            "label": "Google OAuth Authorization Code with scope https://www.googleapis.com/auth/drive. You can get it here https://developers.google.com/oauthplayground/",
            "show_if": "options.webservice=='google_drive'",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "options.dropbox_authorization_code": {
            "type": "text",
            "label": "Dropbox Authorization Code. You can get it here https://www.dropbox.com/oauth2/authorize?client_id=9i7woztjp94jrkw&response_type=code",
            "show_if": "options.webservice=='dropbox'",
            "required": true,
            "width": "100%",
            "breakLine": true
          }
        }
      }
    }
  }
},
"/TestOptions.json/TestOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "Select Options",
    "repeat": false,
    "fields": {
      "options.input_table": {
        "type": "select",
        "label": "Select Table",
        "bind": "TABLES",
        "empty": "",
        "required": true,
        "breakLine": true
      },
      "options.field_name_col": {
        "type": "select",
        "label": "Column 1",
        "required": true,
        "table": "options.input_table",
        "bind": "COLUMNS"
      },
      "options.field_name_selected_rows": {
        "type": "select",
        "label": "Rows 1",
        "multiple": true,
        "unique_values_only": true,
        "table": "options.input_table",
        "column_list": "options.field_name_col",
        "bind": "RECORDS",
        "required": true,
        "breakLine": true
      },
      "options.field_value_col": {
        "type": "select",
        "label": "Column 2",
        "required": true,
        "table": "options.input_table",
        "bind": "COLUMNS"
      },
      "options.field_value_selected_rows": {
        "type": "select",
        "label": "Rows 2",
        "multiple": true,
        "unique_values_only": true,
        "table": "options.input_table",
        "column_list": "options.field_value_col",
        "bind": "RECORDS",
        "required": true,
        "breakLine": true
      }
    }
  }
},
"/SetPointsByTableInput.json/SetPointsByTableInput.json": {
  "input": {
    "type": "fieldset",
    "label": "Select Input Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "table_id": {
        "type": "select",
        "label": "Select Table",
        "bind": "TABLES",
        "empty": "",
        "required": true,
        "breakLine": true
      },
      "remove_input_table_after_processing": {
        "type": "hidden",
        "val": "false"
      },
      "is_word": {
        "type": "hidden",
        "val": "false"
      },
      "info1": {
        "type": "text",
        "label": "",
        "val": "Input Table Format: userID | points",
        "disabled": true,
        "style": "width: 100%"
      }
    }
  }
}
,
"/SelectColumnOptions.json/SelectColumnOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.select_all_columns": {
        "type": "checkbox",
        "label": "Select All",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "options.output_columns": {
        "type": "fieldset",
        "label": "Add Output Columns",
        "show_if": "options.select_all_columns=='false'",
        "repeat": true,
        "fields": {
          "field_name": {
            "type": "select",
            "label": "Select Column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "order": {
            "type": "select",
            "label": "Order",
            "options": {
              "-": {
                "label": "-"
              },
              "asc": {
                "label": "Asc"
              },
              "desc": {
                "label": "Desc"
              }
            },
            "val": "-"
          },
          "is_rename": {
            "type": "checkbox",
            "label": "Rename",
            "val": "false",
            "isOn": "true",
            "isOff": "false"
          },
          "rename": {
            "show_if": "this.is_rename == 'true'",
            "type": "text",
            "required": true,
            "minLength": 1,
            "maxLength": 255,
            "label": "New Column Name",
            "style": "margin-left: 10px"
          },
          "format__category": {
            "type": "select",
            "label": "Display Format",
            "required": true,
            "options": {
              "standard": {
                "label": "Standard"
              },
              "number": {
                "label": "Number"
              },
              "percentage": {
                "label": "Percentage"
              },
              "text": {
                "label": "Text"
              },
              "date": {
                "label": "Date"
              },
              "currency": {
                "label": "Currency"
              }
            },
            "val": "standard"
          },
          "format__rounding": {
            "type": "select",
            "label": "Decimal Places for display",
            "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
            "required": true,
            "options": {
              "no_rounding": {
                "label": "No rounding"
              },
              "0": {
                "label": "0 digits"
              },
              "1": {
                "label": "1 digits"
              },
              "2": {
                "label": "2 digits"
              },
              "3": {
                "label": "3 digits"
              },
              "4": {
                "label": "4 digits"
              },
              "5": {
                "label": "5 digits"
              },
              "6": {
                "label": "6 digits"
              },
              "7": {
                "label": "7 digits"
              },
              "8": {
                "label": "8 digits"
              },
              "9": {
                "label": "9 digits"
              }
            },
            "val": "2"
          },
          "format__use_1000_separator": {
            "type": "checkbox",
            "label": "Use 1000 Separator(.)",
            "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
            "val": "true",
            "isOn": "true",
            "isOff": "false"
          },
          "format__currency_symbol": {
            "type": "select",
            "label": "Symbol",
            "show_if": "this.format__category=='currency'",
            "required": true,
            "options": {
              "dollar": {
                "label": "$"
              },
              "euro": {
                "label": "€"
              },
              "pound": {
                "label": "£"
              }
            },
            "val": "dollar"
          },
          "format__date_format": {
            "type": "select",
            "label": "Type",
            "show_if": "this.format__category=='date'",
            "required": true,
            "options": {
              "mm/dd/yyyy": {
                "label": "3/14/2012"
              },
              "D, M dd, Y": {
                "label": "Wednesday, March 14, 2012"
              },
              "yyyy-mm-dd": {
                "label": "2012-03-14"
              },
              "m.dd.yyyy": {
                "label": "3.14.2012"
              },
              "m.dd.yy": {
                "label": "3.14.12"
              },
              "dd.m.yyyy": {
                "label": "14.3.2012"
              },
              "dd.m.yy": {
                "label": "14.3.12"
              },
              "M dd, Y": {
                "label": "March 14, 2012"
              },
              "dd-mm-yyyy": {
                "label": "14-03-2012"
              },
              "mm-dd-yyyy": {
                "label": "03-14-2012"
              },
              "dd-mm-yy": {
                "label": "14-03-12"
              },
              "mm-dd-yy": {
                "label": "03-14-12"
              }
            },
            "val": "mm/dd/yyyy",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        },
        "breakLine": true,
        "style": "margin-bottom: 20px"
      }
    }
  }
}
,
"/ImportFromDirOptions.json/ImportFromDirOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Select Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.from": {
        "type": "hidden",
        "val": "web"
      },
      "options.webservice": {
        "type": "select",
        "label": "Select Webservice",
        "options": {
          "github": {
            "label": "Github"
          },
          "ms_one_drive": {
            "label": "Microsoft OneDrive"
          },
          "dropbox": {
            "label": "Dropbox"
          },
          "google_drive": {
            "label": "Google Drive (Coming soon)"
          }
        },
        "val": "github",
        "required": true,
        "breakLine": true
      },
      "options.output_format": {
        "type": "select",
        "label": "Select Type",
        "options": {
          "csv_table": {
            "label": "CSV-Table"
          },
          "line_by_line": {
            "label": "Line by Line"
          },
          "word_by_word": {
            "label": "Text"
          },
          "file_list": {
            "label": "File List"
          }
        },
        "val": "csv_table",
        "required": true
      },
      "options.word_pattern_type": {
        "type": "select",
        "label": "Word Pattern",
        "show_if": "options.output_format=='word_by_word' && options.specify_word_pattern=='true'",
        "options": {
          "regex": {
            "label": "Regular Expression"
          }
        },
        "val": "regex",
        "required": true
      },
      "options.word_pattern_regex": {
        "type": "text",
        "label": "Regular Expression",
        "show_if": "options.output_format=='word_by_word' && options.specify_word_pattern=='true' && options.word_pattern_type=='regex'",
        "required": true,
        "val": "[a-z][1-9]",
        "breakLine": true
      },
      "options.column_setting": {
        "type": "checkbox",
        "label": "Column Settings",
        "show_if": "options.output_format!='file_list'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "column_setting_frame": {
        "type": "fieldset",
        "label": "Column Settings",
        "show_if": "options.output_format!='file_list' && options.column_setting=='true'",
        "repeat": false,
        "fields": {
          "options.add_row_column": {
            "type": "checkbox",
            "label": "Add Row Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_word_count_column": {
            "type": "checkbox",
            "label": "Add 'Word Count' Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_word_nonword_column": {
            "type": "checkbox",
            "label": "Add 'Word & Non-Word' Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_section_column": {
            "type": "checkbox",
            "label": "Add Section Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "section_column_types_frame": {
            "type": "fieldset",
            "label": "Section Column Types",
            "show_if": "options.output_format=='word_by_word' && options.add_section_column=='true'",
            "repeat": false,
            "fields": {
              "options.section_columns.add_paragraph_section_column": {
                "type": "checkbox",
                "label": "Paragraph",
                "val": "false",
                "isOn": "true",
                "isOff": "false",
                "breakLine": true
              },
              "options.section_columns.add_custom_section_column": {
                "type": "checkbox",
                "label": "Custom Section Delimiter",
                "val": "false",
                "isOn": "true",
                "isOff": "false"
              },
              "options.section_columns.custom_delimiter": {
                "type": "text",
                "label": "Delimiter(1 character)",
                "show_if": "options.section_columns.add_custom_section_column=='true'",
                "maxLength": 1,
                "required": true,
                "breakLine": true
              },
              "options.section_columns.add_brackets_punctuation_section_column": {
                "type": "checkbox",
                "label": "Brackets and Punctuation",
                "val": "false",
                "isOn": "true",
                "isOff": "false"
              },
              "options.section_columns.brackets_punctuation_section_column_type": {
                "type": "select",
                "label": "Brackets Type",
                "show_if": "options.section_columns.add_brackets_punctuation_section_column=='true'",
                "options": {
                  "nesting_structure": {
                    "label": "Nesting Structure"
                  },
                  "inner_bracket": {
                    "label": "Inner Bracket"
                  },
                  "brackets_only": {
                    "label": "Brackets Only"
                  },
                  "show_all": {
                    "label": "Show All"
                  }
                },
                "val": "show_all",
                "required": true,
                "breakLine": true
              }
            }
          },
          "options.add_filename_column": {
            "type": "checkbox",
            "label": "Add Column for File Name",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "options.add_filepath_column": {
            "type": "checkbox",
            "label": "Add Column for File Path",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          }
        }
      },
      "options.is_cloud_dir": {
        "type": "hidden",
        "val": "true"
      },
      "if_dir_frame": {
        "type": "fieldset",
        "label": "Directory Import Options",
        "show_if": "options.output_format!='file_list' && options.is_cloud_dir=='true'",
        "repeat": false,
        "fields": {
          "options.unify_in_one_table": {
            "type": "checkbox",
            "label": "Unify in one table",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.suffix": {
            "type": "select",
            "label": "Output tables suffix",
            "show_if": "options.unify_in_one_table=='false'",
            "options": {
              "number": {
                "label": "Number"
              },
              "filename": {
                "label": "Filename"
              }
            },
            "val": "number",
            "required": true,
            "breakLine": true
          },
          "options.include_subdir": {
            "type": "checkbox",
            "label": "Include Subdirectories",
            "show_if": "options.output_format!='file_list' && options.is_cloud_dir=='true'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true,
            "style": "margin-top: 10px"
          }
        }
      },
      "options.file_list.include_subdir": {
        "type": "checkbox",
        "label": "Include Subdirectories",
        "show_if": "options.output_format=='file_list'",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true,
        "style": "margin-top: 10px"
      },
      "options.file_list.add_change_date_column": {
        "type": "checkbox",
        "label": "Add Change Date Column",
        "show_if": "options.output_format=='file_list'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  },
  "import_link_token_frame": {
    "type": "fieldset",
    "label": "Import Link",
    "repeat": false,
    "fields": {
      "options.link_csv_file": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test/blob/main/example.csv",
        "show_if": "options.webservice=='github' && options.is_cloud_dir=='false' && options.output_format=='csv_table'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.link_text_file": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test/blob/main/example.txt(json, csv, etc)",
        "show_if": "options.webservice=='github' && options.is_cloud_dir=='false' && options.output_format!='csv_table' && options.output_format!='file_list'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.one_drive.file_path": {
        "type": "text",
        "label": "Enter path to file e.g. ZippyDoc/Subdir1/test.txt",
        "show_if": "options.webservice=='ms_one_drive' && options.output_format!='file_list' && options.is_cloud_dir=='false'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox.file_path": {
        "type": "text",
        "label": "Enter path to file e.g. ZippyDoc/Subdir1/test.txt",
        "show_if": "options.webservice=='dropbox' && options.output_format!='file_list' && options.is_cloud_dir=='false'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dir_path_filter": {
        "type": "fieldset",
        "label": "Import Path and File Filter",
        "show_if": "options.output_format=='file_list' || options.is_cloud_dir=='true'",
        "repeat": true,
        "fields": {
          "github__link_directory": {
            "type": "text",
            "label": "Enter link e.g. https://github.com/zippydoc/test",
            "show_if": "options.webservice=='github'",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "one_drive__dir_path": {
            "type": "text",
            "label": "Enter path to dir e.g. ZippyDoc/Subdir1",
            "show_if": "options.webservice=='ms_one_drive'",
            "width": "100%",
            "breakLine": true
          },
          "dropbox__dir_path": {
            "type": "text",
            "label": "Enter path to dir e.g. ZippyDoc/Subdir1",
            "show_if": "options.webservice=='dropbox'",
            "width": "100%",
            "breakLine": true
          },
          "google_drive__dir_path": {
            "type": "text",
            "label": "Enter path to dir",
            "show_if": "options.webservice=='google_drive'",
            "width": "100%",
            "breakLine": true
          },
          "dir_filter__filter_type": {
            "type": "select",
            "label": "Filter Type",
            "options": {
              "all": {
                "label": "All"
              },
              "contains": {
                "label": "Contains"
              },
              "starts_with": {
                "label": "Starts With"
              },
              "ends_with": {
                "label": "Ends With"
              },
              "regex": {
                "label": "Regular Expression"
              }
            },
            "val": "all",
            "required": true
          },
          "dir_filter__filter_string": {
            "type": "text",
            "label": "Filter",
            "show_if": "this.dir_filter__filter_type!='all'",
            "required": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.is_github_private": {
        "type": "checkbox",
        "label": "Github repository is private",
        "show_if": "options.webservice=='github'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "options.github_token": {
        "type": "text",
        "label": "Github personal access token",
        "show_if": "options.webservice=='github' && options.is_github_private=='true'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox.auth_code": {
        "type": "text",
        "label": "Dropbox Authorization Code",
        "show_if": "options.webservice=='dropbox'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.google_drive.access_token": {
        "type": "text",
        "label": "Google Drive Access Token",
        "show_if": "options.webservice=='google_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      }
    }
  }
}
,
"/DCDemographicsOptions.json/DCDemographicsOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.all_countries": {
        "type": "hidden",
        "val": "false"
      },
      "options.stat_vars": {
        "type": "fieldset",
        "label": "Statistics data category(s)",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "repeat": true,
        "fields": {
          "stat_var_name": {
            "type": "select",
            "label": "Statistics Data",
            "required": true,
            "options": {
              "Count_Person": {
                "label": "Population"
              },
              "GrowthRate_Count_Person": {
                "label": "Population Growth Rate"
              },
              "Count_Person_PerArea": {
                "label": "Population Density"
              },
              "Count_Person_IsInternetUser_PerCapita": {
                "label": "Percent of Internet Users"
              },
              "Count_Person_ResidingLessThan5MetersAboveSeaLevel_AsFractionOf_Count_Person": {
                "label": "Percent of Population Living in Areas Below 5 Meters Elevation"
              },
              "Count_Person_Rural": {
                "label": "Rural Population"
              },
              "Count_Person_Urban": {
                "label": "Urban Population"
              }
            }
          },
          "per_capita": {
            "type": "checkbox",
            "label": "Per capita",
            "show_if": "false",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "help_Count_Person_ResidingLessThan5MetersAboveSeaLevel_AsFractionOf_Count_Person": {
            "type": "textarea",
            "label": "",
            "show_if": "this.stat_var_name=='Count_Person_ResidingLessThan5MetersAboveSeaLevel_AsFractionOf_Count_Person'",
            "val": "Percentage of the total population living in areas where the elevation is 5 meters or less. Center for International Earth Science Information Network (CIESIN)/Columbia University. 2013. Urban-Rural Population and Land Area Estimates Version 2. Palisades, NY: NASA Socioeconomic Data and Applications Center (SEDAC). http://sedac.ciesin.columbia.edu/data/set/lecz-urban-rural-population-land-area-estimates-v2.",
            "md_no_resize": false,
            "rows": 6,
            "disabled": true,
            "width": "100%"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.output_as_chart": {
        "type": "checkbox",
        "label": "Output a Graph",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
}
,
"/FormattingOptions.json/FormattingOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "all_columns": {
        "type": "checkbox",
        "label": "All Columns",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-right: 15px"
      },
      "all_column.format__category": {
        "type": "select",
        "label": "Display Format",
        "required": true,
        "options": {
          "standard": {
            "label": "Standard"
          },
          "number": {
            "label": "Number"
          },
          "percentage": {
            "label": "Percentage"
          },
          "text": {
            "label": "Text"
          },
          "date": {
            "label": "Date"
          },
          "currency": {
            "label": "Currency"
          }
        },
        "val": "standard",
        "show_if": "all_columns=='true'"
      },
      "all_column.format__rounding": {
        "type": "select",
        "label": "Decimal Places for display",
        "show_if": "all_columns=='true' && (all_column.format__category=='number' || all_column.format__category=='percentage' || all_column.format__category=='currency')",
        "required": true,
        "options": {
          "no_rounding": {
            "label": "No rounding"
          },
          "0": {
            "label": "0 digits"
          },
          "1": {
            "label": "1 digits"
          },
          "2": {
            "label": "2 digits"
          },
          "3": {
            "label": "3 digits"
          },
          "4": {
            "label": "4 digits"
          },
          "5": {
            "label": "5 digits"
          },
          "6": {
            "label": "6 digits"
          },
          "7": {
            "label": "7 digits"
          },
          "8": {
            "label": "8 digits"
          },
          "9": {
            "label": "9 digits"
          }
        },
        "val": "2"
      },
      "all_column.format__1000_separator": {
        "type": "select",
        "label": "1000 Separator",
        "show_if": "all_columns=='true' && (all_column.format__category=='number' || all_column.format__category=='percentage' || all_column.format__category=='currency')",
        "required": true,
        "options": {
          "no_1000_separator": {
            "label": "No 1000 Separator"
          },
          "period_1000_separator": {
            "label": "1000 Separator (.)"
          },
          "comma_1000_separator": {
            "label": "1000 Separator (,)"
          }
        },
        "val": "period_1000_separator"
      },
      "all_column.format__currency_symbol": {
        "type": "select",
        "label": "Symbol",
        "show_if": "all_columns=='true' && all_column.format__category=='currency'",
        "required": true,
        "options": {
          "dollar": {
            "label": "$"
          },
          "euro": {
            "label": "€"
          },
          "pound": {
            "label": "£"
          },
          "yen": {
            "label": "¥ (Yen, currency of Japan)"
          },
          "colon": {
            "label": "₡ (Colón, currency of Costa Rica)"
          },
          "naira": {
            "label": "₦ (Naira, currency of Nigeria)"
          },
          "rupee": {
            "label": "₨ (Rupee, currency of India)"
          },
          "rupie": {
            "label": "₹ (Rupee, currency of India)"
          },
          "won": {
            "label": "₩ (Won, currency in South Korea and North Korea)"
          },
          "hebrew": {
            "label": "₪ (Currency of Israel)"
          },
          "dong": {
            "label": "₫ (Currency of Vietnam)"
          },
          "kip": {
            "label": "₭ (Kip, currency of Laos)"
          },
          "mongolia": {
            "label": "₮ (Currency of Mongolia)"
          },
          "peso": {
            "label": "₱ (Peso, currency of the Philippines)"
          },
          "guarani": {
            "label": "₲ (Guaraní, currency of Paraguay)"
          },
          "hryvnia": {
            "label": "₴ (Hryvnia, currency of Ukraine)"
          },
          "tenge": {
            "label": "₸ (Tenge, currency of Kazakhstan)"
          },
          "lira": {
            "label": "₺ (Lira, currency of Turkey)"
          },
          "manat": {
            "label": "₼ (Manat, currency of Azerbaijan)"
          },
          "rubles": {
            "label": "₽ (Rubles, currency of Russia)"
          },
          "lari": {
            "label": "₾ (Lari, currency of Georgia)"
          },
          "bitcoin": {
            "label": "₿ (Bitcoin, crypto currency)"
          }
        },
        "val": "dollar"
      },
      "all_column.format__date_format": {
        "type": "select",
        "label": "Type",
        "show_if": "all_columns=='true' && all_column.format__category=='date'",
        "required": true,
        "options": {
          "mm/dd/yyyy": {
            "label": "3/14/2012"
          },
          "D, M dd, Y": {
            "label": "Wednesday, March 14, 2012"
          },
          "yyyy-mm-dd": {
            "label": "2012-03-14"
          }
        },
        "val": "mm/dd/yyyy",
        "breakLine": true
      },
      "reformat_columns": {
        "type": "checkbox",
        "label": "Formatting Columns",
        "show_if": "false",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "columns": {
        "type": "fieldset",
        "label": "Select Columns",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "all_columns!='true'",
        "repeat": true,
        "fields": {
          "field_names": {
            "type": "select",
            "label": "Select Column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true,
            "multiple": true
          },
          "format__category": {
            "type": "select",
            "label": "Display Format",
            "required": true,
            "options": {
              "standard": {
                "label": "Standard"
              },
              "number": {
                "label": "Number"
              },
              "percentage": {
                "label": "Percentage"
              },
              "text": {
                "label": "Text"
              },
              "date": {
                "label": "Date"
              },
              "currency": {
                "label": "Currency"
              }
            },
            "val": "standard"
          },
          "format__rounding": {
            "type": "select",
            "label": "Decimal Places for display",
            "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
            "required": true,
            "options": {
              "no_rounding": {
                "label": "No rounding"
              },
              "0": {
                "label": "0 digits"
              },
              "1": {
                "label": "1 digits"
              },
              "2": {
                "label": "2 digits"
              },
              "3": {
                "label": "3 digits"
              },
              "4": {
                "label": "4 digits"
              },
              "5": {
                "label": "5 digits"
              },
              "6": {
                "label": "6 digits"
              },
              "7": {
                "label": "7 digits"
              },
              "8": {
                "label": "8 digits"
              },
              "9": {
                "label": "9 digits"
              }
            },
            "val": "2"
          },
          "format__1000_separator": {
            "type": "select",
            "label": "1000 Separator",
            "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
            "required": true,
            "options": {
              "no_1000_separator": {
                "label": "No 1000 Separator"
              },
              "period_1000_separator": {
                "label": "1000 Separator (.)"
              },
              "comma_1000_separator": {
                "label": "1000 Separator (,)"
              }
            },
            "val": "period_1000_separator"
          },
          "format__currency_symbol": {
            "type": "select",
            "label": "Symbol",
            "show_if": "this.format__category=='currency'",
            "required": true,
            "options": {
              "dollar": {
                "label": "$"
              },
              "euro": {
                "label": "€"
              },
              "pound": {
                "label": "£"
              },
              "yen": {
                "label": "¥ (Yen, currency of Japan)"
              },
              "colon": {
                "label": "₡ (Colón, currency of Costa Rica)"
              },
              "naira": {
                "label": "₦ (Naira, currency of Nigeria)"
              },
              "rupee": {
                "label": "₨ (Rupee, currency of India)"
              },
              "rupie": {
                "label": "₹ (Rupee, currency of India)"
              },
              "won": {
                "label": "₩ (Won, currency in South Korea and North Korea)"
              },
              "hebrew": {
                "label": "₪ (Currency of Israel)"
              },
              "dong": {
                "label": "₫ (Currency of Vietnam)"
              },
              "kip": {
                "label": "₭ (Kip, currency of Laos)"
              },
              "mongolia": {
                "label": "₮ (Currency of Mongolia)"
              },
              "peso": {
                "label": "₱ (Peso, currency of the Philippines)"
              },
              "guarani": {
                "label": "₲ (Guaraní, currency of Paraguay)"
              },
              "hryvnia": {
                "label": "₴ (Hryvnia, currency of Ukraine)"
              },
              "tenge": {
                "label": "₸ (Tenge, currency of Kazakhstan)"
              },
              "lira": {
                "label": "₺ (Lira, currency of Turkey)"
              },
              "manat": {
                "label": "₼ (Manat, currency of Azerbaijan)"
              },
              "rubles": {
                "label": "₽ (Rubles, currency of Russia)"
              },
              "lari": {
                "label": "₾ (Lari, currency of Georgia)"
              },
              "bitcoin": {
                "label": "₿ (Bitcoin, crypto currency)"
              }
            },
            "val": "dollar"
          },
          "format__date_format": {
            "type": "select",
            "label": "Type",
            "show_if": "this.format__category=='date'",
            "required": true,
            "options": {
              "mm/dd/yyyy": {
                "label": "3/14/2012"
              },
              "D, M dd, Y": {
                "label": "Wednesday, March 14, 2012"
              },
              "yyyy-mm-dd": {
                "label": "2012-03-14"
              },
              "m.dd.yyyy": {
                "label": "3.14.2012"
              },
              "m.dd.yy": {
                "label": "3.14.12"
              },
              "dd.m.yyyy": {
                "label": "14.3.2012"
              },
              "dd.m.yy": {
                "label": "14.3.12"
              },
              "M dd, Y": {
                "label": "March 14, 2012"
              },
              "dd-mm-yyyy": {
                "label": "14-03-2012"
              },
              "mm-dd-yyyy": {
                "label": "03-14-2012"
              },
              "dd-mm-yy": {
                "label": "14-03-12"
              },
              "mm-dd-yy": {
                "label": "03-14-12"
              }
            },
            "val": "mm/dd/yyyy",
            "breakLine": true
          },
          "delete": {
            "show_if": "this.field_name != ''",
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        },
        "breakLine": true
      },
      "info1": {
        "type": "textarea",
        "label": "",
        "val": "Please note, that Excel will treat “.” and  “,” in accordance with country settings",
        "disabled": true,
        "style": "width: 100%"
      },
      "all_labels": {
        "type": "checkbox",
        "label": "All Labels",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "show_if": "$table_id.numOfLabel >= 1",
        "style": "margin-right: 15px"
      },
      "all_label.format__category": {
        "type": "select",
        "label": "Display Format",
        "required": true,
        "options": {
          "standard": {
            "label": "Standard"
          },
          "number": {
            "label": "Number"
          },
          "percentage": {
            "label": "Percentage"
          },
          "text": {
            "label": "Text"
          },
          "date": {
            "label": "Date"
          },
          "currency": {
            "label": "Currency"
          }
        },
        "val": "standard",
        "show_if": "all_labels=='true'"
      },
      "all_label.format__rounding": {
        "type": "select",
        "label": "Decimal Places for display",
        "show_if": "all_labels=='true' && (all_label.format__category=='number' || all_label.format__category=='percentage' || all_label.format__category=='currency')",
        "required": true,
        "options": {
          "no_rounding": {
            "label": "No rounding"
          },
          "0": {
            "label": "0 digits"
          },
          "1": {
            "label": "1 digits"
          },
          "2": {
            "label": "2 digits"
          },
          "3": {
            "label": "3 digits"
          },
          "4": {
            "label": "4 digits"
          },
          "5": {
            "label": "5 digits"
          },
          "6": {
            "label": "6 digits"
          },
          "7": {
            "label": "7 digits"
          },
          "8": {
            "label": "8 digits"
          },
          "9": {
            "label": "9 digits"
          }
        },
        "val": "2"
      },
      "all_label.format__1000_separator": {
        "type": "select",
        "label": "1000 Separator",
        "show_if": "all_labels=='true' && (all_label.format__category=='number' || all_label.format__category=='percentage' || all_label.format__category=='currency')",
        "required": true,
        "options": {
          "no_1000_separator": {
            "label": "No 1000 Separator"
          },
          "period_1000_separator": {
            "label": "1000 Separator (.)"
          },
          "comma_1000_separator": {
            "label": "1000 Separator (,)"
          }
        },
        "val": "period_1000_separator"
      },
      "all_label.format__currency_symbol": {
        "type": "select",
        "label": "Symbol",
        "show_if": "all_labels=='true' && all_label.format__category=='currency'",
        "required": true,
        "options": {
          "dollar": {
            "label": "$"
          },
          "euro": {
            "label": "€"
          },
          "pound": {
            "label": "£"
          },
          "yen": {
            "label": "¥ (Yen, currency of Japan)"
          },
          "colon": {
            "label": "₡ (Colón, currency of Costa Rica)"
          },
          "naira": {
            "label": "₦ (Naira, currency of Nigeria)"
          },
          "rupee": {
            "label": "₨ (Rupee, currency of India)"
          },
          "rupie": {
            "label": "₹ (Rupee, currency of India)"
          },
          "won": {
            "label": "₩ (Won, currency in South Korea and North Korea)"
          },
          "hebrew": {
            "label": "₪ (Currency of Israel)"
          },
          "dong": {
            "label": "₫ (Currency of Vietnam)"
          },
          "kip": {
            "label": "₭ (Kip, currency of Laos)"
          },
          "mongolia": {
            "label": "₮ (Currency of Mongolia)"
          },
          "peso": {
            "label": "₱ (Peso, currency of the Philippines)"
          },
          "guarani": {
            "label": "₲ (Guaraní, currency of Paraguay)"
          },
          "hryvnia": {
            "label": "₴ (Hryvnia, currency of Ukraine)"
          },
          "tenge": {
            "label": "₸ (Tenge, currency of Kazakhstan)"
          },
          "lira": {
            "label": "₺ (Lira, currency of Turkey)"
          },
          "manat": {
            "label": "₼ (Manat, currency of Azerbaijan)"
          },
          "rubles": {
            "label": "₽ (Rubles, currency of Russia)"
          },
          "lari": {
            "label": "₾ (Lari, currency of Georgia)"
          },
          "bitcoin": {
            "label": "₿ (Bitcoin, crypto currency)"
          }
        },
        "val": "dollar"
      },
      "all_label.format__date_format": {
        "type": "select",
        "label": "Type",
        "show_if": "all_labels=='true' && all_label.format__category=='date'",
        "required": true,
        "options": {
          "mm/dd/yyyy": {
            "label": "3/14/2012"
          },
          "D, M dd, Y": {
            "label": "Wednesday, March 14, 2012"
          },
          "yyyy-mm-dd": {
            "label": "2012-03-14"
          }
        },
        "val": "mm/dd/yyyy",
        "breakLine": true
      },
      "reformat_rows": {
        "type": "checkbox",
        "label": "Formatting Labels",
        "show_if": "false",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px"
      },
      "rows": {
        "type": "fieldset",
        "label": "Select Labels",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "all_labels!='true'",
        "repeat": true,
        "fields": {
          "label_names": {
            "type": "select",
            "label": "Select Label",
            "table": "table_id",
            "bind": "LABELS",
            "required": true,
            "multiple": true
          },
          "format__category": {
            "type": "select",
            "label": "Display Format",
            "required": true,
            "options": {
              "standard": {
                "label": "Standard"
              },
              "number": {
                "label": "Number"
              },
              "percentage": {
                "label": "Percentage"
              },
              "text": {
                "label": "Text"
              },
              "date": {
                "label": "Date"
              },
              "currency": {
                "label": "Currency"
              }
            },
            "val": "standard"
          },
          "format__rounding": {
            "type": "select",
            "label": "Decimal Places for display",
            "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
            "required": true,
            "options": {
              "no_rounding": {
                "label": "No rounding"
              },
              "0": {
                "label": "0 digits"
              },
              "1": {
                "label": "1 digits"
              },
              "2": {
                "label": "2 digits"
              },
              "3": {
                "label": "3 digits"
              },
              "4": {
                "label": "4 digits"
              },
              "5": {
                "label": "5 digits"
              },
              "6": {
                "label": "6 digits"
              },
              "7": {
                "label": "7 digits"
              },
              "8": {
                "label": "8 digits"
              },
              "9": {
                "label": "9 digits"
              }
            },
            "val": "2"
          },
          "format__1000_separator": {
            "type": "select",
            "label": "1000 Separator",
            "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
            "required": true,
            "options": {
              "no_1000_separator": {
                "label": "No 1000 Separator"
              },
              "period_1000_separator": {
                "label": "1000 Separator (.)"
              },
              "comma_1000_separator": {
                "label": "1000 Separator (,)"
              }
            },
            "val": "period_1000_separator"
          },
          "format__currency_symbol": {
            "type": "select",
            "label": "Symbol",
            "show_if": "this.format__category=='currency'",
            "required": true,
            "options": {
              "dollar": {
                "label": "$"
              },
              "euro": {
                "label": "€"
              },
              "pound": {
                "label": "£"
              },
              "yen": {
                "label": "¥ (Yen, currency of Japan)"
              },
              "colon": {
                "label": "₡ (Colón, currency of Costa Rica)"
              },
              "naira": {
                "label": "₦ (Naira, currency of Nigeria)"
              },
              "rupee": {
                "label": "₨ (Rupee, currency of India)"
              },
              "rupie": {
                "label": "₹ (Rupee, currency of India)"
              },
              "won": {
                "label": "₩ (Won, currency in South Korea and North Korea)"
              },
              "hebrew": {
                "label": "₪ (Currency of Israel)"
              },
              "dong": {
                "label": "₫ (Currency of Vietnam)"
              },
              "kip": {
                "label": "₭ (Kip, currency of Laos)"
              },
              "mongolia": {
                "label": "₮ (Currency of Mongolia)"
              },
              "peso": {
                "label": "₱ (Peso, currency of the Philippines)"
              },
              "guarani": {
                "label": "₲ (Guaraní, currency of Paraguay)"
              },
              "hryvnia": {
                "label": "₴ (Hryvnia, currency of Ukraine)"
              },
              "tenge": {
                "label": "₸ (Tenge, currency of Kazakhstan)"
              },
              "lira": {
                "label": "₺ (Lira, currency of Turkey)"
              },
              "manat": {
                "label": "₼ (Manat, currency of Azerbaijan)"
              },
              "rubles": {
                "label": "₽ (Rubles, currency of Russia)"
              },
              "lari": {
                "label": "₾ (Lari, currency of Georgia)"
              },
              "bitcoin": {
                "label": "₿ (Bitcoin, crypto currency)"
              }
            },
            "val": "dollar"
          },
          "format__date_format": {
            "type": "select",
            "label": "Type",
            "show_if": "this.format__category=='date'",
            "required": true,
            "options": {
              "mm/dd/yyyy": {
                "label": "3/14/2012"
              },
              "D, M dd, Y": {
                "label": "Wednesday, March 14, 2012"
              },
              "yyyy-mm-dd": {
                "label": "2012-03-14"
              }
            },
            "val": "mm/dd/yyyy",
            "breakLine": true
          },
          "delete": {
            "show_if": "this.label_name != ''",
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        },
        "breakLine": true
      },
      "create_new_table": {
        "type": "checkbox",
        "label": "Output as new table",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true,
        "style": "margin-top: 10px"
      }
    }
  }
}
,
"/CrosstabOptions.json/CrosstabOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "transpose_type": {
        "type": "hidden",
        "val": "crosstab"
      },
      "crosstab__group_data_by_these_values_frame": {
        "type": "fieldset",
        "label": "Select column(s) to apply",
        "style": "border: 1px solid #ccc",        
        "repeat": false,
        "fields": {
          "crosstab.group_data_by_these_values": {
            "type": "select",
            "label": "Group data by these values",
            "style": "float: left; width: 50%",
            "table": "table_id",
            "multiple": true,
            "bind": "COLUMNS"
          },
          "crosstab.group_data_by_these_values__all_but_selected": {
            "type": "checkbox",
            "label": "All but selected",
            "style": "float: right; width: 40%",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          }
        }
      },
      "crosstab.change_column_headers": {
        "type": "select",
        "label": "Change Column Header",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "crosstab.values_for_new_columns": {
        "type": "select",
        "label": "Values For New Columns",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "crosstab.method_for_aggregating_values": {
        "type": "select",
        "label": "Method for Aggregating Values",
        "options": {
          "Concatenate": {
            "label": "Concatenate"
          },
          "First": {
            "label": "First"
          },
          "Last": {
            "label": "Last"
          },
          "Sum": {
            "label": "Sum"
          },
          "Average": {
            "label": "Average"
          },
          "Count": {
            "label": "Count"
          },
          "User Defined": {
            "label": "User Defined"
          }
        },
        "val": "Concatenate",
        "required": true
      },
      "crosstab.user_defined_str": {
        "type": "text",
        "label": "User Defined Value",
        "show_if": "crosstab.method_for_aggregating_values=='User Defined'",
        "val": "x",
        "trim": "false",
        "breakLine": true
      },
      "crosstab.separator": {
        "type": "text",
        "label": "Separator",
        "show_if": "method_for_aggregating_values=='Concatenate'",
        "val": ",",
        "trim": "false",
        "required": true,
        "breakLine": true
      }
    }
  }
}
,
"/RunByParameterOptions.json/RunByParameterOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.input_type": {
        "type": "select",
        "label": "Input Type",
        "required": true,
        "options": {
          "input_by_menu": {
            "label": "Input by Menu"
          },
          "input_by_table": {
            "label": "Input by Table"
          }
        },
        "val": "input_by_menu",
        "breakLine": true
      },
      "options.parameters": {
        "type": "fieldset",
        "label": "Configure task parameters",
        "show_if": "options.input_type=='input_by_menu'",
        "repeat": true,
        "fields": {
          "input_task": {
            "type": "select",
            "label": "Select Task",
            "bind": "TASKS",
            "empty": "",
            "required": true
          },
          "field_name": {
            "type": "text",
            "label": "Nesting Structure",
            "val": ""
          },
          "field_value": {
            "type": "text",
            "label": "Value",
            "val": ""
          },
          "replace_next_row_parameter_prior_to_run": {
            "type": "checkbox",
            "label": "Replace next row parameter prior to run",
            "val": "false",
            "isOn": "true",
            "isOff": "false"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.table_id": {
        "type": "select",
        "label": "Select Table",
        "show_if": "options.input_type=='input_by_table'",
        "bind": "TABLES",
        "empty": "",
        "required": true,
        "breakLine": true
      },
      "options.table_help": {
        "type": "textarea",
        "label": "",
        "show_if": "options.input_type=='input_by_table'",
        "val": "Table Structure ( Flow Name(optional) | Task Name | Nesting Structure | Value | Next rows simultaneous replace(optional) )",
        "disabled": true,
        "md_no_resize": false,
        "width": "100%"
      },
      "options.output_type": {
        "type": "select",
        "label": "Output Type",
        "required": true,
        "options": {
          "standard_output": {
            "label": "Standard Output"
          },
          "unify_output_tables": {
            "label": "Unify Output Tables"
          },
          "task_by_task_output": {
            "label": "Task by Task Output"
          }
        },
        "val": "standard_output",
        "breakLine": true
      },
      "output.output_and_setting": {
        "type": "hidden",
        "val": "true"
      }
    }
  }
}
,
"/RunAllOptions.json/RunAllOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "input_table_options": {
        "type": "fieldset",
        "label": "Specify Input Tables",
        "breakLine": true,
        "repeat": false,
        "fields": {
          "options.select_type": {
            "type": "select",
            "label": "Select Type",
            "required": true,
            "options": {
              "table_selection": {
                "label": "Table Selection"
              },
              "select_by_pattern": {
                "label": "Select by Pattern"
              }
            },
            "val": "table_selection"
          },
          "options.table_ids": {
            "type": "select",
            "label": "Select Tables",
            "bind": "TABLES",
            "empty": "",
            "multiple": true,
            "show_if": "options.select_type=='table_selection'",
            "required": true
          },
          "options.filter_params": {
            "type": "fieldset",
            "label": "Match tables",
            "show_if": "options.select_type=='select_by_pattern'",
            "breakLine": true,
            "repeat": true,
            "fields": {
              "keyword": {
                "type": "text",
                "label": "Enter Keyword",
                "required": true,
                "val": ""
              },
              "filter_target": {
                "type": "select",
                "label": "Filter on",
                "required": true,
                "options": {
                  "table_name": {
                    "label": "Table Name"
                  },
                  "table_tag": {
                    "label": "Table Tag"
                  }
                },
                "val": "table_name"
              },
              "filter_type": {
                "type": "select",
                "label": "Filter type",
                "required": true,
                "options": {
                  "equal": {
                    "label": "Equal"
                  },
                  "contain": {
                    "label": "Contains"
                  },
                  "start_with": {
                    "label": "Starts With"
                  },
                  "end_with": {
                    "label": "Ends With"
                  },
                  "regex": {
                    "label": "Regular Expression"
                  }
                },
                "val": "equal"
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.use_waiting_time": {
            "type": "checkbox",
            "label": "Add waiting time",
            "val": "false",
            "isOn": "true",
            "isOff": "false"
          },
          "options.waiting_period": {
            "type": "number",
            "label": "Waiting time (sec)",
            "val": 0,
            "show_if": "options.use_waiting_time!='false'"
          }
        }
      },
      "task_chain": {
        "type": "checkbox",
        "label": "Task Chain",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "schedule_options": {
        "type": "fieldset",
        "label": "Tasks to schedule",
        "show_if": "task_chain == 'true'",
        "repeat": true,
        "fields": {
          "input_task": {
            "type": "select",
            "label": "Select Task",
            "bind": "TASKS",
            "empty": "",
            "required": true
          },
          "waiting_time": {
            "type": "number",
            "label": "Waiting time (sec)",
            "val": 0,
            "required": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        },
        "breakLine": true
      },
      "unify_output_tables": {
        "type": "checkbox",
        "label": "Unify output tables",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
}
,
"/FlexmonsterOptions.json/FlexmonsterOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "show_if": "options.configure_manual=='true'",
    "repeat": false,
    "fields": {
      "options.type": {
        "type": "hidden",
        "val": "grid"
      },
      "options.add_column_cols": {
        "type": "hidden",
        "val": "true"
      },
      "options.column_cols": {
        "type": "fieldset",
        "label": "Column column(s)",
        "repeat": true,
        "fields": {
          "column_col": {
            "type": "select",
            "label": "Column column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "is_date": {
            "type": "checkbox",
            "label": "Is Date",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.row_cols": {
        "type": "fieldset",
        "label": "Row column(s)",
        "repeat": true,
        "fields": {
          "row_col": {
            "type": "select",
            "label": "Row column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "is_date": {
            "type": "checkbox",
            "label": "Is Date",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.custom_number_format": {
        "type": "checkbox",
        "label": "Custom Value Formatting for all Values",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "default_number_format_frame": {
        "type": "fieldset",
        "label": "Custom Value Formatting",
        "show_if": "options.custom_number_format=='true'",
        "repeat": false,
        "fields": {
          "options.default_format.textAlign": {
            "type": "select",
            "label": "Text Align",
            "options": {
              "right": {
                "label": "Right"
              },
              "left": {
                "label": "Left"
              },
              "center": {
                "label": "Center"
              }
            },
            "val": "right",
            "required": true
          },
          "options.default_format.thousandsSeparator": {
            "type": "select",
            "label": "Thousands Separator",
            "options": {
              "(Space)": {
                "label": "(Space)"
              },
              ",": {
                "label": ","
              },
              ".": {
                "label": "."
              }
            },
            "val": "(Space)",
            "required": true
          },
          "options.default_format.decimalSeparator": {
            "type": "select",
            "label": "Decimal Separator",
            "options": {
              ",": {
                "label": ","
              },
              ".": {
                "label": "."
              }
            },
            "val": ",",
            "required": true
          },
          "options.default_format.decimalPlaces": {
            "type": "select",
            "label": "Decimal Places",
            "options": {
              "-1": {
                "label": "None"
              },
              "0": {
                "label": "0"
              },
              "1": {
                "label": "1"
              },
              "2": {
                "label": "2"
              },
              "3": {
                "label": "3"
              },
              "4": {
                "label": "4"
              },
              "5": {
                "label": "5"
              },
              "6": {
                "label": "6"
              },
              "7": {
                "label": "7"
              },
              "8": {
                "label": "8"
              },
              "9": {
                "label": "9"
              }
            },
            "val": "2",
            "required": true
          },
          "options.default_format.currencySymbol": {
            "type": "text",
            "label": "Currency Symbol",
            "val": ""
          },
          "options.default_format.negativeNumberFormat": {
            "type": "select",
            "label": "Negative Number Format",
            "options": {
              "-1": {
                "label": "-1"
              },
              "- 1": {
                "label": "- 1"
              },
              "1-": {
                "label": "1-"
              },
              "1 -": {
                "label": "1 -"
              }
            },
            "val": "-1",
            "required": true
          },
          "options.default_format.nullValue": {
            "type": "text",
            "label": "Null Value",
            "val": ""
          },
          "options.default_format.isPercent": {
            "type": "select",
            "label": "Format as Percent",
            "show_if": "false",
            "options": {
              "false": {
                "label": "False"
              },
              "true": {
                "label": "True"
              }
            },
            "val": "false",
            "required": true
          }
        }
      },
      "options.use_conditional_format": {
        "type": "checkbox",
        "label": "Conditional Formatting for all values",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px"
      },
      "conditional_format_frame": {
        "type": "fieldset",
        "label": "Conditional Formatting for all values",
        "show_if": "options.use_conditional_format=='true'",
        "repeat": false,
        "fields": {
          "options.conditional_format.op": {
            "type": "select",
            "label": "Operator",
            "options": {
              "<": {
                "label": "Less than"
              },
              "<=": {
                "label": "Less than or equal to"
              },
              ">": {
                "label": "Greater than"
              },
              ">=": {
                "label": "Greater than or equal to"
              },
              "==": {
                "label": "Equal to"
              },
              "!=": {
                "label": "Not equal to"
              },
              "between": {
                "label": "Between"
              }
            },
            "val": ">",
            "required": true
          },
          "options.conditional_format.value": {
            "type": "text",
            "label": "Value",
            "show_if": "options.conditional_format.op=='<' || options.conditional_format.op=='<=' || options.conditional_format.op=='>' || options.conditional_format.op=='>=' || options.conditional_format.op=='==' || options.conditional_format.op=='!=' || options.conditional_format.op=='between'",
            "val": "0"
          },
          "options.conditional_format.value2": {
            "type": "text",
            "label": "Value",
            "show_if": "options.conditional_format.op=='between'",
            "val": "100",
            "breakLine": true
          },
          "options.conditional_format.fontFamily": {
            "type": "select",
            "label": "Font Family",
            "options": {
              "Arial": {
                "label": "Arial"
              },
              "Lucida Sans Unicode": {
                "label": "Lucida Sans Unicode"
              },
              "Verdana": {
                "label": "Verdana"
              },
              "Courier New": {
                "label": "Courier New"
              },
              "Palatino Linotype": {
                "label": "Palatino Linotype"
              },
              "Tahoma": {
                "label": "Tahoma"
              },
              "Impact": {
                "label": "Impact"
              },
              "Trebuchet MS": {
                "label": "Trebuchet MS"
              },
              "Georgia": {
                "label": "Georgia"
              },
              "Times New Roman": {
                "label": "Times New Roman"
              }
            },
            "val": "Arial",
            "required": true
          },
          "options.conditional_format.fontSize": {
            "type": "select",
            "label": "Font Size",
            "options": {
              "8px": {
                "label": "8px"
              },
              "9px": {
                "label": "9px"
              },
              "10px": {
                "label": "10px"
              },
              "11px": {
                "label": "11px"
              },
              "12px": {
                "label": "12px"
              },
              "13px": {
                "label": "13px"
              }
            },
            "val": "12px",
            "required": true
          },
          "options.conditional_format.color": {
            "type": "select",
            "label": "Color",
            "options": {
              "000000": {
                "label": "Black"
              },
              "FFFFFF": {
                "label": "White"
              },
              "F44336": {
                "label": "Red"
              },
              "FFEB3B": {
                "label": "Yellow"
              },
              "8BC34A": {
                "label": "Green"
              },
              "03A9F4": {
                "label": "Blue"
              },
              "custom": {
                "label": "Custom"
              }
            },
            "val": "F44336",
            "required": true
          },
          "options.conditional_format.custom_color": {
            "type": "text",
            "label": "Custom Color",
            "show_if": "options.conditional_format.color=='custom'",
            "placeholder": "3F51B5",
            "val": "",
            "breakLine": true
          },
          "options.conditional_format.backgroundColor": {
            "type": "select",
            "label": "Background Color",
            "options": {
              "000000": {
                "label": "Black"
              },
              "FFFFFF": {
                "label": "White"
              },
              "F44336": {
                "label": "Red"
              },
              "FFEB3B": {
                "label": "Yellow"
              },
              "8BC34A": {
                "label": "Green"
              },
              "03A9F4": {
                "label": "Blue"
              },
              "custom": {
                "label": "Custom"
              }
            },
            "val": "FFFFFF",
            "required": true
          },
          "options.conditional_format.custom_background_color": {
            "type": "text",
            "label": "Custom Background Color",
            "show_if": "options.conditional_format.backgroundColor=='custom'",
            "placeholder": "FFFFFF",
            "val": "",
            "breakLine": true
          }
        }
      },
      "options.measure_cols": {
        "type": "fieldset",
        "label": "Values",
        "repeat": true,
        "fields": {
          "measure_col": {
            "type": "select",
            "label": "Value Column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "aggregation": {
            "type": "select",
            "label": "Aggregation Function",
            "options": {
              "sum": {
                "label": "Sum"
              },
              "count": {
                "label": "Count"
              },
              "distinctcount": {
                "label": "Distinct Count"
              },
              "average": {
                "label": "Average"
              },
              "median": {
                "label": "Median"
              },
              "product": {
                "label": "Product"
              },
              "min": {
                "label": "Min"
              },
              "max": {
                "label": "Max"
              },
              "stdevp": {
                "label": "Population Standard Deviation"
              },
              "stdevs": {
                "label": "Sample Standard Deviation"
              },
              "percent": {
                "label": "Percent"
              }
            },
            "val": "sum",
            "required": true,
            "breakLine": true
          },
          "custom_format": {
            "type": "checkbox",
            "label": "Custom Value Formatting for this Value",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "custom_format_textAlign": {
            "type": "select",
            "label": "Text Align",
            "show_if": "this.custom_format=='true'",
            "options": {
              "right": {
                "label": "Right"
              },
              "left": {
                "label": "Left"
              },
              "center": {
                "label": "Center"
              }
            },
            "val": "right",
            "required": true
          },
          "custom_format_thousandsSeparator": {
            "type": "select",
            "label": "Thousands Separator",
            "show_if": "this.custom_format=='true'",
            "options": {
              "(Space)": {
                "label": "(Space)"
              },
              ",": {
                "label": ","
              },
              ".": {
                "label": "."
              }
            },
            "val": "(Space)",
            "required": true
          },
          "custom_format_decimalSeparator": {
            "type": "select",
            "label": "Decimal Separator",
            "show_if": "this.custom_format=='true'",
            "options": {
              ",": {
                "label": ","
              },
              ".": {
                "label": "."
              }
            },
            "val": ",",
            "required": true
          },
          "custom_format_decimalPlaces": {
            "type": "select",
            "label": "Decimal Places",
            "show_if": "this.custom_format=='true'",
            "options": {
              "-1": {
                "label": "None"
              },
              "0": {
                "label": "0"
              },
              "1": {
                "label": "1"
              },
              "2": {
                "label": "2"
              },
              "3": {
                "label": "3"
              },
              "4": {
                "label": "4"
              },
              "5": {
                "label": "5"
              },
              "6": {
                "label": "6"
              },
              "7": {
                "label": "7"
              },
              "8": {
                "label": "8"
              },
              "9": {
                "label": "9"
              }
            },
            "val": "2",
            "required": true
          },
          "custom_format_currencySymbol": {
            "type": "text",
            "label": "Currency Symbol",
            "show_if": "this.custom_format=='true'",
            "val": ""
          },
          "custom_format_negativeNumberFormat": {
            "type": "select",
            "label": "Negative Number Format",
            "show_if": "this.custom_format=='true'",
            "options": {
              "-1": {
                "label": "-1"
              },
              "- 1": {
                "label": "- 1"
              },
              "1-": {
                "label": "1-"
              },
              "1 -": {
                "label": "1 -"
              }
            },
            "val": "-1",
            "required": true
          },
          "custom_format_nullValue": {
            "type": "text",
            "label": "Null Value",
            "show_if": "this.custom_format=='true'",
            "val": ""
          },
          "custom_format_isPercent": {
            "type": "select",
            "label": "Format as Percent",
            "show_if": "false",
            "options": {
              "false": {
                "label": "False"
              },
              "true": {
                "label": "True"
              }
            },
            "val": "false",
            "required": true,
            "breakLine": true
          },
          "use_conditional_format": {
            "type": "checkbox",
            "label": "Conditional Formatting for this Value",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "op": {
            "type": "select",
            "label": "Operator",
            "show_if": "this.use_conditional_format=='true'",
            "options": {
              "<": {
                "label": "Less than"
              },
              "<=": {
                "label": "Less than or equal to"
              },
              ">": {
                "label": "Greater than"
              },
              ">=": {
                "label": "Greater than or equal to"
              },
              "==": {
                "label": "Equal to"
              },
              "!=": {
                "label": "Not equal to"
              },
              "between": {
                "label": "Between"
              }
            },
            "val": ">",
            "required": true
          },
          "value": {
            "type": "text",
            "label": "Value",
            "show_if": "this.use_conditional_format=='true' && (this.op=='<' || this.op=='<=' || this.op=='>' || this.op=='>=' || this.op=='==' || this.op=='!=' || this.op=='between')",
            "val": "0"
          },
          "value2": {
            "type": "text",
            "label": "Value",
            "show_if": "this.use_conditional_format=='true' && this.op=='between'",
            "val": "100",
            "breakLine": true
          },
          "fontFamily": {
            "type": "select",
            "label": "Font Family",
            "show_if": "this.use_conditional_format=='true'",
            "options": {
              "Arial": {
                "label": "Arial"
              },
              "Lucida Sans Unicode": {
                "label": "Lucida Sans Unicode"
              },
              "Verdana": {
                "label": "Verdana"
              },
              "Courier New": {
                "label": "Courier New"
              },
              "Palatino Linotype": {
                "label": "Palatino Linotype"
              },
              "Tahoma": {
                "label": "Tahoma"
              },
              "Impact": {
                "label": "Impact"
              },
              "Trebuchet MS": {
                "label": "Trebuchet MS"
              },
              "Georgia": {
                "label": "Georgia"
              },
              "Times New Roman": {
                "label": "Times New Roman"
              }
            },
            "val": "Arial",
            "required": true
          },
          "fontSize": {
            "type": "select",
            "label": "Font Size",
            "show_if": "this.use_conditional_format=='true'",
            "options": {
              "8px": {
                "label": "8px"
              },
              "9px": {
                "label": "9px"
              },
              "10px": {
                "label": "10px"
              },
              "11px": {
                "label": "11px"
              },
              "12px": {
                "label": "12px"
              },
              "13px": {
                "label": "13px"
              }
            },
            "val": "12px",
            "required": true
          },
          "color": {
            "type": "select",
            "label": "Color",
            "show_if": "this.use_conditional_format=='true'",
            "options": {
              "000000": {
                "label": "Black"
              },
              "FFFFFF": {
                "label": "White"
              },
              "F44336": {
                "label": "Red"
              },
              "FFEB3B": {
                "label": "Yellow"
              },
              "8BC34A": {
                "label": "Green"
              },
              "03A9F4": {
                "label": "Blue"
              },
              "custom": {
                "label": "Custom"
              }
            },
            "val": "FFEB3B",
            "required": true
          },
          "custom_color": {
            "type": "text",
            "label": "Custom Color",
            "show_if": "this.use_conditional_format=='true' && this.color=='custom'",
            "placeholder": "3F51B5",
            "val": "",
            "breakLine": true
          },
          "backgroundColor": {
            "type": "select",
            "label": "Background Color",
            "show_if": "this.use_conditional_format=='true'",
            "options": {
              "000000": {
                "label": "Black"
              },
              "FFFFFF": {
                "label": "White"
              },
              "F44336": {
                "label": "Red"
              },
              "FFEB3B": {
                "label": "Yellow"
              },
              "8BC34A": {
                "label": "Green"
              },
              "03A9F4": {
                "label": "Blue"
              },
              "custom": {
                "label": "Custom"
              }
            },
            "val": "FFFFFF",
            "required": true
          },
          "custom_background_color": {
            "type": "text",
            "label": "Custom Background Color",
            "show_if": "this.use_conditional_format=='true' && this.backgroundColor=='custom'",
            "placeholder": "FFFFFF",
            "val": "",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.add_filter": {
        "type": "checkbox",
        "label": "Add Filter Column(s)",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "options.filter": {
        "type": "fieldset",
        "label": "Filter Column(s)",
        "show_if": "options.add_filter=='true'",
        "repeat": true,
        "fields": {
          "filter_col": {
            "type": "select",
            "label": "Filter column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      }
    }
  }
}
,
"/DCClimateWorldDataYears2.json/DCClimateWorldDataYears2.json": {
  "options.sel_year2": {
    "type": "select",
    "label": "Select year",
    "show_if": "options.stat_var_name=='Max_Temperature_RCP45' || options.stat_var_name=='DifferenceAcrossModels_Max_Temperature_RCP45' || options.stat_var_name=='Min_Temperature_RCP45' || options.stat_var_name=='DifferenceAcrossModels_Min_Temperature_RCP45' || options.stat_var_name=='PrecipitationRate_RCP45' || options.stat_var_name=='DifferenceAcrossModels_PrecipitationRate_RCP45' || options.stat_var_name=='DifferenceRelativeToBaseDate2006_Max_Temperature_RCP45' || options.stat_var_name=='DifferenceRelativeToBaseDate2006_Min_Temperature_RCP45' || options.stat_var_name=='DifferenceRelativeToBaseDate2006_PrecipitationRate_RCP45' || options.stat_var_name=='Max_Temperature_RCP85' || options.stat_var_name=='DifferenceAcrossModels_Max_Temperature_RCP85' || options.stat_var_name=='Min_Temperature_RCP85' || options.stat_var_name=='DifferenceAcrossModels_Min_Temperature_RCP85' || options.stat_var_name=='PrecipitationRate_RCP85' || options.stat_var_name=='DifferenceAcrossModels_PrecipitationRate_RCP85' || options.stat_var_name=='DifferenceRelativeToBaseDate2006_Max_Temperature_RCP85' || options.stat_var_name=='DifferenceRelativeToBaseDate2006_Min_Temperature_RCP85' || options.stat_var_name=='DifferenceRelativeToBaseDate2006_PrecipitationRate_RCP85'",
    "required": true,
    "options": {
      "2006": {
        "label": "2006"
      },
      "2007": {
        "label": "2007"
      },
      "2008": {
        "label": "2008"
      },
      "2009": {
        "label": "2009"
      },
      "2010": {
        "label": "2010"
      },
      "2011": {
        "label": "2011"
      },
      "2012": {
        "label": "2012"
      },
      "2013": {
        "label": "2013"
      },
      "2014": {
        "label": "2014"
      },
      "2015": {
        "label": "2015"
      },
      "2016": {
        "label": "2016"
      },
      "2017": {
        "label": "2017"
      },
      "2018": {
        "label": "2018"
      },
      "2019": {
        "label": "2019"
      },
      "2020": {
        "label": "2020"
      },
      "2021": {
        "label": "2021"
      },
      "2022": {
        "label": "2022"
      },
      "2023": {
        "label": "2023"
      },
      "2024": {
        "label": "2024"
      },
      "2025": {
        "label": "2025"
      },
      "2026": {
        "label": "2026"
      },
      "2027": {
        "label": "2027"
      },
      "2028": {
        "label": "2028"
      },
      "2029": {
        "label": "2029"
      },
      "2030": {
        "label": "2030"
      },
      "2031": {
        "label": "2031"
      },
      "2032": {
        "label": "2032"
      },
      "2033": {
        "label": "2017"
      },
      "2034": {
        "label": "2034"
      },
      "2035": {
        "label": "2035"
      },
      "2036": {
        "label": "2036"
      },
      "2037": {
        "label": "2037"
      },
      "2038": {
        "label": "2038"
      },
      "2039": {
        "label": "2039"
      },
      "2040": {
        "label": "2040"
      },
      "2041": {
        "label": "2041"
      },
      "2042": {
        "label": "2042"
      },
      "2043": {
        "label": "2043"
      },
      "2044": {
        "label": "2044"
      },
      "2045": {
        "label": "2045"
      },
      "2046": {
        "label": "2046"
      },
      "2047": {
        "label": "2047"
      },
      "2048": {
        "label": "2048"
      },
      "2049": {
        "label": "2049"
      },
      "2050": {
        "label": "2050"
      },
      "2051": {
        "label": "2051"
      },
      "2052": {
        "label": "2052"
      },
      "2053": {
        "label": "2053"
      },
      "2054": {
        "label": "2054"
      },
      "2055": {
        "label": "2055"
      },
      "2056": {
        "label": "2056"
      },
      "2057": {
        "label": "2057"
      },
      "2058": {
        "label": "2058"
      },
      "2059": {
        "label": "2059"
      },
      "2060": {
        "label": "2060"
      },
      "2061": {
        "label": "2061"
      },
      "2062": {
        "label": "2062"
      },
      "2063": {
        "label": "2063"
      },
      "2064": {
        "label": "2064"
      },
      "2065": {
        "label": "2065"
      },
      "2066": {
        "label": "2066"
      },
      "2067": {
        "label": "2067"
      },
      "2068": {
        "label": "2068"
      },
      "2069": {
        "label": "2069"
      },
      "2070": {
        "label": "2070"
      },
      "2071": {
        "label": "2071"
      },
      "2072": {
        "label": "2072"
      },
      "2073": {
        "label": "2073"
      },
      "2074": {
        "label": "2074"
      },
      "2075": {
        "label": "2075"
      },
      "2076": {
        "label": "2076"
      },
      "2077": {
        "label": "2077"
      },
      "2078": {
        "label": "2078"
      },
      "2079": {
        "label": "2079"
      },
      "2080": {
        "label": "2080"
      },
      "2081": {
        "label": "2081"
      },
      "2082": {
        "label": "2082"
      },
      "2083": {
        "label": "2083"
      },
      "2084": {
        "label": "2084"
      },
      "2085": {
        "label": "2085"
      },
      "2086": {
        "label": "2086"
      },
      "2087": {
        "label": "2087"
      },
      "2088": {
        "label": "2088"
      },
      "2089": {
        "label": "2089"
      },
      "2090": {
        "label": "2090"
      },
      "2091": {
        "label": "2091"
      },
      "2092": {
        "label": "2092"
      },
      "2093": {
        "label": "2093"
      },
      "2094": {
        "label": "2094"
      },
      "2095": {
        "label": "2095"
      },
      "2096": {
        "label": "2096"
      },
      "2097": {
        "label": "2097"
      },
      "2098": {
        "label": "2098"
      },
      "2099": {
        "label": "2099"
      },
      "2100": {
        "label": "2100"
      }
    },
    "val": "2100",
    "breakLine": true
  }
},
"/EmailReadOptions.json/EmailReadOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "Select Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.task_type": {
        "type": "hidden",
        "val": "read_email"
      },
      "options.all_folders": {
        "type": "checkbox",
        "label": "Import all mail folders",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "options.read_folders": {
        "type": "select",
        "label": "Mail Folder(s) to import",
        "show_if": "options.all_folders=='false'",
        "required": true,
        "multiple": true,
        "options": {
          "Archive": {
            "label": "Archive"
          },
          "Conversation History": {
            "label": "Conversation History"
          },
          "Deleted Items": {
            "label": "Deleted Items"
          },
          "Drafts": {
            "label": "Drafts"
          },
          "Inbox": {
            "label": "Inbox"
          },
          "Junk Email": {
            "label": "Junk Email"
          },
          "Outbox": {
            "label": "Outbox"
          },
          "RSS Feeds": {
            "label": "RSS Feeds"
          },
          "Sent Items": {
            "label": "Sent Items"
          },
          "Sync Issues": {
            "label": "Sync Issues"
          }
        },
        "val": ["Inbox"],
        "breakLine": true
      },
      "options.all_columns": {
        "type": "checkbox",
        "label": "Import all columns",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "options.import_columns": {
        "type": "select",
        "label": "Columns to import",
        "show_if": "options.all_columns=='false'",
        "required": true,
        "multiple": true,
        "options": {
          "CreatedAt": {
            "label": "CreatedAt"
          },
          "ReceivedAt": {
            "label": "ReceivedAt"
          },
          "SentAt": {
            "label": "SentAt"
          },
          "Subject": {
            "label": "Subject"
          },
          "BodyPreview": {
            "label": "BodyPreview"
          },
          "From": {
            "label": "From"
          },
          "CC": {
            "label": "CC"
          },
          "BCC": {
            "label": "BCC"
          },
          "HasAttachments": {
            "label": "HasAttachments"
          },
          "IsRead": {
            "label": "IsRead"
          },
          "IsDraft": {
            "label": "IsDraft"
          },
          "WebLink": {
            "label": "WebLink"
          },
          "Body": {
            "label": "Body"
          }
        },
        "val": ["CreatedAt","Subject","BodyPreview","From","HasAttachments","WebLink"]
      },
      "info3": {
        "type": "text",
        "label": "",
        "val": "This task only supports users logged in via Microsoft Login",
        "disabled": true,
        "style": "width: 100%"
      }
    }
  }
},
"/AutofillOptions.json/AutofillOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "target_table.table_id": {
        "type": "select",
        "label": "Target Table",
        "bind": "TABLES",
        "required": true
      },
      "value_columns_frame": {
        "type": "fieldset",
        "label": "Select column(s) to apply",
        "repeat": false,
        "fields": {
          "options.value_columns__all_but_selected": {
            "type": "checkbox",
            "label": "All but selected",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.value_columns": {
            "type": "select",
            "label": "Value Columns",
            "table": "target_table.table_id",
            "bind": "COLUMNS",
            "multiple": true
          }
        }
      },
      "options.mapping_column": {
        "type": "select",
        "label": "Mapping Column",
        "table": "target_table.table_id",
        "bind": "COLUMNS",
        "breakLine": true
      },
      "options.autofill_empty_cells": {
        "type": "checkbox",
        "label": "Autofill Empty Cells",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "options.operation": {
        "type": "select",
        "label": "Operation",
        "show_if": "options.autofill_empty_cells=='false'",
        "required": true,
        "options": {
          "replace": {
            "label": "Replace Existing Content"
          },
          "add": {
            "label": "Add to Existing Content"
          },
          "average": {
            "label": "Build Average with Existing Content"
          }
        },
        "val": "replace",
        "breakLine": true
      },
      "options.use_filter": {
        "type": "checkbox",
        "label": "Use Filter",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "filter_box": {
        "type": "fieldset",
        "label": "Filter Options",
        "show_if": "options.use_filter=='true'",
        "repeat": false,
        "fields": {
          "options.filter": {
            "type": "fieldset",
            "label": "Add Filter Conditions",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "target_table.table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group",
            "show_if": "options.apply_to_record=='false'",
            "repeat": false,
            "fields": {
              "options.apply_to_group_columns__all_but_selected": {
                "type": "checkbox",
                "label": "All but selected",
                "val": "false",
                "isOn": "true",
                "isOff": "false",
                "breakLine": true
              },
              "options.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "width": "100%",
                "table": "target_table.table_id",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      }
    }
  }
}
,
"/ImportFileFromGithubOptions.json/ImportFileFromGithubOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.from": {
        "type": "hidden",
        "val": "web"
      },
      "options.webservice": {
        "type": "hidden",
        "val": "github"
      },
      "options.output_format": {
        "type": "select",
        "label": "Select Type",
        "options": {
          "csv_table": {
            "label": "CSV-Table"
          },
          "line_by_line": {
            "label": "Line by Line"
          },
          "word_by_word": {
            "label": "Text"
          },
          "JSON": {
            "label": "JSON"
          }
        },
        "val": "csv_table",
        "required": true
      },
      "options.word_pattern_type": {
        "type": "select",
        "label": "Word Pattern",
        "show_if": "options.output_format=='word_by_word' && options.specify_word_pattern=='true'",
        "options": {
          "regex": {
            "label": "Regular Expression"
          }
        },
        "val": "regex",
        "required": true
      },
      "options.word_pattern_regex": {
        "type": "text",
        "label": "Regular Expression",
        "show_if": "options.output_format=='word_by_word' && options.specify_word_pattern=='true' && options.word_pattern_type=='regex'",
        "required": true,
        "val": "[a-z][1-9]",
        "breakLine": true
      },
      "options.column_setting": {
        "type": "checkbox",
        "label": "Column Settings",
        "show_if": "options.output_format!='file_list'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "column_setting_frame": {
        "type": "fieldset",
        "label": "Column Settings",
        "show_if": "options.output_format!='file_list' && options.column_setting=='true'",
        "repeat": false,
        "fields": {
          "options.add_row_column": {
            "type": "checkbox",
            "label": "Add Row Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_word_count_column": {
            "type": "checkbox",
            "label": "Add 'Word Count' Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_word_nonword_column": {
            "type": "checkbox",
            "label": "Add 'Word & Non-Word' Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_section_column": {
            "type": "checkbox",
            "label": "Add Section Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "section_column_types_frame": {
            "type": "fieldset",
            "label": "Section Column Types",
            "show_if": "options.output_format=='word_by_word' && options.add_section_column=='true'",
            "repeat": false,
            "fields": {
              "options.section_columns.add_paragraph_section_column": {
                "type": "checkbox",
                "label": "Paragraph",
                "val": "false",
                "isOn": "true",
                "isOff": "false",
                "breakLine": true
              },
              "options.section_columns.add_custom_section_column": {
                "type": "checkbox",
                "label": "Custom Section Delimiter",
                "val": "false",
                "isOn": "true",
                "isOff": "false"
              },
              "options.section_columns.custom_delimiter": {
                "type": "text",
                "label": "Delimiter(1 character)",
                "show_if": "options.section_columns.add_custom_section_column=='true'",
                "maxLength": 1,
                "required": true,
                "breakLine": true
              },
              "options.section_columns.add_brackets_punctuation_section_column": {
                "type": "checkbox",
                "label": "Brackets and Punctuation",
                "val": "false",
                "isOn": "true",
                "isOff": "false"
              },
              "options.section_columns.brackets_punctuation_section_column_type": {
                "type": "select",
                "label": "Brackets Type",
                "show_if": "options.section_columns.add_brackets_punctuation_section_column=='true'",
                "options": {
                  "nesting_structure": {
                    "label": "Nesting Structure"
                  },
                  "inner_bracket": {
                    "label": "Inner Bracket"
                  },
                  "brackets_only": {
                    "label": "Brackets Only"
                  },
                  "show_all": {
                    "label": "Show All"
                  }
                },
                "val": "show_all",
                "required": true,
                "breakLine": true
              }
            }
          },
          "options.add_filename_column": {
            "type": "checkbox",
            "label": "Add Column for File Name",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "options.add_filepath_column": {
            "type": "checkbox",
            "label": "Add Column for File Path",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          }
        }
      },
      "options.is_cloud_dir": {
        "type": "hidden",
        "val": "false"
      },
      "if_dir_frame": {
        "type": "fieldset",
        "label": "Directory Import Options",
        "show_if": "options.output_format!='file_list' && options.is_cloud_dir=='true'",
        "repeat": false,
        "fields": {
          "options.unify_in_one_table": {
            "type": "checkbox",
            "label": "Unify in one table",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.suffix": {
            "type": "select",
            "label": "Output tables suffix",
            "show_if": "options.unify_in_one_table=='false'",
            "options": {
              "number": {
                "label": "Number"
              },
              "filename": {
                "label": "Filename"
              }
            },
            "val": "number",
            "required": true,
            "breakLine": true
          },
          "options.include_subdir": {
            "type": "checkbox",
            "label": "Include Subdirectories",
            "show_if": "options.output_format!='file_list' && options.is_cloud_dir=='true'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true,
            "style": "margin-top: 10px"
          }
        }
      },
      "options.file_list.include_subdir": {
        "type": "checkbox",
        "label": "Include Subdirectories",
        "show_if": "options.output_format=='file_list'",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true,
        "style": "margin-top: 10px"
      },
      "options.file_list.add_change_date_column": {
        "type": "checkbox",
        "label": "Add Change Date Column",
        "show_if": "options.output_format=='file_list'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  },
  "import_link_token_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px",
    "repeat": false,
    "fields": {
      "options.link_csv_file": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test/blob/main/example.csv",
        "show_if": "options.webservice=='github' && options.is_cloud_dir=='false' && options.output_format=='csv_table'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.link_text_file": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test/blob/main/example.txt(json, csv, etc)",
        "show_if": "options.webservice=='github' && options.is_cloud_dir=='false' && options.output_format!='csv_table' && options.output_format!='file_list'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.one_drive.file_path": {
        "type": "text",
        "label": "Enter path to file e.g. ZippyDoc/Subdir1/test.txt",
        "show_if": "options.webservice=='ms_one_drive' && options.output_format!='file_list' && options.is_cloud_dir=='false'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox.file_path": {
        "type": "text",
        "label": "Enter path to file e.g. ZippyDoc/Subdir1/test.txt",
        "show_if": "options.webservice=='dropbox' && options.output_format!='file_list' && options.is_cloud_dir=='false'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dir_path_filter": {
        "type": "fieldset",
        "label": "Import Path and File Filter",
        "show_if": "options.output_format=='file_list' || options.is_cloud_dir=='true'",
        "repeat": true,
        "fields": {
          "github__link_directory": {
            "type": "text",
            "label": "Enter link e.g. https://github.com/zippydoc/test",
            "show_if": "options.webservice=='github'",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "one_drive__dir_path": {
            "type": "text",
            "label": "Enter path to dir e.g. ZippyDoc/Subdir1",
            "show_if": "options.webservice=='ms_one_drive'",
            "width": "100%",
            "breakLine": true
          },
          "dropbox__dir_path": {
            "type": "text",
            "label": "Enter path to dir e.g. ZippyDoc/Subdir1",
            "show_if": "options.webservice=='dropbox'",
            "width": "100%",
            "breakLine": true
          },
          "google_drive__dir_path": {
            "type": "text",
            "label": "Enter path to dir",
            "show_if": "options.webservice=='google_drive'",
            "width": "100%",
            "breakLine": true
          },
          "dir_filter__filter_type": {
            "type": "select",
            "label": "Filter Type",
            "options": {
              "all": {
                "label": "All"
              },
              "contains": {
                "label": "Contains"
              },
              "starts_with": {
                "label": "Starts With"
              },
              "ends_with": {
                "label": "Ends With"
              },
              "regex": {
                "label": "Regular Expression"
              }
            },
            "val": "all",
            "required": true
          },
          "dir_filter__filter_string": {
            "type": "text",
            "label": "Filter",
            "show_if": "this.dir_filter__filter_type!='all'",
            "required": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.is_github_private": {
        "type": "checkbox",
        "label": "Github repository is private",
        "show_if": "options.webservice=='github'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "options.github_token": {
        "type": "text",
        "label": "Github personal access token",
        "show_if": "options.webservice=='github' && options.is_github_private=='true'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.one_drive.access_token": {
        "type": "text",
        "label": "One Drive Access Token",
        "show_if": "options.webservice=='ms_one_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox.auth_code": {
        "type": "text",
        "label": "Dropbox Authorization Code",
        "show_if": "options.webservice=='dropbox'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.google_drive.access_token": {
        "type": "text",
        "label": "Google Drive Access Token",
        "show_if": "options.webservice=='google_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      }
    }
  }
}
,
"/ConsolidateOptions.json/ConsolidateOptions.json": {
  "input": {
    "type": "fieldset",
    "label": "Consolidate Options",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": true,
    "fields": {
      "new_position": {
        "type": "text",
        "label": "New Position",
        "val": "",
        "placeholder": "Text",
        "required": true,
        "breakLine": true
      },
      "table_id": {
        "type": "select",
        "label": "Select Table",
        "bind": "TABLES",
        "empty": "",
        "required": true
      },
      "rows": {
        "type": "select",
        "label": "Row Selection",
        "required": true,
        "table": "this.table_id",
        "multiple": true,
        "bind": "LABELS"
      },
      "multiplier": {
        "type": "select",
        "label": "Multiplier",
        "required": true,
        "options": {
          "positive": {
            "label": "Keep sign"
          },
          "negative": {
            "label": "Switch sign"
          }
        },
        "val": "positive",
        "breakLine": true
      },
      "format__category": {
        "type": "select",
        "label": "Display Format",
        "required": true,
        "options": {
          "standard": {
            "label": "Standard"
          },
          "number": {
            "label": "Number"
          },
          "percentage": {
            "label": "Percentage"
          },
          "text": {
            "label": "Text"
          },
          "date": {
            "label": "Date"
          },
          "currency": {
            "label": "Currency"
          }
        },
        "val": "standard"
      },
      "format__rounding": {
        "type": "select",
        "label": "Decimal Places for display",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "required": true,
        "options": {
          "no_rounding": {
            "label": "No rounding"
          },
          "0": {
            "label": "0 digits"
          },
          "1": {
            "label": "1 digits"
          },
          "2": {
            "label": "2 digits"
          },
          "3": {
            "label": "3 digits"
          },
          "4": {
            "label": "4 digits"
          },
          "5": {
            "label": "5 digits"
          },
          "6": {
            "label": "6 digits"
          },
          "7": {
            "label": "7 digits"
          },
          "8": {
            "label": "8 digits"
          },
          "9": {
            "label": "9 digits"
          }
        },
        "val": "2"
      },
      "format__use_1000_separator": {
        "type": "checkbox",
        "label": "Use 1000 Separator(.)",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "format__currency_symbol": {
        "type": "select",
        "label": "Symbol",
        "show_if": "this.format__category=='currency'",
        "required": true,
        "options": {
          "dollar": {
            "label": "$"
          },
          "euro": {
            "label": "€"
          },
          "pound": {
            "label": "£"
          }
        },
        "val": "dollar"
      },
      "format__date_format": {
        "type": "select",
        "label": "Type",
        "show_if": "this.format__category=='date'",
        "required": true,
        "options": {
          "mm/dd/yyyy": {
            "label": "3/14/2012"
          },
          "D, M dd, Y": {
            "label": "Wednesday, March 14, 2012"
          },
          "yyyy-mm-dd": {
            "label": "2012-03-14"
          },
          "m.dd.yyyy": {
            "label": "3.14.2012"
          },
          "m.dd.yy": {
            "label": "3.14.12"
          },
          "dd.m.yyyy": {
            "label": "14.3.2012"
          },
          "dd.m.yy": {
            "label": "14.3.12"
          },
          "M dd, Y": {
            "label": "March 14, 2012"
          },
          "dd-mm-yyyy": {
            "label": "14-03-2012"
          },
          "mm-dd-yyyy": {
            "label": "03-14-2012"
          },
          "dd-mm-yy": {
            "label": "14-03-12"
          },
          "mm-dd-yy": {
            "label": "03-14-12"
          }
        },
        "val": "mm/dd/yyyy",
        "breakLine": true
      },
      "delete": {
        "type": "button",
        "label": "Delete",
        "function": "DELETE_ROW"
      }
    }
  }
},
"/ConvertOptions.json/ConvertOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.convert_direction": {
        "type": "radio",
        "label": "Convert Type",
        "required": true,
        "values": {
          "to_word_by_word": "Line by Line to Word by Word",
          "to_line_by_line": "Word by Word to Line by Line"
        },
        "val": "to_word_by_word",
        "breakLine": true
      }
    }
  }
}
,
"/ExportOptions.json/ExportOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.to": {
        "type": "select",
        "label": "Type",
        "options": {
          "database": {
            "label": "Export to database"
          },
          "file": {
            "label": "Export to file"
          }
        },
        "val": "database",
        "required": true
      },
      "options.export_series": {
        "type": "checkbox",
        "label": "Export Series",
        "show_if": "options.to=='file'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.file_name_column": {
        "type": "select",
        "label": "Select File Name Column",
        "show_if": "options.to=='file' && options.export_series=='true'",
        "table": "input_table",
        "bind": "COLUMNS",
        "required": true,
        "breakLine": true
      },
      "postgresql_db_credential_box": {
        "type": "fieldset",
        "label": "Database Connection Credentials",
        "show_if": "options.to=='database'",
        "repeat": false,
        "fields": {
          "options.dbms": {
            "type": "select",
            "label": "Select DBMS",
            "options": {
              "postgresql": {
                "label": "PostgreSQL"
              },
              "mysql": {
                "label": "MySQL"
              },
              "sql_server": {
                "label": "MS SQL Server"
              },
              "oracle": {
                "label": "Oracle"
              }
            },
            "val": "postgresql",
            "required": true,
            "breakLine": true
          },
          "options.postgresql_credential.user": {
            "type": "text",
            "label": "User",
            "show_if": "options.dbms=='postgresql'",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "options.postgresql_credential.password": {
            "type": "text",
            "label": "Password",
            "show_if": "options.dbms=='postgresql'",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "options.postgresql_credential.host": {
            "type": "text",
            "label": "Host",
            "show_if": "options.dbms=='postgresql'",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "options.postgresql_credential.database": {
            "type": "text",
            "label": "Database",
            "show_if": "options.dbms=='postgresql'",
            "required": true,
            "width": "100%",
            "breakLine": true
          }
        }
      },
      "options.schema_name_to_export": {
        "type": "text",
        "label": "Schema name to export into",
        "show_if": "options.to=='database' && options.dbms=='postgresql'",
        "required": true,
        "val": "public",
        "width": "100%",
        "breakLine": true
      },
      "options.webservice": {
        "type": "select",
        "label": "Select Webservice",
        "show_if": "options.to=='file' || options.to=='mytask'",
        "options": {
          "github": {
            "label": "Github"
          },
          "dropbox": {
            "label": "Dropbox"
          },
          "ms_one_drive": {
            "label": "Microsoft OneDrive"
          },
          "google_drive": {
            "label": "Google Drive"
          }
        },
        "val": "github",
        "required": true
      },
      "options.export_format": {
        "type": "select",
        "label": "Export Format",
        "show_if": "options.to=='file'",
        "options": {
          "csv_file": {
            "label": "Csv file(s)"
          },
          "word_by_word": {
            "label": "Word by Word"
          },
          "line_by_line": {
            "label": "Line by Line"
          }
        },
        "val": "csv_file",
        "required": true,
        "breakLine": true
      },
      "options.github_create_pr": {
        "type": "checkbox",
        "label": "Create pull request",
        "show_if": "options.to=='file' && options.webservice=='github'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.github_url": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test",
        "show_if": "options.to=='file' && options.webservice=='github'",
        "val": "https://github.com/zippydoc/public-tables",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.export_dir": {
        "type": "text",
        "label": "Enter dir e.g. /MyZippyDocFiles/SubDir/",
        "show_if": "options.to=='file' && options.webservice!='github'",
        "val": "/",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.github_token": {
        "type": "text",
        "label": "Specify the Github personal access token that has write permission:",
        "show_if": "options.to=='file' && options.webservice=='github'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.ms_one_drive_token": {
        "type": "text",
        "label": "Microsoft Graph API access token. You can get it here https://ms-oauth.herokuapp.com/",
        "show_if": "options.to=='file' && options.webservice=='ms_one_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.google_authorization_code": {
        "type": "text",
        "label": "Google OAuth Authorization Code with scope https://www.googleapis.com/auth/drive. You can get it here https://developers.google.com/oauthplayground/",
        "show_if": "options.to=='file' && options.webservice=='google_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox_authorization_code": {
        "type": "text",
        "label": "Dropbox Authorization Code. You can get it here https://www.dropbox.com/oauth2/authorize?client_id=9i7woztjp94jrkw&response_type=code",
        "show_if": "options.to=='file' && options.webservice=='dropbox'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.if_duplicated": {
        "type": "select",
        "label": "If duplicated",
        "show_if": "options.to=='database' || (options.to=='file' && options.webservice=='github')",
        "val": "drop_if_exist",
        "options": {
          "drop_if_exist": {
            "label": "Create or Drop (if already existing)"
          },
          "error_if_exist": {
            "label": "Create New (throw error if existing)"
          },
          "error_if_not_exist": {
            "label": "Drop (throw error if not-existing)"
          },
          "append": {
            "label": "Append"
          }
        }
      },
      "options.export_task_name": {
        "type": "text",
        "label": "Input Task Name",
        "show_if": "options.to=='mytask'",
        "required": true,
        "val": "Flow6_Task1_AddColumns",
        "width": "100%",
        "breakLine": true
      }
    }
  }
}
,
"/PlanningOptions.json/PlanningOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "Planning Type",
    "style": "border-radius: 3px; border: 1px solid #ccc;",
    "repeat": false,
    "fields": {
      "options.output_type": {
        "type": "select",
        "label": "Output Type",
        "required": true,
        "options": {
          "pdf_planning_package": {
            "label": "PDF Planning Package"
          },
          "interactive_drill_down": {
            "label": "Interactive Drill-Down"
          },
          "table_output": {
            "label": "Table Output"
          }
        },
        "val": "pdf_planning_package"
      },
      "options.where_to_create": {
        "type": "select",
        "label": "Where to create",
        "show_if": "options.output_type=='pdf_planning_package'",
        "options": {
          "only_open_in_browser": {
            "label": "Pop-Up PDF"
          },
          "only_export_to_cloud": {
            "label": "Export to OneDrive"
          }
        },
        "val": "only_open_in_browser",
        "required": true
      },
      "options.interactive_drill_down_type": {
        "type": "select",
        "label": "Drill-Down Type",
        "show_if": "options.output_type=='interactive_drill_down'",
        "required": true,
        "options": {
          "profit_loss": {
            "label": "Profit & Loss"
          },
          "cash_flow": {
            "label": "Cash Flow"
          },
          "balance_sheet": {
            "label": "Balance Sheet"
          }
        },
        "val": "profit_loss"
      },
      "options.table_output_type": {
        "type": "select",
        "label": "Table Output Type",
        "show_if": "options.output_type=='table_output'",
        "required": true,
        "options": {
          "planning_assumptions": {
            "label": "Planning Assumptions"
          },
          "transaction_list_details": {
            "label": "Transaction List Details"
          },
          "profit_loss": {
            "label": "Profit & Loss"
          },
          "cash_flow": {
            "label": "Cash Flow"
          },
          "balance_sheet_details": {
            "label": "Balance Sheet Details"
          },
          "bs_summary_list": {
            "label": "Balance Sheet Summary List"
          },
          "all_detail_tables": {
            "label": "All Detail Tables"
          }
        },
        "val": "planning_assumptions"
      },
      "options.planning_table__group_by": {
        "type": "select",
        "label": "Group By",
        "show_if": "options.output_type=='table_output' && (options.table_output_type=='profit_loss' || options.table_output_type=='cash_flow')",
        "multiple": true,
        "options": {
          "Year": {
            "label": "Year"
          },
          "Quarter": {
            "label": "Quarter"
          },
          "Month": {
            "label": "Month"
          },
          "Week": {
            "label": "Week"
          },
          "Day": {
            "label": "Day"
          },
          "Position": {
            "label": "Position"
          },
          "Sub Position": {
            "label": "Sub Position"
          },
          "Item": {
            "label": "Item"
          }
        },
        "val": ["Year", "Quarter", "Month", "Position"],
        "required": true,
        "breakLine": true
      }
    }
  },
  "export_link_frame": {
    "type": "fieldset",
    "label": "Export path in MS One Drive",
    "show_if": "options.output_type=='pdf_planning_package' && options.where_to_create=='only_export_to_cloud'",
    "repeat": false,
    "fields": {
      "options.export_dir": {
        "type": "text",
        "label": "Enter dir e.g. /MyZippyDocFiles/SubDir/",
        "val": "/",
        "width": "100%",
        "breakLine": true
      }
    }
  },
  "planing_position_frame": {
    "type": "fieldset",
    "label": "Configure planning position",
    "repeat": false,
    "fields": {
      "options.configure_by_table": {
        "type": "select",
        "label": "Configure planning position by",
        "required": true,
        "options": {
          "by_assumption_menu": {
            "label": "Configure planning by assumption menu"
          },
          "by_assumption_table": {
            "label": "Configure planning by assumption table"
          },
          "by_transaction_table": {
            "label": "Configure planning by transaction table"
          }
        },
        "val": "by_assumption_menu",
        "breakLine": true
      },
      "options.assumption_table_id": {
        "type": "select",
        "label": "Assumption Table",
        "show_if": "options.configure_by_table=='by_assumption_table'",
        "bind": "TABLES",
        "empty": "",
        "required": true,
        "breakLine": true
      },
      "options.configure_by_assumption_table_help": {
        "type": "textarea",
        "label": "",
        "show_if": "options.configure_by_table=='by_assumption_table'",
        "val": "Table Structure ( Position* | Sub Position | Item | Initial Date* | Repetition* | Final Date* | Amount* | Growth* | Growth Period* | Growth Curve* | Payment Days* )",
        "disabled": true,
        "md_no_resize": false,
        "width": "100%"
      },
      "options.transaction_list_details_table_id": {
        "type": "select",
        "label": "Transaction List Details Table",
        "show_if": "options.configure_by_table=='by_transaction_table'",
        "bind": "TABLES",
        "empty": "",
        "required": true,
        "style": "min-width: 200px",
        "breakLine": true
      },
      "options.configure_by_transaction_list_details_table_help": {
        "type": "textarea",
        "label": "",
        "show_if": "options.configure_by_table=='by_transaction_table'",
        "val": "Table Structure ( Position* | Sub Position | Item | Amount* | Date* | Payment Date* )",
        "disabled": true,
        "md_no_resize": false,
        "width": "100%"
      },
      "options.custom.table": {
        "type": "fieldset",
        "label": "Planning",
        "show_if": "options.configure_by_table=='by_assumption_menu'",
        "repeat": true,
        "fields": {
          "position": {
            "type": "select",
            "label": "Position",
            "options": {
              "Revenues": {
                "label": "Revenues"
              },
              "Cost of Goods Sold": {
                "label": "Cost of Goods Sold"
              },
              "Sales Expenses": {
                "label": "Sales Expenses"
              },
              "Marketing Expenses": {
                "label": "Marketing Expenses"
              },
              "Operating Expenses": {
                "label": "Operating Expenses"
              },
              "General and Administration Expenses": {
                "label": "General and Administration Expenses"
              },
              "Personnel Expenses": {
                "label": "Personnel Expenses"
              },
              "Tax": {
                "label": "Tax"
              },
              "Interest": {
                "label": "Interest"
              },
              "Extraordinary Items": {
                "label": "Extraordinary Items"
              },
              "Capital Expenditure": {
                "label": "Capital Expenditure"
              },
              "Depreciation": {
                "label": "Depreciation"
              },
              "Amortization": {
                "label": "Amortization"
              }
            },
            "val": "Revenues",
            "required": true
          },
          "revenues__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position=='Revenues'",
            "options": {
              "Sales": {
                "label": "Sales"
              },
              "Product Revenues": {
                "label": "Product Revenues"
              },
              "License Revenues": {
                "label": "License Revenues"
              },
              "Project Revenues": {
                "label": "Project Revenues"
              },
              "Service Revenues": {
                "label": "Service Revenues"
              },              
              "Increase(+)/Decrease(-) Inventories": {
                "label": "Increase(+)/Decrease(-) Inventories"
              },
              "Other Revenues": {
                "label": "Other Revenues"
              }
            },
            "val": "Sales",
            "required": true
          },
          "cost_of_goods_sold__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position=='Cost of Goods Sold'",
            "options": {
              "Material Costs": {
                "label": "Material Costs"
              },
              "Consumable Costs": {
                "label": "Consumable Costs"
              },
              "Personal Costs": {
                "label": "Personal Costs"
              },
              "Purchased Services": {
                "label": "Purchased Services"
              }
            },
            "val": "Material Costs",
            "required": true
          },
          "sales_expenses__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position=='Sales Expenses'",
            "options": {
              "Material Costs": {
                "label": "Material Costs"
              },
              "Personal Costs": {
                "label": "Personal Costs"
              },
              "Office Items": {
                "label": "Office Items"
              },
              "Consulting": {
                "label": "Consulting"
              },
              "Purchased Services": {
                "label": "Purchased Services"
              },
              "Recruiting": {
                "label": "Recruiting"
              },
              "Other Expenses": {
                "label": "Other Expenses"
              }
            },
            "val": "Purchased Services",
            "required": true
          },
          "marketing_expenses__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position=='Marketing Expenses'",
            "options": {
              "Material Costs": {
                "label": "Material Costs"
              },
              "Personal Costs": {
                "label": "Personal Costs"
              },
              "Office Items": {
                "label": "Office Items"
              },
              "Consulting": {
                "label": "Consulting"
              },
              "Purchased Services": {
                "label": "Purchased Services"
              },
              "Recruiting": {
                "label": "Recruiting"
              },
              "Other Expenses": {
                "label": "Other Expenses"
              }
            },
            "val": "Material Costs",
            "required": true
          },
          "operating_expenses__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position=='Operating Expenses'",
            "options": {
              "Material Costs": {
                "label": "Material Costs"
              },
              "Personal Costs": {
                "label": "Personal Costs"
              },
              "Rental Expenses": {
                "label": "Rental Expenses"
              },
              "Cleaning": {
                "label": "Cleaning"
              },
              "Office Items": {
                "label": "Office Items"
              },
              "Consulting": {
                "label": "Consulting"
              },
              "Purchased Services": {
                "label": "Purchased Services"
              },
              "Recruiting": {
                "label": "Recruiting"
              },
              "Other Expenses": {
                "label": "Other Expenses"
              }
            },
            "val": "Material Costs",
            "required": true
          },
          "depreciation__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position=='Depreciation'",
            "options": {
              "Equipment": {
                "label": "Equipment"
              },
              "Buildings": {
                "label": "Buildings"
              },
              "Vehicles": {
                "label": "Vehicles"
              },
              "Property": {
                "label": "Property"
              },
              "Material Assets": {
                "label": "Material Assets"
              },
              "Immaterial Assets": {
                "label": "Immaterial Assets"
              },
              "Other Assets": {
                "label": "Other Assets"
              },
              "Other Depreciation": {
                "label": "Other Depreciation"
              }
            },
            "val": "Material Assets",
            "required": true
          },
          "amortisation__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position=='Amortization'",
            "options": {             
              "Acquisitions": {
                "label": "Acquisitions"
              },
              "Material Assets": {
                "label": "Material Assets"
              },
              "Immaterial Assets": {
                "label": "Immaterial Assets"
              },
              "Other Assets": {
                "label": "Other Assets"
              },
              "Other Amortisation": {
                "label": "Other Amortisation"
              }
            },
            "val": "Acquisitions",
            "required": true
          },
          "general_administration_expenses__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position=='General and Administration Expenses'",
            "options": {
              "Rental Expenses": {
                "label": "Rental Expenses"
              },
              "Cleaning": {
                "label": "Cleaning"
              },
              "Office Items": {
                "label": "Office Items"
              },
              "Consulting": {
                "label": "Consulting"
              },
              "Purchased Services": {
                "label": "Purchased Services"
              },
              "Recruiting": {
                "label": "Recruiting"
              },
              "Other Expenses": {
                "label": "Other Expenses"
              }
            },
            "val": "Rental Expenses",
            "required": true
          },
          "personnel_expenses__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position=='Personnel Expenses'",
            "options": {
              "Fix Salary": {
                "label": "Fix Salary"
              },
              "Bonus": {
                "label": "Bonus"
              },
              "Social Security": {
                "label": "Social Security"
              },
              "Employee Tax": {
                "label": "Employee Tax"
              },
              "Employee Car": {
                "label": "Employee Car"
              },
              "Employee Benefits": {
                "label": "Employee Benefits"
              },
              "Other Expenses": {
                "label": "Other Expenses"
              },              
              "Other Compensation": {
                "label": "Other Compensation"
              }
            },
            "val": "Fix Salary",
            "required": true
          },
          "capital_expenditure__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position=='Capital Expenditure'",
            "options": {            
              "Maintenance Capex": {
                "label": "Maintenance Capex"
              },
              "Expansion Capex": {
                "label": "Expansion Capex"
              },
              "Building": {
                "label": "Building"
              },
              "Land": {
                "label": "Land"
              },
              "Equipment": {
                "label": "Equipment"
              },
              "Vehicles": {
                "label": "Vehicles"
              }, 
              "Other Capital Expenditure": {
                "label": "Other Capital Expenditure"
              }
            },
            "val": "Maintenance Capex",
            "required": true
          },
          "extraordinary_items__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position=='Extraordinary Items'",
            "options": {
              "Extraordinary Income": {
                "label": "Extraordinary Income"
              },
              "Extraordinary Expenses": {
                "label": "Extraordinary Expenses"
              }
            },
            "val": "Extraordinary Income",
            "required": true
          },
          "tax__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position=='Tax'",
            "options": {
              "Value Added Tax": {
                "label": "Value Added Tax"
              },
              "Corporate Tax": {
                "label": "Corporate Tax"
              },
              "Trade Tax": {
                "label": "Trade Tax"
              },
              "Other Tax": {
                "label": "Other Tax"
              }
            },
            "val": "Value Added Tax",
            "required": true
          },
          "interest__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position=='Interest'",
            "options": {
              "Interest Income": {
                "label": "Interest Income"
              },
              "Interest Expenses": {
                "label": "Interest Expenses"
              }
            },
            "val": "Interest Income",
            "required": true
          },
          "item": {
            "type": "text",
            "label": "Item",
            "val": ""
          },
          "amount": {
            "type": "number",
            "label": "Amount",
            "val": 0,
            "required": true 
          },
          "payment_days": {
            "type": "number",
            "label": "Payment Days",
            "show_if": "this.no_payment=='false'",
            "val": 0
          },
          "no_payment": {
            "type": "checkbox",
            "label": "No Payment",
            "show_if": "this.position!='Depreciation' && this.position!='Amortization'",
            "val": "false",
            "isOn": "true",
            "isOff": "false"
          },
          "no_payment_2": {
            "type": "checkbox",
            "label": "No Payment",
            "show_if": "this.position=='Depreciation' || this.position=='Amortization'",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "disabled": true
          },
          "initial_date": {
            "type": "date",
            "label": "(Initial) Date",
            "val": "",
            "required": true
          },
          "final_date": {
            "type": "date",
            "label": "Final Date",
            "show_if": "this.periodicy!='One-Off'",
            "val": "",
            "breakLine": true
          },
          "periodicy": {
            "type": "select",
            "label": "Repetition (of Position)",
            "required": true,
            "options": {
              "One-Off": {
                "label": "None"
              },
              "Daily": {
                "label": "Daily"
              },
              "Weekly": {
                "label": "Weekly"
              },
              "Monthly": {
                "label": "Monthly"
              },
              "Quarterly": {
                "label": "Quarterly"
              },
              "Yearly": {
                "label": "Yearly"
              }
            },
            "val": "One-Off"
          },
          "growth": {
            "type": "number",
            "label": "Growth in %...",
            "show_if": "this.periodicy!='One-Off'",
            "val": 0
          },
          "growth_period": {
            "type": "select",
            "label": "...applied on Period",
            "show_if": "this.periodicy!='One-Off'",
            "options": {
              "selected_period": {
                "label": "Equal to Repetition"
              },
              "Weekly": {
                "label": "Weekly"
              },
              "Monthly": {
                "label": "Monthly"
              },
              "Quarterly": {
                "label": "Quarterly"
              },
              "Yearly": {
                "label": "Yearly"
              }
            },
            "val": "selected_period"
          },
          "growth_pattern": {
            "type": "select",
            "label": "Growth Curve",
            "show_if": "this.periodicy!='One-Off' && this.growth_period!='selected_period'",
            "options": {
              "Linear": {
                "label": "Linear"
              },
              "Compounding": {
                "label": "Compounding"
              },
              "Jump-Fix": {
                "label": "Jump-Fix"
              }
            },
            "val": "Compounding",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.set_plan_config": {
        "type": "checkbox",
        "label": "Planning Configuration",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      }
    }
  },
  "planning_configuration_frame": {
    "type": "fieldset",
    "label": "Planning Configuration",
    "show_if": "options.set_plan_config=='true'",
    "repeat": false,
    "fields": {
      "options.is_sort_position_pl_items": {
        "type": "checkbox",
        "label": "Sort Position of P&L Items",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "options.sort_position_pl_items": {
        "type": "fieldset",
        "label": "Sort Position of P&L Items",
        "show_if": "options.is_sort_position_pl_items=='true'",
        "repeat": true,
        "fields": {
          "position_type": {
            "type": "select",
            "label": "Type",
            "options": {
              "standard": {
                "label": "Standard Position"
              },
              "calculated": {
                "label": "Calculated Position"
              }
            },
            "val": "standard",
            "required": true
          },
          "position": {
            "type": "select",
            "label": "Position",
            "show_if": "this.position_type=='standard'",
            "options": {
              "Revenues": {
                "label": "Revenues"
              },
              "Cost of Goods Sold": {
                "label": "Cost of Goods Sold"
              },
              "Sales Expenses": {
                "label": "Sales Expenses"
              },
              "Marketing Expenses": {
                "label": "Marketing Expenses"
              },
              "Operating Expenses": {
                "label": "Operating Expenses"
              },
              "General and Administration Expenses": {
                "label": "General and Administration Expenses"
              },
              "Personnel Expenses": {
                "label": "Personnel Expenses"
              },
              "Tax": {
                "label": "Tax"
              },
              "Interest": {
                "label": "Interest"
              },
              "Extraordinary Items": {
                "label": "Extraordinary Items"
              },
              "Capital Expenditure": {
                "label": "Capital Expenditure"
              },
              "Depreciation": {
                "label": "Depreciation"
              },
              "Amortization": {
                "label": "Amortization"
              },
              "Gross Profit": {
                "label": "Gross Profit"
              },
              "EBT": {
                "label": "EBT"
              },
              "EBIT": {
                "label": "EBIT"
              },
              "EBITDA": {
                "label": "EBITDA"
              },
              "Gross Profit Margin": {
                "label": "Gross Profit Margin"
              },
              "EBT Margin": {
                "label": "EBT Margin"
              },
              "EBIT Margin": {
                "label": "EBIT Margin"
              },
              "EBITDA Margin": {
                "label": "EBITDA Margin"
              }
            },
            "val": "Revenues",
            "required": true
          },
          "revenues__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position_type=='standard' && this.position=='Revenues'",
            "options": {
              "All": {
                "label": "all Subpositions"
              },
              "Sales": {
                "label": "Sales"
              },
              "Product Revenues": {
                "label": "Product Revenues"
              },
              "License Revenues": {
                "label": "License Revenues"
              },
              "Project Revenues": {
                "label": "Project Revenues"
              },
              "Service Revenues": {
                "label": "Service Revenues"
              },
              "Increase(+)/Decrease(-) Inventories": {
                "label": "Increase(+)/Decrease(-) Inventories"
              },
              "Other Revenues": {
                "label": "Other Revenues"
              }
            },
            "val": "Sales",
            "required": true
          },
          "cost_of_goods_sold__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position_type=='standard' && this.position=='Cost of Goods Sold'",
            "options": {
              "All": {
                "label": "all Subpositions"
              },
              "Material Costs": {
                "label": "Material Costs"
              },
              "Consumable Costs": {
                "label": "Consumable Costs"
              },
              "Personal Costs": {
                "label": "Personal Costs"
              },
              "Purchased Services": {
                "label": "Purchased Services"
              }
            },
            "val": "Material Costs",
            "required": true
          },
          "sales_expenses__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position_type=='standard' && this.position=='Sales Expenses'",
            "options": {
              "All": {
                "label": "all Subpositions"
              },
              "Material Costs": {
                "label": "Material Costs"
              },
              "Personal Costs": {
                "label": "Personal Costs"
              },
              "Office Items": {
                "label": "Office Items"
              },
              "Consulting": {
                "label": "Consulting"
              },
              "Purchased Services": {
                "label": "Purchased Services"
              },
              "Recruiting": {
                "label": "Recruiting"
              },
              "Other Expenses": {
                "label": "Other Expenses"
              }
            },
            "val": "Purchased Services",
            "required": true
          },
          "marketing_expenses__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position_type=='standard' && this.position=='Marketing Expenses'",
            "options": {
              "All": {
                "label": "all Subpositions"
              },
              "Material Costs": {
                "label": "Material Costs"
              },
              "Personal Costs": {
                "label": "Personal Costs"
              },
              "Office Items": {
                "label": "Office Items"
              },
              "Consulting": {
                "label": "Consulting"
              },
              "Purchased Services": {
                "label": "Purchased Services"
              },
              "Recruiting": {
                "label": "Recruiting"
              },
              "Other Expenses": {
                "label": "Other Expenses"
              }
            },
            "val": "Material Costs",
            "required": true
          },
          "operating_expenses__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position_type=='standard' && this.position=='Operating Expenses'",
            "options": {
              "All": {
                "label": "all Subpositions"
              },
              "Material Costs": {
                "label": "Material Costs"
              },
              "Personal Costs": {
                "label": "Personal Costs"
              },
              "Rental Expenses": {
                "label": "Rental Expenses"
              },
              "Cleaning": {
                "label": "Cleaning"
              },
              "Office Items": {
                "label": "Office Items"
              },
              "Consulting": {
                "label": "Consulting"
              },
              "Purchased Services": {
                "label": "Purchased Services"
              },
              "Recruiting": {
                "label": "Recruiting"
              },
              "Other Expenses": {
                "label": "Other Expenses"
              }
            },
            "val": "Material Costs",
            "required": true
          },
          "general_and_administration_expenses__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position_type=='standard' && this.position=='General and Administration Expenses'",
            "options": {
              "All": {
                "label": "all Subpositions"
              },
              "Rental Expenses": {
                "label": "Rental Expenses"
              },
              "Cleaning": {
                "label": "Cleaning"
              },
              "Office Items": {
                "label": "Office Items"
              },
              "Consulting": {
                "label": "Consulting"
              },
              "Purchased Services": {
                "label": "Purchased Services"
              },
              "Recruiting": {
                "label": "Recruiting"
              },
              "Other Expenses": {
                "label": "Other Expenses"
              }
            },
            "val": "Rental Expenses",
            "required": true
          },
          "personnel_expenses__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position_type=='standard' && this.position=='Personnel Expenses'",
            "options": {
              "All": {
                "label": "all Subpositions"
              },
              "Fix Salary": {
                "label": "Fix Salary"
              },
              "Bonus": {
                "label": "Bonus"
              },
              "Social Security": {
                "label": "Social Security"
              },
              "Employee Tax": {
                "label": "Employee Tax"
              },
              "Employee Car": {
                "label": "Employee Car"
              },
              "Employee Benefits": {
                "label": "Employee Benefits"
              },
              "Other Expenses": {
                "label": "Other Expenses"
              },
              "Other Compensation": {
                "label": "Other Compensation"
              }
            },
            "val": "Fix Salary",
            "required": true
          },
          "tax__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position_type=='standard' && this.position=='Tax'",
            "options": {
              "All": {
                "label": "all Subpositions"
              },
              "Value Added Tax": {
                "label": "Value Added Tax"
              },
              "Corporate Tax": {
                "label": "Corporate Tax"
              },
              "Trade Tax": {
                "label": "Trade Tax"
              },
              "Other Tax": {
                "label": "Other Tax"
              }
            },
            "val": "Value Added Tax",
            "required": true
          },
          "interest__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position_type=='standard' && this.position=='Interest'",
            "options": {
              "All": {
                "label": "all Subpositions"
              },
              "Interest Income": {
                "label": "Interest Income"
              },
              "Interest Expenses": {
                "label": "Interest Expenses"
              }
            },
            "val": "Interest Income",
            "required": true
          },
          "extraordinary_items__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position_type=='standard' && this.position=='Extraordinary Items'",
            "options": {
              "All": {
                "label": "all Subpositions"
              },
              "Extraordinary Income": {
                "label": "Extraordinary Income"
              },
              "Extraordinary Expenses": {
                "label": "Extraordinary Expenses"
              }
            },
            "val": "Extraordinary Income",
            "required": true
          },
          "capital_expenditure__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position_type=='standard' && this.position=='Capital Expenditure'",
            "options": {
              "All": {
                "label": "all Subpositions"
              },
              "Maintenance Capex": {
                "label": "Maintenance Capex"
              },
              "Expansion Capex": {
                "label": "Expansion Capex"
              },
              "Building": {
                "label": "Building"
              },
              "Land": {
                "label": "Land"
              },
              "Equipment": {
                "label": "Equipment"
              },
              "Vehicles": {
                "label": "Vehicles"
              },
              "Other Capital Expenditure": {
                "label": "Other Capital Expenditure"
              }
            },
            "val": "Maintenance Capex",
            "required": true
          },
          "depreciation__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position_type=='standard' && this.position=='Depreciation'",
            "options": {
              "All": {
                "label": "all Subpositions"
              },
              "Equipment": {
                "label": "Equipment"
              },
              "Buildings": {
                "label": "Buildings"
              },
              "Vehicles": {
                "label": "Vehicles"
              },
              "Property": {
                "label": "Property"
              },
              "Material Assets": {
                "label": "Material Assets"
              },
              "Immaterial Assets": {
                "label": "Immaterial Assets"
              },
              "Other Assets": {
                "label": "Other Assets"
              },
              "Other Depreciation": {
                "label": "Other Depreciation"
              }
            },
            "val": "Material Assets",
            "required": true
          },
          "amortization__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position_type=='standard' && this.position=='Amortization'",
            "options": {
              "All": {
                "label": "all Subpositions"
              },
              "Acquisitions": {
                "label": "Acquisitions"
              },
              "Material Assets": {
                "label": "Material Assets"
              },
              "Immaterial Assets": {
                "label": "Immaterial Assets"
              },
              "Other Assets": {
                "label": "Other Assets"
              },
              "Other Amortisation": {
                "label": "Other Amortisation"
              }
            },
            "val": "Acquisitions",
            "required": true
          },
          "calculation": {
            "type": "select",
            "label": "Calculation",
            "show_if": "this.position_type=='calculated'",
            "options": {
              "addition": {
                "label": "Addition"
              },
              "quota": {
                "label": "Quota"
              },
              "multiply": {
                "label": "Multiply"
              },
              "fix_multiply": {
                "label": "Fix multiply"
              }
            },
            "val": "addition",
            "required": true
          },
          "new_position": {
            "type": "text",
            "label": "New Position",
            "show_if": "this.position_type=='calculated'",
            "placeholder": "",
            "val": "",
            "required": true
          },
          "addition_positions": {
            "type": "select",
            "label": "Select Position(s)",
            "show_if": "this.position_type=='calculated' && (this.calculation=='addition' || this.calculation=='multiply' || this.calculation=='fix_multiply')",
            "multiple": true,
            "options": {
              "Revenues": {
                "label": "Revenues"
              },
              "Cost of Goods Sold": {
                "label": "Cost of Goods Sold"
              },
              "Sales Expenses": {
                "label": "Sales Expenses"
              },
              "Marketing Expenses": {
                "label": "Marketing Expenses"
              },
              "Operating Expenses": {
                "label": "Operating Expenses"
              },
              "General and Administration Expenses": {
                "label": "General and Administration Expenses"
              },
              "Personnel Expenses": {
                "label": "Personnel Expenses"
              },
              "Tax": {
                "label": "Tax"
              },
              "Interest": {
                "label": "Interest"
              },
              "Extraordinary Items": {
                "label": "Extraordinary Items"
              },
              "Capital Expenditure": {
                "label": "Capital Expenditure"
              },
              "Depreciation": {
                "label": "Depreciation"
              },
              "Amortization": {
                "label": "Amortization"
              }
            },
            "val": "",
            "required": true
          },
          "quota_positions": {
            "type": "select",
            "label": "Select Position(s)",
            "show_if": "this.position_type=='calculated' && this.calculation=='quota'",
            "multiple": true,
            "options": {
              "Revenues": {
                "label": "Revenues"
              },
              "Cost of Goods Sold": {
                "label": "Cost of Goods Sold"
              },
              "Sales Expenses": {
                "label": "Sales Expenses"
              },
              "Marketing Expenses": {
                "label": "Marketing Expenses"
              },
              "Operating Expenses": {
                "label": "Operating Expenses"
              },
              "General and Administration Expenses": {
                "label": "General and Administration Expenses"
              },
              "Personnel Expenses": {
                "label": "Personnel Expenses"
              },
              "Tax": {
                "label": "Tax"
              },
              "Interest": {
                "label": "Interest"
              },
              "Extraordinary Items": {
                "label": "Extraordinary Items"
              },
              "Capital Expenditure": {
                "label": "Capital Expenditure"
              },
              "Depreciation": {
                "label": "Depreciation"
              },
              "Amortization": {
                "label": "Amortization"
              }
            },
            "val": "",
            "required": true
          },
          "denominator_position": {
            "type": "select",
            "label": "Denominator Position",
            "show_if": "this.position_type=='calculated' && this.calculation=='quota'",
            "options": {
              "Revenues": {
                "label": "Revenues"
              },
              "Cost of Goods Sold": {
                "label": "Cost of Goods Sold"
              },
              "Sales Expenses": {
                "label": "Sales Expenses"
              },
              "Marketing Expenses": {
                "label": "Marketing Expenses"
              },
              "Operating Expenses": {
                "label": "Operating Expenses"
              },
              "General and Administration Expenses": {
                "label": "General and Administration Expenses"
              },
              "Personnel Expenses": {
                "label": "Personnel Expenses"
              },
              "Tax": {
                "label": "Tax"
              },
              "Interest": {
                "label": "Interest"
              },
              "Extraordinary Items": {
                "label": "Extraordinary Items"
              },
              "Capital Expenditure": {
                "label": "Capital Expenditure"
              },
              "Depreciation": {
                "label": "Depreciation"
              },
              "Amortization": {
                "label": "Amortization"
              }
            },
            "val": "",
            "required": true
          },
          "multiply_position": {
            "type": "select",
            "label": "Multiply Position",
            "show_if": "this.position_type=='calculated' && this.calculation=='multiply'",
            "options": {
              "Revenues": {
                "label": "Revenues"
              },
              "Cost of Goods Sold": {
                "label": "Cost of Goods Sold"
              },
              "Sales Expenses": {
                "label": "Sales Expenses"
              },
              "Marketing Expenses": {
                "label": "Marketing Expenses"
              },
              "Operating Expenses": {
                "label": "Operating Expenses"
              },
              "General and Administration Expenses": {
                "label": "General and Administration Expenses"
              },
              "Personnel Expenses": {
                "label": "Personnel Expenses"
              },
              "Tax": {
                "label": "Tax"
              },
              "Interest": {
                "label": "Interest"
              },
              "Extraordinary Items": {
                "label": "Extraordinary Items"
              },
              "Capital Expenditure": {
                "label": "Capital Expenditure"
              },
              "Depreciation": {
                "label": "Depreciation"
              },
              "Amortization": {
                "label": "Amortization"
              }
            },
            "val": "",
            "required": true
          },
          "fix_multiply": {
            "type": "number",
            "label": "Fix multiply",
            "show_if": "this.position_type=='calculated' && this.calculation=='fix_multiply'",
            "val": 1
          },
          "format": {
            "type": "select",
            "label": "Format",
            "multiple": true,
            "options": {
              "Formatted": {
                "label": "Formatted"
              },
              "line above": {
                "label": "Line above"
              },
              "line below": {
                "label": "Line below"
              },
              "double line above": {
                "label": "Double line above"
              },
              "double line below": {
                "label": "Double line below"
              }
            },
            "val": ""
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        },
        "breakLine": true
      },
      "options.balance_sheet_impact__configure": {
        "type": "checkbox",
        "label": "Customize Balance Sheet Impact",
        "show_if": "(options.output_type=='table_output' && options.table_output_type=='balance_sheet_details') || (options.output_type=='table_output' && options.table_output_type=='bs_summary_list') || (options.output_type=='table_output' && options.table_output_type=='all_detail_tables') || (options.output_type=='interactive_drill_down' && options.interactive_drill_down_type=='balance_sheet') || options.output_type=='pdf_planning_package'",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "balance_sheet_impact_frame": {
        "type": "fieldset",
        "label": "Configure Balance Sheet Impact",
        "show_if": "(options.output_type=='table_output' && options.table_output_type=='balance_sheet_details' && options.balance_sheet_impact__configure=='true') || (options.output_type=='table_output' && options.table_output_type=='bs_summary_list' && options.balance_sheet_impact__configure=='true') || (options.output_type=='table_output' && options.table_output_type=='all_detail_tables' && options.balance_sheet_impact__configure=='true') || (options.output_type=='interactive_drill_down' && options.interactive_drill_down_type=='balance_sheet' && options.balance_sheet_impact__configure=='true') || (options.output_type=='pdf_planning_package' && options.balance_sheet_impact__configure=='true')",
        "repeat": false,
        "fields": {
          "options.balance_sheet_impact__configure_by_table": {
            "type": "checkbox",
            "label": "Configure by table",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.balance_sheet_impact_table_id": {
            "type": "select",
            "label": "Select Table",
            "show_if": "options.balance_sheet_impact__configure_by_table=='true'",
            "bind": "TABLES",
            "empty": "",
            "required": true,
            "breakLine": true
          },
          "options.balance_sheet_impact_table_help": {
            "type": "textarea",
            "label": "",
            "show_if": "options.balance_sheet_impact__configure_by_table=='true'",
            "val": "Table structure like Balance Sheet Impact Table by A24",
            "disabled": true,
            "md_no_resize": false,
            "width": "100%"
          },
          "options.balance_sheet_impact_table__extra": {
            "type": "fieldset",
            "label": "Additional Balance Sheet Impact Planning",
            "show_if": "options.balance_sheet_impact__configure_by_table=='false'",
            "repeat": true,
            "fields": {
              "position": {
                "type": "select",
                "label": "Position; Sub Position",
                "multiple" : true,
                "options": {
                  "Revenues; *": {
                    "label": "Revenues; *"
                  },
                  "Cost of Goods Sold; *": {
                    "label": "Cost of Goods Sold; *"
                  },
                  "Sales Expenses; *": {
                    "label": "Sales Expenses; *"
                  },
                  "Marketing Expenses; *": {
                    "label": "Marketing Expenses; *"
                  },
                  "Operating Expenses; *": {
                    "label": "Operating Expenses; *"
                  },
                  "General and Administration Expenses; *": {
                    "label": "General and Administration Expenses; *"
                  },
                  "Personnel Expenses; *": {
                    "label": "Personnel Expenses; *"
                  },
                  "Tax; *": {
                    "label": "Tax; *"
                  },
                  "Interest; *": {
                    "label": "Interest; *"
                  },
                  "Extraordinary Items; *": {
                    "label": "Extraordinary Items; *"
                  },
                  "Capital Expenditure; Land": {
                    "label": "Capital Expenditure; Land"
                  },
                  "Capital Expenditure; Building": {
                    "label": "Capital Expenditure; Building"
                  },
                  "Depreciation; *": {
                    "label": "Depreciation; *"
                  },
                  "Amortization; *": {
                    "label": "Amortization; *"
                  }
                },
                "val": "",
                "required": true
              },
              "impact_date": {
                "type": "select",
                "label": "Impact Date",
                "options": {
                  "On Date": {
                    "label": "On Date"
                  },
                  "On Payment Date": {
                    "label": "On Payment Date"
                  }
                },
                "val": "On Date",
                "required": true
              },
              "balance_sheet_category": {
                "type": "select",
                "label": "Balance Sheet Category",
                "required": true,
                "options": {
                  "Property and Equipment": {
                    "label": "Property and Equipment"
                  },
                  "Current Assets": {
                    "label": "Current Assets"
                  },
                  "Other Assets": {
                    "label": "Other Assets"
                  },
                  "Shareholders Equity": {
                    "label": "Shareholder's Equity"
                  },
                  "Long-term Liablities": {
                    "label": "Long-term Liabilities"
                  },
                  "Current Liablities": {
                    "label": "Current Liabilities"
                  }
                },
                "val": "Current Assets"
              },
              "balance_sheet_position": {
                "type": "select",
                "label": "Balance Sheet Position",
                "required": true,
                "options": {
                  "Property": {
                    "label": "Property"
                  },
                  "Land": {
                    "label": "Land"
                  },
                  "Buildings": {
                    "label": "Buildings"
                  },
                  "Equipment": {
                    "label": "Equipment"
                  },
                  "Vehicles": {
                    "label": "Vehicles"
                  },
                  "Cash": {
                    "label": "Cash"
                  },
                  "Bank": {
                    "label": "Bank"
                  },
                  "Cash & Equivalents": {
                    "label": "Cash & Equivalents"
                  },
                  "Accounts Receivable": {
                    "label": "Vehicles"
                  },
                  "Accruals": {
                    "label": "Accruals"
                  },
                  "Equity": {
                    "label": "Equity"
                  },
                  "Paid In Equity": {
                    "label": "Paid In Equity"
                  },
                  "Economic Equity": {
                    "label": "Economic Equity"
                  },
                  "Shareholder Loan": {
                    "label": "Shareholder Loan"
                  },
                  "Bank Loan": {
                    "label": "Bank Loan"
                  },
                  "Trade Liabilities": {
                    "label": "Trade Liabilities"
                  },
                  "Accounts Payable": {
                    "label": "Accounts Payable"
                  },
                  "Tax Liabilities": {
                    "label": "Tax Liabilities"
                  },
                  "Other Current Liablities": {
                    "label": "Other Current Liabilities"
                  },
                  "Profit current Year": {
                    "label": "Profit current Year"
                  }
                },
                "val": "Accounts Payable"
              },
              "change_sign": {
                "type": "select",
                "label": "Change Sign",
                "required": true,
                "options": {
                  "True": {
                    "label": "True"
                  },
                  "False": {
                    "label": "False"
                  }
                },
                "val": "False"
              },
              "balance_sheet_counter_category": {
                "type": "select",
                "label": "Counter Category",
                "required": true,
                "options": {
                  "Property and Equipment": {
                    "label": "Property and Equipment"
                  },
                  "Current Assets": {
                    "label": "Current Assets"
                  },
                  "Other Assets": {
                    "label": "Other Assets"
                  },
                  "Shareholders Equity": {
                    "label": "Shareholder's Equity"
                  },
                  "Longterm Liablities": {
                    "label": "Long-term Liabilities"
                  },
                  "Current Liablities": {
                    "label": "Current Liabilities"
                  }
                },
                "val": "Current Assets"
              },
              "balance_sheet_counter_position": {
                "type": "select",
                "label": "Counter Position",
                "required": true,
                "options": {
                  "Property": {
                    "label": "Property"
                  },
                  "Land": {
                    "label": "Land"
                  },
                  "Buildings": {
                    "label": "Buildings"
                  },
                  "Equipment": {
                    "label": "Equipment"
                  },
                  "Vehicles": {
                    "label": "Vehicles"
                  },
                  "Cash": {
                    "label": "Cash"
                  },
                  "Bank": {
                    "label": "Bank"
                  },
                  "Cash & Equivalents": {
                    "label": "Cash & Equivalents"
                  },
                  "Vehicles": {
                    "label": "Vehicles"
                  },
                  "Accruals": {
                    "label": "Accruals"
                  },
                  "Equity": {
                    "label": "Equity"
                  },
                  "Paid In Equity": {
                    "label": "Paid In Equity"
                  },
                  "Economic Equity": {
                    "label": "Economic Equity"
                  },
                  "Shareholder Loan": {
                    "label": "Shareholder Loan"
                  },
                  "Bank Loan": {
                    "label": "Bank Loan"
                  },
                  "Trade Liabilities": {
                    "label": "Trade Liabilities"
                  },
                  "Accounts Payable": {
                    "label": "Accounts Payable"
                  },
                  "Tax Liabilities": {
                    "label": "Tax Liabilities"
                  },
                  "Other Current Liablities": {
                    "label": "Other Current Liabilities"
                  },
                  "Profit current Year": {
                    "label": "Profit current Year"
                  }
                },
                "val": "Accounts Payable"
              },
              "counter_position_change_sign": {
                "type": "select",
                "label": "Change sign of count. pos.",
                "required": true,
                "options": {
                  "True": {
                    "label": "True"
                  },
                  "False": {
                    "label": "False"
                  }
                },
                "val": "False"
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          }
        },
        "breakLine": true
      },
      "options.balance_sheet_direct_planning__configure": {
        "type": "checkbox",
        "label": "Customize Balance Sheet Direct Planning",
        "show_if": "options.output_type=='pdf_planning_package' || (options.output_type=='table_output' && options.table_output_type=='bs_summary_list')",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "options.balance_sheet_direct_planning": {
        "type": "fieldset",
        "label": "Balance Sheet Direct Planning",
        "show_if": "(options.output_type=='pdf_planning_package' && options.balance_sheet_direct_planning__configure=='true') || (options.output_type=='table_output' && options.table_output_type=='bs_summary_list' && options.balance_sheet_direct_planning__configure=='true')",
        "repeat": true,
        "fields": {
          "balance_sheet_category": {
            "type": "select",
            "label": "Balance Sheet Category",
            "required": true,
            "options": {
              "Property and Equipment": {
                "label": "Property and Equipment"
              },
              "Current Assets": {
                "label": "Current Assets"
              },
              "Other Assets": {
                "label": "Other Assets"
              },
              "Shareholders Equity": {
                "label": "Shareholder's Equity"
              },
              "Long-term Liablities": {
                "label": "Long-term Liabilities"
              },
              "Current Liablities": {
                "label": "Current Liabilities"
              }
            },
            "val": "Current Assets"
          },
          "balance_sheet_position": {
            "type": "select",
            "label": "Balance Sheet Position",
            "required": true,
            "options": {
              "Property": {
                "label": "Property"
              },
              "Land": {
                "label": "Land"
              },
              "Buildings": {
                "label": "Buildings"
              },
              "Equipment": {
                "label": "Equipment"
              },
              "Vehicles": {
                "label": "Vehicles"
              },
              "Cash": {
                "label": "Cash"
              },
              "Bank": {
                "label": "Bank"
              },
              "Cash & Equivalents": {
                "label": "Cash & Equivalents"
              },
              "Accounts Receivable": {
                "label": "Vehicles"
              },
              "Accruals": {
                "label": "Accruals"
              },
              "Equity": {
                "label": "Equity"
              },
              "Paid In Equity": {
                "label": "Paid In Equity"
              },
              "Economic Equity": {
                "label": "Economic Equity"
              },
              "Shareholder Loan": {
                "label": "Shareholder Loan"
              },
              "Bank Loan": {
                "label": "Bank Loan"
              },
              "Trade Liabilities": {
                "label": "Trade Liabilities"
              },
              "Accounts Payable": {
                "label": "Accounts Payable"
              },
              "Tax Liabilities": {
                "label": "Tax Liabilities"
              },
              "Other Current Liablities": {
                "label": "Other Current Liabilities"
              },
              "Profit current Year": {
                "label": "Profit current Year"
              }
            },
            "val": "Accounts Payable"
          },
          "amount": {
            "type": "number",
            "label": "Amount",
            "val": 0,
            "required": true
          },
          "bs_direct_planning_date_year": {
            "type": "select",
            "label": "Year",
            "required": true,
            "options": {
              "2022": {
                "label": "2022"
              },
              "2023": {
                "label": "2023"
              },
              "2024": {
                "label": "2024"
              },
              "2025": {
                "label": "2025"
              },
              "2026": {
                "label": "2026"
              },
              "2027": {
                "label": "2027"
              },
              "2028": {
                "label": "2028"
              },
              "2029": {
                "label": "2029"
              },
              "2030": {
                "label": "2030"
              },
              "2031": {
                "label": "2031"
              },
              "2032": {
                "label": "2032"
              },
              "2033": {
                "label": "2033"
              },
              "2034": {
                "label": "2034"
              },
              "2035": {
                "label": "2035"
              },
              "2036": {
                "label": "2036"
              },
              "2037": {
                "label": "2037"
              },
              "2038": {
                "label": "2038"
              },
              "2039": {
                "label": "2039"
              },
              "2040": {
                "label": "2040"
              },
              "2041": {
                "label": "2041"
              },
              "2042": {
                "label": "2042"
              },
              "2043": {
                "label": "2043"
              },
              "2044": {
                "label": "2044"
              },
              "2045": {
                "label": "2045"
              },
              "2046": {
                "label": "2046"
              },
              "2047": {
                "label": "2047"
              },
              "2048": {
                "label": "2048"
              },
              "2049": {
                "label": "2049"
              },
              "2050": {
                "label": "2050"
              }
            },
            "val": "2023"
          },
          "bs_direct_planning_date_month": {
            "type": "select",
            "label": "Month",
            "required": true,
            "options": {
              "January": {
                "label": "January"
              },
              "February": {
                "label": "February"
              },
              "March": {
                "label": "March"
              },
              "April": {
                "label": "April"
              },
              "May": {
                "label": "May"
              },
              "June": {
                "label": "June"
              },
              "July": {
                "label": "July"
              },
              "August": {
                "label": "August"
              },
              "September": {
                "label": "September"
              },
              "October": {
                "label": "October"
              },
              "November": {
                "label": "November"
              },
              "December": {
                "label": "December"
              }
            },
            "val": "January"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        },
        "breakLine": true
      },
      "options.bs_data__custom_labels": {
        "type": "checkbox",
        "label": "Customise Labels",
        "show_if": "options.output_type=='pdf_planning_package'",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "bs_labels_placeholder__settings_and_title_page__frame": {
        "type": "fieldset",
        "label": "Customise 'Balance Sheet' PDF Labels (Settings and Title Page)",
        "show_if": "options.output_type=='pdf_planning_package' && options.bs_data__custom_labels=='true'",
        "repeat": false,
        "fields": {
          "options.package_type": {
            "type": "select",
            "label": "Package Type",
            "options": {
              "version1": {
                "label": "Version 1"
              },
              "version2": {
                "label": "Version 2"
              }
            },
            "val": "version1",
            "required": true,
            "breakLine": true
          },
          "options.bs_data.all_figures_in": {
            "type": "text",
            "label": "All Figures in",
            "placeholder": "All Figures in",
            "val": ""
          },
          "options.bs_data.planning_date_name": {
            "type": "text",
            "label": "Planning Date Name",
            "placeholder": "Planning Date Name",
            "val": ""
          },
          "options.bs_data.planning_version_name": {
            "type": "text",
            "label": "Planning Version Name",
            "placeholder": "Planning Version Name",
            "val": ""
          },
          "options.bs_data.confidential_note": {
            "type": "text",
            "label": "Confidential Note",
            "placeholder": "Confidential Note",
            "val": "Powered by ZIPPYDOC"
          },
          "options.bs_data.position_name": {
            "type": "text",
            "label": "Position Name",
            "placeholder": "Position Name",
            "val": "Position"
          },
          "options.bs_data.sub_position_name": {
            "type": "text",
            "label": "Sub Position Name",
            "placeholder": "Sub Position Name",
            "val": "Sub Position"
          },
          "options.bs_data.item_name": {
            "type": "text",
            "label": "Item Name",
            "placeholder": "Item Name",
            "val": "Item"
          },
          "options.bs_data.growth_curve_name": {
            "type": "text",
            "label": "Growth Curve Name",
            "placeholder": "Growth Curve Name",
            "val": "Growth Curve"
          },
          "options.bs_data.growth_name": {
            "type": "text",
            "label": "Growth Name",
            "placeholder": "Growth Name",
            "val": "Growth (%)"
          },
          "options.bs_data.year_1_name": {
            "type": "text",
            "label": "Year1 Name",
            "placeholder": "Year1 Name",
            "val": "2021"
          },
          "options.bs_data.year_2_name": {
            "type": "text",
            "label": "Year2 Name",
            "placeholder": "Year2 Name",
            "val": "2023"
          },
          "options.bs_data.year_3_name": {
            "type": "text",
            "label": "Year3 Name",
            "placeholder": "Year3 Name",
            "val": "2023"
          },
          "options.bs_data.year_4_name": {
            "type": "text",
            "label": "Year4 Name",
            "placeholder": "Year4 Name",
            "val": "2024"
          },
          "options.bs_data.year_5_name": {
            "type": "text",
            "label": "Year5 Name",
            "placeholder": "Year5 Name",
            "val": "2025"
          },
          "options.bs_data.qrt_1_name": {
            "type": "text",
            "label": "Qrt. 1 Name",
            "placeholder": "Qrt. 1 Name",
            "val": "Qrt. 1"
          },
          "options.bs_data.qrt_2_name": {
            "type": "text",
            "label": "Qrt. 2 Name",
            "placeholder": "Qrt. 2 Name",
            "val": "Qrt. 2"
          },
          "options.bs_data.qrt_3_name": {
            "type": "text",
            "label": "Qrt. 3 Name",
            "placeholder": "Qrt. 3 Name",
            "val": "Qrt. 3"
          },
          "options.bs_data.qrt_4_name": {
            "type": "text",
            "label": "Qrt. 4 Name",
            "placeholder": "Qrt. 4 Name",
            "val": "Qrt. 4"
          },
          "options.bs_data.month_1_name": {
            "type": "text",
            "label": "Month 1 Name",
            "placeholder": "Month 1 Name",
            "val": "Jan"
          },
          "options.bs_data.month_2_name": {
            "type": "text",
            "label": "Month 2 Name",
            "placeholder": "Month 2 Name",
            "val": "Feb"
          },
          "options.bs_data.month_3_name": {
            "type": "text",
            "label": "Month 3 Name",
            "placeholder": "Month 3 Name",
            "val": "Mar"
          },
          "options.bs_data.month_4_name": {
            "type": "text",
            "label": "Month 4 Name",
            "placeholder": "Month 4 Name",
            "val": "Apr"
          },
          "options.bs_data.month_5_name": {
            "type": "text",
            "label": "Month 5 Name",
            "placeholder": "Month 5 Name",
            "val": "May"
          },
          "options.bs_data.month_6_name": {
            "type": "text",
            "label": "Month 6 Name",
            "placeholder": "Month 6 Name",
            "val": "Jun"
          },
          "options.bs_data.month_7_name": {
            "type": "text",
            "label": "Month 7 Name",
            "placeholder": "Month 7 Name",
            "val": "Jul"
          },
          "options.bs_data.month_8_name": {
            "type": "text",
            "label": "Month 8 Name",
            "placeholder": "Month 8 Name",
            "val": "Aug"
          },
          "options.bs_data.month_9_name": {
            "type": "text",
            "label": "Month 9 Name",
            "placeholder": "Month 9 Name",
            "val": "Sep"
          },
          "options.bs_data.month_10_name": {
            "type": "text",
            "label": "Month 10 Name",
            "placeholder": "Month 10 Name",
            "val": "Oct"
          },
          "options.bs_data.month_11_name": {
            "type": "text",
            "label": "Month 11 Name",
            "placeholder": "Month 11 Name",
            "val": "Nov"
          },
          "options.bs_data.month_12_name": {
            "type": "text",
            "label": "Month 12 Name",
            "placeholder": "Month 12 Name",
            "val": "Dec"
          },
          "options.bs_data.full_year_name": {
            "type": "text",
            "label": "Full Year Name",
            "placeholder": "Full Year Name",
            "val": "FY"
          },
          "options.bs_data.year_on_year_name": {
            "type": "text",
            "label": "Year on Year Name",
            "placeholder": "Year on Year Name",
            "val": "YoY"
          },
          "options.bs_data.month_on_month_name": {
            "type": "text",
            "label": "Month on Month Name",
            "placeholder": "Month on Month Name",
            "val": "MoM"
          },
          "options.bs_data.title_planning_package": {
            "type": "text",
            "label": "Title Planning Package",
            "placeholder": "Title Planning Package",
            "val": "Planning Package v1"
          },
          "options.bs_data.sub_title_planning_package": {
            "type": "text",
            "label": "Subtitle Planning Package",
            "placeholder": "Subtitle Planning Package",
            "val": "Enjoy a new planning experience!"
          },
          "options.bs_data.notes_planning_package": {
            "type": "text",
            "label": "Notes Planning Package",
            "placeholder": "Notes Planning Package",
            "val": ""
          },
          "options.bs_data.planning_version": {
            "type": "text",
            "label": "Planning Version",
            "placeholder": "Planning Version",
            "val": ""
          },
          "options.bs_data.planning_date": {
            "type": "text",
            "label": "Planning Date",
            "placeholder": "Planning Date",
            "val": ""
          }
        },
        "breakLine": true
      },
      "bs_labels_placeholder__balance_sheet__frame": {
        "type": "fieldset",
        "label": "Customise 'Balance Sheet' PDF Labels (Balance Sheet)",
        "show_if": "options.output_type=='pdf_planning_package' && options.bs_data__custom_labels=='true'",
        "repeat": false,
        "fields": {
          "options.bs_data.company_name": {
            "type": "text",
            "label": "Company Name",
            "placeholder": "My Company ltd.",
            "val": "BIG DATA BUSINESS PLANNING"
          },
          "options.bs_date_year": {
            "type": "select",
            "label": "Balance Sheet Date's Year",
            "required": true,
            "options": {
              "2022": {
                "label": "2022"
              },
              "2023": {
                "label": "2023"
              },
              "2024": {
                "label": "2024"
              },
              "2025": {
                "label": "2025"
              },
              "2026": {
                "label": "2026"
              },
              "2027": {
                "label": "2027"
              },
              "2028": {
                "label": "2028"
              },
              "2029": {
                "label": "2029"
              },
              "2030": {
                "label": "2030"
              },
              "2031": {
                "label": "2031"
              },
              "2032": {
                "label": "2032"
              },
              "2033": {
                "label": "2033"
              },
              "2034": {
                "label": "2034"
              },
              "2035": {
                "label": "2035"
              },
              "2036": {
                "label": "2036"
              },
              "2037": {
                "label": "2037"
              },
              "2038": {
                "label": "2038"
              },
              "2039": {
                "label": "2039"
              },
              "2040": {
                "label": "2040"
              },
              "2041": {
                "label": "2041"
              },
              "2042": {
                "label": "2042"
              },
              "2043": {
                "label": "2043"
              },
              "2044": {
                "label": "2044"
              },
              "2045": {
                "label": "2045"
              },
              "2046": {
                "label": "2046"
              },
              "2047": {
                "label": "2047"
              },
              "2048": {
                "label": "2048"
              },
              "2049": {
                "label": "2049"
              },
              "2050": {
                "label": "2050"
              }
            },
            "val": "2023"
          },
          "options.bs_date_month": {
            "type": "select",
            "label": "Balance Sheet Date's Month",
            "required": true,
            "options": {
              "January": {
                "label": "January"
              },
              "February": {
                "label": "February"
              },
              "March": {
                "label": "March"
              },
              "April": {
                "label": "April"
              },
              "May": {
                "label": "May"
              },
              "June": {
                "label": "June"
              },
              "July": {
                "label": "July"
              },
              "August": {
                "label": "August"
              },
              "September": {
                "label": "September"
              },
              "October": {
                "label": "October"
              },
              "November": {
                "label": "November"
              },
              "December": {
                "label": "December"
              }
            },
            "val": "December"
          },
          "options.bs_data__date_format": {
            "type": "select",
            "label": "Date Format",
            "required": true,
            "options": {
              "mm/dd/yyyy": {
                "label": "3/14/2012"
              },
              "D, M dd, Y": {
                "label": "Wednesday, March 14, 2012"
              },
              "yyyy-mm-dd": {
                "label": "2012-03-14"
              },
              "m.dd.yyyy": {
                "label": "3.14.2012"
              },
              "m.dd.yy": {
                "label": "3.14.12"
              },
              "dd.m.yyyy": {
                "label": "14.3.2012"
              },
              "dd.m.yy": {
                "label": "14.3.12"
              },
              "M dd, Y": {
                "label": "March 14, 2012"
              },
              "dd-mm-yyyy": {
                "label": "14-03-2012"
              },
              "mm-dd-yyyy": {
                "label": "03-14-2012"
              },
              "dd-mm-yy": {
                "label": "14-03-12"
              },
              "mm-dd-yy": {
                "label": "03-14-12"
              }
            },
            "val": "M dd, Y",
            "breakLine": true
          },
          "options.bs_data.currency": {
            "type": "text",
            "label": "Currency",
            "placeholder": "€ million",
            "val": ""
          },
          "options.bs_data.logo": {
            "type": "text",
            "label": "Logo(Base64 Encoded Data of JPEG)",
            "placeholder": "data:image/jpeg;base64, /9j/4AAQSkZJRgABAQEA",
            "val": "",
            "width": "100%"
          },
          "options.bs_data__help_text_logo": {
            "type": "text",
            "label": "",
            "val": "For conversion you may use e.g. https://onlinejpgtools.com/convert-jpg-to-base64",
            "disabled": true,
            "width": "100%"
          },
          "options.bs_data.title_balance_sheet": {
            "type": "text",
            "label": "Title Balance Sheet",
            "placeholder": "Title Balance Sheet",
            "val": "Balance Sheet"
          },
          "options.bs_data.sub_title_balance_sheet": {
            "type": "text",
            "label": "Subtitle Balance Sheet",
            "placeholder": "Subtitle Balance Sheet",
            "val": ""
          },
          "options.bs_data.notes_balance_sheet": {
            "type": "text",
            "label": "Notes Balance Sheet",
            "placeholder": "Notes Balance Sheet",
            "val": ""
          },
          "options.bs_data.assets_header_name": {
            "type": "text",
            "label": "Assets Header Name",
            "placeholder": "Assets Header Name",
            "val": "Assets"
          },
          "options.bs_data.liabilities_header_name": {
            "type": "text",
            "label": "Liabilities Header Name",
            "placeholder": "Liabilities Header Name",
            "val": "Liabilities"
          },
          "options.bs_data.total_assets_name": {
            "type": "text",
            "label": "Total Assets Name",
            "placeholder": "Total Assets Name",
            "val": "Total Assets"
          },
          "options.bs_data.total_liablities_name": {
            "type": "text",
            "label": "Total Liabilities Name",
            "placeholder": "Total Liabilities Name",
            "val": "Total Liabilities"
          },
          "options.bs_data.current_assets_name": {
            "type": "text",
            "label": "Current Assets Name",
            "placeholder": "Current Assets Name",
            "val": "Current Assets"
          },
          "options.bs_data.current_liabilities_name": {
            "type": "text",
            "label": "Current Liabilities Name",
            "placeholder": "Current Liabilities Name",
            "val": "Current Liabilities"
          },
          "options.bs_data.property_equipment_name": {
            "type": "text",
            "label": "Property Equipment Name",
            "placeholder": "Property Equipment Name",
            "val": "Property & Equipment"
          },
          "options.bs_data.longterm_liabilities_name": {
            "type": "text",
            "label": "Longterm Liabilities Name",
            "placeholder": "Longterm Liabilities Name",
            "val": "Long-term Liabilities"
          },
          "options.bs_data.other_assets_name": {
            "type": "text",
            "label": "Other Assets Name",
            "placeholder": "Other Assets Name",
            "val": "Other Assets"
          },
          "options.bs_data.other_liablities_name": {
            "type": "text",
            "label": "Other Liablities Name",
            "placeholder": "Other Liablities Name",
            "val": "Other Liabilities"
          },
          "options.bs_data.shareholders_equity_name": {
            "type": "text",
            "label": "Shareholders Equity Name",
            "placeholder": "Shareholders Equity Name",
            "val": "Shareholders Equity"
          }
        },
        "breakLine": true
      },
      "bs_labels_placeholder__profit_and_loss__frame": {
        "type": "fieldset",
        "label": "Customise 'Balance Sheet' PDF Labels (Profit & Loss)",
        "show_if": "options.output_type=='pdf_planning_package' && options.bs_data__custom_labels=='true'",
        "repeat": false,
        "fields": {
          "options.bs_data.title_profit_and_loss_yearly": {
            "type": "text",
            "label": "Yearly Profit & Loss Title",
            "placeholder": "Yearly Profit & Loss Title",
            "val": "Yearly Profit & Loss Development"
          },
          "options.bs_data.sub_title_profit_and_loss_yearly": {
            "type": "text",
            "label": "Subtitle Profit & Loss Yearly",
            "placeholder": "Subtitle Profit & Loss Yearly",
            "val": ""
          },
          "options.bs_data.notes_profit_and_loss_yearly": {
            "type": "text",
            "label": "Notes Profit & Loss Yearly",
            "placeholder": "Notes Profit & Loss Yearly",
            "val": ""
          },
          "options.bs_data.title_profit_and_loss_quarterly": {
            "type": "text",
            "label": "Quarterly Profit & Loss Title",
            "placeholder": "Quarterly Profit & Loss Title",
            "val": "Quarterly Profit & Loss Development"
          },
          "options.bs_data.sub_title_profit_and_loss_quarterly": {
            "type": "text",
            "label": "Subtitle Profit & Loss Quarterly",
            "placeholder": "Subtitle Profit & Loss Quarterly",
            "val": ""
          },
          "options.bs_data.notes_profit_and_loss_quarterly": {
            "type": "text",
            "label": "Notes Profit & Loss Quarterly",
            "placeholder": "Notes Profit & Loss Quarterly",
            "val": ""
          },
          "options.bs_data.title_profit_and_loss_monthly": {
            "type": "text",
            "label": "Monthly Profit & Loss Title",
            "placeholder": "Monthly Profit & Loss Title",
            "val": "Monthly Profit & Loss Development"
          },
          "options.bs_data.sub_title_profit_and_loss_monthly": {
            "type": "text",
            "label": "Subtitle Profit & Loss Monthly",
            "placeholder": "Subtitle Profit & Loss Monthly",
            "val": ""
          },
          "options.bs_data.notes_profit_and_loss_monthly": {
            "type": "text",
            "label": "Notes Profit & Loss Monthly",
            "placeholder": "Notes Profit & Loss Monthly",
            "val": ""
          }
        },
        "breakLine": true
      },
      "bs_labels_placeholder__cash_flow__frame": {
        "type": "fieldset",
        "label": "Customise 'Balance Sheet' PDF Labels (Cash Flow)",
        "show_if": "options.output_type=='pdf_planning_package' && options.bs_data__custom_labels=='true'",
        "repeat": false,
        "fields": {
          "options.bs_data.title_cash_flow_yearly": {
            "type": "text",
            "label": "Yearly Cashflow Title",
            "placeholder": "Yearly Cashflow Title",
            "val": "Yearly Cashflow Development"
          },
          "options.bs_data.sub_title_cash_flow_yearly": {
            "type": "text",
            "label": "Subtitle Cashflow Yearly",
            "placeholder": "Subtitle Cashflow Yearly",
            "val": ""
          },
          "options.bs_data.notes_cash_flow_yearly": {
            "type": "text",
            "label": "Notes Cashflow Yearly",
            "placeholder": "Notes Cashflow Yearly",
            "val": ""
          },
          "options.bs_data.title_cash_flow_quarterly": {
            "type": "text",
            "label": "Quarterly Cashflow Title",
            "placeholder": "Quarterly Cashflow Title",
            "val": "Quarterly Cashflow Development"
          },
          "options.bs_data.sub_title_cash_flow_quarterly": {
            "type": "text",
            "label": "Subtitle Cashflow Quarterly",
            "placeholder": "Subtitle Cashflow Quarterly",
            "val": ""
          },
          "options.bs_data.notes_cash_flow_quarterly": {
            "type": "text",
            "label": "Notes Cashflow Quarterly",
            "placeholder": "Notes Cashflow Quarterly",
            "val": ""
          },
          "options.bs_data.title_cash_flow_monthly": {
            "type": "text",
            "label": "Monthly Cashflow Title",
            "placeholder": "Monthly Cashflow Title",
            "val": "Monthly Cashflow Development"
          },
          "options.bs_data.sub_title_cash_flow_monthly": {
            "type": "text",
            "label": "Subtitle Cashflow Monthly",
            "placeholder": "Subtitle Cashflow Monthly",
            "val": ""
          },
          "options.bs_data.notes_cash_flow_monthly": {
            "type": "text",
            "label": "Notes Cashflow Monthly",
            "placeholder": "Notes Cashflow Monthly",
            "val": ""
          }
        },
        "breakLine": true
      },
      "bs_labels_placeholder__bs_development__frame": {
        "type": "fieldset",
        "label": "Customise 'Balance Sheet' PDF Labels (Balance Sheet Development)",
        "show_if": "options.output_type=='pdf_planning_package' && options.bs_data__custom_labels=='true'",
        "repeat": false,
        "fields": {
          "options.bs_data.title_balance_sheet_development_yearly": {
            "type": "text",
            "label": "Yearly Balance Sheet Title",
            "placeholder": "Yearly Balance Sheet Title",
            "val": "Yearly Balance Sheet Development"
          },
          "options.bs_data.sub_title_balance_sheet_development_yearly": {
            "type": "text",
            "label": "Subtitle Balance Sheet Yearly",
            "placeholder": "Subtitle Balance Sheet Yearly",
            "val": ""
          },
          "options.bs_data.notes_balance_sheet_development_yearly": {
            "type": "text",
            "label": "Notes Balance Sheet Development Yearly",
            "placeholder": "Notes Balance Sheet Development Yearly",
            "val": ""
          },
          "options.bs_data.title_balance_sheet_development_quarterly": {
            "type": "text",
            "label": "Quarterly Balance Sheet Title",
            "placeholder": "Quarterly Balance Sheet Title",
            "val": "Quarterly Balance Sheet Development"
          },
          "options.bs_data.sub_title_balance_sheet_development_quarterly": {
            "type": "text",
            "label": "Subtitle Balance Sheet Quarterly",
            "placeholder": "Subtitle Balance Sheet Quarterly",
            "val": ""
          },
          "options.bs_data.notes_balance_sheet_development_quarterly": {
            "type": "text",
            "label": "Notes Balance Sheet Development Quarterly",
            "placeholder": "Notes Balance Sheet Development Quarterly",
            "val": ""
          },
          "options.bs_data.title_balance_sheet_development_monthly": {
            "type": "text",
            "label": "Monthly Balance Sheet Title",
            "placeholder": "Monthly Balance Sheet Title",
            "val": "Monthly Balance Sheet Development"
          },
          "options.bs_data.sub_title_balance_sheet_development_monthly": {
            "type": "text",
            "label": "Subtitle Balance Sheet Monthly",
            "placeholder": "Subtitle Balance Sheet Monthly",
            "val": ""
          },
          "options.bs_data.notes_balance_sheet_development_monthly": {
            "type": "text",
            "label": "Notes Balance Sheet Development Monthly",
            "placeholder": "Notes Balance Sheet Development Monthly",
            "val": ""
          }
        },
        "breakLine": true
      },
      "bs_labels_placeholder__assumptions_overview__frame": {
        "type": "fieldset",
        "label": "Customise 'Balance Sheet' PDF Labels (Assumptions Overview)",
        "show_if": "options.output_type=='pdf_planning_package' && options.bs_data__custom_labels=='true'",
        "repeat": false,
        "fields": {
          "options.bs_data.title_planning_assumptions": {
            "type": "text",
            "label": "Planning Assumptions",
            "placeholder": "Planning Assumptions",
            "val": "Planning Assumptions"
          },
          "options.bs_data.sub_title_planning_assumptions": {
            "type": "text",
            "label": "Subtitle Planning Assumptions",
            "placeholder": "Subtitle Planning Assumptions",
            "val": ""
          },
          "options.bs_data.notes_planning_assumptions": {
            "type": "text",
            "label": "Notes Planning Assumptions",
            "placeholder": "Notes Planning Assumptions",
            "val": ""
          },
          "options.bs_data.title_planning_package": {
            "type": "text",
            "label": "Title Planning Package",
            "placeholder": "Title Planning Package",
            "val": "Planning Package"
          },
          "options.bs_data.sub_title_planning_package": {
            "type": "text",
            "label": "Subtitle Planning Package",
            "placeholder": "Subtitle Planning Package",
            "val": ""
          },
          "options.bs_data.assumptions_position_name": {
            "type": "text",
            "label": "Assumptions Position Name",
            "placeholder": "Assumptions Position Name",
            "val": "Position"
          },
          "options.bs_data.assumptions_sub_position_name": {
            "type": "text",
            "label": "Assumptions Sub Position Name",
            "placeholder": "Assumptions Sub Position Name",
            "val": "Sub Position"
          },
          "options.bs_data.assumptions_item_name": {
            "type": "text",
            "label": "Assumptions Item Name",
            "placeholder": "Assumptions Item Name",
            "val": "Item"
          },
          "options.bs_data.assumptions_amount_name": {
            "type": "text",
            "label": "Assumptions Amount Name",
            "placeholder": "Assumptions Amount Name",
            "val": "Amount"
          },
          "options.bs_data.assumptions_payment_days_name": {
            "type": "text",
            "label": "Assumptions Payment Days Name",
            "placeholder": "Assumptions Payment Days Name",
            "val": "Payment Days"
          },
          "options.bs_data.assumptions_initial_date_name": {
            "type": "text",
            "label": "Assumptions Initial Date Name",
            "placeholder": "Assumptions Initial Date Name",
            "val": "(Initial) Date"
          },
          "options.bs_data.assumptions_final_date_name": {
            "type": "text",
            "label": "Assumptions Final Date Name",
            "placeholder": "Assumptions Final Date Name",
            "val": "Final Date"
          },
          "options.bs_data.assumptions_repetition_name": {
            "type": "text",
            "label": "Assumptions Repetition Name",
            "placeholder": "Assumptions Repetition Name",
            "val": "Repetition"
          },
          "options.bs_data.assumptions_growth_name": {
            "type": "text",
            "label": "Assumptions Growth Name",
            "placeholder": "Assumptions Growth Name",
            "val": "Growth..."
          },
          "options.bs_data.assumptions_applied_on_period_name": {
            "type": "text",
            "label": "Assumptions Applied on Period Name",
            "placeholder": "Assumptions Applied on Period Name",
            "val": "...applied on period"
          },
          "options.bs_data.assumptions_growth_curve_name": {
            "type": "text",
            "label": "Assumptions Growth Curve Name",
            "placeholder": "Assumptions Growth Curve Name",
            "val": "Growth Curve"
          },
          "options.bs_data.assumptions_notes_name": {
            "type": "text",
            "label": "Assumptions Notes Name",
            "placeholder": "Assumptions Notes Name",
            "val": "Notes"
          }
        },
        "breakLine": true
      },
      "options.add_categories": {
        "type": "checkbox",
        "label": "Add Categories",
        "show_if": "options.configure_by_table=='by_assumption_menu'",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "options.categories": {
        "type": "fieldset",
        "label": "Add Categories",
        "show_if": "options.configure_by_table=='by_assumption_menu' && options.add_categories=='true'",
        "repeat": true,
        "fields": {
          "category": {
            "type": "text",
            "label": "Category",
            "val": "",
            "required": true
          },
          "value": {
            "type": "text",
            "label": "Value",
            "val": ""
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        },
        "breakLine": true
      },
      "options.start_date": {
        "type": "date",
        "label": "Start Date of Table",
        "val": ""
      },
      "options.end_date": {
        "type": "date",
        "label": "End Date of Table",
        "val": "",
        "breakLine": true
      }
    }
  },
  "formatting_frame": {
    "type": "fieldset",
    "label": "Set Formatting",
    "show_if": "options.set_plan_config=='true'",
    "repeat": false,
    "fields": {
      "options.set_amount_column_formatting": {
        "type": "checkbox",
        "label": "Set Amount Column Formatting",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px"
      },
      "amount_column_formatting_frame": {
        "type": "fieldset",
        "label": "Amount Column Formatting",
        "show_if": "options.set_amount_column_formatting=='true'",
        "repeat": false,
        "fields": {
          "options.amount.format__category": {
            "type": "select",
            "label": "Amount Format",
            "required": true,
            "options": {
              "standard": {
                "label": "Standard"
              },
              "number": {
                "label": "Number"
              },
              "percentage": {
                "label": "Percentage"
              },
              "text": {
                "label": "Text"
              },
              "currency": {
                "label": "Currency"
              }
            },
            "val": "currency"
          },
          "options.amount.format__rounding": {
            "type": "select",
            "label": "Decimal Places for display",
            "show_if": "options.amount.format__category=='number' || options.amount.format__category=='percentage' || options.amount.format__category=='currency'",
            "required": true,
            "options": {
              "no_rounding": {
                "label": "No rounding"
              },
              "0": {
                "label": "0 digits"
              },
              "1": {
                "label": "1 digits"
              },
              "2": {
                "label": "2 digits"
              },
              "3": {
                "label": "3 digits"
              },
              "4": {
                "label": "4 digits"
              },
              "5": {
                "label": "5 digits"
              },
              "6": {
                "label": "6 digits"
              },
              "7": {
                "label": "7 digits"
              },
              "8": {
                "label": "8 digits"
              },
              "9": {
                "label": "9 digits"
              }
            },
            "val": "2"
          },
          "options.amount.format__use_1000_separator": {
            "type": "checkbox",
            "label": "Use 1000 Separator(,)",
            "show_if": "options.amount.format__category=='number' || options.amount.format__category=='percentage' || options.amount.format__category=='currency'",
            "val": "true",
            "isOn": "true",
            "isOff": "false"
          },
          "options.amount.format__currency_symbol": {
            "type": "select",
            "label": "Symbol",
            "show_if": "options.amount.format__category=='currency'",
            "required": true,
            "options": {
              "dollar": {
                "label": "$"
              },
              "euro": {
                "label": "€"
              },
              "pound": {
                "label": "£"
              },
              "yen": {
                "label": "¥ (Yen, currency of Japan)"
              },
              "colon": {
                "label": "₡ (Colón, currency of Costa Rica)"
              },
              "naira": {
                "label": "₦ (Naira, currency of Nigeria)"
              },
              "rupee": {
                "label": "₨ (Rupee, currency of India)"
              },
              "rupie": {
                "label": "₹ (Rupee, currency of India)"
              },
              "won": {
                "label": "₩ (Won, currency in South Korea and North Korea)"
              },
              "hebrew": {
                "label": "₪ (Currency of Israel)"
              },
              "dong": {
                "label": "₫ (Currency of Vietnam)"
              },
              "kip": {
                "label": "₭ (Kip, currency of Laos)"
              },
              "mongolia": {
                "label": "₮ (Currency of Mongolia)"
              },
              "peso": {
                "label": "₱ (Peso, currency of the Philippines)"
              },
              "guarani": {
                "label": "₲ (Guaraní, currency of Paraguay)"
              },
              "hryvnia": {
                "label": "₴ (Hryvnia, currency of Ukraine)"
              },
              "tenge": {
                "label": "₸ (Tenge, currency of Kazakhstan)"
              },
              "lira": {
                "label": "₺ (Lira, currency of Turkey)"
              },
              "manat": {
                "label": "₼ (Manat, currency of Azerbaijan)"
              },
              "rubles": {
                "label": "₽ (Rubles, currency of Russia)"
              },
              "lari": {
                "label": "₾ (Lari, currency of Georgia)"
              },
              "bitcoin": {
                "label": "₿ (Bitcoin, crypto currency)"
              }
            },
            "val": "dollar"
          },
          "options.amount.format__date_format": {
            "type": "select",
            "label": "Type",
            "show_if": "options.amount.format__category=='date'",
            "required": true,
            "options": {
              "mm/dd/yyyy": {
                "label": "3/14/2012"
              },
              "D, M dd, Y": {
                "label": "Wednesday, March 14, 2012"
              },
              "yyyy-mm-dd": {
                "label": "2012-03-14"
              },
              "m.dd.yyyy": {
                "label": "3.14.2012"
              },
              "m.dd.yy": {
                "label": "3.14.12"
              },
              "dd.m.yyyy": {
                "label": "14.3.2012"
              },
              "dd.m.yy": {
                "label": "14.3.12"
              },
              "M dd, Y": {
                "label": "March 14, 2012"
              },
              "dd-mm-yyyy": {
                "label": "14-03-2012"
              },
              "mm-dd-yyyy": {
                "label": "03-14-2012"
              },
              "dd-mm-yy": {
                "label": "14-03-12"
              },
              "mm-dd-yy": {
                "label": "03-14-12"
              }
            },
            "val": "mm/dd/yyyy",
            "breakLine": true
          }
        },
        "breakLine": true
      },
      "options.set_date_column_formatting": {
        "type": "checkbox",
        "label": "Set Date Column Formatting",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px"
      },
      "date_column_formatting_frame": {
        "type": "fieldset",
        "label": "Date Column Formatting",
        "show_if": "options.set_date_column_formatting=='true'",
        "repeat": false,
        "fields": {
          "options.date.format__category": {
            "type": "hidden",
            "val": "date"
          },
          "options.date.format__date_format": {
            "type": "select",
            "label": "Type",
            "show_if": "options.date.format__category=='date'",
            "required": true,
            "options": {
              "mm/dd/yyyy": {
                "label": "3/14/2012"
              },
              "D, M dd, Y": {
                "label": "Wednesday, March 14, 2012"
              },
              "yyyy-mm-dd": {
                "label": "2012-03-14"
              },
              "m.dd.yyyy": {
                "label": "3.14.2012"
              },
              "m.dd.yy": {
                "label": "3.14.12"
              },
              "dd.m.yyyy": {
                "label": "14.3.2012"
              },
              "dd.m.yy": {
                "label": "14.3.12"
              },
              "M dd, Y": {
                "label": "March 14, 2012"
              },
              "dd-mm-yyyy": {
                "label": "14-03-2012"
              },
              "mm-dd-yyyy": {
                "label": "03-14-2012"
              },
              "dd-mm-yy": {
                "label": "14-03-12"
              },
              "mm-dd-yy": {
                "label": "03-14-12"
              }
            },
            "val": "mm/dd/yyyy",
            "breakLine": true
          }
        },
        "breakLine": true
      }
    }
  }
}
,
"/PlanningOutput.json/PlanningOutput.json": {
  "output": {
    "type": "fieldset",
    "label": "Output and Settings",
    "show_if": "(options.output_type=='table_output' && output.output_and_setting=='true') || (options.output_type=='pdf_planning_package' && options.where_to_create=='only_export_to_cloud' && output.output_and_setting=='true')",
    "repeat": false,
    "fields": {
    }
  }
},
"/TableToJsonOptions.json/TableToJsonOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.category": {
        "type": "hidden",
        "val": "table_to_json"
      }
    }
  }
},
"/DCClimateWorldDataOptions.json/DCClimateWorldDataOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.task_symbol": {
        "type": "hidden",
        "val": "climate"
      },
      "options.group_by": {
        "type": "select",
        "label": "Group By",
        "required": true,
        "options": {
          "Region": {
            "label": "Region"
          },
          "Income Group": {
            "label": "Income Group"
          }
        },
        "val": "Region"
      },
      "options.stat_var_name": {
        "type": "select",
        "label": "Statistics Data",
        "required": true,
        "options": {
          "Amount_Emissions_CarbonDioxide_PerCapita": {
            "label": "CO2 Emissions Per Capita"
          },
          "Count_EarthquakeEvent": {
            "label": "Count of Earthquake Event"
          },
          "Count_EarthquakeEvent_M3To4": {
            "label": "Count of Earthquake Event of 3 - 4 Magnitude"
          },
          "Count_EarthquakeEvent_M3Onwards": {
            "label": "Count of Earthquake Event of 3 Magnitude or More"
          },
          "Count_EarthquakeEvent_M4To5": {
            "label": "Count of Earthquake Event of 4 - 5 Magnitude"
          },
          "Count_EarthquakeEvent_M4Onwards": {
            "label": "Count of Earthquake Event of 4 Magnitude or More"
          },
          "Count_EarthquakeEvent_M5To6": {
            "label": "Count of Earthquake Event of 5 - 6 Magnitude"
          },
          "Count_EarthquakeEvent_M5Onwards": {
            "label": "Count of Earthquake Event of 5 Magnitude or More"
          },
          "Max_Temperature": {
            "label": "Max Temperature"
          },
          "DifferenceAcrossModels_Max_Temperature": {
            "label": "Max Temperature (Difference Across Models)"
          },
          "Min_Temperature": {
            "label": "Min Temperature"
          },
          "DifferenceAcrossModels_Min_Temperature": {
            "label": "Min Temperature (Difference Across Models)"
          },
          "PrecipitationRate": {
            "label": "Precipitation Rate"
          },
          "DifferenceAcrossModels_PrecipitationRate": {
            "label": "Precipitation Rate (Difference Across Models)"
          },
          "Max_Temperature_RCP45": {
            "label": "Max Temperature Based on RCP 4.5"
          },
          "DifferenceAcrossModels_Max_Temperature_RCP45": {
            "label": "Max Temperature Based on RCP 4.5 (Difference Across Models)"
          },
          "Min_Temperature_RCP45": {
            "label": "Min Temperature Based on RCP 4.5"
          },
          "DifferenceAcrossModels_Min_Temperature_RCP45": {
            "label": "Min Temperature Based on RCP 4.5 (Difference Across Models)"
          },
          "PrecipitationRate_RCP45": {
            "label": "Precipitation Rate Based on RCP 4.5"
          },
          "DifferenceAcrossModels_PrecipitationRate_RCP45": {
            "label": "Precipitation Rate Based on RCP 4.5 (Difference Across Models)"
          },
          "DifferenceRelativeToBaseDate2006_Max_Temperature_RCP45": {
            "label": "Max Temperature Relative To 2006, RCP 4.5 (Difference Relative To Base Date)"
          },
          "DifferenceRelativeToBaseDate2006_Min_Temperature_RCP45": {
            "label": "Min Temperature Relative To 2006, RCP 4.5 (Difference Relative To Base Date)"
          },
          "DifferenceRelativeToBaseDate2006_PrecipitationRate_RCP45": {
            "label": "Precipitation Rate Relative To 2006, RCP 4.5 (Difference Relative To Base Date)"
          },
          "Max_Temperature_RCP85": {
            "label": "Max Temperature Based on RCP 8.5"
          },
          "DifferenceAcrossModels_Max_Temperature_RCP85": {
            "label": "Max Temperature Based on RCP 8.5 (Difference Across Models)"
          },
          "Min_Temperature_RCP85": {
            "label": "Min Temperature Based on RCP 8.5"
          },
          "DifferenceAcrossModels_Min_Temperature_RCP85": {
            "label": "Min Temperature Based on RCP 8.5 (Difference Across Models)"
          },
          "PrecipitationRate_RCP85": {
            "label": "Precipitation Rate Based on RCP 8.5"
          },
          "DifferenceAcrossModels_PrecipitationRate_RCP85": {
            "label": "Precipitation Rate Based on RCP 8.5 (Difference Across Models)"
          },
          "DifferenceRelativeToBaseDate2006_Max_Temperature_RCP85": {
            "label": "Max Temperature Relative To 2006, RCP 8.5 (Difference Relative To Base Date)"
          },
          "DifferenceRelativeToBaseDate2006_Min_Temperature_RCP85": {
            "label": "Min Temperature Relative To 2006, RCP 8.5 (Difference Relative To Base Date)"
          },
          "DifferenceRelativeToBaseDate2006_PrecipitationRate_RCP85": {
            "label": "Precipitation Rate Relative To 2006, RCP 8.5 (Difference Relative To Base Date)"
          },
          "DifferenceRelativeToBaseDate1990_Max_Temperature": {
            "label": "Max Temperature Relative To 1990 (Difference Relative To Base Date)"
          },
          "DifferenceRelativeToBaseDate1990_Min_Temperature": {
            "label": "Min Temperature Relative To 1990 (Difference Relative To Base Date)"
          },
          "DifferenceRelativeToBaseDate1990_PrecipitationRate": {
            "label": "Precipitation Rate Relative To 1990 (Difference Relative To Base Date)"
          }
        },
        "val": "Amount_Emissions_CarbonDioxide_PerCapita"
      },
      "options.per_capita": {
        "type": "checkbox",
        "label": "Per capita",
        "show_if": "false",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.help_1": {
        "type": "text",
        "label": "",
        "show_if": "options.stat_var_name=='Max_Temperature_RCP45' || options.stat_var_name=='DifferenceAcrossModels_Max_Temperature_RCP45' || options.stat_var_name=='DifferenceRelativeToBaseDate2006_Max_Temperature_RCP45'",
        "val": "Maximum near-surface air temperature under RCP4.5 emissions scenario",
        "disabled": true,
        "width": "100%"
      },
      "options.help_2": {
        "type": "text",
        "label": "",
        "show_if": "options.stat_var_name=='Min_Temperature_RCP45' || options.stat_var_name=='DifferenceAcrossModels_Min_Temperature_RCP45' || options.stat_var_name=='DifferenceRelativeToBaseDate2006_Min_Temperature_RCP45'",
        "val": "Minimum near-surface air temperature under RCP4.5 emissions scenario",
        "disabled": true,
        "width": "100%"
      },
      "options.help_3": {
        "type": "text",
        "label": "",
        "show_if": "options.stat_var_name=='PrecipitationRate_RCP45' || options.stat_var_name=='DifferenceAcrossModels_PrecipitationRate_RCP45' || options.stat_var_name=='DifferenceRelativeToBaseDate2006_PrecipitationRate_RCP45'",
        "val": "Precipitation rate at surface projected under RCP4.5 emissions scenario",
        "disabled": true,
        "width": "100%"
      },
      "options.help_4": {
        "type": "text",
        "label": "",
        "show_if": "options.stat_var_name=='Max_Temperature_RCP85' || options.stat_var_name=='DifferenceAcrossModels_Max_Temperature_RCP85' || options.stat_var_name=='DifferenceRelativeToBaseDate2006_Max_Temperature_RCP85'",
        "val": "Maximum near-surface air temperature under RCP8.5 emissions scenario",
        "disabled": true,
        "width": "100%"
      },
      "options.help_5": {
        "type": "text",
        "label": "",
        "show_if": "options.stat_var_name=='Min_Temperature_RCP85' || options.stat_var_name=='DifferenceAcrossModels_Min_Temperature_RCP85' || options.stat_var_name=='DifferenceRelativeToBaseDate2006_Min_Temperature_RCP85'",
        "val": "Minimum near-surface air temperature under RCP8.5 emissions scenario",
        "disabled": true,
        "width": "100%"
      },
      "options.help_6": {
        "type": "text",
        "label": "",
        "show_if": "options.stat_var_name=='PrecipitationRate_RCP85' || options.stat_var_name=='DifferenceAcrossModels_PrecipitationRate_RCP85' || options.stat_var_name=='DifferenceRelativeToBaseDate2006_PrecipitationRate_RCP85'",
        "val": "Precipitation rate at surface projected under RCP8.5 emissions scenario",
        "disabled": true,
        "width": "100%"
      },
      "options.all_countries": {
        "type": "checkbox",
        "label": "All countries",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.output_as_chart": {
        "type": "checkbox",
        "label": "Output a Graph",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "options.graph_type": {
        "type": "select",
        "label": "Graph Type",
        "show_if": "options.output_as_chart=='true'",
        "required": true,
        "options": {
          "zoomable_sunburst": {
            "label": "Sunburst"
          },
          "tidy_tree": {
            "label": "Tree"
          },
          "treemap": {
            "label": "Treemap"
          }
        },
        "val": "zoomable_sunburst",
        "breakLine": true
      }
    }
  }
}
,
"/DCEducationWorldDataOptions.json/DCEducationWorldDataOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.group_by": {
        "type": "select",
        "label": "Group By",
        "required": true,
        "options": {
          "Region": {
            "label": "Region"
          },
          "Income Group": {
            "label": "Income Group"
          }
        },
        "val": "Region",
        "breakLine": true
      },
      "options.stat_var_name": {
        "type": "select",
        "label": "Statistics Data",
        "required": true,
        "options": {
          "Count_Person_25OrMoreYears_BachelorsDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears": {
            "label": "Bachelors Degree or Higher Population Per Capita 25 or More Years"
          },
          "Count_Person_25OrMoreYears_Female_BachelorsDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears_Female": {
            "label": "Bachelors Degree or Higher, Female Population Per Capita 25 or More Years Female"
          },
          "Count_Person_25OrMoreYears_Male_BachelorsDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears_Male": {
            "label": "Bachelors Degree or Higher, Male Population Per Capita 25 or More Years Male"
          },
          "Count_Person_25OrMoreYears_DoctorateDegree_AsFractionOf_Count_Person_25OrMoreYears": {
            "label": "Doctorate Degree Population Per Capita 25 or More Years"
          },
          "Count_Person_25OrMoreYears_Female_DoctorateDegree_AsFractionOf_Count_Person_25OrMoreYears_Female": {
            "label": "Doctorate Degree, Female Population Per Capita 25 or More Years Female"
          },
          "Count_Person_25OrMoreYears_Male_DoctorateDegree_AsFractionOf_Count_Person_25OrMoreYears_Male": {
            "label": "Doctorate Degree, Male Population Per Capita 25 or More Years Male"
          },
          "Count_Person_25OrMoreYears_MastersDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears": {
            "label": "Masters Degree or Higher Population Per Capita 25 or More Years"
          },
          "Count_Person_25OrMoreYears_Female_MastersDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears_Female": {
            "label": "Masters Degree or Higher, Female Population Per Capita 25 or More Years Female"
          },
          "Count_Person_25OrMoreYears_Male_MastersDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears_Male": {
            "label": "Masters Degree or Higher, Male Population Per Capita 25 or More Years Male"
          },
          "Count_Person_25OrMoreYears_TertiaryEducation_AsFractionOf_Count_Person_25OrMoreYears": {
            "label": "Tertiary Education Population Per Capita 25 or More Years"
          },
          "Count_Person_25OrMoreYears_Female_TertiaryEducation_AsFractionOf_Count_Person_25OrMoreYears_Female": {
            "label": "Tertiary Education, Female Population Per Capita 25 or More Years Female"
          },
          "Count_Person_25OrMoreYears_Male_TertiaryEducation_AsFractionOf_Count_Person_25OrMoreYears_Male": {
            "label": "Tertiary Education, Male Population Per Capita 25 or More Years Male"
          }
        },
        "val": "Count_Person_25OrMoreYears_BachelorsDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears"
      },
      "options.per_capita": {
        "type": "checkbox",
        "label": "Per capita",
        "show_if": "false",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.all_countries": {
        "type": "checkbox",
        "label": "All countries",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.output_as_chart": {
        "type": "checkbox",
        "label": "Output a Graph",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "options.graph_type": {
        "type": "select",
        "label": "Graph Type",
        "show_if": "options.output_as_chart=='true'",
        "required": true,
        "options": {
          "zoomable_sunburst": {
            "label": "Sunburst"
          },
          "treemap": {
            "label": "Treemap"
          }
        },
        "val": "zoomable_sunburst",
        "breakLine": true
      }
    }
  }
}
,
"/EncryptOptions.json/EncryptOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "task_type": {
        "type": "select",
        "label": "Task Type",
        "required": true,
        "options": {
          "encrypt": {
            "label": "Encrypt (secure)"
          },
          "decrypt": {
            "label": "Decrypt (secure)"
          },
          "encrypt_simple": {
            "label": "Encrypt (simple)"
          },
          "decrypt_simple": {
            "label": "Decrypt (simple)"
          },
          "mask": {
            "label": "Mask"
          }
        },
        "val": "encrypt"
      },
      "mask_type": {
        "type": "select",
        "label": "Mask Type",
        "show_if": "task_type == 'mask'",
        "required": true,
        "options": {
          "trailing": {
            "label": "Trailing N Characters"
          },
          "leading": {
            "label": "Leading N Characters"
          },
          "numbers": {
            "label": "Numbers"
          },
          "alphabets": {
            "label": "Characters"
          },
          "regex": {
            "label": "Regular Expression"
          }
        },
        "val": "trailing"
      },
      "password": {
        "type": "password",
        "label": "Password",
        "show_if": "task_type != 'mask'",
        "required": true,
        "minLength": 1,
        "maxLength": 31,
        "val": ""
      },
      "varn": {
        "type": "number",
        "label": "N",
        "show_if": "task_type == 'mask' && (mask_type == 'trailing' || mask_type == 'leading')",
        "required": true,
        "val": 1
      },
      "regexp": {
        "type": "text",
        "label": "Expression",
        "show_if": "task_type == 'mask' && (mask_type == 'regex')",
        "required": true,
        "val": "",
        "placeholder": "[a-fA-F0-9]"
      },
      "replace": {
        "type": "text",
        "label": "Mask string",
        "show_if": "task_type == 'mask' && (mask_type == 'regex')",
        "required": true,
        "val": "*",
        "breakLine": true
      }
    }
  }
}
,
"/LookupInput.json/LookupInput.json": {
  "columns": {
    "type": "select",
    "label": "Select column(s)",
    "show_if": "search_tables=='false' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells')",
    "table": "table_id",
    "multiple": true,
    "bind": "COLUMNS",
    "required": true
  },
  "search_tables__columns_text": {
    "type": "text",
    "label": "Select column(s) (separated by `;`)",
    "show_if": "search_tables=='true' && search_tables__select_columns_by=='by_name_text' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells')",
    "val": "",
    "placeholder": "Column1; Column2; ColumnN",
    "required": true,
    "style": "width: 100%"
  },
  "search_tables__columns_order": {
    "type": "select",
    "label": "Select column(s)",
    "required": true,
    "show_if" :  "search_tables=='true' && search_tables__select_columns_by=='by_order' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells')",
    "options": {
      "col1": {
        "label": "Column 1"
      },
      "col2": {
        "label": "Column 2"
      },
      "col3": {
        "label": "Column 3"
      },
      "col4": {
        "label": "Column 4"
      },
      "col5": {
        "label": "Column 5"
      },
      "col6": {
        "label": "Column 6"
      },
      "col7": {
        "label": "Column 7"
      },
      "col8": {
        "label": "Column 8"
      },
      "col9": {
        "label": "Column 9"
      },
      "col10": {
        "label": "Column 10"
      },
      "col11": {
        "label": "Column 11"
      },
      "col12": {
        "label": "Column 12"
      },
      "col13": {
        "label": "Column 13"
      },
      "col14": {
        "label": "Column 14"
      },
      "col15": {
        "label": "Column 15"
      },
      "col16": {
        "label": "Column 16"
      },
      "col17": {
        "label": "Column 17"
      },
      "col18": {
        "label": "Column 18"
      },
      "col19": {
        "label": "Column 19"
      },
      "col20": {
        "label": "Column 20"
      }
    },
    "multiple": true,
    "val": []
  },
  "column_for_generate": {
    "type": "select",
    "label": "Select column",
    "show_if": "search_tables=='false' && (options.task_type=='label_duplicates' || options.task_type=='generate_lookup_table')",
    "table": "table_id",
    "bind": "COLUMNS",
    "required": true
  },
  "search_tables__column_for_generate_text": {
    "type": "text",
    "label": "Select column",
    "show_if": "search_tables=='true' && search_tables__select_columns_by=='by_name_text' && (options.task_type=='label_duplicates' || options.task_type=='generate_lookup_table')",
    "val": "",
    "placeholder": "Column1",
    "required": true
  },
  "search_tables__column_for_generate_order": {
    "type": "select",
    "label": "Select column",
    "required": true,
    "show_if" :  "search_tables=='true' && search_tables__select_columns_by=='by_order' && (options.task_type=='label_duplicates' || options.task_type=='generate_lookup_table')",
    "options": {
      "col1": {
        "label": "Column 1"
      },
      "col2": {
        "label": "Column 2"
      },
      "col3": {
        "label": "Column 3"
      },
      "col4": {
        "label": "Column 4"
      },
      "col5": {
        "label": "Column 5"
      },
      "col6": {
        "label": "Column 6"
      },
      "col7": {
        "label": "Column 7"
      },
      "col8": {
        "label": "Column 8"
      },
      "col9": {
        "label": "Column 9"
      },
      "col10": {
        "label": "Column 10"
      },
      "col11": {
        "label": "Column 11"
      },
      "col12": {
        "label": "Column 12"
      },
      "col13": {
        "label": "Column 13"
      },
      "col14": {
        "label": "Column 14"
      },
      "col15": {
        "label": "Column 15"
      },
      "col16": {
        "label": "Column 16"
      },
      "col17": {
        "label": "Column 17"
      },
      "col18": {
        "label": "Column 18"
      },
      "col19": {
        "label": "Column 19"
      },
      "col20": {
        "label": "Column 20"
      }
    },
    "val": ""
  }
},
"/JoinInput.json/JoinInput.json": {
  "input": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "left_table.table_id": {
        "type": "select",
        "label": "Select Left Table",
        "bind": "TABLES"
      },
      "left_table.remove_input_table_after_processing": {
        "type": "hidden",
        "val": "false"
      },
      "left_table.is_word": {
        "type": "hidden",
        "val": "false",
        "breakLine": true
      },
      "right_table.table_id": {
        "type": "select",
        "label": "Select Right Table",
        "bind": "TABLES"
      },
      "right_table.remove_input_table_after_processing": {
        "type": "hidden",
        "val": "false"
      },
      "right_table.is_word": {
        "type": "hidden",
        "val": "false"
      }
    }
  }
}
,
"/RunIfFoundOptions.json/RunIfFoundOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Select Find Conditions",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.use_content_condition": {
        "type": "checkbox",
        "label": "Content Condition",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.content_condition": {
        "type": "fieldset",
        "label": "Content Condition",
        "show_if" :  "options.use_content_condition == 'true'",
        "repeat": true,
        "fields": {
          "initial_op": {
            "type": "select",
            "label": "Select Logic Operator",
            "required": true,
            "show_if" :  "$index == 0",
            "options": {
              "if": {
                "label": "IF"
              },
              "if_not": {
                "label": "IF NOT"
              }
            },
            "val": "if"
          },
          "op": {
            "type": "select",
            "label": "Select Logic Operator",
            "required": true,
            "show_if" :  "$index > 0",
            "options": {
              "and": {
                "label": "AND"
              },
              "or": {
                "label": "OR"
              },
              "and_not": {
                "label": "AND NOT"
              },
              "or_not": {
                "label": "OR NOT"
              }
            },
            "val": "and"
          },
          "column_header_name": {
            "type": "text",
            "label": "Column Header Name",
            "val": "",
            "required": true
          },
          "condition": {
            "type": "select",
            "label": "Select Operator",
            "required": true,
            "options": {
              "CONTAINS": {
                "label": "CONTAINS"
              },
              "CONTAINED IN STRING": {
                "label": "CONTAINED IN"
              },
              "STARTS WITH": {
                "label": "STARTS WITH"
              },
              "ENDS WITH": {
                "label": "ENDS WITH"
              },
              "=": {
                "label": "EQUAL"
              },
              ">": {
                "label": "GREATER THAN"
              },
              ">=": {
                "label": "GREATER OR EQUAL"
              },
              "<": {
                "label": "SMALLER THAN"
              },
              "<=": {
                "label": "SMALLER OR EQUAL"
              },
              "EMPTY": {
                "label": "IS EMPTY"
              },
              "BLANK": {
                "label": "IS BLANK"
              },
              "IS NULL": {
                "label": "IS NULL"
              },
              "IS TRUE": {
                "label": "IS TRUE"
              },
              "IS FALSE": {
                "label": "IS FALSE"
              },
              "REGEX MATCH": {
                "label": "REGEX MATCH"
              },
              "CONTAINED IN TABLE": {
                "label": "IN TABLE"
              },
              "IN REGEX TABLE": {
                "label": "IN REGEX TABLE"
              },
              "DATE": {
                "label": "DATE"
              }
            },
            "val": "CONTAINS"
          },
          "date_condition": {
            "type": "select",
            "label": "Select Date Operator",
            "required": true,
            "show_if": "this.condition == 'DATE'",
            "options": {
              "<": {
                "label": "PRIOR"
              },
              "<=": {
                "label": "PRIOR OR EQUAL"
              },
              "=": {
                "label": "EQUAL"
              },
              ">": {
                "label": "AFTER"
              },
              ">=": {
                "label": "AFTER OR EQUAL"
              }
            },
            "val": "="
          },
          "compare_with": {
            "type": "select",
            "label": "Compare with",
            "required": true,
            "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
            "options": {
              "custom_value": {
                "label": "Custom value"
              },
              "column_value": {
                "label": "Column value"
              }
            },
            "val": "custom_value"
          },
          "self_compare_column": {
            "type": "select",
            "label": "Select Compare Column",
            "table": "table_id",
            "bind": "COLUMNS",
            "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
            "required": true
          },
          "date_value": {
            "type": "date",
            "label": "Select Date",
            "show_if": "this.condition=='DATE'",
            "val": "",
            "required": true
          },
          "value": {
            "type": "text",
            "label": "Input Value",
            "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
            "val": "",
            "required": true
          },
          "case_sensitive": {
            "type": "select",
            "label": "Select Case Sensitive",
            "required": true,
            "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "options": {
              "yes": {
                "label": "Case Sensitive"
              },
              "no": {
                "label": "Case Insensitive"
              }
            },
            "val": "yes"
          },
          "compare_table_id": {
            "type": "select",
            "label": "Select Table",
            "bind": "TABLES",
            "empty": "",
            "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "required": true
          },
          "compare_column": {
            "type": "select",
            "label": "Select Column",
            "table": "this.compare_table_id",
            "bind": "COLUMNS",
            "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "required": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.use_column_condition": {
        "type": "checkbox",
        "label": "Column Condition",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.column_condition": {
        "type": "fieldset",
        "label": "Column Condition",
        "show_if" :  "options.use_column_condition == 'true'",
        "repeat": true,
        "fields": {
          "initial_op": {
            "type": "select",
            "label": "Logic Operator",
            "required": true,
            "show_if" :  "$index == 0",
            "options": {
              "if": {
                "label": "IF"
              },
              "if_not": {
                "label": "IF NOT"
              }
            },
            "val": "if"
          },
          "op": {
            "type": "select",
            "label": "Logic Operator",
            "required": true,
            "show_if" :  "$index > 0",
            "options": {
              "and": {
                "label": "AND"
              },
              "or": {
                "label": "OR"
              },
              "and_not": {
                "label": "AND NOT"
              },
              "or_not": {
                "label": "OR NOT"
              }
            },
            "val": "and"
          },
          "column_header_name": {
            "type": "text",
            "label": "Column Header Name",
            "val": "",
            "required": true
          },
          "rows": {
            "type": "select",
            "label": "Condition",
            "required": true,
            "options": {
              "All rows": {
                "label": "All rows"
              },
              "Some rows": {
                "label": "Some rows"
              }
            },
            "val": "All rows"
          },
          "condition": {
            "type": "select",
            "label": "Operator",
            "required": true,
            "options": {
              "CONTAINS": {
                "label": "CONTAINS"
              },
              "CONTAINED IN STRING": {
                "label": "CONTAINED IN"
              },
              "STARTS WITH": {
                "label": "STARTS WITH"
              },
              "ENDS WITH": {
                "label": "ENDS WITH"
              },
              "=": {
                "label": "EQUAL"
              },
              "REGEX MATCH": {
                "label": "REGEX MATCH"
              },
              "Only Numbers": {
                "label": "Only Numbers"
              },
              "Only Characters": {
                "label": "Only Characters"
              },
              "Contains Characters": {
                "label": "Contains Characters"
              },
              "Contains Whitespace": {
                "label": "Contains Whitespace"
              },
              "Contains Punctuation": {
                "label": "Contains Punctuation"
              }
            },
            "val": "CONTAINS"
          },
          "value": {
            "type": "text",
            "label": "Input Value",
            "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "val": "",
            "required": true
          },
          "case_sensitive": {
            "type": "select",
            "label": "Case Sensitive",
            "required": true,
            "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "options": {
              "yes": {
                "label": "Case Sensitive"
              },
              "no": {
                "label": "Case Insensitive"
              }
            },
            "val": "yes"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.use_table_condition": {
        "type": "checkbox",
        "label": "Table Condition",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "options.table_condition": {
        "type": "fieldset",
        "label": "Table Condition",
        "show_if" :  "options.use_table_condition == 'true'",
        "repeat": true,
        "fields": {
          "initial_op": {
            "type": "select",
            "label": "Logic Operator",
            "required": true,
            "show_if" :  "$index == 0",
            "options": {
              "if": {
                "label": "IF"
              },
              "if_not": {
                "label": "IF NOT"
              }
            },
            "val": "if"
          },
          "op": {
            "type": "select",
            "label": "Logic Operator",
            "required": true,
            "show_if" :  "$index > 0",
            "options": {
              "and": {
                "label": "AND"
              },
              "or": {
                "label": "OR"
              },
              "and_not": {
                "label": "AND NOT"
              },
              "or_not": {
                "label": "OR NOT"
              }
            },
            "val": "and"
          },
          "type": {
            "type": "select",
            "label": "Type",
            "required": true,
            "options": {
              "Table Name": {
                "label": "Table Name"
              },
              "Tags": {
                "label": "Tags"
              }
            },
            "val": "Table Name"
          },
          "rows": {
            "type": "select",
            "label": "Condition",
            "show_if": "this.type == 'Tags'",
            "required": true,
            "options": {
              "All Tags": {
                "label": "All Tags"
              },
              "Some Tags": {
                "label": "Some Tags"
              }
            },
            "val": "Some Tags"
          },
          "condition": {
            "type": "select",
            "label": "Operator",
            "required": true,
            "options": {
              "CONTAINS": {
                "label": "CONTAINS"
              },
              "CONTAINED IN STRING": {
                "label": "CONTAINED IN"
              },
              "STARTS WITH": {
                "label": "STARTS WITH"
              },
              "ENDS WITH": {
                "label": "ENDS WITH"
              },
              "=": {
                "label": "EQUAL"
              },
              "REGEX MATCH": {
                "label": "REGEX MATCH"
              }
            },
            "val": "CONTAINS"
          },
          "value": {
            "type": "text",
            "label": "Input Value",
            "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "val": "",
            "required": true
          },
          "case_sensitive": {
            "type": "select",
            "label": "Case Sensitive",
            "required": true,
            "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "options": {
              "yes": {
                "label": "Case Sensitive"
              },
              "no": {
                "label": "Case Insensitive"
              }
            },
            "val": "yes"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      }
    }
  }
}
,
"/PayInput.json/PayInput.json": {
  "input": {
    "type": "fieldset",
    "label": "Select Input Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "table_id": {
        "type": "select",
        "label": "Select Table",
        "bind": "TABLES",
        "empty": "",
        "required": true,
        "breakLine": true
      },
      "remove_input_table_after_processing": {
        "type": "hidden",
        "val": "false"
      },
      "is_word": {
        "type": "hidden",
        "val": "false"
      },
      "help_text_stripe_charge": {
        "type": "text",
        "label": "",
        "show_if": "options.provider=='stripe' && options.type=='charge'",
        "val": "Table Structure ( Customer ID | Card ID | Currency | Amount )",
        "disabled": true,
        "width": "100%"
      },
      "help_text_stripe_transfer": {
        "type": "text",
        "label": "",
        "show_if": "options.provider=='stripe' && options.type=='transfer'",
        "val": "Table Structure ( Connected Account  ID | Currency | Amount )",
        "disabled": true,
        "width": "100%"
      }
    }
  }
}
,
"/FlexmonsterBarOptions.json/FlexmonsterBarOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "show_if": "options.configure_manual=='true'",
    "repeat": false,
    "fields": {
      "options.type": {
        "type": "hidden",
        "val": "bar_chart"
      },
      "options.chart_type": {
        "type": "hidden",
        "val": "bar_h"
      },
      "options.add_column_cols": {
        "type": "checkbox",
        "label": "by Category",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.column_cols": {
        "type": "fieldset",
        "label": "Category column(s)",
        "show_if": "options.add_column_cols=='true'",
        "repeat": true,
        "fields": {
          "column_col": {
            "type": "select",
            "label": "Category column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "is_date": {
            "type": "checkbox",
            "label": "Is Date",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.row_cols": {
        "type": "fieldset",
        "label": "Series column(s)",
        "repeat": true,
        "fields": {
          "row_col": {
            "type": "select",
            "label": "Series column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "is_date": {
            "type": "checkbox",
            "label": "Is Date",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.measure_cols": {
        "type": "fieldset",
        "label": "Value column(s)",
        "repeat": true,
        "fields": {
          "measure_col": {
            "type": "select",
            "label": "Value Column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "aggregation": {
            "type": "select",
            "label": "Aggregation Function",
            "options": {
              "sum": {
                "label": "Sum"
              },
              "count": {
                "label": "Count"
              },
              "distinctcount": {
                "label": "Distinct Count"
              },
              "average": {
                "label": "Average"
              },
              "median": {
                "label": "Median"
              },
              "product": {
                "label": "Product"
              },
              "min": {
                "label": "Min"
              },
              "max": {
                "label": "Max"
              },
              "stdevp": {
                "label": "Population Standard Deviation"
              },
              "stdevs": {
                "label": "Sample Standard Deviation"
              },
              "percent": {
                "label": "Percent"
              }
            },
            "val": "sum",
            "required": true,
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      }
    }
  }
}
,
"/Attribute Summary.json/Attribute Summary.json": {
"/MultiRowOptions.json/MultiRowOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.task": {
        "type": "hidden",
        "val": "multi_row"
      },
      "options.add_columns": {
        "type": "fieldset",
        "label": "Add New Columns",
        "repeat": true,
        "fields": {
          "new_column_name": {
            "type": "text",
            "label": "New Column Name",
            "val": "",
            "breakLine": true
          },
          "multi_row_functions__function": {
            "type": "select",
            "label": "Function",
            "required": true,
            "options": {
              "trailing_row_n_average": {
                "label": "Trailing Row-N Average"
              },
              "index_from_row_n": {
                "label": "Index from Row-N"
              },
              "absolute_growth": {
                "label": "Absolute Growth"
              },
              "relative_growth": {
                "label": "Relative Growth"
              },
              "compound_growth": {
                "label": "Compound Growth"
              }
            },
            "val": "trailing_row_n_average"
          },
          "multi_row_functions__sel_column": {
            "type": "select",
            "label": "Column",
            "show_if": "this.multi_row_functions__function=='trailing_row_n_average' || this.multi_row_functions__function=='index_from_row_n' || this.multi_row_functions__function=='absolute_growth' || this.multi_row_functions__function=='relative_growth' || this.multi_row_functions__function=='compound_growth'",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "multi_row_functions__n_value": {
            "type": "text",
            "label": "N (positive integer)",
            "show_if": "this.multi_row_functions__function=='trailing_row_n_average' || this.multi_row_functions__function=='index_from_row_n' || this.multi_row_functions__function=='compound_growth'",
            "val": "1",
            "required": true,
            "breakLine": true
          },
          "rounding": {
            "type": "select",
            "label": "Rounding",
            "required": true,
            "options": {
              "no_rounding": {
                "label": "No rounding"
              },
              "0": {
                "label": "0 digits"
              },
              "1": {
                "label": "1 digits"
              },
              "2": {
                "label": "2 digits"
              },
              "3": {
                "label": "3 digits"
              },
              "4": {
                "label": "4 digits"
              },
              "5": {
                "label": "5 digits"
              },
              "6": {
                "label": "6 digits"
              },
              "7": {
                "label": "7 digits"
              },
              "8": {
                "label": "8 digits"
              },
              "9": {
                "label": "9 digits"
              }
            },
            "val": "no_rounding"
          },
          "format__category": {
            "type": "select",
            "label": "Display Format",
            "required": true,
            "options": {
              "standard": {
                "label": "Standard"
              },
              "number": {
                "label": "Number"
              },
              "percentage": {
                "label": "Percentage"
              },
              "text": {
                "label": "Text"
              },
              "date": {
                "label": "Date"
              },
              "currency": {
                "label": "Currency"
              }
            },
            "val": "standard"
          },
          "format__rounding": {
            "type": "select",
            "label": "Decimal Places for display",
            "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
            "required": true,
            "options": {
              "no_rounding": {
                "label": "No rounding"
              },
              "0": {
                "label": "0 digits"
              },
              "1": {
                "label": "1 digits"
              },
              "2": {
                "label": "2 digits"
              },
              "3": {
                "label": "3 digits"
              },
              "4": {
                "label": "4 digits"
              },
              "5": {
                "label": "5 digits"
              },
              "6": {
                "label": "6 digits"
              },
              "7": {
                "label": "7 digits"
              },
              "8": {
                "label": "8 digits"
              },
              "9": {
                "label": "9 digits"
              }
            },
            "val": "2"
          },
          "format__use_1000_separator": {
            "type": "checkbox",
            "label": "Use 1000 Separator(.)",
            "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
            "val": "true",
            "isOn": "true",
            "isOff": "false"
          },
          "format__currency_symbol": {
            "type": "select",
            "label": "Symbol",
            "show_if": "this.format__category=='currency'",
            "required": true,
            "options": {
              "dollar": {
                "label": "$"
              },
              "euro": {
                "label": "€"
              },
              "pound": {
                "label": "£"
              },
              "yen": {
                "label": "¥ (Yen, currency of Japan)"
              },
              "colon": {
                "label": "₡ (Colón, currency of Costa Rica)"
              },
              "naira": {
                "label": "₦ (Naira, currency of Nigeria)"
              },
              "rupee": {
                "label": "₨ (Rupee, currency of India)"
              },
              "rupie": {
                "label": "₹ (Rupee, currency of India)"
              },
              "won": {
                "label": "₩ (Won, currency in South Korea and North Korea)"
              },
              "hebrew": {
                "label": "₪ (Currency of Israel)"
              },
              "dong": {
                "label": "₫ (Currency of Vietnam)"
              },
              "kip": {
                "label": "₭ (Kip, currency of Laos)"
              },
              "mongolia": {
                "label": "₮ (Currency of Mongolia)"
              },
              "peso": {
                "label": "₱ (Peso, currency of the Philippines)"
              },
              "guarani": {
                "label": "₲ (Guaraní, currency of Paraguay)"
              },
              "hryvnia": {
                "label": "₴ (Hryvnia, currency of Ukraine)"
              },
              "tenge": {
                "label": "₸ (Tenge, currency of Kazakhstan)"
              },
              "lira": {
                "label": "₺ (Lira, currency of Turkey)"
              },
              "manat": {
                "label": "₼ (Manat, currency of Azerbaijan)"
              },
              "rubles": {
                "label": "₽ (Rubles, currency of Russia)"
              },
              "lari": {
                "label": "₾ (Lari, currency of Georgia)"
              },
              "bitcoin": {
                "label": "₿ (Bitcoin, crypto currency)"
              }
            },
            "val": "dollar"
          },
          "format__date_format": {
            "type": "select",
            "label": "Type",
            "show_if": "this.format__category=='date'",
            "required": true,
            "options": {
              "mm/dd/yyyy": {
                "label": "3/14/2012"
              },
              "D, M dd, Y": {
                "label": "Wednesday, March 14, 2012"
              },
              "yyyy-mm-dd": {
                "label": "2012-03-14"
              },
              "m.dd.yyyy": {
                "label": "3.14.2012"
              },
              "m.dd.yy": {
                "label": "3.14.12"
              },
              "dd.m.yyyy": {
                "label": "14.3.2012"
              },
              "dd.m.yy": {
                "label": "14.3.12"
              },
              "M dd, Y": {
                "label": "March 14, 2012"
              },
              "dd-mm-yyyy": {
                "label": "14-03-2012"
              },
              "mm-dd-yyyy": {
                "label": "03-14-2012"
              },
              "dd-mm-yy": {
                "label": "14-03-12"
              },
              "mm-dd-yy": {
                "label": "03-14-12"
              }
            },
            "val": "mm/dd/yyyy",
            "breakLine": true
          },
          "apply_to_group__enabled": {
            "type": "checkbox",
            "label": "Apply to Group",
            "show_if": "this.task_type!='static_value'",
            "val": "false",
            "isOn": "true",
            "isOff": "false"
          },
          "apply_to_group__group_columns": {
            "type": "select",
            "label": "Group Column(s)",
            "show_if": "this.apply_to_group__enabled == 'true' && this.task_type!='static_value'",
            "table": "table_id",
            "bind": "COLUMNS",
            "multiple": true,
            "required": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.use_filter": {
        "type": "checkbox",
        "label": "Use Filter",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "filter_box": {
        "type": "fieldset",
        "label": "Filter Options",
        "show_if": "options.use_filter=='true'",
        "repeat": false,
        "fields": {
          "options.filter": {
            "type": "fieldset",
            "label": "Add Filter Conditions",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if" :  "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if" :  "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table_id": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table_id",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group",
            "show_if": "options.apply_to_record=='false'",
            "repeat": false,
            "fields": {
              "options.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "required": true,
                "width": "100%",
                "table": "table_id",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      }
    }
  }
}
,
"/UniqueOptions.json/UniqueOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "column_names": {
        "type": "select",
        "label": "Select columns to find unique values from",
        "table": "table_id",
        "multiple": true,
        "bind": "COLUMNS",
        "required": true,
        "width": "100%",
        "breakLine": true
      }
    }
  }
}
,
"/ChameleonOptions.json/ChameleonOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "params": {
        "type": "fieldset",
        "label": "Modify Parameters",
        "breakLine": true,
        "repeat": true,
        "fields": {
          "attr_name": {
            "type": "text",
            "label": "Field Name",
            "required": true,
            "val": ""
          },
          "use_field_label": {
            "type": "checkbox",
            "label": "Use field label",
            "val": "true",
            "isOn": "true",
            "isOff": "false"
          },
          "attr_instance": {
            "type": "number",
            "label": "Field Instance",
            "required": true,
            "val": 1
          },
          "value_type": {
            "type": "select",
            "label": "Replace with",
            "required": true,
            "options": {
              "single_value": {
                "label": "Single Field Value"
              },
              "value_series": {
                "label": "Field Value List"
              },
              "table_values": {
                "label": "Table Values"
              }
            },
            "val": "single_value"
          },
          "attr_value": {
            "type": "text",
            "label": "Field Value",
            "required": true,
            "val": "",
            "show_if": "this.value_type=='single_value'"
          },
          "attr_values": {
            "type": "text",
            "label": "Field Values ( ; - separated )",
            "required": true,
            "val": "",
            "show_if": "this.value_type=='value_series'"
          },
          "table_id": {
            "type": "select",
            "label": "Select Table",
            "bind": "TABLES",
            "show_if": "this.value_type=='table_values'",
            "empty": "",
            "required": true
          },
          "column": {
            "type": "select",
            "label": "Select Column",
            "required": true,
            "table": "this.table_id",
            "bind": "COLUMNS",
            "show_if": "this.value_type=='table_values'"
          },
          "use_waiting_time": {
            "type": "checkbox",
            "label": "Add waiting time",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "show_if": "this.value_type!='single_value'"
          },
          "waiting_period": {
            "type": "number",
            "label": "Waiting time (sec)",
            "val": 0,
            "show_if": "this.value_type!='single_value' && this.use_waiting_time!='false'"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "task_chain": {
        "type": "checkbox",
        "label": "Task Chain",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "schedule_options": {
        "type": "fieldset",
        "label": "Tasks to schedule",
        "show_if": "task_chain == 'true'",
        "repeat": true,
        "fields": {
          "input_task": {
            "type": "select",
            "label": "Select Task",
            "bind": "TASKS",
            "empty": "",
            "required": true
          },
          "waiting_time": {
            "type": "number",
            "label": "Waiting time (sec)",
            "val": 0,
            "required": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      }
    }
  }
}
,
"/PayOptions.json/PayOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.provider": {
        "type": "select",
        "label": "Payment Provider",
        "options": {
          "stripe": {
            "label": "Stripe"
          },
          "paypal": {
            "label": "Paypal"
          },
          "payoneer": {
            "label": "Payoneer"
          }
        },
        "val": "stripe",
        "required": true
      },
      "options.type": {
        "type": "select",
        "label": "Payment Type",
        "options": {
          "charge": {
            "label": "Charge"
          },
          "transfer": {
            "label": "Transfer"
          }
        },
        "val": "charge",
        "required": true
      },
      "options.stripe.secret_key": {
        "type": "password",
        "label": "Stripe Secret Key",
        "show_if": "options.provider=='stripe'",
        "required": true,
        "val": "",
        "width": "100%",
        "breakLine": true
      }
    }
  }
},
"/WebAccessInput.json/WebAccessInput.json": {
  "input": {
    "type": "fieldset",
    "label": "Select Input Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "options.type=='embed_code'",
    "repeat": false,
    "fields": {
      "table_id": {
        "type": "select",
        "label": "Select Table",
        "bind": "TABLES",
        "empty": "",
        "required": true
      },
      "remove_input_table_after_processing": {
        "type": "hidden",
        "val": "false"
      },
      "is_word": {
        "type": "hidden",
        "val": "false"
      }
    }
  }
},
"/EmailEmbedOutput.json/EmailEmbedOutput.json": {
  "embed_output_frame": {
    "type": "fieldset",
    "label": "Define Embed(Attach) Table Name",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "options.add_table=='true'",
    "repeat": false,
    "fields": {
      "embed_output.custom_text": {
        "type": "text",
        "label": "Output Table Name",
        "show_if": "embed_output.compose_table_name=='false'",
        "minLength": 1,
        "val": "",
        "width": "100%",
        "breakLine": true
      },
      "embed_output.custom_options": {
        "type": "checkbox",
        "label": "Output Options",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "embed_output.compose_table_name": {
        "type": "checkbox",
        "label": "Compose Table Name",
        "show_if": "embed_output.custom_options=='true'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "embed_output_compose_table_name_frame": {
        "type": "fieldset",
        "label": "Compose Output Table Name",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "embed_output.custom_options=='true' && embed_output.compose_table_name=='true'",
        "repeat": false,
        "fields": {
          "embed_output.prefix_rule": {
            "type": "select",
            "label": "Prefix",
            "val": "empty",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "embed_output.prefix_text": {
            "type": "text",
            "label": "Prefix Text",
            "show_if": "embed_output.prefix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "embed_output.core_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "show_if": "embed_output.prefix_rule!='empty'",
            "val": "_",
            "width": "50px"
          },
          "embed_output.core_rule": {
            "type": "select",
            "label": "Table Name",
            "val": "input_table_name",
            "options": {
              "input_table_name": {
                "label": "Input Table Name"
              },
              "script_name": {
                "label": "Task Name"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "embed_output.core_text": {
            "type": "text",
            "label": "Main Table Name",
            "show_if": "embed_output.core_rule=='custom'",
            "required": true,
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "embed_output.suffix_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "val": "_",
            "width": "50px"
          },
          "embed_output.suffix_rule": {
            "type": "select",
            "label": "Suffix",
            "val": "script_name",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "embed_output.suffix_text": {
            "type": "text",
            "label": "Suffix Text",
            "show_if": "embed_output.suffix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": "",
            "breakLine": true
          },
          "embed_output.timezone": {
            "type": "select",
            "label": "Timezone",
            "show_if": "embed_output.prefix_rule=='date_string_type1' || embed_output.prefix_rule=='date_string_type2' || embed_output.prefix_rule=='time_string' || embed_output.prefix_rule=='datetime_string' || embed_output.suffix_rule=='date_string_type1' || embed_output.suffix_rule=='date_string_type2' || embed_output.suffix_rule=='time_string' || embed_output.suffix_rule=='datetime_string'",
            "val": "Europe/Berlin",
            "required": true,
            "options": {
              "America/Adak": {
                "label": "Adak, Gambier"
              },
              "Australia/Adelaide": {
                "label": "Adelaide, Broken Hill, Darwin"
              },
              "America/Anchorage": {
                "label": "Anchorage, Juneau, Sitka"
              },
              "Pacific/Apia": {
                "label": "Apia, Asau, Mulifanua, Afega, Leulumoega"
              },
              "Pacific/Enderbury": {
                "label": "Apia, Fiji, Tongatapu"
              },
              "Antarctica/McMurdo": {
                "label": "Auckland, Casey, Davis"
              },
              "Pacific/Auckland": {
                "label": "Auckland, Wellington, Christchurch"
              },
              "Asia/Bangkok": {
                "label": "Bangkok, Jakarta, Novosibirsk"
              },
              "Europe/Berlin": {
                "label": "Berlin, Paris, Amsterdam"
              },
              "Australia/Perth": {
                "label": "Brunei, Singapore, Perth"
              },
              "Atlantic/Cape_Verde": {
                "label": "Cape Verde,Praia, Mindelo, Santa Maria"
              },
              "America/Belize": {
                "label": "Costa Rica, El Salvador, Denver"
              },
              "Antarctica/Vostok": {
                "label": "Dhaka, Bishkek, Omsk"
              },
              "Europe/Astrakhan": {
                "label": "Dubai, Baku, Tbilisi"
              },
              "Australia/Eucla": {
                "label": "Eucla"
              },
              "Pacific/Honolulu": {
                "label": "Honolulu, Rarotonga, Tahiti"
              },
              "Asia/Kabul": {
                "label": "Kabul, Kandahār, Mazār-e Sharīf, Herāt, Jalālābād"
              },
              "Asia/Aqtau": {
                "label": "Karachi, Tashkent, Maldives"
              },
              "Asia/Kathmandu": {
                "label": "Kathmandu, Pokhara, Pātan, Biratnagar"
              },
              "Pacific/Kiritimati": {
                "label": "Kiritimati"
              },
              "Asia/Colombo": {
                "label": "Kolkata, Colombo, Jaffna, Negombo"
              },
              "Europe/Guernsey": {
                "label": "London, Dublin, Lisbon"
              },
              "Australia/Lord_Howe": {
                "label": "Lord Howe"
              },
              "America/Creston": {
                "label": "Los Angeles, Vancouver, Hermosillo"
              },
              "Pacific/Marquesas": {
                "label": "Marquesas, Taiohae"
              },
              "America/Cayman": {
                "label": "Mexico City, Panama, Chicago"
              },
              "Pacific/Niue": {
                "label": "Midway, Niue, Pago Pago"
              },
              "Europe/Mariehamn": {
                "label": "Moscow, Istanbul, Qatar"
              },
              "Asia/Kolkata": {
                "label": "Mumbai, Delhi, Bengaluru, Kolkata, Chennai"
              },
              "America/Miquelon": {
                "label": "Noronha, Nuuk, Miquelon"
              },
              "America/Danmarkshavn": {
                "label": "Reykjavik, Dakar, Casablanca"
              },
              "Pacific/Bougainville": {
                "label": "Sakhalin, Norfolk, Bougainville"
              },
              "America/Araguaina": {
                "label": "Sao Paulo, Buenos Aires, Montevideo"
              },
              "America/St_Johns": {
                "label": "St. Johns, Mount Pearl, Corner Brook"
              },
              "Asia/Tehran": {
                "label": "Tehran, Mashhad, Isfahan, Karaj, Tabriz"
              },
              "Asia/Tokyo": {
                "label": "Tokyo, Seoul, Jayapura"
              },
              "America/New_York": {
                "label": "Toronto, Santiago, New York"
              },
              "Australia/Sydney": {
                "label": "Vladivostok, Sydney, Brisbane"
              },
              "Asia/Yangon": {
                "label": "Yangon, Cocos, Mandalay, Nay Pyi Taw, Mawlamyine"
              },
              "Indian/Cocos": {
                "label": "Yangon, Cocos, West Island"
              }
            },
            "breakLine": true
          }
        }
      },
      "embed_output.select_output_columns": {
        "type": "checkbox",
        "label": "Select Output Columns",
        "show_if": "embed_output.custom_options=='true'",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "embed_output.output_columns": {
        "type": "fieldset",
        "label": "Select Output Columns",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "embed_output.custom_options=='true' && embed_output.select_output_columns=='true'",
        "repeat": true,
        "fields": {
          "field_name": {
            "type": "select",
            "label": "Select Column",
            "table": "options.embed_table",
            "bind": "COLUMNS",
            "required": true
          },
          "order": {
            "type": "select",
            "label": "Order",
            "options": {
              "-": {
                "label": "-"
              },
              "asc": {
                "label": "Asc"
              },
              "desc": {
                "label": "Desc"
              }
            },
            "val": "-"
          },
          "is_rename": {
            "type": "checkbox",
            "label": "Rename",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-right: 10px"
          },
          "rename": {
            "show_if": "this.is_rename == 'true'",
            "type": "text",
            "required": true,
            "minLength": 1,
            "maxLength": 255,
            "label": "New Column Name",
            "style": "margin-left: 10px"
          },
          "format__category": {
            "type": "select",
            "label": "Display Format",
            "required": true,
            "options": {
              "standard": {
                "label": "Standard"
              },
              "number": {
                "label": "Number"
              },
              "percentage": {
                "label": "Percentage"
              },
              "text": {
                "label": "Text"
              },
              "date": {
                "label": "Date"
              },
              "currency": {
                "label": "Currency"
              }
            },
            "val": "standard"
          },
          "format__rounding": {
            "type": "select",
            "label": "Decimal Places for display",
            "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
            "required": true,
            "options": {
              "no_rounding": {
                "label": "No rounding"
              },
              "0": {
                "label": "0 digits"
              },
              "1": {
                "label": "1 digits"
              },
              "2": {
                "label": "2 digits"
              },
              "3": {
                "label": "3 digits"
              },
              "4": {
                "label": "4 digits"
              },
              "5": {
                "label": "5 digits"
              },
              "6": {
                "label": "6 digits"
              },
              "7": {
                "label": "7 digits"
              },
              "8": {
                "label": "8 digits"
              },
              "9": {
                "label": "9 digits"
              }
            },
            "val": "2"
          },
          "format__use_1000_separator": {
            "type": "checkbox",
            "label": "Use 1000 Separator(.)",
            "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-right: 15px"
          },
          "format__currency_symbol": {
            "type": "select",
            "label": "Symbol",
            "show_if": "this.format__category=='currency'",
            "required": true,
            "options": {
              "dollar": {
                "label": "$"
              },
              "euro": {
                "label": "€"
              },
              "pound": {
                "label": "£"
              },
              "yen": {
                "label": "¥ (Yen, currency of Japan)"
              },
              "colon": {
                "label": "₡ (Colón, currency of Costa Rica)"
              },
              "naira": {
                "label": "₦ (Naira, currency of Nigeria)"
              },
              "rupee": {
                "label": "₨ (Rupee, currency of India)"
              },
              "rupie": {
                "label": "₹ (Rupee, currency of India)"
              },
              "won": {
                "label": "₩ (Won, currency in South Korea and North Korea)"
              },
              "hebrew": {
                "label": "₪ (Currency of Israel)"
              },
              "dong": {
                "label": "₫ (Currency of Vietnam)"
              },
              "kip": {
                "label": "₭ (Kip, currency of Laos)"
              },
              "mongolia": {
                "label": "₮ (Currency of Mongolia)"
              },
              "peso": {
                "label": "₱ (Peso, currency of the Philippines)"
              },
              "guarani": {
                "label": "₲ (Guaraní, currency of Paraguay)"
              },
              "hryvnia": {
                "label": "₴ (Hryvnia, currency of Ukraine)"
              },
              "tenge": {
                "label": "₸ (Tenge, currency of Kazakhstan)"
              },
              "lira": {
                "label": "₺ (Lira, currency of Turkey)"
              },
              "manat": {
                "label": "₼ (Manat, currency of Azerbaijan)"
              },
              "rubles": {
                "label": "₽ (Rubles, currency of Russia)"
              },
              "lari": {
                "label": "₾ (Lari, currency of Georgia)"
              },
              "bitcoin": {
                "label": "₿ (Bitcoin, crypto currency)"
              }
            },
            "val": "dollar"
          },
          "format__date_format": {
            "type": "select",
            "label": "Type",
            "show_if": "this.format__category=='date'",
            "required": true,
            "options": {
              "mm/dd/yyyy": {
                "label": "3/14/2012"
              },
              "D, M dd, Y": {
                "label": "Wednesday, March 14, 2012"
              },
              "yyyy-mm-dd": {
                "label": "2012-03-14"
              },
              "m.dd.yyyy": {
                "label": "3.14.2012"
              },
              "m.dd.yy": {
                "label": "3.14.12"
              },
              "dd.m.yyyy": {
                "label": "14.3.2012"
              },
              "dd.m.yy": {
                "label": "14.3.12"
              },
              "M dd, Y": {
                "label": "March 14, 2012"
              },
              "dd-mm-yyyy": {
                "label": "14-03-2012"
              },
              "mm-dd-yyyy": {
                "label": "03-14-2012"
              },
              "dd-mm-yy": {
                "label": "14-03-12"
              },
              "mm-dd-yy": {
                "label": "03-14-12"
              }
            },
            "val": "mm/dd/yyyy",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        },
        "breakLine": true,
        "style": "margin-bottom: 20px"
      }
    }
  }
},
"/SortOptions.json/SortOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "sort": {
        "type": "fieldset",
        "label": "Select Sort Columns",
        "repeat": true,
        "fields": {
          "column": {
            "type": "select",
            "label": "Column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "order": {
            "type": "select",
            "label": "Order",
            "options": {
              "asc": {
                "label": "Asc"
              },
              "desc": {
                "label": "Desc"
              }
            },
            "val": "asc"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        },
        "breakLine": true
      }
    }
  }
}
,
"/AutoFillSelectOutputColumn.json/AutoFillSelectOutputColumn.json": {
  "output.select_output_columns_type": {
    "type": "select",
    "label": "Select Output Columns",
    "required": true,
    "options": {
      "all": {
        "label": "All"
      },
      "standard": {
        "label": "Standard Column Selection"
      },
      "advanced": {
        "label": "Advanced Column Selection"
      }
    },
    "val": "all",
    "style": "margin-right: 15px"
  },
  "output_columns_frame": {
    "type": "fieldset",
    "label": "Select Output Columns",
    "show_if": "output.select_output_columns_type=='standard'",
    "repeat": false,
    "fields": {
      "output.output_columns": {
        "type": "select",
        "label": "Output Column(s)",
        "table": "target_table.table_id",
        "bind": "COLUMNS",
        "multiple": true,
        "required": true,
        "breakLine": true
      },
      "output.all_but_selected": {
        "type": "checkbox",
        "label": "All but selected",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  },
  "output.detail_output_columns": {
    "type": "fieldset",
    "label": "Select Output Columns",
    "show_if": "output.select_output_columns_type=='advanced'",
    "repeat": true,
    "fields": {
      "field_name": {
        "type": "select",
        "label": "Select Column",
        "table": "target_table.table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "order": {
        "type": "select",
        "label": "Order",
        "options": {
          "-": {
            "label": "-"
          },
          "asc": {
            "label": "Asc"
          },
          "desc": {
            "label": "Desc"
          }
        },
        "val": "-"
      },
      "format__category": {
        "type": "select",
        "label": "Display Format",
        "required": true,
        "options": {
          "standard": {
            "label": "Standard"
          },
          "number": {
            "label": "Number"
          },
          "percentage": {
            "label": "Percentage"
          },
          "text": {
            "label": "Text"
          },
          "date": {
            "label": "Date"
          },
          "currency": {
            "label": "Currency"
          }
        },
        "val": "standard"
      },
      "format__rounding": {
        "type": "select",
        "label": "Decimal Places for display",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "required": true,
        "options": {
          "no_rounding": {
            "label": "No rounding"
          },
          "0": {
            "label": "0 digits"
          },
          "1": {
            "label": "1 digits"
          },
          "2": {
            "label": "2 digits"
          },
          "3": {
            "label": "3 digits"
          },
          "4": {
            "label": "4 digits"
          },
          "5": {
            "label": "5 digits"
          },
          "6": {
            "label": "6 digits"
          },
          "7": {
            "label": "7 digits"
          },
          "8": {
            "label": "8 digits"
          },
          "9": {
            "label": "9 digits"
          }
        },
        "val": "2"
      },
      "format__use_1000_separator": {
        "type": "checkbox",
        "label": "Use 1000 Separator(.)",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "format__currency_symbol": {
        "type": "select",
        "label": "Symbol",
        "show_if": "this.format__category=='currency'",
        "required": true,
        "options": {
          "dollar": {
            "label": "$"
          },
          "euro": {
            "label": "€"
          },
          "pound": {
            "label": "£"
          },
          "yen": {
            "label": "¥ (Yen, currency of Japan)"
          },
          "colon": {
            "label": "₡ (Colón, currency of Costa Rica)"
          },
          "naira": {
            "label": "₦ (Naira, currency of Nigeria)"
          },
          "rupee": {
            "label": "₨ (Rupee, currency of India)"
          },
          "rupie": {
            "label": "₹ (Rupee, currency of India)"
          },
          "won": {
            "label": "₩ (Won, currency in South Korea and North Korea)"
          },
          "hebrew": {
            "label": "₪ (Currency of Israel)"
          },
          "dong": {
            "label": "₫ (Currency of Vietnam)"
          },
          "kip": {
            "label": "₭ (Kip, currency of Laos)"
          },
          "mongolia": {
            "label": "₮ (Currency of Mongolia)"
          },
          "peso": {
            "label": "₱ (Peso, currency of the Philippines)"
          },
          "guarani": {
            "label": "₲ (Guaraní, currency of Paraguay)"
          },
          "hryvnia": {
            "label": "₴ (Hryvnia, currency of Ukraine)"
          },
          "tenge": {
            "label": "₸ (Tenge, currency of Kazakhstan)"
          },
          "lira": {
            "label": "₺ (Lira, currency of Turkey)"
          },
          "manat": {
            "label": "₼ (Manat, currency of Azerbaijan)"
          },
          "rubles": {
            "label": "₽ (Rubles, currency of Russia)"
          },
          "lari": {
            "label": "₾ (Lari, currency of Georgia)"
          },
          "bitcoin": {
            "label": "₿ (Bitcoin, crypto currency)"
          }
        },
        "val": "dollar"
      },
      "format__date_format": {
        "type": "select",
        "label": "Type",
        "show_if": "this.format__category=='date'",
        "required": true,
        "options": {
          "mm/dd/yyyy": {
            "label": "3/14/2012"
          },
          "D, M dd, Y": {
            "label": "Wednesday, March 14, 2012"
          },
          "yyyy-mm-dd": {
            "label": "2012-03-14"
          },
          "m.dd.yyyy": {
            "label": "3.14.2012"
          },
          "m.dd.yy": {
            "label": "3.14.12"
          },
          "dd.m.yyyy": {
            "label": "14.3.2012"
          },
          "dd.m.yy": {
            "label": "14.3.12"
          },
          "M dd, Y": {
            "label": "March 14, 2012"
          },
          "dd-mm-yyyy": {
            "label": "14-03-2012"
          },
          "mm-dd-yyyy": {
            "label": "03-14-2012"
          },
          "dd-mm-yy": {
            "label": "14-03-12"
          },
          "mm-dd-yy": {
            "label": "03-14-12"
          }
        },
        "val": "mm/dd/yyyy"
      },
      "is_rename": {
        "type": "checkbox",
        "label": "Rename",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "rename": {
        "show_if": "this.is_rename == 'true'",
        "type": "text",
        "required": true,
        "minLength": 1,
        "maxLength": 255,
        "label": "New Column Name",
        "style": "margin-left: 10px"
      },
      "delete": {
        "type": "button",
        "label": "Delete",
        "function": "DELETE_ROW"
      }
    },
    "breakLine": true
  }
},
"/ImportDirFromDropboxOptions.json/ImportDirFromDropboxOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.from": {
        "type": "hidden",
        "val": "web"
      },
      "options.webservice": {
        "type": "hidden",
        "val": "dropbox"
      },
      "options.output_format": {
        "type": "select",
        "label": "Select Type",
        "options": {
          "csv_table": {
            "label": "CSV-Table"
          },
          "line_by_line": {
            "label": "Line by Line"
          },
          "word_by_word": {
            "label": "Text"
          },
          "file_list": {
            "label": "File List"
          }
        },
        "val": "csv_table",
        "required": true
      },
      "options.word_pattern_type": {
        "type": "select",
        "label": "Word Pattern",
        "show_if": "options.output_format=='word_by_word' && options.specify_word_pattern=='true'",
        "options": {
          "regex": {
            "label": "Regular Expression"
          }
        },
        "val": "regex",
        "required": true
      },
      "options.word_pattern_regex": {
        "type": "text",
        "label": "Regular Expression",
        "show_if": "options.output_format=='word_by_word' && options.specify_word_pattern=='true' && options.word_pattern_type=='regex'",
        "required": true,
        "val": "[a-z][1-9]",
        "breakLine": true
      },
      "options.column_setting": {
        "type": "checkbox",
        "label": "Column Settings",
        "show_if": "options.output_format!='file_list'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "column_setting_frame": {
        "type": "fieldset",
        "label": "Column Settings",
        "show_if": "options.output_format!='file_list' && options.column_setting=='true'",
        "repeat": false,
        "fields": {
          "options.add_row_column": {
            "type": "checkbox",
            "label": "Add Row Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_word_count_column": {
            "type": "checkbox",
            "label": "Add 'Word Count' Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_word_nonword_column": {
            "type": "checkbox",
            "label": "Add 'Word & Non-Word' Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_section_column": {
            "type": "checkbox",
            "label": "Add Section Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "section_column_types_frame": {
            "type": "fieldset",
            "label": "Section Column Types",
            "show_if": "options.output_format=='word_by_word' && options.add_section_column=='true'",
            "repeat": false,
            "fields": {
              "options.section_columns.add_paragraph_section_column": {
                "type": "checkbox",
                "label": "Paragraph",
                "val": "false",
                "isOn": "true",
                "isOff": "false",
                "breakLine": true
              },
              "options.section_columns.add_custom_section_column": {
                "type": "checkbox",
                "label": "Custom Section Delimiter",
                "val": "false",
                "isOn": "true",
                "isOff": "false"
              },
              "options.section_columns.custom_delimiter": {
                "type": "text",
                "label": "Delimiter(1 character)",
                "show_if": "options.section_columns.add_custom_section_column=='true'",
                "maxLength": 1,
                "required": true,
                "breakLine": true
              },
              "options.section_columns.add_brackets_punctuation_section_column": {
                "type": "checkbox",
                "label": "Brackets and Punctuation",
                "val": "false",
                "isOn": "true",
                "isOff": "false"
              },
              "options.section_columns.brackets_punctuation_section_column_type": {
                "type": "select",
                "label": "Brackets Type",
                "show_if": "options.section_columns.add_brackets_punctuation_section_column=='true'",
                "options": {
                  "nesting_structure": {
                    "label": "Nesting Structure"
                  },
                  "inner_bracket": {
                    "label": "Inner Bracket"
                  },
                  "brackets_only": {
                    "label": "Brackets Only"
                  },
                  "show_all": {
                    "label": "Show All"
                  }
                },
                "val": "show_all",
                "required": true,
                "breakLine": true
              }
            }
          },
          "options.add_filename_column": {
            "type": "checkbox",
            "label": "Add Column for File Name",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "options.add_filepath_column": {
            "type": "checkbox",
            "label": "Add Column for File Path",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          }
        }
      },
      "options.is_cloud_dir": {
        "type": "hidden",
        "val": "true"
      },
      "if_dir_frame": {
        "type": "fieldset",
        "label": "Directory Import Options",
        "show_if": "options.output_format!='file_list' && options.is_cloud_dir=='true'",
        "repeat": false,
        "fields": {
          "options.unify_in_one_table": {
            "type": "checkbox",
            "label": "Unify in one table",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.suffix": {
            "type": "select",
            "label": "Output tables suffix",
            "show_if": "options.unify_in_one_table=='false'",
            "options": {
              "number": {
                "label": "Number"
              },
              "filename": {
                "label": "Filename"
              }
            },
            "val": "number",
            "required": true,
            "breakLine": true
          },
          "options.include_subdir": {
            "type": "checkbox",
            "label": "Include Subdirectories",
            "show_if": "options.output_format!='file_list' && options.is_cloud_dir=='true'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true,
            "style": "margin-top: 10px"
          }
        }
      },
      "options.file_list.include_subdir": {
        "type": "checkbox",
        "label": "Include Subdirectories",
        "show_if": "options.output_format=='file_list'",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true,
        "style": "margin-top: 10px"
      },
      "options.file_list.add_change_date_column": {
        "type": "checkbox",
        "label": "Add Change Date Column",
        "show_if": "options.output_format=='file_list'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  },
  "import_link_token_frame": {
    "type": "fieldset",
    "label": "Import Link",
    "repeat": false,
    "fields": {
      "options.link_csv_file": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test/blob/main/example.csv",
        "show_if": "options.webservice=='github' && options.is_cloud_dir=='false' && options.output_format=='csv_table'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.link_text_file": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test/blob/main/example.txt(json, csv, etc)",
        "show_if": "options.webservice=='github' && options.is_cloud_dir=='false' && options.output_format!='csv_table' && options.output_format!='file_list'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.one_drive.file_path": {
        "type": "text",
        "label": "Enter path to file e.g. ZippyDoc/Subdir1/test.txt",
        "show_if": "options.webservice=='ms_one_drive' && options.output_format!='file_list' && options.is_cloud_dir=='false'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox.file_path": {
        "type": "text",
        "label": "Enter path to file e.g. ZippyDoc/Subdir1/test.txt",
        "show_if": "options.webservice=='dropbox' && options.output_format!='file_list' && options.is_cloud_dir=='false'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dir_path_filter": {
        "type": "fieldset",
        "label": "Import Path and File Filter",
        "show_if": "options.output_format=='file_list' || options.is_cloud_dir=='true'",
        "repeat": true,
        "fields": {
          "github__link_directory": {
            "type": "text",
            "label": "Enter link e.g. https://github.com/zippydoc/test",
            "show_if": "options.webservice=='github'",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "one_drive__dir_path": {
            "type": "text",
            "label": "Enter path to dir e.g. ZippyDoc/Subdir1",
            "show_if": "options.webservice=='ms_one_drive'",
            "width": "100%",
            "breakLine": true
          },
          "dropbox__dir_path": {
            "type": "text",
            "label": "Enter path to dir e.g. ZippyDoc/Subdir1",
            "show_if": "options.webservice=='dropbox'",
            "width": "100%",
            "breakLine": true
          },
          "google_drive__dir_path": {
            "type": "text",
            "label": "Enter path to dir",
            "show_if": "options.webservice=='google_drive'",
            "width": "100%",
            "breakLine": true
          },
          "dir_filter__filter_type": {
            "type": "select",
            "label": "Filter Type",
            "options": {
              "all": {
                "label": "All"
              },
              "contains": {
                "label": "Contains"
              },
              "starts_with": {
                "label": "Starts With"
              },
              "ends_with": {
                "label": "Ends With"
              },
              "regex": {
                "label": "Regular Expression"
              }
            },
            "val": "all",
            "required": true
          },
          "dir_filter__filter_string": {
            "type": "text",
            "label": "Filter",
            "show_if": "this.dir_filter__filter_type!='all'",
            "required": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.is_github_private": {
        "type": "checkbox",
        "label": "Github repository is private",
        "show_if": "options.webservice=='github'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "options.github_token": {
        "type": "text",
        "label": "Github personal access token",
        "show_if": "options.webservice=='github' && options.is_github_private=='true'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.one_drive.access_token": {
        "type": "text",
        "label": "One Drive Access Token",
        "show_if": "options.webservice=='ms_one_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox.auth_code": {
        "type": "text",
        "label": "Dropbox Authorization Code",
        "show_if": "options.webservice=='dropbox'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.google_drive.access_token": {
        "type": "text",
        "label": "Google Drive Access Token",
        "show_if": "options.webservice=='google_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      }
    }
  }
}
,
"/DCCrimeOptions.json/DCCrimeOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.all_countries": {
        "type": "hidden",
        "val": "false"
      },
      "options.stat_vars": {
        "type": "fieldset",
        "label": "Statistics data category(s)",
        "repeat": true,
        "fields": {
          "stat_var_name": {
            "type": "select",
            "label": "Crime Data",
            "required": true,
            "options": {
              "Count_CriminalActivities_MurderAndNonNegligentManslaughter_AsFractionOf_Count_Person": {
                "label": "Count of Murder And Non Negligent Manslaughter Per Capita"
              },
              "Count_CriminalActivities_MurderAndNonNegligentManslaughter_Female_AsFractionOf_Count_Person_Female": {
                "label": "Count of Female Murder And Non Negligent Manslaughter Per Female Capita"
              },
              "Count_CriminalActivities_MurderAndNonNegligentManslaughter_Male_AsFractionOf_Count_Person_Male": {
                "label": "Count of Male Murder And Non Negligent Manslaughter Per Male Capita"
              }
            }
          },
          "per_capita": {
            "type": "checkbox",
            "label": "Per capita",
            "show_if": "false",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "help_Count_CriminalActivities_MurderAndNonNegligentManslaughter_AsFractionOf_Count_Person": {
            "type": "textarea",
            "label": "",
            "show_if": "this.stat_var_name=='Count_CriminalActivities_MurderAndNonNegligentManslaughter_AsFractionOf_Count_Person'",
            "val": "Intentional homicides are unlawful homicides purposely inflicted as a result of domestic disputes, interpersonal violence, violent conflicts over land resources, intergang violence over turf or control, and predatory violence and killing by armed groups. Intentional homicide does not include all intentional killing; the difference is usually in the organization of the killing. Individuals or small groups usually commit homicide, whereas killing in armed conflict is usually committed by fairly cohesive groups of up to several hundred members and is thus usually excluded.",
            "md_no_resize": false,
            "rows": 9,
            "disabled": true,
            "width": "100%"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.output_as_chart": {
        "type": "checkbox",
        "label": "Output a Graph",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
}
,
"/NewTableOptions.json/NewTableOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.add_columns": {
        "type": "fieldset",
        "label": "Define Columns",
        "repeat": true,
        "fields": {
          "first_new_column_name": {
            "type": "text",
            "label": "Column Name",
            "show_if" :  "$index == 0",
            "val": "Welcome to ZIPPYDOC"
          },
          "new_column_name": {
            "type": "text",
            "label": "Column Name",
            "show_if" :  "$index > 0",
            "val": ""
          },
          "initial_content": {
            "type": "text",
            "label": "Initial Content",
            "val": "Click to copy & paste own table",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.number_of_rows": {
        "type": "number",
        "label": "Number of Rows",
        "required": true,
        "val": 1,
        "breakLine": true
      }
    }
  }
}
,
"/SaveTaskTemplateOptions.json/SaveTaskTemplateOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.base_script_name": {
        "type": "text",
        "label": "Base script name(e.g. `clean`)",
        "val": "clean",
        "width": "100%",
        "breakLine": true
      },
      "options.table_id": {
        "type": "select",
        "label": "Script Entity JSON table",
        "bind": "TABLES",
        "required": true,
        "breakLine": true
      },
      "help_1": {
        "type": "text",
        "label": "",
        "val": "You may get base table with `Get Task Template` task",
        "disabled": true,
        "width": "100%",
        "breakLine": true
      },
      "options.publish_type": {
        "type": "select",
        "label": "Publish Type",
        "options": {
          "private": {
            "label": "As private task"
          },
          "public": {
            "label": "As public task"
          }
        },
        "val": "private",
        "required": true,
        "breakLine": true
      }
    }
  }
}
,
"/RunByParameterComposeTableName.json/RunByParameterComposeTableName.json": {
  "output.table_name_type": {
    "type": "select",
    "label": "Table Name",
    "required": true,
    "options": {
      "task_name": {
        "label": "Task Name (Flow Name)"
      },
      "custom_name": {
        "label": "Custom Name"
      },
      "compose_name": {
        "label": "Compose Name"
      }
    },
    "val": "task_name",
    "breakLine": true
  },
  "output.custom_text": {
    "type": "text",
    "label": "Output Table Name",
    "show_if": "output.table_name_type=='custom_name'",
    "minLength": 1,
    "val": "",
    "width": "100%",
    "breakLine": true
  },
  "compose_table_name_frame": {
    "type": "fieldset",
    "label": "Compose Output Table Name",
    "show_if": "output.table_name_type=='compose_name'",
    "repeat": false,
    "fields": {
      "output.prefix_rule": {
        "type": "select",
        "label": "Prefix",
        "val": "empty",
        "options": {
          "empty": {
            "label": "-"
          },
          "script_name": {
            "label": "Task Name"
          },
          "date_string_type1": {
            "label": "Date: dd_mm_yyyy"
          },
          "date_string_type2": {
            "label": "Date: yyyy_mm_dd"
          },
          "time_string": {
            "label": "Time: h_min_sec"
          },
          "datetime_string": {
            "label": "Date_Time"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.prefix_text": {
        "type": "text",
        "label": "Prefix Text",
        "show_if": "output.prefix_rule=='custom'",
        "minLength": 1,
        "maxLength": 31,
        "val": ""
      },
      "output.core_delimiter": {
        "type": "text",
        "label": "Delimiter",
        "show_if": "output.prefix_rule!='empty'",
        "val": "_",
        "width": "50px"
      },
      "output.core_rule": {
        "type": "select",
        "label": "Table Name",
        "val": "script_name",
        "options": {
          "input_table_name": {
            "label": "Input Table Name"
          },
          "script_name": {
            "label": "Task Name"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.core_text": {
        "type": "text",
        "label": "Main Table Name",
        "show_if": "output.core_rule=='custom'",
        "required": true,
        "minLength": 1,
        "maxLength": 31,
        "val": ""
      },
      "output.suffix_delimiter": {
        "type": "text",
        "label": "Delimiter",
        "val": " ",
        "width": "50px"
      },
      "output.suffix_rule": {
        "type": "select",
        "label": "Suffix",
        "val": "flow_name",
        "options": {
          "empty": {
            "label": "-"
          },
          "flow_name": {
            "label": "(Flow Name)"
          },
          "script_name": {
            "label": "Task Name"
          },
          "date_string_type1": {
            "label": "Date: dd_mm_yyyy"
          },
          "date_string_type2": {
            "label": "Date: yyyy_mm_dd"
          },
          "time_string": {
            "label": "Time: h_min_sec"
          },
          "datetime_string": {
            "label": "Date_Time"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.suffix_text": {
        "type": "text",
        "label": "Suffix Text",
        "show_if": "output.suffix_rule=='custom'",
        "minLength": 1,
        "maxLength": 31,
        "val": "",
        "breakLine": true
      },
      "output.timezone": {
        "type": "select",
        "label": "Timezone",
        "show_if": "output.prefix_rule=='date_string_type1' || output.prefix_rule=='date_string_type2' || output.prefix_rule=='time_string' || output.prefix_rule=='datetime_string' || output.suffix_rule=='date_string_type1' || output.suffix_rule=='date_string_type2' || output.suffix_rule=='time_string' || output.suffix_rule=='datetime_string'",
        "val": "Europe/Berlin",
        "required": true,
        "options": {
          "America/Adak": {
            "label": "Adak, Gambier"
          },
          "Australia/Adelaide": {
            "label": "Adelaide, Broken Hill, Darwin"
          },
          "America/Anchorage": {
            "label": "Anchorage, Juneau, Sitka"
          },
          "Pacific/Apia": {
            "label": "Apia, Asau, Mulifanua, Afega, Leulumoega"
          },
          "Pacific/Enderbury": {
            "label": "Apia, Fiji, Tongatapu"
          },
          "Antarctica/McMurdo": {
            "label": "Auckland, Casey, Davis"
          },
          "Pacific/Auckland": {
            "label": "Auckland, Wellington, Christchurch"
          },
          "Asia/Bangkok": {
            "label": "Bangkok, Jakarta, Novosibirsk"
          },
          "Europe/Berlin": {
            "label": "Berlin, Paris, Amsterdam"
          },
          "Australia/Perth": {
            "label": "Brunei, Singapore, Perth"
          },
          "Atlantic/Cape_Verde": {
            "label": "Cape Verde,Praia, Mindelo, Santa Maria"
          },
          "America/Belize": {
            "label": "Costa Rica, El Salvador, Denver"
          },
          "Antarctica/Vostok": {
            "label": "Dhaka, Bishkek, Omsk"
          },
          "Europe/Astrakhan": {
            "label": "Dubai, Baku, Tbilisi"
          },
          "Australia/Eucla": {
            "label": "Eucla"
          },
          "Pacific/Honolulu": {
            "label": "Honolulu, Rarotonga, Tahiti"
          },
          "Asia/Kabul": {
            "label": "Kabul, Kandahār, Mazār-e Sharīf, Herāt, Jalālābād"
          },
          "Asia/Aqtau": {
            "label": "Karachi, Tashkent, Maldives"
          },
          "Asia/Kathmandu": {
            "label": "Kathmandu, Pokhara, Pātan, Biratnagar"
          },
          "Pacific/Kiritimati": {
            "label": "Kiritimati"
          },
          "Asia/Colombo": {
            "label": "Kolkata, Colombo, Jaffna, Negombo"
          },
          "Europe/Guernsey": {
            "label": "London, Dublin, Lisbon"
          },
          "Australia/Lord_Howe": {
            "label": "Lord Howe"
          },
          "America/Creston": {
            "label": "Los Angeles, Vancouver, Hermosillo"
          },
          "Pacific/Marquesas": {
            "label": "Marquesas, Taiohae"
          },
          "America/Cayman": {
            "label": "Mexico City, Panama, Chicago"
          },
          "Pacific/Niue": {
            "label": "Midway, Niue, Pago Pago"
          },
          "Europe/Mariehamn": {
            "label": "Moscow, Istanbul, Qatar"
          },
          "Asia/Kolkata": {
            "label": "Mumbai, Delhi, Bengaluru, Kolkata, Chennai"
          },
          "America/Miquelon": {
            "label": "Noronha, Nuuk, Miquelon"
          },
          "America/Danmarkshavn": {
            "label": "Reykjavik, Dakar, Casablanca"
          },
          "Pacific/Bougainville": {
            "label": "Sakhalin, Norfolk, Bougainville"
          },
          "America/Araguaina": {
            "label": "Sao Paulo, Buenos Aires, Montevideo"
          },
          "America/St_Johns": {
            "label": "St. Johns, Mount Pearl, Corner Brook"
          },
          "Asia/Tehran": {
            "label": "Tehran, Mashhad, Isfahan, Karaj, Tabriz"
          },
          "Asia/Tokyo": {
            "label": "Tokyo, Seoul, Jayapura"
          },
          "America/New_York": {
            "label": "Toronto, Santiago, New York"
          },
          "Australia/Sydney": {
            "label": "Vladivostok, Sydney, Brisbane"
          },
          "Asia/Yangon": {
            "label": "Yangon, Cocos, Mandalay, Nay Pyi Taw, Mawlamyine"
          },
          "Indian/Cocos": {
            "label": "Yangon, Cocos, West Island"
          }
        },
        "breakLine": true
      }
    },
    "breakLine": true
  }
},
"/D3TreeOptions.json/D3TreeOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.chart_type": {
        "type": "select",
        "label": "Tree Type",
        "required": true,
        "options": {
          "collapsible_tree": {
            "label": "Collapsible Tree"
          },
          "tidy_tree": {
            "label": "Tidy Tree"
          },
          "radial_dendrogram": {
            "label": "Radial Dendrogram"
          }
        },
        "val": "collapsible_tree",
        "breakLine": true
      },
      "options.group_cols": {
        "type": "fieldset",
        "label": "Select Group Column(s) in Order",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.configure_manual=='true'",
        "repeat": true,
        "fields": {
          "group_col": {
            "type": "select",
            "label": "Group column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      }
    }
  }
}
,
"/LabelToHeaderOptions.json/LabelToHeaderOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.label_column": {
        "type": "select",
        "label": "Label Column",
        "required": true,
        "table": "table_id",
        "bind": "COLUMNS"
      },
      "options.search_tables__label_column_text": {
        "type": "text",
        "label": "Label Column Name",
        "show_if": "search_tables=='true' && search_tables__select_columns_by=='by_name_text'",
        "val": "",
        "required": true
      },
      "options.search_tables__label_column_order": {
        "type": "select",
        "label": "Label Column",
        "required": true,
        "show_if" :  "search_tables=='true' && search_tables__select_columns_by=='by_order'",
        "options": {
          "col1": {
            "label": "Column 1"
          },
          "col2": {
            "label": "Column 2"
          },
          "col3": {
            "label": "Column 3"
          },
          "col4": {
            "label": "Column 4"
          },
          "col5": {
            "label": "Column 5"
          },
          "col6": {
            "label": "Column 6"
          },
          "col7": {
            "label": "Column 7"
          },
          "col8": {
            "label": "Column 8"
          },
          "col9": {
            "label": "Column 9"
          },
          "col10": {
            "label": "Column 10"
          },
          "col11": {
            "label": "Column 11"
          },
          "col12": {
            "label": "Column 12"
          },
          "col13": {
            "label": "Column 13"
          },
          "col14": {
            "label": "Column 14"
          },
          "col15": {
            "label": "Column 15"
          },
          "col16": {
            "label": "Column 16"
          },
          "col17": {
            "label": "Column 17"
          },
          "col18": {
            "label": "Column 18"
          },
          "col19": {
            "label": "Column 19"
          },
          "col20": {
            "label": "Column 20"
          }
        },
        "val": "",
        "breakLine": true
      },
      "options.value_column": {
        "type": "select",
        "label": "Value Column",
        "required": true,
        "table": "table_id",
        "bind": "COLUMNS"
      },
      "options.search_tables__value_column_text": {
        "type": "text",
        "label": "Label Column Name",
        "show_if": "search_tables=='true' && search_tables__select_columns_by=='by_name_text'",
        "val": "",
        "required": true
      },
      "options.search_tables__value_column_order": {
        "type": "select",
        "label": "Label Column",
        "required": true,
        "show_if" :  "search_tables=='true' && search_tables__select_columns_by=='by_order'",
        "options": {
          "col1": {
            "label": "Column 1"
          },
          "col2": {
            "label": "Column 2"
          },
          "col3": {
            "label": "Column 3"
          },
          "col4": {
            "label": "Column 4"
          },
          "col5": {
            "label": "Column 5"
          },
          "col6": {
            "label": "Column 6"
          },
          "col7": {
            "label": "Column 7"
          },
          "col8": {
            "label": "Column 8"
          },
          "col9": {
            "label": "Column 9"
          },
          "col10": {
            "label": "Column 10"
          },
          "col11": {
            "label": "Column 11"
          },
          "col12": {
            "label": "Column 12"
          },
          "col13": {
            "label": "Column 13"
          },
          "col14": {
            "label": "Column 14"
          },
          "col15": {
            "label": "Column 15"
          },
          "col16": {
            "label": "Column 16"
          },
          "col17": {
            "label": "Column 17"
          },
          "col18": {
            "label": "Column 18"
          },
          "col19": {
            "label": "Column 19"
          },
          "col20": {
            "label": "Column 20"
          }
        },
        "val": "",
        "breakLine": true
      }
    }
  }
},
"/LookupOptions.json/LookupOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.task_type": {
        "type": "select",
        "label": "Task Type",
        "required": true,
        "options": {
          "generate_lookup_table": {
            "label": "Generate Lookup-Table"
          },
          "apply_lookup_table": {
            "label": "Apply Lookup-Table"
          },
          "apply_regex_table": {
            "label": "Apply Regex-Table"
          },
          "apply_lookup_table_to_cells": {
            "label": "Apply Lookup-Table to Cells"
          },
          "apply_regex_table_to_cells": {
            "label": "Apply Regex-Table to Cells"
          }
        },
        "val": "generate_lookup_table"
      },
      "options.pattern_type": {
        "type": "select",
        "label": "Pattern Type",
        "show_if": "options.task_type=='generate_lookup_table' || options.task_type=='apply_lookup_table' || options.task_type=='apply_lookup_table_to_cells'",
        "required": true,
        "options": {
          "duplicate_pattern": {
            "label": "Word Pattern"
          },
          "number_range": {
            "label": "Ranges(e.g. 10 < x <= 100)"
          }
        },
        "val": "duplicate_pattern"
      },
      "duplicate_option_box": {
        "type": "fieldset",
        "label": "Duplicate Patterns Option",
        "show_if": "options.task_type=='label_duplicates' || (options.task_type=='generate_lookup_table' && options.pattern_type=='duplicate_pattern')",
        "repeat": false,
        "fields": {
          "options.minimum_number_of_matching_characters": {
            "type": "text",
            "label": "Minimum Number of matching Characters",
            "val": "3",
            "required": true,
            "style": "min-width: 240px"
          },
          "options.minimum_number_of_duplicates": {
            "type": "text",
            "label": "Minimum Number of duplicates",
            "val": "2",
            "required": true,
            "style": "min-width: 240px",
            "breakLine": true
          }
        }
      },
      "number_range_option_box": {
        "type": "fieldset",
        "label": "Number Ranges Option",
        "show_if": "options.task_type=='generate_lookup_table' && options.pattern_type=='number_range'",
        "repeat": false,
        "fields": {
          "options.number_range.range_type": {
            "type": "select",
            "label": "Range Type",
            "required": true,
            "options": {
              "equal_interval": {
                "label": "N Equal Intervals"
              },
              "equal_range": {
                "label": "Equal Range"
              },
              "custom_range": {
                "label": "Custom Range"
              }
            },
            "val": "equal_interval"
          },
          "options.number_range.n_value": {
            "type": "text",
            "label": "N",
            "show_if": "options.number_range.range_type=='equal_interval'",
            "val": "3",
            "required": true
          },
          "options.number_range.range_value": {
            "type": "text",
            "label": "Range",
            "show_if": "options.number_range.range_type=='equal_range'",
            "val": "10",
            "required": true
          },
          "options.number_range.custom_ranges": {
            "type": "fieldset",
            "label": "Add Custom Range Pattern",
            "show_if": "options.number_range.range_type=='custom_range'",
            "repeat": true,
            "fields": {
              "pattern": {
                "type": "text",
                "label": "Pattern",
                "val": "0<=x<10",
                "required": true
              },
              "label": {
                "type": "text",
                "label": "Label",
                "val": "positive10",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          }
        }
      },
      "options.custom_lookup_table": {
        "type": "checkbox",
        "label": "Custom Lookup Table",
        "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells'",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.lookup_table_type": {
        "type": "select",
        "label": "Lookup Table Type",
        "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells'",
        "required": true,
        "options": {
          "select_lookup_table": {
            "label": "Select Lookup Table"
          },
          "custom_lookup_table": {
            "label": "Custom Lookup Table"
          }
        },
        "val": "select_lookup_table"
      },
      "lookup_table_frame": {
        "type": "fieldset",
        "label": "",
        "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells'",
        "repeat": false,
        "fields": {
          "options.lookup_table_id": {
            "type": "select",
            "label": "Lookup Table",
            "show_if": "options.custom_lookup_table=='false'",
            "bind": "TABLES",
            "empty": "",
            "required": true,
            "breakLine": true
          },
          "options.custom_lookup_table": {
            "type": "fieldset",
            "label": "Custom Lookup Table",
            "show_if": "options.custom_lookup_table=='true'",
            "repeat": true,
            "fields": {
              "lookup": {
                "type": "text",
                "label": "Lookup",
                "placeholder": "10 < x <= 100",
                "val": "",
                "required": true
              },
              "label": {
                "type": "text",
                "label": "Label",
                "placeholder": "10 < x <= 100",
                "val": "",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.partial_match": {
            "type": "checkbox",
            "label": "Partial Match",
            "show_if": "options.pattern_type=='duplicate_pattern' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_lookup_table_to_cells')",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "options.case_sensitive": {
            "type": "checkbox",
            "label": "Case Sensitive",
            "show_if": "options.pattern_type=='duplicate_pattern' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_lookup_table_to_cells')",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.use_delimiter": {
            "type": "checkbox",
            "label": "Custom Delimiter",
            "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_lookup_table_to_cells'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px"
          },
          "options.delimiter": {
            "type": "text",
            "label": "Input Delimiter",
            "show_if": "options.use_delimiter=='true' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_lookup_table_to_cells')",
            "val": ";",
            "required": true,
            "breakLine": true
          }
        }
      },
      "options.input_table.use_filter": {
        "type": "checkbox",
        "label": "Use Filter for Input table",
        "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "input_table_filter_box": {
        "type": "fieldset",
        "label": "Input Table Filter Options",
        "show_if": "options.input_table.use_filter=='true' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells')",
        "repeat": false,
        "fields": {
          "options.input_table.filter": {
            "type": "fieldset",
            "label": "Add Filter Conditions for Input table",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "input_table",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.input_table.apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record for Input table filter",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "input_table_apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group of Input table",
            "show_if": "options.input_table.apply_to_record=='false'",
            "repeat": false,
            "fields": {
              "options.input_table.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "required": true,
                "width": "100%",
                "table": "input_table",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      },
      "options.lookup_table.use_filter": {
        "type": "checkbox",
        "label": "Use Filter for Lookup table",
        "show_if": "options.custom_lookup_table=='false' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells')",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "lookup_table_filter_box": {
        "type": "fieldset",
        "label": "Lookup Table Filter Options",
        "show_if": "options.lookup_table.use_filter=='true' && options.custom_lookup_table=='false' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells')",
        "repeat": false,
        "fields": {
          "options.lookup_table.filter": {
            "type": "fieldset",
            "label": "Add Filter Conditions for Lookup table",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "options.lookup_table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.lookup_table.apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record for Lookup table filter",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "lookup_table_apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group of Lookup table",
            "show_if": "options.lookup_table.apply_to_record=='false'",
            "repeat": false,
            "fields": {
              "options.lookup_table.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "required": true,
                "width": "100%",
                "table": "options.lookup_table",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      },
      "options.input_table.apply_to_group_for_concatenation.enabled": {
        "type": "checkbox",
        "label": "Apply to Group for Rows Concatenation",
        "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "options.input_table.apply_to_group_for_concatenation.allow_group_lists": {
        "type": "checkbox",
        "label": "Allow Group-Lists",
        "show_if": "options.input_table.apply_to_group_for_concatenation.enabled=='true' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table')",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "options.input_table.apply_to_group_for_concatenation.group_column": {
        "type": "select",
        "label": "Select Group Column for Rows Concatenation",
        "show_if": "options.input_table.apply_to_group_for_concatenation.enabled=='true' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table')",
        "required": true,
        "width": "100%",
        "table": "input_table",
        "bind": "COLUMNS",
        "breakLine": true
      }
    }
  }
}
,
"/FindDuplicatesOptions.json/FindDuplicatesOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.task": {
        "type": "hidden",
        "val": "find_duplicates"
      },
      "options.task_type": {
        "type": "hidden",
        "val": "label_duplicates"
      },
      "options.pattern_type": {
        "type": "select",
        "label": "Pattern Type",
        "show_if": "options.task_type=='generate_lookup_table' || options.task_type=='apply_lookup_table' || options.task_type=='apply_lookup_table_to_cells'",
        "required": true,
        "options": {
          "duplicate_pattern": {
            "label": "Word Pattern"
          },
          "number_range": {
            "label": "Ranges(e.g. 10 < x <= 100)"
          }
        },
        "val": "duplicate_pattern"
      },
      "duplicate_option_box": {
        "type": "fieldset",
        "label": "Duplicate Patterns Option",
        "show_if": "options.task_type=='label_duplicates' || (options.task_type=='generate_lookup_table' && options.pattern_type=='duplicate_pattern')",
        "repeat": false,
        "fields": {
          "options.minimum_number_of_matching_characters": {
            "type": "text",
            "label": "Minimum Number of matching Characters",
            "val": "3",
            "required": true,
            "style": "min-width: 240px"
          },
          "options.minimum_number_of_duplicates": {
            "type": "text",
            "label": "Minimum Number of duplicates",
            "val": "2",
            "required": true,
            "style": "min-width: 240px",
            "breakLine": true
          }
        }
      },
      "number_range_option_box": {
        "type": "fieldset",
        "label": "Number Ranges Option",
        "show_if": "options.task_type=='generate_lookup_table' && options.pattern_type=='number_range'",
        "repeat": false,
        "fields": {
          "options.number_range.range_type": {
            "type": "select",
            "label": "Range Type",
            "required": true,
            "options": {
              "equal_interval": {
                "label": "N Equal Intervals"
              },
              "equal_range": {
                "label": "Equal Range"
              },
              "custom_range": {
                "label": "Custom Range"
              }
            },
            "val": "equal_interval"
          },
          "options.number_range.n_value": {
            "type": "text",
            "label": "N",
            "show_if": "options.number_range.range_type=='equal_interval'",
            "val": "3",
            "required": true
          },
          "options.number_range.range_value": {
            "type": "text",
            "label": "Range",
            "show_if": "options.number_range.range_type=='equal_range'",
            "val": "10",
            "required": true
          },
          "options.number_range.custom_ranges": {
            "type": "fieldset",
            "label": "Add Custom Range Pattern",
            "show_if": "options.number_range.range_type=='custom_range'",
            "repeat": true,
            "fields": {
              "pattern": {
                "type": "text",
                "label": "Pattern",
                "val": "0<=x<10",
                "required": true
              },
              "label": {
                "type": "text",
                "label": "Label",
                "val": "positive10",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          }
        },
        "breakLine": true
      },
      "options.lookup_table_id": {
        "type": "select",
        "label": "Lookup Table",
        "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells'",
        "bind": "TABLES",
        "empty": "",
        "required": true
      },
      "options.partial_match": {
        "type": "checkbox",
        "label": "Partial Match",
        "show_if": "options.pattern_type=='duplicate_pattern' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_lookup_table_to_cells')",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "options.case_sensitive": {
        "type": "checkbox",
        "label": "Case Sensitive",
        "show_if": "options.pattern_type=='duplicate_pattern' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_lookup_table_to_cells')",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.use_delimiter": {
        "type": "checkbox",
        "label": "Custom Delimiter",
        "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_lookup_table_to_cells'",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "options.delimiter": {
        "type": "text",
        "label": "Input Delimiter",
        "show_if": "options.use_delimiter=='true' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_lookup_table_to_cells')",
        "val": ";",
        "required": true,
        "breakLine": true
      },
      "options.input_table.use_filter": {
        "type": "checkbox",
        "label": "Use Filter for Input table",
        "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "input_table_filter_box": {
        "type": "fieldset",
        "label": "Input Table Filter Options",
        "show_if": "options.input_table.use_filter=='true' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells')",
        "repeat": false,
        "fields": {
          "options.input_table.filter": {
            "type": "fieldset",
            "label": "Add Filter Conditions for Input table",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table_id": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table_id",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.input_table.apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record for Input table filter",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "input_table_apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group of Input table",
            "show_if": "options.input_table.apply_to_record=='false'",
            "repeat": false,
            "fields": {
              "options.input_table.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "required": true,
                "width": "100%",
                "table": "table_id",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      },
      "options.lookup_table.use_filter": {
        "type": "checkbox",
        "label": "Use Filter for Lookup table",
        "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "lookup_table_filter_box": {
        "type": "fieldset",
        "label": "Lookup Table Filter Options",
        "show_if": "options.lookup_table.use_filter=='true' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells')",
        "repeat": false,
        "fields": {
          "options.lookup_table.filter": {
            "type": "fieldset",
            "label": "Add Filter Conditions for Lookup table",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "options.lookup_table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table_id": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table_id",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.lookup_table.apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record for Lookup table filter",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "lookup_table_apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group of Lookup table",
            "show_if": "options.lookup_table.apply_to_record=='false'",
            "repeat": false,
            "fields": {
              "options.lookup_table.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "required": true,
                "width": "100%",
                "table": "options.lookup_table",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      },
      "options.input_table.apply_to_group_for_concatenation.enabled": {
        "type": "checkbox",
        "label": "Apply to Group for Rows Concatenation",
        "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px"
      },
      "options.input_table.apply_to_group_for_concatenation.allow_group_lists": {
        "type": "checkbox",
        "label": "Allow Group-Lists",
        "show_if": "options.input_table.apply_to_group_for_concatenation.enabled=='true' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table')",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "options.input_table.apply_to_group_for_concatenation.group_column": {
        "type": "select",
        "label": "Select Group Column for Rows Concatenation",
        "show_if": "options.input_table.apply_to_group_for_concatenation.enabled=='true' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table')",
        "required": true,
        "width": "100%",
        "table": "table_id",
        "bind": "COLUMNS",
        "breakLine": true
      },
      "options.output_type": {
        "type": "select",
        "label": "Output Type",
        "required": true,
        "options": {
          "list_all_duplicates_once": {
            "label": "List all duplicates once"
          },
          "list_found_duplicates_per_item": {
            "label": "List found duplicates per item"
          }
        },
        "val": "list_all_duplicates_once",
        "breakLine": true
      },
      "options.add_filename": {
        "type": "checkbox",
        "label": "Add File Name",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
}
,
"/WorldPopulationInput.json/WorldPopulationInput.json": {
  "input": {
    "type": "fieldset",
    "label": "Select Input Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "options.configure_input_table == 'true'",
    "repeat": false,
    "fields": {
      "table_id": {
        "type": "select",
        "label": "Select Table",
        "bind": "TABLES",
        "empty": "",
        "required": true,
        "breakLine": true
      },
      "remove_input_table_after_processing": {
        "type": "hidden",
        "val": "false"
      },
      "is_word": {
        "type": "hidden",
        "val": "false"
      },
      "help_text_stripe_charge": {
        "type": "text",
        "label": "",
        "val": "Table Structure ( Region | Income Group | Country | State | Population (2020) | GDP in USD (2020) )",
        "disabled": true,
        "width": "100%"
      }
    }
  }
}
,
"/BinningOptions.json/BinningOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "number_of_tiles": {
        "type": "number",
        "label": "Number of Bins",
        "val": 2,
        "required": true,
        "breakLine": true
      },
      "binning_type": {
        "type": "select",
        "label": "Binning Type",
        "style": "float: left; width: 40%",
        "options": {
          "equal_records": {
            "label": "Simple Binning"
          },
          "equal_intervals": {
            "label": "Equal Interval Binning"
          }
        },
        "val": "equal_records"
      },
      "equal_records_order": {
        "type": "select",
        "label": "Order",
        "style": "float: right; width: 40%",
        "show_if": "binning_type=='equal_records'",
        "options": {
          "keep_current": {
            "label": "Keep Current"
          },
          "asc": {
            "label": "Ascending"
          },
          "desc": {
            "label": "Descending"
          }
        },
        "val": "keep_current"
      },
      "equal_intervals_order": {
        "type": "select",
        "label": "Order",
        "style": "float: right; width: 40%",
        "show_if": "binning_type=='equal_intervals'",
        "options": {
          "asc": {
            "label": "Ascending"
          },
          "desc": {
            "label": "Descending"
          }
        },
        "val": "asc",
        "breakLine": true
      }
    },
    "breakLine": true
  }
}
,
"/SelectPeriod.json/SelectPeriod.json": {
  "output.add_period": {
    "type": "checkbox",
    "label": "Add Periodicy",
    "show_if": "options.type=='process' || options.type=='custom'",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "style": "margin-top: 10px",
    "breakLine": true
  },
  "output.period": {
    "type": "select",
    "label": "Periodicy",
    "show_if": "(options.type=='process' || options.type=='custom') && output.add_period=='true'",
    "multiple": true,
    "options": {
      "year": {
        "label": "Year"
      },
      "half-year": {
        "label": "Half-Year"
      },
      "quarter": {
        "label": "Quarter"
      },
      "month": {
        "label": "Month"
      },
      "week": {
        "label": "Week"
      }
    },
    "val": "",
    "required": true
  },
  "output.period_concatenate": {
    "type": "checkbox",
    "label": "Concatenate",
    "show_if": "(options.type=='process' || options.type=='custom') && output.add_period=='true'",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  }
},
"/TimeTrackerOptions.json/TimeTrackerOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "start_stop": {
        "type": "radio",
        "label": "Track",
        "required": true,
        "values": {
          "start": "Start",
          "stop": "Stop"
        },
        "val": "start",
        "breakLine": true
      },
      "notes": {
        "type": "textarea",
        "label": "Notes",
        "val": "",
        "md_no_resize": true,
        "rows": 2,
        "width": "100%",
        "breakLine": true
      }
    }
  }
}
,
"/ExpandCompressOptions.json/ExpandCompressOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.type": {
        "type": "radio",
        "label": "List Action",
        "val": "expand",
        "values": {
          "expand": "Expand",
          "compress": "Compress"
        },
        "breakLine": true
      },
      "options.column_to_expand": {
        "type": "select",
        "label": "Column to expand",
        "show_if": "options.type=='expand'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "options.column_to_group": {
        "type": "select",
        "label": "Column to group",
        "show_if": "options.type=='compress'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "options.column_to_compress": {
        "type": "select",
        "label": "Column to compress",
        "show_if": "options.type=='compress'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "options.delimiter": {
        "type": "text",
        "label": "Delimiter",
        "val": ";",
        "trim": "false",
        "required": true
      },
      "options.new_col_name": {
        "type": "text",
        "label": "New Column Name",
        "show_if": "options.type=='expand' && options.expand__output_in_new_column=='true'",
        "val": "label",
        "required": true,
        "breakLine": true
      },
      "options.expand__output_in_new_column": {
        "type": "checkbox",
        "label": "Output in new column",
        "show_if": "options.type=='expand'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
}
,
"/HolidayOutput.json/HolidayOutput.json": {
  "output": {
    "type": "fieldset",
    "label": "Define Output Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "output.custom_text": {
        "type": "text",
        "label": "Output Table Name",
        "show_if": "output.custom_options=='false' || (output.custom_options=='true' && output.compose_table_name=='false')",
        "minLength": 1,
        "val": "",
        "width": "100%",
        "breakLine": true
      },
      "output.custom_options": {
        "type": "checkbox",
        "label": "Output Options",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "output.select_output_columns": {
        "type": "checkbox",
        "label": "Select Output Columns",
        "show_if": "options.is_generate_holiday_table=='add_column' && output.custom_options=='true'",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "output_columns": {
        "type": "fieldset",
        "label": "Select OutputColumns",
        "show_if": "options.is_generate_holiday_table=='add_column' && output.custom_options=='true' && output.select_output_columns=='true'",
        "repeat": true,
        "fields": {
          "field_name": {
            "type": "select",
            "label": "Select Column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "order": {
            "type": "select",
            "label": "Order",
            "options": {
              "-": {
                "label": "-"
              },
              "asc": {
                "label": "Asc"
              },
              "desc": {
                "label": "Desc"
              }
            },
            "val": "-"
          },
          "is_rename": {
            "type": "checkbox",
            "label": "Rename",
            "val": "false",
            "isOn": "true",
            "isOff": "false"
          },
          "rename": {
            "show_if": "this.is_rename == 'true'",
            "type": "text",
            "required": true,
            "minLength": 1,
            "maxLength": 255,
            "label": "New Column Name",
            "style": "margin-left: 10px"
          },
          "format__category": {
            "type": "select",
            "label": "Display Format",
            "required": true,
            "options": {
              "standard": {
                "label": "Standard"
              },
              "number": {
                "label": "Number"
              },
              "percentage": {
                "label": "Percentage"
              },
              "text": {
                "label": "Text"
              },
              "date": {
                "label": "Date"
              },
              "currency": {
                "label": "Currency"
              }
            },
            "val": "standard"
          },
          "format__rounding": {
            "type": "select",
            "label": "Decimal Places for display",
            "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
            "required": true,
            "options": {
              "no_rounding": {
                "label": "No rounding"
              },
              "0": {
                "label": "0 digits"
              },
              "1": {
                "label": "1 digits"
              },
              "2": {
                "label": "2 digits"
              },
              "3": {
                "label": "3 digits"
              },
              "4": {
                "label": "4 digits"
              },
              "5": {
                "label": "5 digits"
              },
              "6": {
                "label": "6 digits"
              },
              "7": {
                "label": "7 digits"
              },
              "8": {
                "label": "8 digits"
              },
              "9": {
                "label": "9 digits"
              }
            },
            "val": "2"
          },
          "format__use_1000_separator": {
            "type": "checkbox",
            "label": "Use 1000 Separator(.)",
            "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
            "val": "true",
            "isOn": "true",
            "isOff": "false"
          },
          "format__currency_symbol": {
            "type": "select",
            "label": "Symbol",
            "show_if": "this.format__category=='currency'",
            "required": true,
            "options": {
              "dollar": {
                "label": "$"
              },
              "euro": {
                "label": "€"
              },
              "pound": {
                "label": "£"
              },
              "yen": {
                "label": "¥ (Yen, currency of Japan)"
              },
              "colon": {
                "label": "₡ (Colón, currency of Costa Rica)"
              },
              "naira": {
                "label": "₦ (Naira, currency of Nigeria)"
              },
              "rupee": {
                "label": "₨ (Rupee, currency of India)"
              },
              "rupie": {
                "label": "₹ (Rupee, currency of India)"
              },
              "won": {
                "label": "₩ (Won, currency in South Korea and North Korea)"
              },
              "hebrew": {
                "label": "₪ (Currency of Israel)"
              },
              "dong": {
                "label": "₫ (Currency of Vietnam)"
              },
              "kip": {
                "label": "₭ (Kip, currency of Laos)"
              },
              "mongolia": {
                "label": "₮ (Currency of Mongolia)"
              },
              "peso": {
                "label": "₱ (Peso, currency of the Philippines)"
              },
              "guarani": {
                "label": "₲ (Guaraní, currency of Paraguay)"
              },
              "hryvnia": {
                "label": "₴ (Hryvnia, currency of Ukraine)"
              },
              "tenge": {
                "label": "₸ (Tenge, currency of Kazakhstan)"
              },
              "lira": {
                "label": "₺ (Lira, currency of Turkey)"
              },
              "manat": {
                "label": "₼ (Manat, currency of Azerbaijan)"
              },
              "rubles": {
                "label": "₽ (Rubles, currency of Russia)"
              },
              "lari": {
                "label": "₾ (Lari, currency of Georgia)"
              },
              "bitcoin": {
                "label": "₿ (Bitcoin, crypto currency)"
              }
            },
            "val": "dollar"
          },
          "format__date_format": {
            "type": "select",
            "label": "Type",
            "show_if": "this.format__category=='date'",
            "required": true,
            "options": {
              "mm/dd/yyyy": {
                "label": "3/14/2012"
              },
              "D, M dd, Y": {
                "label": "Wednesday, March 14, 2012"
              },
              "yyyy-mm-dd": {
                "label": "2012-03-14"
              },
              "m.dd.yyyy": {
                "label": "3.14.2012"
              },
              "m.dd.yy": {
                "label": "3.14.12"
              },
              "dd.m.yyyy": {
                "label": "14.3.2012"
              },
              "dd.m.yy": {
                "label": "14.3.12"
              },
              "M dd, Y": {
                "label": "March 14, 2012"
              },
              "dd-mm-yyyy": {
                "label": "14-03-2012"
              },
              "mm-dd-yyyy": {
                "label": "03-14-2012"
              },
              "dd-mm-yy": {
                "label": "14-03-12"
              },
              "mm-dd-yy": {
                "label": "03-14-12"
              }
            },
            "val": "mm/dd/yyyy",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        },
        "breakLine": true,
        "style": "margin-bottom: 20px"
      },
      "output.compose_table_name": {
        "type": "checkbox",
        "label": "Compose Table Name",
        "show_if": "output.custom_options=='true'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "compose_table_name_frame": {
        "type": "fieldset",
        "label": "Compose Output Table Name",
        "show_if": "output.custom_options=='true' && output.compose_table_name=='true'",
        "repeat": false,
        "fields": {
          "output.prefix_rule": {
            "type": "select",
            "label": "Prefix",
            "show_if": "output.compose_table_name=='true'",
            "val": "empty",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.prefix_text": {
            "type": "text",
            "label": "Prefix Text",
            "show_if": "output.compose_table_name=='true' && output.prefix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "output.core_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "show_if": "output.compose_table_name=='true' && output.prefix_rule!='empty'",
            "val": "_",
            "width": "50px"
          },
          "output.generate_core_rule": {
            "type": "select",
            "label": "Table Name",
            "show_if": "output.compose_table_name=='true' && options.is_generate_holiday_table=='generate_table'",
            "val": "script_name",
            "options": {
              "script_name": {
                "label": "Task Name"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.core_rule": {
            "type": "select",
            "label": "Table Name",
            "show_if": "output.compose_table_name=='true' && options.is_generate_holiday_table=='add_column'",
            "val": "input_table_name",
            "options": {
              "input_table_name": {
                "label": "Input Table Name"
              },
              "script_name": {
                "label": "Task Name"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.core_text": {
            "type": "text",
            "label": "Main Table Name",
            "show_if": "output.compose_table_name=='true' && output.core_rule=='custom'",
            "required": true,
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "output.suffix_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "show_if": "output.compose_table_name=='true'",
            "val": "_",
            "width": "50px"
          },
          "output.suffix_rule": {
            "type": "select",
            "label": "Suffix",
            "show_if": "output.compose_table_name=='true'",
            "val": "script_name",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.suffix_text": {
            "type": "text",
            "label": "Suffix Text",
            "show_if": "output.compose_table_name=='true' && output.suffix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": "",
            "breakLine": true
          },
          "output.timezone": {
            "type": "select",
            "label": "Timezone",
            "show_if": "output.compose_table_name=='true' && (output.prefix_rule=='date_string_type1' || output.prefix_rule=='date_string_type2' || output.prefix_rule=='time_string' || output.prefix_rule=='datetime_string' || output.suffix_rule=='date_string_type1' || output.suffix_rule=='date_string_type2' || output.suffix_rule=='time_string' || output.suffix_rule=='datetime_string')",
            "val": "Europe/Berlin",
            "required": true,
            "options": {
              "America/Adak": {
                "label": "Adak, Gambier"
              },
              "Australia/Adelaide": {
                "label": "Adelaide, Broken_Hill, Darwin"
              },
              "America/Anchorage": {
                "label": "Anchorage, Juneau, Sitka"
              },
              "Pacific/Apia": {
                "label": "Apia, Asau, Mulifanua, Afega, Leulumoega"
              },
              "Pacific/Enderbury": {
                "label": "Apia, Fiji, Tongatapu"
              },
              "Antarctica/McMurdo": {
                "label": "Auckland, Casey, Davis"
              },
              "Pacific/Auckland": {
                "label": "Auckland, Wellington, Christchurch"
              },
              "Asia/Bangkok": {
                "label": "Bangkok, Jakarta, Novosibirsk"
              },
              "Europe/Berlin": {
                "label": "Berlin, Paris, Amsterdam"
              },
              "Australia/Perth": {
                "label": "Brunei, Singapore, Perth"
              },
              "Atlantic/Cape_Verde": {
                "label": "Cape_Verde,Praia, Mindelo, Santa Maria"
              },
              "America/Belize": {
                "label": "Costa_Rica, El_Salvador, Denver"
              },
              "Antarctica/Vostok": {
                "label": "Dhaka, Bishkek, Omsk"
              },
              "Europe/Astrakhan": {
                "label": "Dubai, Baku, Tbilisi"
              },
              "Australia/Eucla": {
                "label": "Eucla"
              },
              "Pacific/Honolulu": {
                "label": "Honolulu, Rarotonga, Tahiti"
              },
              "Asia/Kabul": {
                "label": "Kabul, Kandahār, Mazār-e Sharīf, Herāt, Jalālābād"
              },
              "Asia/Aqtau": {
                "label": "Karachi, Tashkent, Maldives"
              },
              "Asia/Kathmandu": {
                "label": "Kathmandu,Pokhara, Pātan, Biratnagar"
              },
              "Pacific/Kiritimati": {
                "label": "Kiritimati"
              },
              "Asia/Colombo": {
                "label": "Kolkata, Colombo,Jaffna, Negombo"
              },
              "Europe/Guernsey": {
                "label": "London. Dublin, Lisbon"
              },
              "Australia/Lord_Howe": {
                "label": "Lord_Howe"
              },
              "America/Creston": {
                "label": "Los_Angeles, Vancouver, Hermosillo"
              },
              "Pacific/Marquesas": {
                "label": "Marquesas,Taiohae"
              },
              "America/Cayman": {
                "label": "Mexico_City, Panama, Chicago"
              },
              "Pacific/Niue": {
                "label": "Midway, Niue, Pago_Pago"
              },
              "Europe/Mariehamn": {
                "label": "Moscow, Istanbul, Qatar"
              },
              "Asia/Kolkata": {
                "label": "Mumbai, Delhi, Bengaluru, Kolkata, Chennai"
              },
              "America/Miquelon": {
                "label": "Noronha, Nuuk, Miquelon"
              },
              "America/Danmarkshavn": {
                "label": "Reykjavik, Dakar, Casablanca"
              },
              "Pacific/Bougainville": {
                "label": "Sakhalin, Norfolk, Bougainville"
              },
              "America/Araguaina": {
                "label": "Sao_Paulo, Buenos_Aires, Montevideo"
              },
              "America/St_Johns": {
                "label": "St_Johns,Mount Pearl, Corner Brook"
              },
              "Asia/Tehran": {
                "label": "Tehran, Mashhad, Isfahan, Karaj, Tabriz"
              },
              "Asia/Tokyo": {
                "label": "Tokyo, Seoul, Jayapura"
              },
              "America/New_York": {
                "label": "Toronto, Santiago, New_York"
              },
              "Australia/Sydney": {
                "label": "Vladivostok, Sydney, Brisbane"
              },
              "Asia/Yangon": {
                "label": "Yangon, Cocos,Mandalay, Nay Pyi Taw, Mawlamyine"
              },
              "Indian/Cocos": {
                "label": "Yangon, Cocos,West Island"
              }
            },
            "breakLine": true
          }
        }
      }
    }
  }
},
"/CompareTablesOptions.json/CompareTablesOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Options",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "compare_set": {
        "type": "fieldset",
        "label": "Select Patterns",
        "repeat": true,
        "fields": {
          "pattern": {
            "type": "select",
            "label": "Table Pattern Type",
            "options": {
              "all_col": {
                "label": "All column identity"
              },
              "two_col": {
                "label": "Two column identity"
              }
            },
            "val": "all_col",
            "required": true
          },
          "compare_type": {
            "type": "select",
            "label": "Cell Pattern Type",
            "options": {
              "equal": {
                "label": "Equal"
              },
              "contain": {
                "label": "Contains"
              },
              "start_with": {
                "label": "Starts With"
              },
              "end_with": {
                "label": "Ends With"
              },
              "reg_exp": {
                "label": "Regular Expression"
              }
            },
            "val": "equal",
            "required": true
          },
          "case_sensitive": {
            "type": "select",
            "label": "Case Sensitivity",
            "required": true,
            "options": {
              "yes": {
                "label": "Case Sensitive"
              },
              "no": {
                "label": "Case Insensitive"
              }
            },
            "val": "no"
          },
          "expression": {
            "type": "text",
            "label": "Expression",
            "show_if": "this.compare_type != 'equal'",
            "required": true,
            "val": ""
          },
          "delete": {
            "show_if": "this.field_name != ''",
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        },
        "breakLine": true
      },
      "target": {
        "type": "select",
        "label": "Target",
        "options": {
          "to_table": {
            "label": "Apply to table"
          },
          "to_rows": {
            "label": "Row by Row"
          }
        },
        "val": "to_table",
        "required": true
      },
      "match_type": {
        "type": "select",
        "show_if": "target != 'to_table'",
        "label": "Match Type",
        "options": {
          "match": {
            "label": "Matches Only"
          },
          "nonmatch": {
            "label": "Non Matches Only"
          },
          "all": {
            "label": "All"
          }
        },
        "val": "match",
        "required": true,
        "breakLine": true
      },
      "create_sql": {
        "type": "checkbox",
        "label": "Show SQL-Details",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      }
    }
  }
},
"/FindRangesOptions.json/FindRangesOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.task": {
        "type": "hidden",
        "val": "find_ranges"
      },
      "options.task_type": {
        "type": "hidden",
        "val": "generate_lookup_table"
      },
      "options.pattern_type": {
        "type": "hidden",
        "val": "number_range"
      },
      "duplicate_option_box": {
        "type": "fieldset",
        "label": "Duplicate Patterns Option",
        "show_if": "options.task_type=='label_duplicates' || (options.task_type=='generate_lookup_table' && options.pattern_type=='duplicate_pattern')",
        "repeat": false,
        "fields": {
          "options.minimum_number_of_matching_characters": {
            "type": "text",
            "label": "Minimum Number of matching Characters",
            "val": "3",
            "required": true,
            "style": "min-width: 240px"
          },
          "options.minimum_number_of_duplicates": {
            "type": "text",
            "label": "Minimum Number of duplicates",
            "val": "2",
            "required": true,
            "style": "min-width: 240px",
            "breakLine": true
          }
        }
      },
      "number_range_option_box": {
        "type": "fieldset",
        "label": "Number Ranges Option",
        "show_if": "options.task_type=='generate_lookup_table' && options.pattern_type=='number_range'",
        "repeat": false,
        "fields": {
          "options.number_range.range_type": {
            "type": "select",
            "label": "Range Type",
            "required": true,
            "options": {
              "equal_interval": {
                "label": "N Equal Intervals"
              },
              "equal_range": {
                "label": "Equal Range"
              },
              "custom_range": {
                "label": "Custom Range"
              }
            },
            "val": "equal_interval"
          },
          "options.number_range.n_value": {
            "type": "text",
            "label": "N",
            "show_if": "options.number_range.range_type=='equal_interval'",
            "val": "3",
            "required": true
          },
          "options.number_range.range_value": {
            "type": "text",
            "label": "Range",
            "show_if": "options.number_range.range_type=='equal_range'",
            "val": "10",
            "required": true
          },
          "options.number_range.custom_ranges": {
            "type": "fieldset",
            "label": "Add Custom Range Pattern",
            "show_if": "options.number_range.range_type=='custom_range'",
            "repeat": true,
            "fields": {
              "pattern": {
                "type": "text",
                "label": "Pattern",
                "val": "0<=x<10",
                "required": true
              },
              "label": {
                "type": "text",
                "label": "Label",
                "val": "positive10",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          }
        },
        "breakLine": true
      },
      "options.lookup_table_id": {
        "type": "select",
        "label": "Lookup Table",
        "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells'",
        "bind": "TABLES",
        "empty": "",
        "required": true
      },
      "options.partial_match": {
        "type": "checkbox",
        "label": "Partial Match",
        "show_if": "options.pattern_type=='duplicate_pattern' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_lookup_table_to_cells')",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "options.case_sensitive": {
        "type": "checkbox",
        "label": "Case Sensitive",
        "show_if": "options.pattern_type=='duplicate_pattern' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_lookup_table_to_cells')",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.use_delimiter": {
        "type": "checkbox",
        "label": "Custom Delimiter",
        "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_lookup_table_to_cells'",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "options.delimiter": {
        "type": "text",
        "label": "Input Delimiter",
        "show_if": "options.use_delimiter=='true' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_lookup_table_to_cells')",
        "val": ";",
        "required": true,
        "breakLine": true
      },
      "options.input_table.use_filter": {
        "type": "checkbox",
        "label": "Use Filter for Input table",
        "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "input_table_filter_box": {
        "type": "fieldset",
        "label": "Input Table Filter Options",
        "show_if": "options.input_table.use_filter=='true' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells')",
        "repeat": false,
        "fields": {
          "options.input_table.filter": {
            "type": "fieldset",
            "label": "Add Filter Conditions for Input table",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table_id": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table_id",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.input_table.apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record for Input table filter",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "input_table_apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group of Input table",
            "show_if": "options.input_table.apply_to_record=='false'",
            "repeat": false,
            "fields": {
              "options.input_table.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "required": true,
                "width": "100%",
                "table": "table_id",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      },
      "options.lookup_table.use_filter": {
        "type": "checkbox",
        "label": "Use Filter for Lookup table",
        "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "lookup_table_filter_box": {
        "type": "fieldset",
        "label": "Lookup Table Filter Options",
        "show_if": "options.lookup_table.use_filter=='true' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells')",
        "repeat": false,
        "fields": {
          "options.lookup_table.filter": {
            "type": "fieldset",
            "label": "Add Filter Conditions for Lookup table",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "options.lookup_table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table_id": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table_id",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.lookup_table.apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record for Lookup table filter",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "lookup_table_apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group of Lookup table",
            "show_if": "options.lookup_table.apply_to_record=='false'",
            "repeat": false,
            "fields": {
              "options.lookup_table.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "required": true,
                "width": "100%",
                "table": "options.lookup_table",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      },
      "options.input_table.apply_to_group_for_concatenation.enabled": {
        "type": "checkbox",
        "label": "Apply to Group for Rows Concatenation",
        "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px"
      },
      "options.input_table.apply_to_group_for_concatenation.allow_group_lists": {
        "type": "checkbox",
        "label": "Allow Group-Lists",
        "show_if": "options.input_table.apply_to_group_for_concatenation.enabled=='true' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table')",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "options.input_table.apply_to_group_for_concatenation.group_column": {
        "type": "select",
        "label": "Select Group Column for Rows Concatenation",
        "show_if": "options.input_table.apply_to_group_for_concatenation.enabled=='true' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table')",
        "required": true,
        "width": "100%",
        "table": "table_id",
        "bind": "COLUMNS",
        "breakLine": true
      },
      "options.output_type": {
        "type": "select",
        "label": "Output Type",
        "required": true,
        "options": {
          "list_all_ranges": {
            "label": "List all ranges"
          },
          "allocate_items_to_ranges": {
            "label": "Allocate items to ranges"
          }
        },
        "val": "list_all_ranges",
        "breakLine": true
      },
      "options.add_filename": {
        "type": "checkbox",
        "label": "Add File Name",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
}
,
"/DCEducationOptions.json/DCEducationOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.all_countries": {
        "type": "hidden",
        "val": "false"
      },
      "options.stat_vars": {
        "type": "fieldset",
        "label": "Statistics data category(s)",
        "repeat": true,
        "fields": {
          "stat_var_name": {
            "type": "select",
            "label": "Education Data",
            "required": true,
            "options": {
              "Count_Person_25OrMoreYears_BachelorsDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears": {
                "label": "Bachelors Degree or Higher Population Per Capita 25 or More Years"
              },
              "Count_Person_25OrMoreYears_Female_BachelorsDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears_Female": {
                "label": "Bachelors Degree or Higher, Female Population Per Capita 25 or More Years Female"
              },
              "Count_Person_25OrMoreYears_Male_BachelorsDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears_Male": {
                "label": "Bachelors Degree or Higher, Male Population Per Capita 25 or More Years Male"
              },
              "Count_Person_25OrMoreYears_DoctorateDegree_AsFractionOf_Count_Person_25OrMoreYears": {
                "label": "Doctorate Degree Population Per Capita 25 or More Years"
              },
              "Count_Person_25OrMoreYears_Female_DoctorateDegree_AsFractionOf_Count_Person_25OrMoreYears_Female": {
                "label": "Doctorate Degree, Female Population Per Capita 25 or More Years Female"
              },
              "Count_Person_25OrMoreYears_Male_DoctorateDegree_AsFractionOf_Count_Person_25OrMoreYears_Male": {
                "label": "Doctorate Degree, Male Population Per Capita 25 or More Years Male"
              },
              "Count_Person_25OrMoreYears_MastersDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears": {
                "label": "Masters Degree or Higher Population Per Capita 25 or More Years"
              },
              "Count_Person_25OrMoreYears_Female_MastersDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears_Female": {
                "label": "Masters Degree or Higher, Female Population Per Capita 25 or More Years Female"
              },
              "Count_Person_25OrMoreYears_Male_MastersDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears_Male": {
                "label": "Masters Degree or Higher, Male Population Per Capita 25 or More Years Male"
              },
              "Count_Person_25OrMoreYears_TertiaryEducation_AsFractionOf_Count_Person_25OrMoreYears": {
                "label": "Tertiary Education Population Per Capita 25 or More Years"
              },
              "Count_Person_25OrMoreYears_Female_TertiaryEducation_AsFractionOf_Count_Person_25OrMoreYears_Female": {
                "label": "Tertiary Education, Female Population Per Capita 25 or More Years Female"
              },
              "Count_Person_25OrMoreYears_Male_TertiaryEducation_AsFractionOf_Count_Person_25OrMoreYears_Male": {
                "label": "Tertiary Education, Male Population Per Capita 25 or More Years Male"
              }
            }
          },
          "per_capita": {
            "type": "checkbox",
            "label": "Per capita",
            "show_if": "false",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.output_as_chart": {
        "type": "checkbox",
        "label": "Output a Graph",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
}
,
"/NoteTrackerOptions.json/NoteTrackerOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": true,
    "fields": {
      "category": {
        "type": "select",
        "label": "Category",
        "options": {
          "empty": {
            "label": "Not Specified"
          },
          "bills": {
            "label": "Bills"
          },
          "holidays": {
            "label": "Holidays"
          },
          "illness": {
            "label": "Illness"
          },
          "working_days": {
            "label": "Working Days"
          },
          "working_hours": {
            "label": "Working Hours"
          },
          "tasks": {
            "label": "Tasks"
          },
          "bonus": {
            "label": "Bonus"
          },
          "business_bills": {
            "label": "Business Bills"
          }
        },
        "val": "empty"
      },
      "subcategory": {
        "type": "select",
        "label": "Sub-Category",
        "show_if": "this.category=='bills' || this.category=='business_bills'",
        "options": {
          "empty": {
            "label": "Not Specified"
          },
          "food": {
            "label": "Food"
          },
          "drinks": {
            "label": "Drinks"
          },
          "gifts": {
            "label": "Gifts"
          },
          "tickets": {
            "label": "Tickets"
          },
          "fuel": {
            "label": "Fuel"
          },
          "rent": {
            "label": "Rent"
          },
          "car": {
            "label": "Car"
          },
          "fun": {
            "label": "Fun"
          },
          "assets": {
            "label": "Assets"
          }
        },
        "val": "empty"
      },
      "subcategory_days": {
        "type": "select",
        "label": "Sub-Category",
        "show_if": "this.category=='holidays' || this.category=='illness' || this.category=='working_days'",
        "options": {
          "new": {
            "label": "New"
          },
          "cancel": {
            "label": "Cancel"
          }
        },
        "val": "new"
      },
      "linebreak_placeholder2": {
        "type": "hidden",
        "val": "false",
        "breakLine": true
      },
      "days_option": {
        "type": "select",
        "label": "Options",
        "show_if": "this.category=='holidays' || this.category=='illness' || this.category=='working_days'",
        "options": {
          "full_day": {
            "label": "Full Day"
          },
          "half_day": {
            "label": "Half Day"
          },
          "custom": {
            "label": "Custom in %"
          }
        },
        "val": "full_day"
      },
      "custom_percentage": {
        "type": "number",
        "label": "Percentage",
        "show_if": "this.days_option=='custom' && this.category=='holidays' || this.days_option=='custom' && this.category=='illness' || this.days_option=='custom' && this.category=='working_days'",
        "val": 100,
        "maxVal": 100,
        "minVal": 0,
        "placeholder": "90",
        "breakLine": true
      },
      "start_date_value": {
        "type": "date",
        "label": "Start Date",
        "show_if": "this.category=='holidays' || this.category=='illness' || this.category=='working_days' || this.category=='working_hours'",
        "val": "",
        "required": true
      },
      "end_date_value": {
        "type": "date",
        "label": "End Date",
        "show_if": "this.category=='holidays' || this.category=='illness' || this.category=='working_days'",
        "val": "",
        "required": false
      },
      "due_date_value": {
        "type": "date",
        "label": "Due Date",
        "show_if": "this.category=='tasks'",
        "val": "",
        "required": true
      },
      "linebreak_placeholder": {
        "type": "hidden",
        "val": "false",
        "show_if": "this.category=='working_hours'",
        "breakLine": true
      },
      "starting_hour": {
        "type": "select",
        "label": "Starting Hour",
        "show_if": "this.category=='working_hours'",
        "options": {
          "00": {
            "label": "00"
          },
          "01": {
            "label": "01"
          },
          "02": {
            "label": "02"
          },
          "03": {
            "label": "03"
          },
          "04": {
            "label": "04"
          },
          "05": {
            "label": "05"
          },
          "06": {
            "label": "06"
          },
          "07": {
            "label": "07"
          },
          "08": {
            "label": "08"
          },
          "09": {
            "label": "09"
          },
          "10": {
            "label": "10"
          },
          "11": {
            "label": "11"
          },
          "12": {
            "label": "12"
          },
          "13": {
            "label": "13"
          },
          "14": {
            "label": "14"
          },
          "15": {
            "label": "15"
          },
          "16": {
            "label": "16"
          },
          "17": {
            "label": "17"
          },
          "18": {
            "label": "18"
          },
          "19": {
            "label": "19"
          },
          "20": {
            "label": "20"
          },
          "21": {
            "label": "21"
          },
          "22": {
            "label": "22"
          },
          "23": {
            "label": "23"
          }
        },
        "val": "00",
        "required": true
      },
      "starting_minute": {
        "type": "select",
        "label": "Starting Minute",
        "show_if": "this.category=='working_hours'",
        "breakLine": true,
        "options": {
          "00": {
            "label": "00"
          },
          "01": {
            "label": "01"
          },
          "02": {
            "label": "02"
          },
          "03": {
            "label": "03"
          },
          "04": {
            "label": "04"
          },
          "05": {
            "label": "05"
          },
          "06": {
            "label": "06"
          },
          "07": {
            "label": "07"
          },
          "08": {
            "label": "08"
          },
          "09": {
            "label": "09"
          },
          "10": {
            "label": "10"
          },
          "11": {
            "label": "11"
          },
          "12": {
            "label": "12"
          },
          "13": {
            "label": "13"
          },
          "14": {
            "label": "14"
          },
          "15": {
            "label": "15"
          },
          "16": {
            "label": "16"
          },
          "17": {
            "label": "17"
          },
          "18": {
            "label": "18"
          },
          "19": {
            "label": "19"
          },
          "20": {
            "label": "20"
          },
          "21": {
            "label": "21"
          },
          "22": {
            "label": "22"
          },
          "23": {
            "label": "23"
          },
          "24": {
            "label": "24"
          },
          "25": {
            "label": "25"
          },
          "26": {
            "label": "26"
          },
          "27": {
            "label": "27"
          },
          "28": {
            "label": "28"
          },
          "29": {
            "label": "29"
          },
          "30": {
            "label": "30"
          },
          "31": {
            "label": "31"
          },
          "32": {
            "label": "32"
          },
          "33": {
            "label": "33"
          },
          "34": {
            "label": "34"
          },
          "35": {
            "label": "35"
          },
          "36": {
            "label": "36"
          },
          "37": {
            "label": "37"
          },
          "38": {
            "label": "38"
          },
          "39": {
            "label": "39"
          },
          "40": {
            "label": "40"
          },
          "41": {
            "label": "41"
          },
          "42": {
            "label": "42"
          },
          "43": {
            "label": "43"
          },
          "44": {
            "label": "44"
          },
          "45": {
            "label": "45"
          },
          "46": {
            "label": "46"
          },
          "47": {
            "label": "47"
          },
          "48": {
            "label": "48"
          },
          "49": {
            "label": "49"
          },
          "50": {
            "label": "50"
          },
          "51": {
            "label": "51"
          },
          "52": {
            "label": "52"
          },
          "53": {
            "label": "53"
          },
          "54": {
            "label": "54"
          },
          "55": {
            "label": "55"
          },
          "56": {
            "label": "56"
          },
          "57": {
            "label": "57"
          },
          "58": {
            "label": "58"
          },
          "59": {
            "label": "59"
          }
        },
        "val": "00",
        "required": true
      },
      "ending_hour": {
        "type": "select",
        "label": "Ending Hour",
        "show_if": "this.category=='working_hours'",
        "options": {
          "00": {
            "label": "00"
          },
          "01": {
            "label": "01"
          },
          "02": {
            "label": "02"
          },
          "03": {
            "label": "03"
          },
          "04": {
            "label": "04"
          },
          "05": {
            "label": "05"
          },
          "06": {
            "label": "06"
          },
          "07": {
            "label": "07"
          },
          "08": {
            "label": "08"
          },
          "09": {
            "label": "09"
          },
          "10": {
            "label": "10"
          },
          "11": {
            "label": "11"
          },
          "12": {
            "label": "12"
          },
          "13": {
            "label": "13"
          },
          "14": {
            "label": "14"
          },
          "15": {
            "label": "15"
          },
          "16": {
            "label": "16"
          },
          "17": {
            "label": "17"
          },
          "18": {
            "label": "18"
          },
          "19": {
            "label": "19"
          },
          "20": {
            "label": "20"
          },
          "21": {
            "label": "21"
          },
          "22": {
            "label": "22"
          },
          "23": {
            "label": "23"
          }
        },
        "val": "00",
        "required": true
      },
      "ending_minute": {
        "type": "select",
        "label": "Ending Minute",
        "show_if": "this.category=='working_hours'",
        "breakLine": true,
        "options": {
          "00": {
            "label": "00"
          },
          "01": {
            "label": "01"
          },
          "02": {
            "label": "02"
          },
          "03": {
            "label": "03"
          },
          "04": {
            "label": "04"
          },
          "05": {
            "label": "05"
          },
          "06": {
            "label": "06"
          },
          "07": {
            "label": "07"
          },
          "08": {
            "label": "08"
          },
          "09": {
            "label": "09"
          },
          "10": {
            "label": "10"
          },
          "11": {
            "label": "11"
          },
          "12": {
            "label": "12"
          },
          "13": {
            "label": "13"
          },
          "14": {
            "label": "14"
          },
          "15": {
            "label": "15"
          },
          "16": {
            "label": "16"
          },
          "17": {
            "label": "17"
          },
          "18": {
            "label": "18"
          },
          "19": {
            "label": "19"
          },
          "20": {
            "label": "20"
          },
          "21": {
            "label": "21"
          },
          "22": {
            "label": "22"
          },
          "23": {
            "label": "23"
          },
          "24": {
            "label": "24"
          },
          "25": {
            "label": "25"
          },
          "26": {
            "label": "26"
          },
          "27": {
            "label": "27"
          },
          "28": {
            "label": "28"
          },
          "29": {
            "label": "29"
          },
          "30": {
            "label": "30"
          },
          "31": {
            "label": "31"
          },
          "32": {
            "label": "32"
          },
          "33": {
            "label": "33"
          },
          "34": {
            "label": "34"
          },
          "35": {
            "label": "35"
          },
          "36": {
            "label": "36"
          },
          "37": {
            "label": "37"
          },
          "38": {
            "label": "38"
          },
          "39": {
            "label": "39"
          },
          "40": {
            "label": "40"
          },
          "41": {
            "label": "41"
          },
          "42": {
            "label": "42"
          },
          "43": {
            "label": "43"
          },
          "44": {
            "label": "44"
          },
          "45": {
            "label": "45"
          },
          "46": {
            "label": "46"
          },
          "47": {
            "label": "47"
          },
          "48": {
            "label": "48"
          },
          "49": {
            "label": "49"
          },
          "50": {
            "label": "50"
          },
          "51": {
            "label": "51"
          },
          "52": {
            "label": "52"
          },
          "53": {
            "label": "53"
          },
          "54": {
            "label": "54"
          },
          "55": {
            "label": "55"
          },
          "56": {
            "label": "56"
          },
          "57": {
            "label": "57"
          },
          "58": {
            "label": "58"
          },
          "59": {
            "label": "59"
          }
        },
        "val": "00",
        "required": true
      },
      "number_value": {
        "type": "number",
        "label": "Number",
        "show_if": "this.category=='bonus' || this.category=='bills' || this.category=='business_bills'",
        "val": 0,
        "breakLine": true,
        "required": true
      },
      "notes": {
        "type": "textarea",
        "label": "Notes",
        "val": "",
        "md_no_resize": true,
        "rows": 2,
        "width": "100%",
        "breakLine": true
      },
      "delete": {
        "type": "button",
        "label": "Delete",
        "function": "DELETE_ROW"
      }
    }
  }
}
,
"/ExtractOptions.json/ExtractOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "apply_framing_condition_box": {
        "type": "fieldset",
        "label": "Framing conditions",
        "repeat": false,
        "fields": {
          "options.framing_condition.pattern": {
            "type": "select",
            "label": "Framing conditions",
            "required": true,
            "options": {
              "name_x": {
                "label": "name : x"
              },
              "curly_brackets": {
                "label": "{x}"
              },
              "square_brackets": {
                "label": "[x]"
              },
              "round_brackets": {
                "label": "(x)"
              },
              "tag_x": {
                "label": "&lt;tag&gt;x&lt;/tag&gt;"
              },
              "tag1_x_tag2": {
                "label": "tag1 x tag2"
              },
              "name_1_name_2_x": {
                "label": "name-1 : { name-2 : x }"
              },
              "x_bracket": {
                "label": "x : { } , x : ( ) , x : [ ]"
              },
              "name_bracket_x": {
                "label": "name : { x } , name : ( x ) , name : [ x ]"
              },
              "f_x": {
                "label": "f(x)"
              },
              "f_x_bracket": {
                "label": "f(){x}"
              }
            },
            "val": "name_x"
          },
          "options.framing_condition.name_x_name": {
            "type": "text",
            "label": "Name",
            "show_if": "options.framing_condition.pattern=='name_x'",
            "val": "",
            "required": true
          },
          "options.framing_condition.tag_x_tag": {
            "type": "text",
            "label": "Tag",
            "show_if": "options.framing_condition.pattern=='tag_x'",
            "val": "",
            "required": true
          },
          "options.framing_condition.tag1_x_tag2__tag1": {
            "type": "text",
            "label": "Tag1",
            "show_if": "options.framing_condition.pattern=='tag1_x_tag2'",
            "val": "",
            "required": true
          },
          "options.framing_condition.tag1_x_tag2__tag2": {
            "type": "text",
            "label": "Tag2",
            "show_if": "options.framing_condition.pattern=='tag1_x_tag2'",
            "val": "",
            "required": true
          },
          "options.framing_condition.name_1_name_2_x__name1": {
            "type": "text",
            "label": "Name1",
            "show_if": "options.framing_condition.pattern=='name_1_name_2_x'",
            "val": "",
            "required": true
          },
          "options.framing_condition.name_1_name_2_x__name2": {
            "type": "text",
            "label": "Name2",
            "show_if": "options.framing_condition.pattern=='name_1_name_2_x'",
            "val": "",
            "required": true
          },
          "options.framing_condition.name_bracket_x__name": {
            "type": "text",
            "label": "Name",
            "show_if": "options.framing_condition.pattern=='name_bracket_x'",
            "val": "",
            "required": true
          },
          "options.framing_condition.customize_colon": {
            "type": "checkbox",
            "label": "Customize :",
            "show_if": "options.framing_condition.pattern=='name_x' || options.framing_condition.pattern=='x_bracket' || options.framing_condition.pattern=='name_1_name_2_x'",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.framing_condition.custom_colon": {
            "type": "text",
            "label": "Input symbol",
            "show_if": "(options.framing_condition.pattern=='name_x' || options.framing_condition.pattern=='x_bracket' || options.framing_condition.pattern=='name_1_name_2_x') && options.framing_condition.customize_colon=='true'",
            "val": ":",
            "required": true
          },
          "options.framing_condition.customize_f": {
            "type": "checkbox",
            "label": "Customize f",
            "show_if": "options.framing_condition.pattern=='f_x' || options.framing_condition.pattern=='f_x_bracket'",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.framing_condition.custom_f": {
            "type": "text",
            "label": "Input f",
            "show_if": "(options.framing_condition.pattern=='f_x' || options.framing_condition.pattern=='f_x_bracket') && options.framing_condition.customize_f=='true'",
            "val": ":",
            "required": true
          },
          "options.framing_condition.parantheses": {
            "type": "select",
            "label": "Parantheses",
            "required": true,
            "options": {
              "optional": {
                "label": "Optional parantheses"
              },
              "including": {
                "label": "Including parantheses"
              },
              "no": {
                "label": "No parantheses"
              }
            },
            "val": "optional"
          },
          "options.framing_condition.sel_parantheses": {
            "type": "select",
            "label": "Select Parantheses",
            "show_if": "options.framing_condition.parantheses=='optional' || options.framing_condition.parantheses=='including'",
            "required": true,
            "options": {
              "p1": {
                "label": "'"
              },
              "p2": {
                "label": "\""
              },
              "p3": {
                "label": "`"
              },
              "p4": {
                "label": "´"
              }
            },
            "val": "p1",
            "breakLine": true
          },
          "options.framing_condition.allow_whitespace": {
            "type": "checkbox",
            "label": "Allow whitespace",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          }
        }
      },
      "options.apply_section_by_section": {
        "type": "checkbox",
        "label": "Section by Section",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px"
      },
      "section_columns_frame": {
        "type": "fieldset",
        "label": "Select Section Column(s)",
        "show_if": "options.apply_section_by_section=='true'",
        "repeat": false,
        "fields": {
          "options.section_columns__all_but_selected": {
            "type": "checkbox",
            "label": "All but selected",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.section_columns": {
            "type": "select",
            "label": "Section column(s)",
            "table": "table_id",
            "bind": "COLUMNS",
            "multiple": true,
            "breakLine": true
          }
        }
      }
    }
  }
}
,
"/EmailByTableOptions.json/EmailByTableOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "Select Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.task_type": {
        "type": "hidden",
        "val": "write_series"
      },
      "table_id": {
        "type": "select",
        "label": "Select Table",
        "bind": "TABLES",
        "empty": "",
        "required": true
      },
      "info2": {
        "type": "text",
        "label": "",
        "val": "Table-Type: TO | CC | BCC | SUBJECT | BODY",
        "disabled": true,
        "style": "width: 100%"
      },
      "options.add_table": {
        "type": "checkbox",
        "label": "Embed a Table",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.embed_mode": {
        "type": "select",
        "label": "Table Embed Type",
        "show_if": "options.add_table=='true'",
        "options": {
          "embed": {
            "label": "Embed"
          },
          "attach_csv_comma_separated": {
            "label": "Attach as csv (',' - separated)"
          },
          "attach_csv_semicolon_separated": {
            "label": "Attach as csv (';' - separated)"
          }
        },
        "val": "embed",
        "breakLine": true
      },
      "options.embed_table_footer": {
        "type": "text",
        "label": "Table Footer",
        "show_if": "options.add_table=='true'",
        "val": "",
        "style": "width: 100%"
      },
      "info3": {
        "type": "text",
        "label": "",
        "val": "This task only supports users logged in via Microsoft Login",
        "disabled": true,
        "style": "width: 100%"
      }
    }
  }
},
"/RunByParameterOutput.json/RunByParameterOutput.json": {
  "output": {
    "type": "fieldset",
    "label": "Output and Settings",
    "show_if": "output.output_and_setting=='true' && options.output_type=='unify_output_tables'",
    "repeat": false,
    "fields": {

    }
  }
},
"/GetTaskTemplateOptions.json/GetTaskTemplateOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.script_name": {
        "type": "text",
        "label": "Script name(e.g. `clean`)",
        "val": "clean",
        "width": "100%",
        "breakLine": true
      }
    }
  }
}
,
"/InjectOptions.json/InjectOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.task_code": {
        "type": "hidden",
        "val": "find_replace_text"
      },
      "options.incoming_value_to_replace.type": {
        "type": "select",
        "label": "Incoming Value",
        "options": {
          "user_specified_value": {
            "label": "Equals"
          },
          "begins_with": {
            "label": "Begins with"
          },
          "ends_with": {
            "label": "Ends with"
          },
          "empty": {
            "label": "Empty"
          },
          "regex": {
            "label": "Regular Expression"
          }
        },
        "val": "user_specified_value",
        "style": "min-width: 190px"
      },
      "options.incoming_value_to_replace.value": {
        "type": "text",
        "label": "Incoming Value To Replace",
        "required": true,
        "show_if": "options.incoming_value_to_replace.type=='user_specified_value' || options.incoming_value_to_replace.type=='begins_with' || options.incoming_value_to_replace.type=='ends_with'",
        "val": "",
        "style": "min-width: 170px"
      },
      "options.incoming_value_to_replace.regex": {
        "type": "text",
        "label": "Regular Expression",
        "required": true,
        "show_if": "options.incoming_value_to_replace.type=='regex'",
        "val": "(.*),(.*),(.*)\\s(\\d{5})(-\\d{4})?",
        "style": "min-width: 200px"
      },
      "options.incoming_value_to_replace.partial_match": {
        "type": "select",
        "label": "Partial Match",
        "show_if": "options.incoming_value_to_replace.type=='user_specified_value'",
        "options": {
          "full_match": {
            "label": "Full match"
          },
          "full_and_partial_match": {
            "label": "Full and partial match"
          },
          "partial_match_only": {
            "label": "Partial match only"
          }
        },
        "val": "full_and_partial_match"
      },
      "options.incoming_value_to_replace.case_sensitivity": {
        "type": "select",
        "label": "Case Sensitivity",
        "show_if": "options.incoming_value_to_replace.type=='user_specified_value' || options.incoming_value_to_replace.type=='begins_with' || options.incoming_value_to_replace.type=='ends_with' || options.incoming_value_to_replace.type=='regex'",
        "options": {
          "sensitive": {
            "label": "Case Sensitive"
          },
          "insensitive": {
            "label": "Case Insensitive"
          }
        },
        "val": "sensitive"
      },
      "options.replace_with.value_type": {
        "type": "select",
        "label": "Replace With",
        "show_if": "options.incoming_value_to_replace.type!='regex'",
        "options": {
          "user_specified_value": {
            "label": "Custom Value"
          },
          "table": {
            "label": "Table Column"
          }
        },
        "val": "user_specified_value",
        "style": "min-width: 190px"
      },
      "options.replace_with.value": {
        "type": "text",
        "label": "Replace With Value",
        "show_if": "options.incoming_value_to_replace.type!='regex' && options.replace_with.value_type=='user_specified_value'",
        "val": ""
      },
      "options.replace_with.regex_value": {
        "type": "text",
        "label": "Replace With Value",
        "show_if": "options.incoming_value_to_replace.type=='regex'",
        "val": "\\4: \\2, \\3"
      },
      "options.replace_with.table_id": {
        "type": "select",
        "label": "Select Table",
        "show_if": "options.incoming_value_to_replace.type!='regex' && options.replace_with.value_type=='table'",
        "bind": "TABLES",
        "required": true
      },
      "options.replace_with.column": {
        "type": "select",
        "label": "Select Column",
        "show_if": "options.incoming_value_to_replace.type!='regex' && options.replace_with.value_type=='table'",
        "table": "options.replace_with.table_id",
        "bind": "COLUMNS",
        "required": true,
        "breakLine": true
      },
      "options.apply_framing_condition": {
        "type": "checkbox",
        "label": "Apply framing conditions",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "apply_framing_condition_box": {
        "type": "fieldset",
        "label": "Framing conditions",
        "show_if": "options.apply_framing_condition=='true'",
        "repeat": false,
        "fields": {
          "options.framing_condition.pattern": {
            "type": "select",
            "label": "Framing conditions",
            "required": true,
            "options": {
              "name_x": {
                "label": "name : x"
              },
              "curly_brackets": {
                "label": "{x}"
              },
              "square_brackets": {
                "label": "[x]"
              },
              "round_brackets": {
                "label": "(x)"
              },
              "tag_x": {
                "label": "&lt;tag&gt;x&lt;/tag&gt;"
              },
              "tag1_x_tag2": {
                "label": "tag1 x tag2"
              },
              "name_1_name_2_x": {
                "label": "name-1 : { name-2 : x }"
              },
              "x_bracket": {
                "label": "x : { } , x : ( ) , x : [ ]"
              },
              "name_bracket_x": {
                "label": "name : { x } , name : ( x ) , name : [ x ]"
              },
              "f_x": {
                "label": "f(x)"
              },
              "f_x_bracket": {
                "label": "f(){x}"
              }
            },
            "val": "name_x"
          },
          "options.framing_condition.name_x_name": {
            "type": "text",
            "label": "Name",
            "show_if": "options.framing_condition.pattern=='name_x'",
            "val": "",
            "required": true
          },
          "options.framing_condition.tag_x_tag": {
            "type": "text",
            "label": "Tag",
            "show_if": "options.framing_condition.pattern=='tag_x'",
            "val": "",
            "required": true
          },
          "options.framing_condition.tag1_x_tag2__tag1": {
            "type": "text",
            "label": "Tag1",
            "show_if": "options.framing_condition.pattern=='tag1_x_tag2'",
            "val": "",
            "required": true
          },
          "options.framing_condition.tag1_x_tag2__tag2": {
            "type": "text",
            "label": "Tag2",
            "show_if": "options.framing_condition.pattern=='tag1_x_tag2'",
            "val": "",
            "required": true
          },
          "options.framing_condition.name_1_name_2_x__name1": {
            "type": "text",
            "label": "Name1",
            "show_if": "options.framing_condition.pattern=='name_1_name_2_x'",
            "val": "",
            "required": true
          },
          "options.framing_condition.name_1_name_2_x__name2": {
            "type": "text",
            "label": "Name2",
            "show_if": "options.framing_condition.pattern=='name_1_name_2_x'",
            "val": "",
            "required": true
          },
          "options.framing_condition.name_bracket_x__name": {
            "type": "text",
            "label": "Name",
            "show_if": "options.framing_condition.pattern=='name_bracket_x'",
            "val": "",
            "required": true
          },
          "options.framing_condition.customize_colon": {
            "type": "checkbox",
            "label": "Customize :",
            "show_if": "options.framing_condition.pattern=='name_x' || options.framing_condition.pattern=='x_bracket' || options.framing_condition.pattern=='name_1_name_2_x'",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.framing_condition.custom_colon": {
            "type": "text",
            "label": "Input symbol",
            "show_if": "(options.framing_condition.pattern=='name_x' || options.framing_condition.pattern=='x_bracket' || options.framing_condition.pattern=='name_1_name_2_x') && options.framing_condition.customize_colon=='true'",
            "val": ":",
            "required": true
          },
          "options.framing_condition.customize_f": {
            "type": "checkbox",
            "label": "Customize f",
            "show_if": "options.framing_condition.pattern=='f_x' || options.framing_condition.pattern=='f_x_bracket'",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.framing_condition.custom_f": {
            "type": "text",
            "label": "Input f",
            "show_if": "(options.framing_condition.pattern=='f_x' || options.framing_condition.pattern=='f_x_bracket') && options.framing_condition.customize_f=='true'",
            "val": ":",
            "required": true
          },
          "options.framing_condition.parantheses": {
            "type": "select",
            "label": "Parantheses",
            "required": true,
            "options": {
              "optional": {
                "label": "Optional parantheses"
              },
              "including": {
                "label": "Including parantheses"
              },
              "no": {
                "label": "No parantheses"
              }
            },
            "val": "optional"
          },
          "options.framing_condition.sel_parantheses": {
            "type": "select",
            "label": "Select Parantheses",
            "show_if": "options.framing_condition.parantheses=='optional' || options.framing_condition.parantheses=='including'",
            "required": true,
            "options": {
              "p1": {
                "label": "'"
              },
              "p2": {
                "label": "\""
              },
              "p3": {
                "label": "`"
              },
              "p4": {
                "label": "´"
              }
            },
            "multiple": true,
            "val": ["p1", "p2", "p3", "p4"],
            "breakLine": true
          },
          "options.framing_condition.allow_whitespace": {
            "type": "checkbox",
            "label": "Allow whitespace",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          }
        }
      },
      "options.apply_section_by_section": {
        "type": "checkbox",
        "label": "Section by Section",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px"
      },
      "options.section_columns": {
        "type": "select",
        "label": "Section column(s)",
        "show_if": "options.apply_section_by_section=='true'",
        "table": "table_id",
        "bind": "COLUMNS",
        "multiple": true,
        "required": true,
        "breakLine": true
      },
      "options.use_replace_table_filter": {
        "type": "checkbox",
        "label": "Use Filter on \"Replace With\" Table",
        "show_if": "options.incoming_value_to_replace.type!='regex' && options.replace_with.value_type=='table'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "replace_table_filter_option_box": {
        "type": "fieldset",
        "label": "\"Replace With\" Table Filter Options",
        "show_if": "options.use_replace_table_filter=='true' && (options.incoming_value_to_replace.type!='regex' && options.replace_with.value_type=='table')",
        "repeat": false,
        "fields": {
          "options.replace_table_filter_option.filter": {
            "type": "fieldset",
            "label": "Add Filter Conditions on \"Replace With\" Table",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if" :  "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if" :  "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "options.replace_with.table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table_id": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table_id",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.replace_table_filter_option.apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record on \"Replace With\" Table",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "replace_table_filter_option_apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group on \"Replace With\" Table",
            "show_if": "options.replace_table_filter_option.apply_to_record=='false' && (options.incoming_value_to_replace.type!='regex' && options.replace_with.value_type=='table')",
            "repeat": false,
            "fields": {
              "options.replace_table_filter_option.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "required": true,
                "width": "100%",
                "table": "options.replace_with.table_id",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      }
    }
  }
}
,
"/LabelOptions.json/LabelOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Add Label",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "add_column": {
        "type": "text",
        "label": "Column name for label",
        "val": "Label",
        "required": true
      },
      "add_label": {
        "type": "text",
        "label": "Add label",
        "val": "label1",
        "required": true,
        "breakLine": true
      },
      "do_not_duplicate": {
        "type": "checkbox",
        "label": "Don't duplicate same labels",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "use_custom_delimiter": {
        "type": "checkbox",
        "label": "Custom Delimiter",
        "show_if": "do_not_duplicate=='false'",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "custom_delimiter": {
        "type": "text",
        "label": "Custom delimiter",
        "show_if": "use_custom_delimiter=='true'",
        "val": ";",
        "required": true,
        "breakLine": true
      },
      "filter_box": {
        "type": "fieldset",
        "label": "Filter Options",
        "repeat": false,
        "fields": {
          "filter": {
            "type": "fieldset",
            "label": "Select Conditions for Labeling",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if" :  "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "show_if" :  "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table_id": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table_id",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group",
            "show_if": "apply_to_record=='false'",
            "repeat": false,
            "fields": {
              "apply_to_group_columns__all_but_selected": {
                "type": "checkbox",
                "label": "All but selected",
                "val": "false",
                "isOn": "true",
                "isOff": "false",
                "breakLine": true
              },
              "apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "width": "100%",
                "table": "table_id",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      }
    }
  }
},
"/DCEconomicOptions.json/DCEconomicOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.all_countries": {
        "type": "hidden",
        "val": "false"
      },
      "options.stat_vars": {
        "type": "fieldset",
        "label": "Statistics data category(s)",
        "repeat": true,
        "fields": {
          "stat_var_name": {
            "type": "select",
            "label": "Statistics Data",
            "required": true,
            "options": {
              "Amount_EconomicActivity_GrossDomesticProduction_Nominal": {
                "label": "GDP"
              },
              "GrowthRate_Amount_EconomicActivity_GrossDomesticProduction": {
                "label": "Growth Rate of GDP"
              },
              "Amount_EconomicActivity_GrossNationalIncome_PurchasingPowerParity": {
                "label": "GNI (Purchasing Power Parity)"
              },
              "Count_Product_MobileCellularSubscription_AsFractionOf_Count_Person": {
                "label": "Mobile Subscriptions Per Capita"
              },
              "Amount_Debt_Government": {
                "label": "Debt With Government"
              },
              "Amount_Debt_Government_AsAFractionOfGrossDomesticProduction": {
                "label": "Debt With Government as Fraction of GDP"
              },
              "GiniIndex_EconomicActivity": {
                "label": "Gini Index of Economic Activity"
              },
              "Amount_EconomicActivity_ExpenditureActivity_MilitaryExpenditure_Government": {
                "label": "Military Expenditure, Government"
              },
              "Amount_EconomicActivity_ExpenditureActivity_MilitaryExpenditure_Government_AsFractionOf_Amount_EconomicActivity_GrossDomesticProduction_Nominal": {
                "label": "Military Expenditure, Government as Fraction of Economic Activity Gross Domestic Production Nominal"
              },
              "Amount_EconomicActivity_ExpenditureActivity_EducationExpenditure_Government_AsFractionOf_Amount_EconomicActivity_ExpenditureActivity_Government": {
                "label": "Education Expenditure, Government as Fraction of Economic Activity Expenditure Activity Government"
              },
              "Amount_EconomicActivity_ExpenditureActivity_EducationExpenditure_Government_AsFractionOf_Amount_EconomicActivity_GrossDomesticProduction_Nominal": {
                "label": "Education Expenditure, Government as Fraction of Economic Activity Gross Domestic Production Nominal"
              },
              "Amount_EconomicActivity_ExpenditureActivity_HealthcareExpenditure_AsFractionOf_Count_Person": {
                "label": "Healthcare Expenditure Per Capita"
              },
              "Amount_EconomicActivity_ExpenditureActivity_TertiaryEducationExpenditure_Government_AsFractionOf_Amount_EconomicActivity_ExpenditureActivity_EducationExpenditure_Government": {
                "label": "Tertiary Education Expenditure, Government as Fraction of Economic Activity Expenditure Activity Education Expenditure Government"
              },
              "Amount_EconomicActivity_GrossValueAdded_RealValue": {
                "label": "Gross Value Added (Real Value)"
              },
              "Amount_EconomicActivity_GrossValueAdded_ISICAgricultureHuntingForestryFishing_RealValue": {
                "label": "Gross Value Added, Agriculture, Hunting, Forestry, Fishing (Real Value)"
              },
              "Amount_EconomicActivity_GrossValueAdded_ISICConstruction_RealValue": {
                "label": "Gross Value Added, Construction (Real Value)"
              },
              "Amount_EconomicActivity_GrossValueAdded_ISICManufacturing_RealValue": {
                "label": "Gross Value Added, Manufacturing (Real Value)"
              },
              "Amount_EconomicActivity_GrossValueAdded_ISICMiningManufacturingUtilities_RealValue": {
                "label": "Gross Value Added, Mining, Manufacturing, Utilities (Real Value)"
              },
              "Amount_EconomicActivity_GrossValueAdded_ISICTransportStorageCommunications_RealValue": {
                "label": "Gross Value Added, Transport, Storage And Communications (Real Value)"
              },
              "Amount_EconomicActivity_GrossValueAdded_ISICWholesaleRetailTradeRestaurantsHotels_RealValue": {
                "label": "Gross Value Added, Wholesale, Retail Trade, Restaurants And Hotels (Real Value)"
              },
              "Amount_Remittance_OutwardRemittance": {
                "label": "Outward Remittance"
              },
              "Amount_Remittance_InwardRemittance": {
                "label": "Inward Remittance"
              },
              "Amount_Remittance_InwardRemittance_AsFractionOf_Amount_EconomicActivity_GrossDomesticProduction_Nominal": {
                "label": "Inward Remittance as Fraction of Economic Activity GDP"
              },
              "Amount_Stock": {
                "label": "Stock"
              },
              "Amount_Stock_AsFractionOf_Amount_EconomicActivity_GrossDomesticProduction_Nominal": {
                "label": "Stock as Fraction of Economic Activity GDP"
              }
            }
          },
          "per_capita": {
            "type": "checkbox",
            "label": "Per capita",
            "show_if": "this.stat_var_name=='Amount_EconomicActivity_GrossDomesticProduction_Nominal'||this.stat_var_name=='Amount_EconomicActivity_GrossNationalIncome_PurchasingPowerParity'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "help_1": {
            "type": "textarea",
            "label": "",
            "show_if": "this.stat_var_name=='Amount_EconomicActivity_ExpenditureActivity_MilitaryExpenditure_Government_AsFractionOf_Amount_EconomicActivity_GrossDomesticProduction_Nominal'",
            "val": "Military Expenditure, Government as Fraction of Economic Activity Gross Domestic Production Nominal",
            "disabled": true,
            "md_no_resize": false,
            "rows": 2,
            "width": "100%"
          },
          "help_2": {
            "type": "textarea",
            "label": "",
            "show_if": "this.stat_var_name=='Amount_EconomicActivity_ExpenditureActivity_EducationExpenditure_Government_AsFractionOf_Amount_EconomicActivity_ExpenditureActivity_Government'",
            "val": "Education Expenditure, Government as Fraction of Economic Activity Expenditure Activity Government",
            "disabled": true,
            "md_no_resize": false,
            "rows": 2,
            "width": "100%"
          },
          "help_3": {
            "type": "textarea",
            "label": "",
            "show_if": "this.stat_var_name=='Amount_EconomicActivity_ExpenditureActivity_EducationExpenditure_Government_AsFractionOf_Amount_EconomicActivity_GrossDomesticProduction_Nominal'",
            "val": "Education Expenditure, Government as Fraction of Economic Activity Gross Domestic Production Nominal",
            "disabled": true,
            "md_no_resize": false,
            "rows": 2,
            "width": "100%"
          },
          "help_4": {
            "type": "textarea",
            "label": "",
            "show_if": "this.stat_var_name=='Amount_EconomicActivity_ExpenditureActivity_TertiaryEducationExpenditure_Government_AsFractionOf_Amount_EconomicActivity_ExpenditureActivity_EducationExpenditure_Government'",
            "val": "Tertiary Education Expenditure, Government as Fraction of Economic Activity Expenditure Activity Education Expenditure Government",
            "disabled": true,
            "md_no_resize": false,
            "rows": 2,
            "width": "100%"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.output_as_chart": {
        "type": "checkbox",
        "label": "Output a Graph",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
}
,
"/JoinOutput.json/JoinOutput.json": {
  "output.output_table_types": {
    "type": "select",
    "label": "Output Table Type(s)",
    "required": true,
    "options": {
      "inner": {
        "label": "Inner Join Table"
      },
      "left": {
        "label": "Left Join Table"
      },
      "right": {
        "label": "Right Join Table"
      }
    },
    "multiple": true,
    "val": ["inner"],
    "breakLine": true
  },
  "output.unify_output_table": {
    "type": "checkbox",
    "label": "Unify output tables",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  },
  "output.standard_ending": {
    "type": "checkbox",
    "label": "Standard Ending",
    "show_if": "output.unify_output_table == 'false'",
    "val": "true",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  },
  "output.inner_ending": {
    "show_if": "output.unify_output_table == 'false' && output.standard_ending == 'false'",
    "type": "text",
    "label": "Inner Ending",
    "val": "_j",
    "style": "margin-left: 10px"
  },
  "output.left_ending": {
    "show_if": "output.unify_output_table == 'false' && output.standard_ending == 'false'",
    "type": "text",
    "label": "Left Ending",
    "val": "_l",
    "style": "margin-left: 10px"
  },
  "output.right_ending": {
    "show_if": "output.unify_output_table == 'false' && output.standard_ending == 'false'",
    "type": "text",
    "label": "Right Ending",
    "val": "_r",
    "style": "margin-left: 10px",
    "breakLine": true
  }
},
"/SetPointsOptions.json/SetPointsOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.user_ids": {
        "type": "text",
        "label": "User ID(s) (; separated list)",
        "required": true,
        "width": "100%"
      },
      "options.points": {
        "type": "number",
        "label": "Points",
        "val": 100,
        "required": true
      }
    }
  }
}
,
"/SystemAdminDataOptions.json/SystemAdminDataOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.table_type": {
        "type": "select",
        "label": "System Table",
        "options": {
          "resource_consumption": {
            "label": "Resource Consumption"
          },
          "my_flows_log": {
            "label": "My Flows Log"
          },
          "my_flows": {
            "label": "My Flows"
          },
          "my_table_permissions": {
            "label": "My Table Permissions"
          },
          "my_tables": {
            "label": "My Tables"
          },
          "my_tasks_log": {
            "label": "My Tasks Log"
          },
          "users_points": {
            "label": "User's points"
          },
          "users_points_logs": {
            "label": "User's points logs"
          },
          "task_usage_per_user": {
            "label": "Task usage per user"
          }
        },
        "val": "resource_consumption",
        "required": true
      },
      "options.resource_consumption_cols": {
        "type": "select",
        "label": "Import Columns",
        "show_if": "options.table_type=='resource_consumption'",
        "multiple": true,
        "options": {
          "Year": {
            "label": "Year"
          },
          "Month": {
            "label": "Month"
          },
          "Runs (per Month)": {
            "label": "Runs (per Month)"
          },
          "Processing Time(MS)": {
            "label": "Processing Time(MS)"
          },
          "Max Storage Space(MBytes)": {
            "label": "Max Storage Space(MBytes)"
          },
          "Point Consumption": {
            "label": "Point Consumption"
          }
        },
        "val": ["Year","Month","Runs (per Month)","Processing Time(MS)","Max Storage Space(MBytes)","Point Consumption"],
        "required": true
      },
      "options.my_flows_log_cols": {
        "type": "select",
        "label": "Import Columns",
        "show_if": "options.table_type=='my_flows_log'",
        "multiple": true,
        "options": {
          "Flow": {
            "label": "Flow"
          },
          "Task ID": {
            "label": "Task ID"
          },
          "Task-Order-Number": {
            "label": "Task-Order-Number"
          },
          "Task-Name": {
            "label": "Task-Name"
          },
          "Task Add/Delete": {
            "label": "Task Add/Delete"
          },
          "Parameter-Settings Old": {
            "label": "Parameter-Settings Old"
          },
          "Parameter-Settings New": {
            "label": "Parameter-Settings New"
          },
          "Schedule Old": {
            "label": "Schedule Old"
          },
          "Schedule New": {
            "label": "Schedule New"
          },
          "Timestamp": {
            "label": "Timestamp"
          },
          "UserId": {
            "label": "UserId"
          },
          "TableId": {
            "label": "TableId"
          }
        },
        "val": ["Flow","Task ID","Task-Order-Number","Task-Name","Task Add/Delete","Parameter-Settings Old","Parameter-Settings New","Schedule Old","Schedule New","Timestamp","UserId","TableId"],
        "required": true
      },
      "options.my_flows_cols": {
        "type": "select",
        "label": "Import Columns",
        "show_if": "options.table_type=='my_flows'",
        "multiple": true,
        "options": {
          "FlowID": {
            "label": "FlowID"
          },
          "Flow-Name": {
            "label": "Flow-Name"
          },
          "Flow Schedule": {
            "label": "Flow Schedule"
          },
          "Task ID": {
            "label": "Task ID"
          },
          "Task-Order-Number": {
            "label": "Task-Order-Number"
          },
          "Task-Name": {
            "label": "Task-Name"
          },
          "Parameter-Settings (JSON)": {
            "label": "Parameter-Settings (JSON)"
          },
          "Task Schedule": {
            "label": "Task Schedule"
          },
          "Permissions": {
            "label": "Permissions"
          }
        },
        "val": ["FlowID","Flow-Name","Flow Schedule","Task ID","Task-Order-Number","Task-Name","Parameter-Settings (JSON)","Task Schedule","Permissions"],
        "required": true
      },
      "options.my_table_permissions_cols": {
        "type": "select",
        "label": "Import Columns",
        "show_if": "options.table_type=='my_table_permissions'",
        "multiple": true,
        "options": {
          "FlowID": {
            "label": "FlowID"
          },
          "TableID": {
            "label": "TableID"
          },
          "PermissionID": {
            "label": "PermissionID"
          },
          "Type": {
            "label": "Type"
          },
          "Users": {
            "label": "Users"
          },
          "Headers": {
            "label": "Headers"
          },
          "Labels": {
            "label": "Labels"
          }
        },
        "val": ["FlowID","TableID","PermissionID","Type","Users","Headers","Labels"],
        "required": true
      },
      "options.my_tables_cols": {
        "type": "select",
        "label": "Import Columns",
        "show_if": "options.table_type=='my_tables'",
        "multiple": true,
        "options": {
          "TableID": {
            "label": "TableID"
          },
          "Table-Name": {
            "label": "Table-Name"
          },
          "Header Names per Table": {
            "label": "Header Names per Table"
          },
          "Label Names per Table": {
            "label": "Label Names per Table"
          },
          "Corner Info per Table": {
            "label": "Corner Info per Table"
          },
          "Table Info": {
            "label": "Table Info"
          },
          "Permissions per Table": {
            "label": "Permissions per Table"
          },
          "Creation Time": {
            "label": "Creation Time"
          },
          "Created by": {
            "label": "Created by"
          },
          "Latest Change Timestamp": {
            "label": "Latest Change Timestamp"
          },
          "Table-Tags": {
            "label": "Table-Tags"
          }
        },
        "val": ["TableID","Table-Name","Header Names per Table","Label Names per Table","Corner Info per Table","Table Info","Permissions per Table","Creation Time","Created by","Latest Change Timestamp","Table-Tags"],
        "required": true
      },
      "options.my_tasks_log_cols": {
        "type": "select",
        "label": "Import Columns",
        "show_if": "options.table_type=='my_tasks_log'",
        "multiple": true,
        "options": {
          "Flow": {
            "label": "Flow"
          },
          "Task ID": {
            "label": "Task ID"
          },
          "Task-Order-Number": {
            "label": "Task-Order-Number"
          },
          "Task-Name": {
            "label": "Task-Name"
          },
          "Parameter-Settings (JSON)": {
            "label": "Parameter-Settings (JSON)"
          },
          "Timestamp": {
            "label": "Timestamp"
          },
          "Scheduled": {
            "label": "Scheduled"
          },
          "Success": {
            "label": "Success"
          },
          "Message": {
            "label": "Message"
          }
        },
        "val": ["Flow","Task ID","Task-Order-Number","Task-Name","Parameter-Settings (JSON)","Timestamp","Scheduled","Success","Message"],
        "required": true
      },
      "options.users_points_cols": {
        "type": "select",
        "label": "Import Columns",
        "show_if": "options.table_type=='users_points'",
        "multiple": true,
        "options": {
          "User ID": {
            "label": "User ID"
          },
          "Guest Login": {
            "label": "Guest Login"
          },
          "Login": {
            "label": "Login"
          },
          "Available Points": {
            "label": "Available Points"
          },
          "Created At": {
            "label": "Created At"
          },
          "Last Used": {
            "label": "Last Used"
          }
        },
        "val": ["User ID","Guest Login","Login","Available Points","Created At","Last Used"],
        "required": true
      },
      "options.users_points_logs_cols": {
        "type": "select",
        "label": "Import Columns",
        "show_if": "options.table_type=='users_points_logs'",
        "multiple": true,
        "options": {
          "User ID": {
            "label": "User ID"
          },
          "Points": {
            "label": "Points"
          },
          "Type": {
            "label": "Type"
          },
          "Reason": {
            "label": "Reason"
          },
          "AdminID": {
            "label": "AdminID"
          },
          "Date": {
            "label": "Date"
          }
        },
        "val": ["User ID","Points","Type","Reason","AdminID","Date"],
        "required": true
      },
      "options.task_usage_per_user_cols": {
        "type": "select",
        "label": "Import Columns",
        "show_if": "options.table_type=='task_usage_per_user'",
        "multiple": true,
        "options": {
          "User ID": {
            "label": "User ID"
          },
          "User Login": {
            "label": "User Login"
          },
          "User Anonymous Login": {
            "label": "User Anonymous Login"
          },
          "Task Name": {
            "label": "Task Name"
          },
          "Number of Execution": {
            "label": "Number of Execution"
          }
        },
        "val": ["User ID","User Login","User Anonymous Login","Task Name","Number of Execution"],
        "required": true,
        "breakLine": true
      }
    }
  }
}
,
"/ImportFromFileOptions.json/ImportFromFileOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Select Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.from": {
        "type": "hidden",
        "val": "web"
      },
      "options.webservice": {
        "type": "select",
        "label": "Select Webservice",
        "options": {
          "github": {
            "label": "Github"
          },
          "ms_one_drive": {
            "label": "Microsoft OneDrive"
          },
          "dropbox": {
            "label": "Dropbox"
          },
          "google_drive": {
            "label": "Google Drive (Coming soon)"
          }
        },
        "val": "github",
        "required": true,
        "breakLine": true
      },
      "options.output_format": {
        "type": "select",
        "label": "Select Type",
        "options": {
          "csv_table": {
            "label": "CSV-Table"
          },
          "line_by_line": {
            "label": "Line by Line"
          },
          "word_by_word": {
            "label": "Text"
          }
        },
        "val": "csv_table",
        "required": true
      },
      "options.word_pattern_type": {
        "type": "select",
        "label": "Word Pattern",
        "show_if": "options.output_format=='word_by_word' && options.specify_word_pattern=='true'",
        "options": {
          "regex": {
            "label": "Regular Expression"
          }
        },
        "val": "regex",
        "required": true
      },
      "options.word_pattern_regex": {
        "type": "text",
        "label": "Regular Expression",
        "show_if": "options.output_format=='word_by_word' && options.specify_word_pattern=='true' && options.word_pattern_type=='regex'",
        "required": true,
        "val": "[a-z][1-9]",
        "breakLine": true
      },
      "options.column_setting": {
        "type": "checkbox",
        "label": "Column Settings",
        "show_if": "options.output_format!='file_list'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "column_setting_frame": {
        "type": "fieldset",
        "label": "Column Settings",
        "show_if": "options.output_format!='file_list' && options.column_setting=='true'",
        "repeat": false,
        "fields": {
          "options.add_row_column": {
            "type": "checkbox",
            "label": "Add Row Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_word_count_column": {
            "type": "checkbox",
            "label": "Add 'Word Count' Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_word_nonword_column": {
            "type": "checkbox",
            "label": "Add 'Word & Non-Word' Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_section_column": {
            "type": "checkbox",
            "label": "Add Section Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "section_column_types_frame": {
            "type": "fieldset",
            "label": "Section Column Types",
            "show_if": "options.output_format=='word_by_word' && options.add_section_column=='true'",
            "repeat": false,
            "fields": {
              "options.section_columns.add_paragraph_section_column": {
                "type": "checkbox",
                "label": "Paragraph",
                "val": "false",
                "isOn": "true",
                "isOff": "false",
                "breakLine": true
              },
              "options.section_columns.add_custom_section_column": {
                "type": "checkbox",
                "label": "Custom Section Delimiter",
                "val": "false",
                "isOn": "true",
                "isOff": "false"
              },
              "options.section_columns.custom_delimiter": {
                "type": "text",
                "label": "Delimiter(1 character)",
                "show_if": "options.section_columns.add_custom_section_column=='true'",
                "maxLength": 1,
                "required": true,
                "breakLine": true
              },
              "options.section_columns.add_brackets_punctuation_section_column": {
                "type": "checkbox",
                "label": "Brackets and Punctuation",
                "val": "false",
                "isOn": "true",
                "isOff": "false"
              },
              "options.section_columns.brackets_punctuation_section_column_type": {
                "type": "select",
                "label": "Brackets Type",
                "show_if": "options.section_columns.add_brackets_punctuation_section_column=='true'",
                "options": {
                  "nesting_structure": {
                    "label": "Nesting Structure"
                  },
                  "inner_bracket": {
                    "label": "Inner Bracket"
                  },
                  "brackets_only": {
                    "label": "Brackets Only"
                  },
                  "show_all": {
                    "label": "Show All"
                  }
                },
                "val": "show_all",
                "required": true,
                "breakLine": true
              }
            }
          },
          "options.add_filename_column": {
            "type": "checkbox",
            "label": "Add Column for File Name",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "options.add_filepath_column": {
            "type": "checkbox",
            "label": "Add Column for File Path",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          }
        }
      },
      "options.is_cloud_dir": {
        "type": "hidden",
        "val": "false"
      },
      "if_dir_frame": {
        "type": "fieldset",
        "label": "Directory Import Options",
        "show_if": "options.output_format!='file_list' && options.is_cloud_dir=='true'",
        "repeat": false,
        "fields": {
          "options.unify_in_one_table": {
            "type": "checkbox",
            "label": "Unify in one table",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.suffix": {
            "type": "select",
            "label": "Output tables suffix",
            "show_if": "options.unify_in_one_table=='false'",
            "options": {
              "number": {
                "label": "Number"
              },
              "filename": {
                "label": "Filename"
              }
            },
            "val": "number",
            "required": true,
            "breakLine": true
          },
          "options.include_subdir": {
            "type": "checkbox",
            "label": "Include Subdirectories",
            "show_if": "options.output_format!='file_list' && options.is_cloud_dir=='true'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true,
            "style": "margin-top: 10px"
          }
        }
      },
      "options.file_list.include_subdir": {
        "type": "checkbox",
        "label": "Include Subdirectories",
        "show_if": "options.output_format=='file_list'",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true,
        "style": "margin-top: 10px"
      },
      "options.file_list.add_change_date_column": {
        "type": "checkbox",
        "label": "Add Change Date Column",
        "show_if": "options.output_format=='file_list'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  },
  "import_link_token_frame": {
    "type": "fieldset",
    "label": "Import Link",
    "repeat": false,
    "fields": {
      "options.link_csv_file": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test/blob/main/example.csv",
        "show_if": "options.webservice=='github' && options.is_cloud_dir=='false' && options.output_format=='csv_table'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.link_text_file": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test/blob/main/example.txt(json, csv, etc)",
        "show_if": "options.webservice=='github' && options.is_cloud_dir=='false' && options.output_format!='csv_table' && options.output_format!='file_list'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.one_drive.file_path": {
        "type": "text",
        "label": "Enter path to file e.g. ZippyDoc/Subdir1/test.txt",
        "show_if": "options.webservice=='ms_one_drive' && options.output_format!='file_list' && options.is_cloud_dir=='false'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox.file_path": {
        "type": "text",
        "label": "Enter path to file e.g. ZippyDoc/Subdir1/test.txt",
        "show_if": "options.webservice=='dropbox' && options.output_format!='file_list' && options.is_cloud_dir=='false'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dir_path_filter": {
        "type": "fieldset",
        "label": "Import Path and File Filter",
        "show_if": "options.output_format=='file_list' || options.is_cloud_dir=='true'",
        "repeat": true,
        "fields": {
          "github__link_directory": {
            "type": "text",
            "label": "Enter link e.g. https://github.com/zippydoc/test",
            "show_if": "options.webservice=='github'",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "one_drive__dir_path": {
            "type": "text",
            "label": "Enter path to dir e.g. ZippyDoc/Subdir1",
            "show_if": "options.webservice=='ms_one_drive'",
            "width": "100%",
            "breakLine": true
          },
          "dropbox__dir_path": {
            "type": "text",
            "label": "Enter path to dir e.g. ZippyDoc/Subdir1",
            "show_if": "options.webservice=='dropbox'",
            "width": "100%",
            "breakLine": true
          },
          "google_drive__dir_path": {
            "type": "text",
            "label": "Enter path to dir",
            "show_if": "options.webservice=='google_drive'",
            "width": "100%",
            "breakLine": true
          },
          "dir_filter__filter_type": {
            "type": "select",
            "label": "Filter Type",
            "options": {
              "all": {
                "label": "All"
              },
              "contains": {
                "label": "Contains"
              },
              "starts_with": {
                "label": "Starts With"
              },
              "ends_with": {
                "label": "Ends With"
              },
              "regex": {
                "label": "Regular Expression"
              }
            },
            "val": "all",
            "required": true
          },
          "dir_filter__filter_string": {
            "type": "text",
            "label": "Filter",
            "show_if": "this.dir_filter__filter_type!='all'",
            "required": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.is_github_private": {
        "type": "checkbox",
        "label": "Github repository is private",
        "show_if": "options.webservice=='github'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "options.github_token": {
        "type": "text",
        "label": "Github personal access token",
        "show_if": "options.webservice=='github' && options.is_github_private=='true'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox.auth_code": {
        "type": "text",
        "label": "Dropbox Authorization Code",
        "show_if": "options.webservice=='dropbox'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.google_drive.access_token": {
        "type": "text",
        "label": "Google Drive Access Token",
        "show_if": "options.webservice=='google_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      }
    }
  }
}
,
"/JoinMultipleOutput.json/JoinMultipleOutput.json": {
  "output.output_table_types": {
    "type": "select",
    "label": "Output Table Type(s)",
    "required": true,
    "options": {
      "inner": {
        "label": "Inner Join Table"
      },
      "all_distinct": {
        "label": "All Distinct Tables"
      }
    },
    "multiple": true,
    "val": ["inner"],
    "breakLine": true
  },
  "output.unify_output_table": {
    "type": "checkbox",
    "label": "Unify output tables",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  },
  "output.standard_ending": {
    "type": "checkbox",
    "label": "Standard Ending",
    "show_if": "output.unify_output_table == 'false'",
    "val": "true",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  },
  "output.inner_ending": {
    "show_if": "output.unify_output_table == 'false' && output.standard_ending == 'false'",
    "type": "text",
    "label": "Inner Ending",
    "val": "_j",
    "style": "margin-left: 10px"
  },
  "output.distinct_tables_ending": {
    "show_if": "output.unify_output_table == 'false' && output.standard_ending == 'false'",
    "type": "text",
    "label": "Distinct Tables Ending",
    "val": "_d_",
    "style": "margin-left: 10px"
  },
  "output.distinct_tables_ending_suffix": {
    "show_if": "output.unify_output_table == 'false' && output.standard_ending == 'false'",
    "type": "select",
    "label": "Distinct Tables Ending Suffix",
    "options": {
      "serial_number": {
        "label": "Number"
      },
      "input_table_name": {
        "label": "Input table name"
      }
    },
    "val": "serial_number",
    "style": "margin-left: 10px",
    "breakLine": true
  }
},
"/PlanningAddTag.json/PlanningAddTag.json": {
  "output.add_tag": {
    "type": "checkbox",
    "label": "Add Tag",
    "show_if": "options.output_type=='table_output'",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "style": "margin-right: 15px"
  },
  "output.tag_name": {
    "type": "text",
    "label": "Tag Name",
    "show_if": "output.add_tag=='true'",
    "required": true,
    "minLength": 1,
    "maxLength": 255,
    "val": "",
    "breakLine": true,
    "style": "margin-left: 15px"
  }
},
"/AppendIfTableExist.json/AppendIfTableExist.json": {
  "output.if_table_exist.type": {
    "type": "select",
    "label": "If existing",
    "val": "drop_if_exist",
    "options": {
      "drop_if_exist": {
        "label": "Create or Drop (if already existing)"
      },
      "error_if_exist": {
        "label": "Create New (throw error if existing)"
      },
      "error_if_not_exist": {
        "label": "Drop (throw error if not-existing)"
      },
      "append_all": {
        "label": "Append All"
      },
      "append_not_existing": {
        "label": "Append not existing"
      }
    }
  },
  "output.if_table_exist.append_not_existing_cols": {
    "type": "select",
    "label": "Select Column(s)",
    "show_if": "output.if_table_exist.type=='append_not_existing'",
    "table": "target_table.table_id",
    "bind": "COLUMNS",
    "multiple": true,
    "required": true,
    "breakLine": true
  },
  "append_not_existing_info1": {
    "type": "text",
    "label": "",
    "show_if": "output.if_table_exist.type=='append_not_existing'",
    "val": "Appends rows only if the value of the selected column is new in the existing table.",
    "disabled": true,
    "style": "width: 100%"
  },
  "append_not_existing_info2": {
    "type": "text",
    "label": "",
    "show_if": "output.if_table_exist.type=='append_not_existing'",
    "val": "It is assumed that the selected column is found in the output and existing table",
    "disabled": true,
    "style": "width: 100%"
  }
}
,
"/TeamsChatOptions.json/TeamsChatOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "Select Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.to": {
        "type": "text",
        "label": "To",
        "required": true,
        "val": "",
        "placeholder": "user1@domain.com; user2@domain.com;",
        "width": "100%"
      },
      "options.message": {
        "type": "textarea",
        "label": "Message to send",
        "required": true,
        "val": "",
        "width": "100%",
        "rows": 3
      },
      "options.add_table": {
        "type": "checkbox",
        "label": "Embed Table",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      }
    }
  }
},
"/Test2Options.json/Test2Options.json": {
  "options_box": {
    "type": "fieldset",
    "label": "Select Options",
    "repeat": false,
    "fields": {
      "options.left_table": {
        "type": "select",
        "label": "Table 1",
        "bind": "TABLES",
        "empty": "",
        "required": true
      },
      "left_table_field": {
        "type": "select",
        "label": "Column 1",
        "required": true,
        "table": "options.left_table",
        "bind": "COLUMNS",
        "breakLine": true
      },
      "options.right_table": {
        "type": "select",
        "label": "Table 2",
        "bind": "TABLES",
        "empty": "",
        "required": true
      },
      "right_table_field": {
        "type": "select",
        "label": "Column 2",
        "required": true,
        "table": "options.right_table",
        "bind": "COLUMNS"
      }
    }
  }
},
"/SumupOptions.json/SumupOptions.json": {
  "actions": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": true,
    "fields": {
      "columns": {
        "type": "select",
        "label": "Column(s)",
        "table": "table_id",
		"assign_selected_value_to":"this.output_column_name",
        "bind": "COLUMNS",
        "multiple": true,
        "required": true
      },
      "action": {
        "type": "select",
        "label": "Action",
        "options": {
          "group_by": {
            "label": "Group By"
          },
          "count": {
            "label": "Count"
          },
          "sum": {
            "label": "Sum"
          },
          "first": {
            "label": "First"
          },
          "last": {
            "label": "Last"
          },
          "shortest": {
            "label": "Shortest"
          },
          "longest": {
            "label": "Longest"
          },
          "concatenate": {
            "label": "Concatenate"
          },
          "mathematics": {
            "label": "Mathematics"
          }
        },
        "val": "group_by"
      },
      "count_action_category": {
        "type": "select",
        "label": "Action Type",
        "show_if": "this.action=='count'",
        "options": {
          "all": {
            "label": "All"
          },
          "distinct": {
            "label": "Distinct"
          },
          "empty_or_zero": {
            "label": "Empty or 0"
          },
          "non_empty_or_zero": {
            "label": "Non Empty or 0"
          }
        },
        "val": "all"
      },
      "action_type1": {
        "type": "select",
        "label": "Action Sub Type",
        "show_if": "this.action=='count' && (this.count_action_category=='all' || this.count_action_category=='distinct')",
        "options": {
          "-": {
            "label": "-"
          },
          "non_zero": {
            "label": "Non 0"
          },
          "non_empty": {
            "label": "Non Empty"
          },
          "non_null": {
            "label": "Non Null"
          },
          "non_blank": {
            "label": "Non Blank"
          }
        },
        "val": "-"
      },
      "action_type2": {
        "type": "select",
        "label": "Action Sub Type",
        "show_if": "this.action=='count' && this.count_action_category=='empty_or_zero'",
        "options": {
          "zero": {
            "label": "0"
          },
          "empty": {
            "label": "Empty (Null & Blank)"
          },
          "null": {
            "label": "Null"
          },
          "blank": {
            "label": "Blank"
          }
        },
        "val": "zero"
      },
      "action_type3": {
        "type": "select",
        "label": "Action Sub Type",
        "show_if": "this.action=='count' && this.count_action_category=='non_empty_or_zero'",
        "options": {
          "non_zero": {
            "label": "Non 0"
          },
          "non_empty": {
            "label": "Non Empty"
          },
          "non_null": {
            "label": "Non Null"
          },
          "non_blank": {
            "label": "Non Blank"
          }
        },
        "val": "non_zero"
      },
      "mathematics_action_category": {
        "type": "select",
        "label": "Action Type",
        "show_if": "this.action=='mathematics'",
        "options": {
          "min": {
            "label": "Min"
          },
          "max": {
            "label": "Max"
          },
          "average": {
            "label": "Average"
          },
          "median": {
            "label": "Median"
          },
          "standard_deviation": {
            "label": "Standard Deviation"
          },
          "variance": {
            "label": "Variance"
          }
        },
        "val": "min"
      },
      "action_type4": {
        "type": "select",
        "label": "Action Sub Type",
        "show_if": "this.action=='mathematics'",
        "options": {
          "include_zero": {
            "label": "Include 0"
          },
          "exclude_zero": {
            "label": "Exclude 0"
          }
        },
        "val": "include_zero"
      },
      "concatenate_separator": {
        "type": "text",
        "label": "Separator",
        "show_if": "this.action=='concatenate'",
        "val": ","
      },
      "output_column_name": {
        "type": "text",
        "label": "Output Column Name",
        "val": ""
      },
      "rounding": {
        "type": "select",
        "label": "Rounding",
        "show_if": "this.action=='sum' || this.action=='mathematics'",
        "required": true,
        "options": {
          "no_rounding": {
            "label": "No rounding"
          },
          "0": {
            "label": "0 digits"
          },
          "1": {
            "label": "1 digits"
          },
          "2": {
            "label": "2 digits"
          },
          "3": {
            "label": "3 digits"
          },
          "4": {
            "label": "4 digits"
          },
          "5": {
            "label": "5 digits"
          },
          "6": {
            "label": "6 digits"
          },
          "7": {
            "label": "7 digits"
          },
          "8": {
            "label": "8 digits"
          },
          "9": {
            "label": "9 digits"
          }
        },
        "val": "no_rounding"
      },
      "delete": {
        "type": "button",
        "label": "Delete",
        "function": "DELETE_ROW"
      }
    }
  },
  "info1": {
    "type": "textarea",
    "label": "",
    "val": "If more than one columns selected, Output Column Name input value should be used as suffix",
    "disabled": true,
    "style": "width: 100%"
  }
}
,
"/DeleteOptions.json/DeleteOptions.json": {
  "placeholder": {
    "breakLine": true
  },
  "delete_options": {
    "type": "select",
    "label": "Delete Options",
    "required": true,
    "options": {
      "del_table": {
        "label": "Delete Table"
      },
      "del_columns": {
        "label": "Delete Selected Columns"
      },
      "del_rows": {
        "label": "Delete Selected Rows"
      }
    },
    "val": "del_table"
  },
  "apply_columns": {
    "type": "select",
    "label": "Select Columns to Delete",
    "show_if": "delete_options=='del_columns'",
    "required": true,
    "table": "table_id",
    "multiple": true,
    "bind": "COLUMNS"
  },
  "apply_rows": {
    "type": "select",
    "label": "Select Rows to Delete",
    "show_if": "delete_options=='del_rows'",
    "required": true,
    "table": "table_id",
    "multiple": true,
    "bind": "LABELS"
  }
}
,
"/D3StackedBarChartOptions.json/D3StackedBarChartOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.chart_type": {
        "type": "hidden",
        "val": "stacked_bar_chart"
      },
      "options.configure_manual": {
        "type": "hidden",
        "val": "true"
      },
      "options.x_axis_col": {
        "type": "select",
        "label": "X-axis column",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "options.category_col": {
        "type": "select",
        "label": "Category Column",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "options.value_col": {
        "type": "select",
        "label": "Value Column",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      }
    }
  }
}
,
"/AddCustomRowOptions.json/AddCustomRowOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.position": {
        "type": "select",
        "label": "Select Position",
        "required": true,
        "options": {
          "add_rows_below_selected_row": {
            "label": "Add rows below selected rows"
          },
          "add_rows_above_selected_row": {
            "label": "Add rows above selected rows"
          },
          "add_rows_at_table_end": {
            "label": "Add rows at table end"
          },
          "add_single_row_at_table_end": {
            "label": "Add single row at table end"
          },
          "add_row_after_each_group": {
            "label": "Add row after each group"
          }
        },
        "val": "add_rows_below_selected_row",
        "breakLine": true
      },
      "options.group_column": {
        "type": "select",
        "label": "Group Column",
        "show_if": "options.position=='add_row_after_each_group'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true,
        "breakLine": true
      },
      "options.use_filter": {
        "type": "select",
        "label": "Select Type",
        "show_if": "options.position=='add_rows_below_selected_row' || options.position=='add_rows_above_selected_row' || options.position=='add_rows_at_table_end'",
        "required": true,
        "options": {
          "false": {
            "label": "Add one row for each table row"
          },
          "true": {
            "label": "Add one row for each specified row"
          }
        },
        "val": "false",
        "breakLine": true
      },
      "filter_box": {
        "type": "fieldset",
        "label": "Filter Options",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.use_filter=='true' && (options.position=='add_rows_below_selected_row' || options.position=='add_rows_above_selected_row' || options.position=='add_rows_at_table_end')",
        "repeat": false,
        "fields": {
          "options.filter": {
            "type": "fieldset",
            "label": "Add Filter Conditions",
            "style": "border-radius: 3px; border: 1px solid #ccc",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group",
            "style": "border-radius: 3px; border: 1px solid #ccc",
            "show_if": "options.apply_to_record=='false'",
            "repeat": false,
            "fields": {
              "options.apply_to_group_columns__all_but_selected": {
                "type": "checkbox",
                "label": "All but selected",
                "val": "false",
                "isOn": "true",
                "isOff": "false",
                "breakLine": true
              },
              "options.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "width": "100%",
                "table": "table_id",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      },
      "options.target_cells": {
        "type": "fieldset",
        "label": "Define added Row(s)",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "repeat": true,
        "fields": {
          "column": {
            "type": "select",
            "label": "Select Column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "formula_type": {
            "type": "select",
            "label": "Formula Type",
            "required": true,
            "options": {
              "copy_selected": {
                "label": "Copy Selected"
              },
              "static_value": {
                "label": "Static Value"
              },
              "numeric_formula": {
                "label": "Numeric Formula"
              },
              "text_formula": {
                "label": "Text Formula"
              }
            },
            "val": "copy_selected"
          },
          "static_value": {
            "type": "text",
            "label": "Value",
            "show_if": "this.formula_type=='static_value'",
            "val": ""
          },
          "numeric_formula": {
            "type": "text",
            "label": "Formula, e.g. [Column1] + 2 * ([Row-1:Column3] - [Column1])",
            "show_if": "this.formula_type=='numeric_formula'",
            "val": "",
            "style": "width: 100%"
          },
          "rounding": {
            "type": "select",
            "label": "Rounding",
            "show_if": "this.formula_type=='numeric_formula'",
            "required": true,
            "options": {
              "no_rounding": {
                "label": "No rounding"
              },
              "0": {
                "label": "0 digits"
              },
              "1": {
                "label": "1 digits"
              },
              "2": {
                "label": "2 digits"
              },
              "3": {
                "label": "3 digits"
              },
              "4": {
                "label": "4 digits"
              },
              "5": {
                "label": "5 digits"
              },
              "6": {
                "label": "6 digits"
              },
              "7": {
                "label": "7 digits"
              },
              "8": {
                "label": "8 digits"
              },
              "9": {
                "label": "9 digits"
              }
            },
            "val": "no_rounding"
          },
          "text_formula": {
            "type": "text",
            "label": "Formula, e.g. [firstName] + ' ' + [lastName] + ' ' + [Row-1:Column3]",
            "show_if": "this.formula_type=='text_formula'",
            "val": "",
            "style": "width: 100%"
          },
          "use_multi_row": {
            "type": "checkbox",
            "label": "Multi-Row Options",
            "show_if": "options.position!='add_row_after_each_group' && (this.formula_type=='numeric_formula' || this.formula_type=='text_formula')",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-right: 15px"
          },
          "if_row_not_exist": {
            "type": "select",
            "label": "If referred row not exist",
            "show_if": "options.position!='add_row_after_each_group' && this.use_multi_row=='true' && (this.formula_type=='numeric_formula' || this.formula_type=='text_formula')",
            "required": true,
            "options": {
              "empty": {
                "label": "Empty or 0"
              },
              "closest": {
                "label": "Closest Row Value"
              }
            },
            "val": "empty",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        },
        "breakLine": true
      },
      "options.set_date_column": {
        "type": "checkbox",
        "label": "Apply time-shift to a selected date column",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 20px; margin-right: 15px",
        "breakLine": true
      },
      "options.date_column": {
        "type": "select",
        "label": "Select Date Column",
        "show_if": "options.set_date_column=='true'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "options.period_shift.number": {
        "type": "text",
        "label": "Period Shift",
        "show_if": "options.set_date_column=='true'",
        "required": true,
        "val": "0"
      },
      "options.period_shift.period": {
        "type": "select",
        "label": "Select Period",
        "show_if": "options.set_date_column=='true'",
        "options": {
          "day": {
            "label": "Days"
          },
          "week": {
            "label": "Weeks"
          },
          "month": {
            "label": "Months"
          },
          "year": {
            "label": "Years"
          }
        },
        "val": "month"
      }
    }
  }
}
,
"/TableTagsOptions.json/TableTagsOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.remove_all_tags": {
        "type": "checkbox",
        "label": "Remove all Tags",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.tags_config": {
        "type": "fieldset",
        "label": "Add/Remove tag configuration",
        "show_if": "options.remove_all_tags == 'false'",
        "repeat": true,
        "fields": {
          "operation_type": {
            "type": "select",
            "label": "Operation",
            "required": true,
            "options": {
              "add_tag": {
                "label": "Add Tag"
              },
              "remove_tag": {
                "label": "Remove Tag"
              }
            },
            "val": "add_tag"
          },
          "tag_text": {
            "type": "text",
            "label": "Tag Text",
            "val": "",
            "required": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        },
        "breakLine": true
      }
    }
  }
}
,
"/TranslateOptions.json/TranslateOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.target_lang": {
        "type": "select",
        "label": "Select Target Language",
        "options": {
          "BG": {
            "label": "Bulgarian"
          },
          "CS": {
            "label": "Czech"
          },
          "DA": {
            "label": "Danish"
          },
          "DE": {
            "label": "German"
          },
          "EL": {
            "label": "Greek"
          },
          "EN-GB": {
            "label": "English (British)"
          },
          "EN-US": {
            "label": "English (American)"
          },
          "EN": {
            "label": "English"
          },
          "ES": {
            "label": "Spanish"
          },
          "ET": {
            "label": "Estonian"
          },
          "FI": {
            "label": "Finnish"
          },
          "FR": {
            "label": "French"
          },
          "HU": {
            "label": "Hungarian"
          },
          "IT": {
            "label": "Italian"
          },
          "JA": {
            "label": "Japanese"
          },
          "LT": {
            "label": "Lithuanian"
          },
          "LV": {
            "label": "Latvian"
          },
          "NL": {
            "label": "Dutch"
          },
          "PL": {
            "label": "Polish"
          },
          "PT-PT": {
            "label": "Portuguese (all Portuguese varieties excluding Brazilian Portuguese)"
          },
          "PT-BR": {
            "label": "Portuguese (Brazilian)"
          },
          "PT": {
            "label": "Portuguese"
          },
          "RO": {
            "label": "Romanian"
          },
          "RU": {
            "label": "Russian"
          },
          "SK": {
            "label": "Slovak"
          },
          "SL": {
            "label": "Slovenian"
          },
          "SV": {
            "label": "Swedish"
          },
          "ZH": {
            "label": "Chinese"
          }
        },
        "val": "DE",
        "breakLine": true
      },
      "options.help_1": {
        "type": "text",
        "label": "",
        "show_if": "options.target_lang=='EN'",
        "val": "English (unspecified variant for backward compatibility; please select EN-GB or EN-US instead)",
        "disabled": true,
        "md_no_resize": false,
        "rows": 2,
        "width": "100%"
      },
      "options.help_2": {
        "type": "text",
        "label": "",
        "show_if": "options.target_lang=='PT'",
        "val": "Portuguese (unspecified variant for backward compatibility; please select PT-PT or PT-BR instead)",
        "disabled": true,
        "md_no_resize": false,
        "rows": 2,
        "width": "100%"
      },
      "options.select_source_lang": {
        "type": "checkbox",
        "label": "Select Source Language",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "options.source_lang": {
        "type": "select",
        "label": "Source Language",
        "show_if": "options.select_source_lang == 'true'",
        "options": {
          "BG": {
            "label": "Bulgarian"
          },
          "CS": {
            "label": "Czech"
          },
          "DA": {
            "label": "Danish"
          },
          "DE": {
            "label": "German"
          },
          "EL": {
            "label": "Greek"
          },
          "EN": {
            "label": "English"
          },
          "ES": {
            "label": "Spanish"
          },
          "ET": {
            "label": "Estonian"
          },
          "FI": {
            "label": "Finnish"
          },
          "FR": {
            "label": "French"
          },
          "HU": {
            "label": "Hungarian"
          },
          "IT": {
            "label": "Italian"
          },
          "JA": {
            "label": "Japanese"
          },
          "LT": {
            "label": "Lithuanian"
          },
          "LV": {
            "label": "Latvian"
          },
          "NL": {
            "label": "Dutch"
          },
          "PL": {
            "label": "Polish"
          },
          "PT": {
            "label": "Portuguese"
          },
          "RO": {
            "label": "Romanian"
          },
          "RU": {
            "label": "Russian"
          },
          "SK": {
            "label": "Slovak"
          },
          "SL": {
            "label": "Slovenian"
          },
          "SV": {
            "label": "Swedish"
          },
          "ZH": {
            "label": "Chinese"
          }
        },
        "val": "DE",
        "breakLine": true
      },
      "options.help_3": {
        "type": "text",
        "label": "",
        "val": "If Source Language is omitted, we will attempt to detect the language of the text and translate it.",
        "disabled": true,
        "md_no_resize": false,
        "rows": 2,
        "width": "100%"
      },
      "options.new_column": {
        "type": "checkbox",
        "label": "New Column",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "options.new_col_name": {
        "type": "text",
        "label": "New column name",
        "show_if": "options.new_column=='true'",
        "val": "Translated",
        "required": true,
        "style": "margin-left: 15px",
        "breakLine": true
      }
    }
  }
}
,
"/TablePermissionInput.json/TablePermissionInput.json": {
  "input": {
    "type": "fieldset",
    "label": "Select Input Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "input.table_or_flow": {
        "type": "hidden",
        "val": "set_table_permissions"
      },
      "input.table_id": {
        "type": "select",
        "label": "Select Table",
        "show_if": "input.table_or_flow=='set_table_permissions'",
        "bind": "TABLES",
        "empty": "",
        "required": true
      }
    }
  }
}
,
"/InjectByTableOptions.json/InjectByTableOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Replacement Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.task_code": {
        "type": "hidden",
        "val": "find_replace_text"
      },
      "options.incoming_value_to_replace.type": {
        "type": "hidden",
        "val": "replacement_table"
      },
      "options.replace_table.table_id": {
        "type": "select",
        "label": "Replacement Table",
        "bind": "TABLES",
        "required": true
      },
      "options.replace_table.find_column": {
        "type": "select",
        "label": "Find column",
        "table": "options.replace_table.table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "options.replace_table.replace_with_column": {
        "type": "select",
        "label": "Replace With column",
        "table": "options.replace_table.table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "options.incoming_value_to_replace.partial_match": {
        "type": "select",
        "label": "Partial Match",
        "options": {
          "full_match": {
            "label": "Full match"
          },
          "full_and_partial_match": {
            "label": "Full and partial match"
          },
          "partial_match_only": {
            "label": "Partial match only"
          }
        },
        "val": "full_and_partial_match"
      },
      "options.incoming_value_to_replace.case_sensitivity": {
        "type": "select",
        "label": "Case Sensitivity",
        "options": {
          "sensitive": {
            "label": "Case Sensitive"
          },
          "insensitive": {
            "label": "Case Insensitive"
          }
        },
        "val": "sensitive",
        "breakLine": true
      },
      "options.apply_framing_condition": {
        "type": "checkbox",
        "label": "Apply framing conditions",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "apply_framing_condition_box": {
        "type": "fieldset",
        "label": "Framing conditions",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.apply_framing_condition=='true'",
        "repeat": false,
        "fields": {
          "options.framing_condition.pattern": {
            "type": "select",
            "label": "Framing conditions",
            "required": true,
            "options": {
              "name_x": {
                "label": "name : x"
              },
              "curly_brackets": {
                "label": "{x}"
              },
              "square_brackets": {
                "label": "[x]"
              },
              "round_brackets": {
                "label": "(x)"
              },
              "tag_x": {
                "label": "&lt;tag&gt;x&lt;/tag&gt;"
              },
              "f_x": {
                "label": "f(x)"
              },
              "f_x_bracket": {
                "label": "f(){x}"
              }
            },
            "val": "name_x"
          },
          "options.framing_condition.name_x_name": {
            "type": "text",
            "label": "Name",
            "show_if": "options.framing_condition.pattern=='name_x'",
            "val": "",
            "required": true
          },
          "options.framing_condition.tag_x_tag": {
            "type": "text",
            "label": "Tag",
            "show_if": "options.framing_condition.pattern=='tag_x'",
            "val": "",
            "required": true
          },
          "options.framing_condition.parantheses": {
            "type": "select",
            "label": "Parantheses",
            "required": true,
            "options": {
              "optional": {
                "label": "Optional parantheses"
              },
              "including": {
                "label": "Including parantheses"
              },
              "no": {
                "label": "No parantheses"
              }
            },
            "val": "optional"
          },
          "options.framing_condition.sel_parantheses": {
            "type": "select",
            "label": "Select Parantheses",
            "show_if": "options.framing_condition.parantheses=='optional' || options.framing_condition.parantheses=='including'",
            "required": true,
            "options": {
              "p1": {
                "label": "'"
              },
              "p2": {
                "label": "\""
              },
              "p3": {
                "label": "`"
              },
              "p4": {
                "label": "´"
              }
            },
            "multiple": true,
            "val": ["p1", "p2", "p3", "p4"],
            "breakLine": true
          },
          "options.framing_condition.allow_whitespace": {
            "type": "checkbox",
            "label": "Allow whitespace",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          }
        }
      },
      "options.apply_section_by_section": {
        "type": "checkbox",
        "label": "Section by Section",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px; margin-right: 15px"
      },
      "options.section_columns": {
        "type": "select",
        "label": "Section column(s)",
        "show_if": "options.apply_section_by_section=='true'",
        "table": "table_id",
        "bind": "COLUMNS",
        "multiple": true,
        "required": true,
        "breakLine": true
      },
      "options.use_replace_table_filter": {
        "type": "checkbox",
        "label": "Use Filter on \"Replace With\" Table",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "replace_table_filter_option_box": {
        "type": "fieldset",
        "label": "\"Replace With\" Table Filter Options",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.use_replace_table_filter=='true'",
        "repeat": false,
        "fields": {
          "options.replace_table_filter_option.filter": {
            "type": "fieldset",
            "label": "Add Filter Conditions on \"Replace With\" Table",
            "style": "border-radius: 3px; border: 1px solid #ccc",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if" :  "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if" :  "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "options.replace_with.table",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table_id": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table_id",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.replace_table_filter_option.apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record on \"Replace With\" Table",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "replacement_table_filter_option_apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group on \"Replace With\" Table",
            "style": "border-radius: 3px; border: 1px solid #ccc",
            "show_if": "options.replace_table_filter_option.apply_to_record=='false'",
            "repeat": false,
            "fields": {
              "options.replacement_table_filter_option.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "required": true,
                "width": "100%",
                "table": "options.replace_table.table_id",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      }
    }
  }
},
"/PdfReProByTableOptions.json/PdfReProByTableOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.script_name": {
        "type": "hidden",
        "val": "PdfReProByTable"
      },
      "options.type": {
        "type": "hidden",
        "val": "create"
      },
      "options.template_id": {
        "type": "select",
        "label": "Document Type",
        "options": {
          "id_bd7c7b52449752d78436f5aaa893abd36e96b7a9": {
            "label": "Cover Letter"
          },
          "id_17b533f4f9c5d2960ba67455a81ef22918106d1e": {
            "label": "Appointment or Removal"
          }
        },
        "val": "id_bd7c7b52449752d78436f5aaa893abd36e96b7a9",
        "required": true
      },
      "options.lang": {
        "type": "select",
        "label": "Document Language",
        "show_if": "options.type=='create'",
        "options": {
          "standard": {
            "label": "Standard Language"
          },
          "einsprachig": {
            "label": "einsprachig"
          },
          "lt": {
            "label": "lt"
          },
          "it": {
            "label": "it"
          },
          "hu": {
            "label": "hu"
          },
          "hr": {
            "label": "hr"
          },
          "gl": {
            "label": "gl"
          },
          "ga": {
            "label": "ga"
          },
          "fr": {
            "label": "fr"
          },
          "fi": {
            "label": "fi"
          },
          "bg": {
            "label": "bg"
          },
          "ca": {
            "label": "ca"
          },
          "cs": {
            "label": "cs"
          },
          "cy": {
            "label": "cy"
          },
          "da": {
            "label": "da"
          },
          "de": {
            "label": "de"
          },
          "el": {
            "label": "el"
          },
          "en": {
            "label": "en"
          },
          "es": {
            "label": "es"
          },
          "ey": {
            "label": "et"
          },
          "eu": {
            "label": "eu"
          }
        },
        "val": "de",
        "required": true,
        "breakLine": true
      },
      "options.where_to_create": {
        "type": "select",
        "label": "Where to create",
        "options": {
          "only_open_in_browser": {
            "label": "Only open PDF in browser"
          },
          "only_export_to_cloud": {
            "label": "Only export to cloud"
          },
          "both_export_to_cloud_and_open_in_browser": {
            "label": "Both export to cloud and open pdf in browser"
          }
        },
        "val": "only_open_in_browser",
        "required": true
      },
      "options.configure_by_table_help": {
        "type": "text",
        "label": "",
        "val": "Table Structure ( Document | List Name | List Item | Field Name | Field Value )",
        "disabled": true,
        "width": "100%"
      },
      "options.input_table": {
        "type": "select",
        "label": "Select Table",
        "show_if": "options.type=='create'",
        "bind": "TABLES",
        "empty": "",
        "required": true,
        "breakLine": true
      },
      "options.webservice": {
        "type": "select",
        "label": "Select Webservice",
        "show_if": "options.type=='create'",
        "options": {
          "ms_one_drive": {
            "label": "Microsoft OneDrive"
          },
          "dropbox": {
            "label": "Dropbox"
          },
          "google_drive": {
            "label": "Google Drive"
          }
        },
        "val": "ms_one_drive",
        "required": true,
        "breakLine": true
      },
      "export_link_token_frame": {
        "type": "fieldset",
        "label": "Export Link",
        "show_if": "options.type=='create'",
        "repeat": false,
        "fields": {
          "options.github_url": {
            "type": "text",
            "label": "Enter link e.g. https://github.com/zippydoc/test",
            "show_if": "options.webservice=='github'",
            "val": "",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "options.export_dir": {
            "type": "text",
            "label": "Enter dir e.g. /MyZippyDocFiles/SubDir/",
            "show_if": "options.webservice!='github'",
            "val": "",
            "width": "100%",
            "breakLine": true
          },
          "options.github_token": {
            "type": "text",
            "label": "Specify the Github personal access token that has write permission:",
            "show_if": "options.webservice=='github'",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "options.google_authorization_code": {
            "type": "text",
            "label": "Google OAuth Authorization Code with scope https://www.googleapis.com/auth/drive. You can get it here https://developers.google.com/oauthplayground/",
            "show_if": "options.webservice=='google_drive'",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "options.dropbox_authorization_code": {
            "type": "text",
            "label": "Dropbox Authorization Code. You can get it here https://www.dropbox.com/oauth2/authorize?client_id=9i7woztjp94jrkw&response_type=code",
            "show_if": "options.webservice=='dropbox'",
            "required": true,
            "width": "100%",
            "breakLine": true
          }
        }
      }
    }
  }
},
"/TestOptions.json/TestOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "Select Options",
    "repeat": false,
    "fields": {
      "options.input_table": {
        "type": "select",
        "label": "Select Table",
        "bind": "TABLES",
        "empty": "",
        "required": true,
        "breakLine": true
      },
      "options.field_name_col": {
        "type": "select",
        "label": "Column 1",
        "required": true,
        "table": "options.input_table",
        "bind": "COLUMNS"
      },
      "options.field_name_selected_rows": {
        "type": "select",
        "label": "Rows 1",
        "multiple": true,
        "unique_values_only": true,
        "table": "options.input_table",
        "column_list": "options.field_name_col",
        "bind": "RECORDS",
        "required": true,
        "breakLine": true
      },
      "options.field_value_col": {
        "type": "select",
        "label": "Column 2",
        "required": true,
        "table": "options.input_table",
        "bind": "COLUMNS"
      },
      "options.field_value_selected_rows": {
        "type": "select",
        "label": "Rows 2",
        "multiple": true,
        "unique_values_only": true,
        "table": "options.input_table",
        "column_list": "options.field_value_col",
        "bind": "RECORDS",
        "required": true,
        "breakLine": true
      }
    }
  }
},
"/SetPointsByTableInput.json/SetPointsByTableInput.json": {
  "input": {
    "type": "fieldset",
    "label": "Select Input Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "table_id": {
        "type": "select",
        "label": "Select Table",
        "bind": "TABLES",
        "empty": "",
        "required": true,
        "breakLine": true
      },
      "remove_input_table_after_processing": {
        "type": "hidden",
        "val": "false"
      },
      "is_word": {
        "type": "hidden",
        "val": "false"
      },
      "info1": {
        "type": "text",
        "label": "",
        "val": "Input Table Format: userID | points",
        "disabled": true,
        "style": "width: 100%"
      }
    }
  }
}
,
"/SelectColumnOptions.json/SelectColumnOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.select_all_columns": {
        "type": "checkbox",
        "label": "Select All",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "options.output_columns": {
        "type": "fieldset",
        "label": "Add Output Columns",
        "show_if": "options.select_all_columns=='false'",
        "repeat": true,
        "fields": {
          "field_name": {
            "type": "select",
            "label": "Select Column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "order": {
            "type": "select",
            "label": "Order",
            "options": {
              "-": {
                "label": "-"
              },
              "asc": {
                "label": "Asc"
              },
              "desc": {
                "label": "Desc"
              }
            },
            "val": "-"
          },
          "is_rename": {
            "type": "checkbox",
            "label": "Rename",
            "val": "false",
            "isOn": "true",
            "isOff": "false"
          },
          "rename": {
            "show_if": "this.is_rename == 'true'",
            "type": "text",
            "required": true,
            "minLength": 1,
            "maxLength": 255,
            "label": "New Column Name",
            "style": "margin-left: 10px"
          },
          "format__category": {
            "type": "select",
            "label": "Display Format",
            "required": true,
            "options": {
              "standard": {
                "label": "Standard"
              },
              "number": {
                "label": "Number"
              },
              "percentage": {
                "label": "Percentage"
              },
              "text": {
                "label": "Text"
              },
              "date": {
                "label": "Date"
              },
              "currency": {
                "label": "Currency"
              }
            },
            "val": "standard"
          },
          "format__rounding": {
            "type": "select",
            "label": "Decimal Places for display",
            "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
            "required": true,
            "options": {
              "no_rounding": {
                "label": "No rounding"
              },
              "0": {
                "label": "0 digits"
              },
              "1": {
                "label": "1 digits"
              },
              "2": {
                "label": "2 digits"
              },
              "3": {
                "label": "3 digits"
              },
              "4": {
                "label": "4 digits"
              },
              "5": {
                "label": "5 digits"
              },
              "6": {
                "label": "6 digits"
              },
              "7": {
                "label": "7 digits"
              },
              "8": {
                "label": "8 digits"
              },
              "9": {
                "label": "9 digits"
              }
            },
            "val": "2"
          },
          "format__use_1000_separator": {
            "type": "checkbox",
            "label": "Use 1000 Separator(.)",
            "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
            "val": "true",
            "isOn": "true",
            "isOff": "false"
          },
          "format__currency_symbol": {
            "type": "select",
            "label": "Symbol",
            "show_if": "this.format__category=='currency'",
            "required": true,
            "options": {
              "dollar": {
                "label": "$"
              },
              "euro": {
                "label": "€"
              },
              "pound": {
                "label": "£"
              }
            },
            "val": "dollar"
          },
          "format__date_format": {
            "type": "select",
            "label": "Type",
            "show_if": "this.format__category=='date'",
            "required": true,
            "options": {
              "mm/dd/yyyy": {
                "label": "3/14/2012"
              },
              "D, M dd, Y": {
                "label": "Wednesday, March 14, 2012"
              },
              "yyyy-mm-dd": {
                "label": "2012-03-14"
              },
              "m.dd.yyyy": {
                "label": "3.14.2012"
              },
              "m.dd.yy": {
                "label": "3.14.12"
              },
              "dd.m.yyyy": {
                "label": "14.3.2012"
              },
              "dd.m.yy": {
                "label": "14.3.12"
              },
              "M dd, Y": {
                "label": "March 14, 2012"
              },
              "dd-mm-yyyy": {
                "label": "14-03-2012"
              },
              "mm-dd-yyyy": {
                "label": "03-14-2012"
              },
              "dd-mm-yy": {
                "label": "14-03-12"
              },
              "mm-dd-yy": {
                "label": "03-14-12"
              }
            },
            "val": "mm/dd/yyyy",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        },
        "breakLine": true,
        "style": "margin-bottom: 20px"
      }
    }
  }
}
,
"/ImportFromDirOptions.json/ImportFromDirOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Select Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.from": {
        "type": "hidden",
        "val": "web"
      },
      "options.webservice": {
        "type": "select",
        "label": "Select Webservice",
        "options": {
          "github": {
            "label": "Github"
          },
          "ms_one_drive": {
            "label": "Microsoft OneDrive"
          },
          "dropbox": {
            "label": "Dropbox"
          },
          "google_drive": {
            "label": "Google Drive (Coming soon)"
          }
        },
        "val": "github",
        "required": true,
        "breakLine": true
      },
      "options.output_format": {
        "type": "select",
        "label": "Select Type",
        "options": {
          "csv_table": {
            "label": "CSV-Table"
          },
          "line_by_line": {
            "label": "Line by Line"
          },
          "word_by_word": {
            "label": "Text"
          },
          "file_list": {
            "label": "File List"
          }
        },
        "val": "csv_table",
        "required": true
      },
      "options.word_pattern_type": {
        "type": "select",
        "label": "Word Pattern",
        "show_if": "options.output_format=='word_by_word' && options.specify_word_pattern=='true'",
        "options": {
          "regex": {
            "label": "Regular Expression"
          }
        },
        "val": "regex",
        "required": true
      },
      "options.word_pattern_regex": {
        "type": "text",
        "label": "Regular Expression",
        "show_if": "options.output_format=='word_by_word' && options.specify_word_pattern=='true' && options.word_pattern_type=='regex'",
        "required": true,
        "val": "[a-z][1-9]",
        "breakLine": true
      },
      "options.column_setting": {
        "type": "checkbox",
        "label": "Column Settings",
        "show_if": "options.output_format!='file_list'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "column_setting_frame": {
        "type": "fieldset",
        "label": "Column Settings",
        "show_if": "options.output_format!='file_list' && options.column_setting=='true'",
        "repeat": false,
        "fields": {
          "options.add_row_column": {
            "type": "checkbox",
            "label": "Add Row Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_word_count_column": {
            "type": "checkbox",
            "label": "Add 'Word Count' Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_word_nonword_column": {
            "type": "checkbox",
            "label": "Add 'Word & Non-Word' Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_section_column": {
            "type": "checkbox",
            "label": "Add Section Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "section_column_types_frame": {
            "type": "fieldset",
            "label": "Section Column Types",
            "show_if": "options.output_format=='word_by_word' && options.add_section_column=='true'",
            "repeat": false,
            "fields": {
              "options.section_columns.add_paragraph_section_column": {
                "type": "checkbox",
                "label": "Paragraph",
                "val": "false",
                "isOn": "true",
                "isOff": "false",
                "breakLine": true
              },
              "options.section_columns.add_custom_section_column": {
                "type": "checkbox",
                "label": "Custom Section Delimiter",
                "val": "false",
                "isOn": "true",
                "isOff": "false"
              },
              "options.section_columns.custom_delimiter": {
                "type": "text",
                "label": "Delimiter(1 character)",
                "show_if": "options.section_columns.add_custom_section_column=='true'",
                "maxLength": 1,
                "required": true,
                "breakLine": true
              },
              "options.section_columns.add_brackets_punctuation_section_column": {
                "type": "checkbox",
                "label": "Brackets and Punctuation",
                "val": "false",
                "isOn": "true",
                "isOff": "false"
              },
              "options.section_columns.brackets_punctuation_section_column_type": {
                "type": "select",
                "label": "Brackets Type",
                "show_if": "options.section_columns.add_brackets_punctuation_section_column=='true'",
                "options": {
                  "nesting_structure": {
                    "label": "Nesting Structure"
                  },
                  "inner_bracket": {
                    "label": "Inner Bracket"
                  },
                  "brackets_only": {
                    "label": "Brackets Only"
                  },
                  "show_all": {
                    "label": "Show All"
                  }
                },
                "val": "show_all",
                "required": true,
                "breakLine": true
              }
            }
          },
          "options.add_filename_column": {
            "type": "checkbox",
            "label": "Add Column for File Name",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "options.add_filepath_column": {
            "type": "checkbox",
            "label": "Add Column for File Path",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          }
        }
      },
      "options.is_cloud_dir": {
        "type": "hidden",
        "val": "true"
      },
      "if_dir_frame": {
        "type": "fieldset",
        "label": "Directory Import Options",
        "show_if": "options.output_format!='file_list' && options.is_cloud_dir=='true'",
        "repeat": false,
        "fields": {
          "options.unify_in_one_table": {
            "type": "checkbox",
            "label": "Unify in one table",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.suffix": {
            "type": "select",
            "label": "Output tables suffix",
            "show_if": "options.unify_in_one_table=='false'",
            "options": {
              "number": {
                "label": "Number"
              },
              "filename": {
                "label": "Filename"
              }
            },
            "val": "number",
            "required": true,
            "breakLine": true
          },
          "options.include_subdir": {
            "type": "checkbox",
            "label": "Include Subdirectories",
            "show_if": "options.output_format!='file_list' && options.is_cloud_dir=='true'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true,
            "style": "margin-top: 10px"
          }
        }
      },
      "options.file_list.include_subdir": {
        "type": "checkbox",
        "label": "Include Subdirectories",
        "show_if": "options.output_format=='file_list'",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true,
        "style": "margin-top: 10px"
      },
      "options.file_list.add_change_date_column": {
        "type": "checkbox",
        "label": "Add Change Date Column",
        "show_if": "options.output_format=='file_list'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  },
  "import_link_token_frame": {
    "type": "fieldset",
    "label": "Import Link",
    "repeat": false,
    "fields": {
      "options.link_csv_file": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test/blob/main/example.csv",
        "show_if": "options.webservice=='github' && options.is_cloud_dir=='false' && options.output_format=='csv_table'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.link_text_file": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test/blob/main/example.txt(json, csv, etc)",
        "show_if": "options.webservice=='github' && options.is_cloud_dir=='false' && options.output_format!='csv_table' && options.output_format!='file_list'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.one_drive.file_path": {
        "type": "text",
        "label": "Enter path to file e.g. ZippyDoc/Subdir1/test.txt",
        "show_if": "options.webservice=='ms_one_drive' && options.output_format!='file_list' && options.is_cloud_dir=='false'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox.file_path": {
        "type": "text",
        "label": "Enter path to file e.g. ZippyDoc/Subdir1/test.txt",
        "show_if": "options.webservice=='dropbox' && options.output_format!='file_list' && options.is_cloud_dir=='false'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dir_path_filter": {
        "type": "fieldset",
        "label": "Import Path and File Filter",
        "show_if": "options.output_format=='file_list' || options.is_cloud_dir=='true'",
        "repeat": true,
        "fields": {
          "github__link_directory": {
            "type": "text",
            "label": "Enter link e.g. https://github.com/zippydoc/test",
            "show_if": "options.webservice=='github'",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "one_drive__dir_path": {
            "type": "text",
            "label": "Enter path to dir e.g. ZippyDoc/Subdir1",
            "show_if": "options.webservice=='ms_one_drive'",
            "width": "100%",
            "breakLine": true
          },
          "dropbox__dir_path": {
            "type": "text",
            "label": "Enter path to dir e.g. ZippyDoc/Subdir1",
            "show_if": "options.webservice=='dropbox'",
            "width": "100%",
            "breakLine": true
          },
          "google_drive__dir_path": {
            "type": "text",
            "label": "Enter path to dir",
            "show_if": "options.webservice=='google_drive'",
            "width": "100%",
            "breakLine": true
          },
          "dir_filter__filter_type": {
            "type": "select",
            "label": "Filter Type",
            "options": {
              "all": {
                "label": "All"
              },
              "contains": {
                "label": "Contains"
              },
              "starts_with": {
                "label": "Starts With"
              },
              "ends_with": {
                "label": "Ends With"
              },
              "regex": {
                "label": "Regular Expression"
              }
            },
            "val": "all",
            "required": true
          },
          "dir_filter__filter_string": {
            "type": "text",
            "label": "Filter",
            "show_if": "this.dir_filter__filter_type!='all'",
            "required": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.is_github_private": {
        "type": "checkbox",
        "label": "Github repository is private",
        "show_if": "options.webservice=='github'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "options.github_token": {
        "type": "text",
        "label": "Github personal access token",
        "show_if": "options.webservice=='github' && options.is_github_private=='true'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox.auth_code": {
        "type": "text",
        "label": "Dropbox Authorization Code",
        "show_if": "options.webservice=='dropbox'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.google_drive.access_token": {
        "type": "text",
        "label": "Google Drive Access Token",
        "show_if": "options.webservice=='google_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      }
    }
  }
}
,
"/DCDemographicsOptions.json/DCDemographicsOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.all_countries": {
        "type": "hidden",
        "val": "false"
      },
      "options.stat_vars": {
        "type": "fieldset",
        "label": "Statistics data category(s)",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "repeat": true,
        "fields": {
          "stat_var_name": {
            "type": "select",
            "label": "Statistics Data",
            "required": true,
            "options": {
              "Count_Person": {
                "label": "Population"
              },
              "GrowthRate_Count_Person": {
                "label": "Population Growth Rate"
              },
              "Count_Person_PerArea": {
                "label": "Population Density"
              },
              "Count_Person_IsInternetUser_PerCapita": {
                "label": "Percent of Internet Users"
              },
              "Count_Person_ResidingLessThan5MetersAboveSeaLevel_AsFractionOf_Count_Person": {
                "label": "Percent of Population Living in Areas Below 5 Meters Elevation"
              },
              "Count_Person_Rural": {
                "label": "Rural Population"
              },
              "Count_Person_Urban": {
                "label": "Urban Population"
              }
            }
          },
          "per_capita": {
            "type": "checkbox",
            "label": "Per capita",
            "show_if": "false",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "help_Count_Person_ResidingLessThan5MetersAboveSeaLevel_AsFractionOf_Count_Person": {
            "type": "textarea",
            "label": "",
            "show_if": "this.stat_var_name=='Count_Person_ResidingLessThan5MetersAboveSeaLevel_AsFractionOf_Count_Person'",
            "val": "Percentage of the total population living in areas where the elevation is 5 meters or less. Center for International Earth Science Information Network (CIESIN)/Columbia University. 2013. Urban-Rural Population and Land Area Estimates Version 2. Palisades, NY: NASA Socioeconomic Data and Applications Center (SEDAC). http://sedac.ciesin.columbia.edu/data/set/lecz-urban-rural-population-land-area-estimates-v2.",
            "md_no_resize": false,
            "rows": 6,
            "disabled": true,
            "width": "100%"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.output_as_chart": {
        "type": "checkbox",
        "label": "Output a Graph",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
}
,
"/FormattingOptions.json/FormattingOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "all_columns": {
        "type": "checkbox",
        "label": "All Columns",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-right: 15px"
      },
      "all_column.format__category": {
        "type": "select",
        "label": "Display Format",
        "required": true,
        "options": {
          "standard": {
            "label": "Standard"
          },
          "number": {
            "label": "Number"
          },
          "percentage": {
            "label": "Percentage"
          },
          "text": {
            "label": "Text"
          },
          "date": {
            "label": "Date"
          },
          "currency": {
            "label": "Currency"
          }
        },
        "val": "standard",
        "show_if": "all_columns=='true'"
      },
      "all_column.format__rounding": {
        "type": "select",
        "label": "Decimal Places for display",
        "show_if": "all_columns=='true' && (all_column.format__category=='number' || all_column.format__category=='percentage' || all_column.format__category=='currency')",
        "required": true,
        "options": {
          "no_rounding": {
            "label": "No rounding"
          },
          "0": {
            "label": "0 digits"
          },
          "1": {
            "label": "1 digits"
          },
          "2": {
            "label": "2 digits"
          },
          "3": {
            "label": "3 digits"
          },
          "4": {
            "label": "4 digits"
          },
          "5": {
            "label": "5 digits"
          },
          "6": {
            "label": "6 digits"
          },
          "7": {
            "label": "7 digits"
          },
          "8": {
            "label": "8 digits"
          },
          "9": {
            "label": "9 digits"
          }
        },
        "val": "2"
      },
      "all_column.format__1000_separator": {
        "type": "select",
        "label": "1000 Separator",
        "show_if": "all_columns=='true' && (all_column.format__category=='number' || all_column.format__category=='percentage' || all_column.format__category=='currency')",
        "required": true,
        "options": {
          "no_1000_separator": {
            "label": "No 1000 Separator"
          },
          "period_1000_separator": {
            "label": "1000 Separator (.)"
          },
          "comma_1000_separator": {
            "label": "1000 Separator (,)"
          }
        },
        "val": "period_1000_separator"
      },
      "all_column.format__currency_symbol": {
        "type": "select",
        "label": "Symbol",
        "show_if": "all_columns=='true' && all_column.format__category=='currency'",
        "required": true,
        "options": {
          "dollar": {
            "label": "$"
          },
          "euro": {
            "label": "€"
          },
          "pound": {
            "label": "£"
          },
          "yen": {
            "label": "¥ (Yen, currency of Japan)"
          },
          "colon": {
            "label": "₡ (Colón, currency of Costa Rica)"
          },
          "naira": {
            "label": "₦ (Naira, currency of Nigeria)"
          },
          "rupee": {
            "label": "₨ (Rupee, currency of India)"
          },
          "rupie": {
            "label": "₹ (Rupee, currency of India)"
          },
          "won": {
            "label": "₩ (Won, currency in South Korea and North Korea)"
          },
          "hebrew": {
            "label": "₪ (Currency of Israel)"
          },
          "dong": {
            "label": "₫ (Currency of Vietnam)"
          },
          "kip": {
            "label": "₭ (Kip, currency of Laos)"
          },
          "mongolia": {
            "label": "₮ (Currency of Mongolia)"
          },
          "peso": {
            "label": "₱ (Peso, currency of the Philippines)"
          },
          "guarani": {
            "label": "₲ (Guaraní, currency of Paraguay)"
          },
          "hryvnia": {
            "label": "₴ (Hryvnia, currency of Ukraine)"
          },
          "tenge": {
            "label": "₸ (Tenge, currency of Kazakhstan)"
          },
          "lira": {
            "label": "₺ (Lira, currency of Turkey)"
          },
          "manat": {
            "label": "₼ (Manat, currency of Azerbaijan)"
          },
          "rubles": {
            "label": "₽ (Rubles, currency of Russia)"
          },
          "lari": {
            "label": "₾ (Lari, currency of Georgia)"
          },
          "bitcoin": {
            "label": "₿ (Bitcoin, crypto currency)"
          }
        },
        "val": "dollar"
      },
      "all_column.format__date_format": {
        "type": "select",
        "label": "Type",
        "show_if": "all_columns=='true' && all_column.format__category=='date'",
        "required": true,
        "options": {
          "mm/dd/yyyy": {
            "label": "3/14/2012"
          },
          "D, M dd, Y": {
            "label": "Wednesday, March 14, 2012"
          },
          "yyyy-mm-dd": {
            "label": "2012-03-14"
          }
        },
        "val": "mm/dd/yyyy",
        "breakLine": true
      },
      "reformat_columns": {
        "type": "checkbox",
        "label": "Formatting Columns",
        "show_if": "false",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "columns": {
        "type": "fieldset",
        "label": "Select Columns",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "all_columns!='true'",
        "repeat": true,
        "fields": {
          "field_names": {
            "type": "select",
            "label": "Select Column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true,
            "multiple": true
          },
          "format__category": {
            "type": "select",
            "label": "Display Format",
            "required": true,
            "options": {
              "standard": {
                "label": "Standard"
              },
              "number": {
                "label": "Number"
              },
              "percentage": {
                "label": "Percentage"
              },
              "text": {
                "label": "Text"
              },
              "date": {
                "label": "Date"
              },
              "currency": {
                "label": "Currency"
              }
            },
            "val": "standard"
          },
          "format__rounding": {
            "type": "select",
            "label": "Decimal Places for display",
            "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
            "required": true,
            "options": {
              "no_rounding": {
                "label": "No rounding"
              },
              "0": {
                "label": "0 digits"
              },
              "1": {
                "label": "1 digits"
              },
              "2": {
                "label": "2 digits"
              },
              "3": {
                "label": "3 digits"
              },
              "4": {
                "label": "4 digits"
              },
              "5": {
                "label": "5 digits"
              },
              "6": {
                "label": "6 digits"
              },
              "7": {
                "label": "7 digits"
              },
              "8": {
                "label": "8 digits"
              },
              "9": {
                "label": "9 digits"
              }
            },
            "val": "2"
          },
          "format__1000_separator": {
            "type": "select",
            "label": "1000 Separator",
            "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
            "required": true,
            "options": {
              "no_1000_separator": {
                "label": "No 1000 Separator"
              },
              "period_1000_separator": {
                "label": "1000 Separator (.)"
              },
              "comma_1000_separator": {
                "label": "1000 Separator (,)"
              }
            },
            "val": "period_1000_separator"
          },
          "format__currency_symbol": {
            "type": "select",
            "label": "Symbol",
            "show_if": "this.format__category=='currency'",
            "required": true,
            "options": {
              "dollar": {
                "label": "$"
              },
              "euro": {
                "label": "€"
              },
              "pound": {
                "label": "£"
              },
              "yen": {
                "label": "¥ (Yen, currency of Japan)"
              },
              "colon": {
                "label": "₡ (Colón, currency of Costa Rica)"
              },
              "naira": {
                "label": "₦ (Naira, currency of Nigeria)"
              },
              "rupee": {
                "label": "₨ (Rupee, currency of India)"
              },
              "rupie": {
                "label": "₹ (Rupee, currency of India)"
              },
              "won": {
                "label": "₩ (Won, currency in South Korea and North Korea)"
              },
              "hebrew": {
                "label": "₪ (Currency of Israel)"
              },
              "dong": {
                "label": "₫ (Currency of Vietnam)"
              },
              "kip": {
                "label": "₭ (Kip, currency of Laos)"
              },
              "mongolia": {
                "label": "₮ (Currency of Mongolia)"
              },
              "peso": {
                "label": "₱ (Peso, currency of the Philippines)"
              },
              "guarani": {
                "label": "₲ (Guaraní, currency of Paraguay)"
              },
              "hryvnia": {
                "label": "₴ (Hryvnia, currency of Ukraine)"
              },
              "tenge": {
                "label": "₸ (Tenge, currency of Kazakhstan)"
              },
              "lira": {
                "label": "₺ (Lira, currency of Turkey)"
              },
              "manat": {
                "label": "₼ (Manat, currency of Azerbaijan)"
              },
              "rubles": {
                "label": "₽ (Rubles, currency of Russia)"
              },
              "lari": {
                "label": "₾ (Lari, currency of Georgia)"
              },
              "bitcoin": {
                "label": "₿ (Bitcoin, crypto currency)"
              }
            },
            "val": "dollar"
          },
          "format__date_format": {
            "type": "select",
            "label": "Type",
            "show_if": "this.format__category=='date'",
            "required": true,
            "options": {
              "mm/dd/yyyy": {
                "label": "3/14/2012"
              },
              "D, M dd, Y": {
                "label": "Wednesday, March 14, 2012"
              },
              "yyyy-mm-dd": {
                "label": "2012-03-14"
              },
              "m.dd.yyyy": {
                "label": "3.14.2012"
              },
              "m.dd.yy": {
                "label": "3.14.12"
              },
              "dd.m.yyyy": {
                "label": "14.3.2012"
              },
              "dd.m.yy": {
                "label": "14.3.12"
              },
              "M dd, Y": {
                "label": "March 14, 2012"
              },
              "dd-mm-yyyy": {
                "label": "14-03-2012"
              },
              "mm-dd-yyyy": {
                "label": "03-14-2012"
              },
              "dd-mm-yy": {
                "label": "14-03-12"
              },
              "mm-dd-yy": {
                "label": "03-14-12"
              }
            },
            "val": "mm/dd/yyyy",
            "breakLine": true
          },
          "delete": {
            "show_if": "this.field_name != ''",
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        },
        "breakLine": true
      },
      "info1": {
        "type": "textarea",
        "label": "",
        "val": "Please note, that Excel will treat “.” and  “,” in accordance with country settings",
        "disabled": true,
        "style": "width: 100%"
      },
      "all_labels": {
        "type": "checkbox",
        "label": "All Labels",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "show_if": "$table_id.numOfLabel >= 1",
        "style": "margin-right: 15px"
      },
      "all_label.format__category": {
        "type": "select",
        "label": "Display Format",
        "required": true,
        "options": {
          "standard": {
            "label": "Standard"
          },
          "number": {
            "label": "Number"
          },
          "percentage": {
            "label": "Percentage"
          },
          "text": {
            "label": "Text"
          },
          "date": {
            "label": "Date"
          },
          "currency": {
            "label": "Currency"
          }
        },
        "val": "standard",
        "show_if": "all_labels=='true'"
      },
      "all_label.format__rounding": {
        "type": "select",
        "label": "Decimal Places for display",
        "show_if": "all_labels=='true' && (all_label.format__category=='number' || all_label.format__category=='percentage' || all_label.format__category=='currency')",
        "required": true,
        "options": {
          "no_rounding": {
            "label": "No rounding"
          },
          "0": {
            "label": "0 digits"
          },
          "1": {
            "label": "1 digits"
          },
          "2": {
            "label": "2 digits"
          },
          "3": {
            "label": "3 digits"
          },
          "4": {
            "label": "4 digits"
          },
          "5": {
            "label": "5 digits"
          },
          "6": {
            "label": "6 digits"
          },
          "7": {
            "label": "7 digits"
          },
          "8": {
            "label": "8 digits"
          },
          "9": {
            "label": "9 digits"
          }
        },
        "val": "2"
      },
      "all_label.format__1000_separator": {
        "type": "select",
        "label": "1000 Separator",
        "show_if": "all_labels=='true' && (all_label.format__category=='number' || all_label.format__category=='percentage' || all_label.format__category=='currency')",
        "required": true,
        "options": {
          "no_1000_separator": {
            "label": "No 1000 Separator"
          },
          "period_1000_separator": {
            "label": "1000 Separator (.)"
          },
          "comma_1000_separator": {
            "label": "1000 Separator (,)"
          }
        },
        "val": "period_1000_separator"
      },
      "all_label.format__currency_symbol": {
        "type": "select",
        "label": "Symbol",
        "show_if": "all_labels=='true' && all_label.format__category=='currency'",
        "required": true,
        "options": {
          "dollar": {
            "label": "$"
          },
          "euro": {
            "label": "€"
          },
          "pound": {
            "label": "£"
          },
          "yen": {
            "label": "¥ (Yen, currency of Japan)"
          },
          "colon": {
            "label": "₡ (Colón, currency of Costa Rica)"
          },
          "naira": {
            "label": "₦ (Naira, currency of Nigeria)"
          },
          "rupee": {
            "label": "₨ (Rupee, currency of India)"
          },
          "rupie": {
            "label": "₹ (Rupee, currency of India)"
          },
          "won": {
            "label": "₩ (Won, currency in South Korea and North Korea)"
          },
          "hebrew": {
            "label": "₪ (Currency of Israel)"
          },
          "dong": {
            "label": "₫ (Currency of Vietnam)"
          },
          "kip": {
            "label": "₭ (Kip, currency of Laos)"
          },
          "mongolia": {
            "label": "₮ (Currency of Mongolia)"
          },
          "peso": {
            "label": "₱ (Peso, currency of the Philippines)"
          },
          "guarani": {
            "label": "₲ (Guaraní, currency of Paraguay)"
          },
          "hryvnia": {
            "label": "₴ (Hryvnia, currency of Ukraine)"
          },
          "tenge": {
            "label": "₸ (Tenge, currency of Kazakhstan)"
          },
          "lira": {
            "label": "₺ (Lira, currency of Turkey)"
          },
          "manat": {
            "label": "₼ (Manat, currency of Azerbaijan)"
          },
          "rubles": {
            "label": "₽ (Rubles, currency of Russia)"
          },
          "lari": {
            "label": "₾ (Lari, currency of Georgia)"
          },
          "bitcoin": {
            "label": "₿ (Bitcoin, crypto currency)"
          }
        },
        "val": "dollar"
      },
      "all_label.format__date_format": {
        "type": "select",
        "label": "Type",
        "show_if": "all_labels=='true' && all_label.format__category=='date'",
        "required": true,
        "options": {
          "mm/dd/yyyy": {
            "label": "3/14/2012"
          },
          "D, M dd, Y": {
            "label": "Wednesday, March 14, 2012"
          },
          "yyyy-mm-dd": {
            "label": "2012-03-14"
          }
        },
        "val": "mm/dd/yyyy",
        "breakLine": true
      },
      "reformat_rows": {
        "type": "checkbox",
        "label": "Formatting Labels",
        "show_if": "false",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px"
      },
      "rows": {
        "type": "fieldset",
        "label": "Select Labels",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "all_labels!='true'",
        "repeat": true,
        "fields": {
          "label_names": {
            "type": "select",
            "label": "Select Label",
            "table": "table_id",
            "bind": "LABELS",
            "required": true,
            "multiple": true
          },
          "format__category": {
            "type": "select",
            "label": "Display Format",
            "required": true,
            "options": {
              "standard": {
                "label": "Standard"
              },
              "number": {
                "label": "Number"
              },
              "percentage": {
                "label": "Percentage"
              },
              "text": {
                "label": "Text"
              },
              "date": {
                "label": "Date"
              },
              "currency": {
                "label": "Currency"
              }
            },
            "val": "standard"
          },
          "format__rounding": {
            "type": "select",
            "label": "Decimal Places for display",
            "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
            "required": true,
            "options": {
              "no_rounding": {
                "label": "No rounding"
              },
              "0": {
                "label": "0 digits"
              },
              "1": {
                "label": "1 digits"
              },
              "2": {
                "label": "2 digits"
              },
              "3": {
                "label": "3 digits"
              },
              "4": {
                "label": "4 digits"
              },
              "5": {
                "label": "5 digits"
              },
              "6": {
                "label": "6 digits"
              },
              "7": {
                "label": "7 digits"
              },
              "8": {
                "label": "8 digits"
              },
              "9": {
                "label": "9 digits"
              }
            },
            "val": "2"
          },
          "format__1000_separator": {
            "type": "select",
            "label": "1000 Separator",
            "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
            "required": true,
            "options": {
              "no_1000_separator": {
                "label": "No 1000 Separator"
              },
              "period_1000_separator": {
                "label": "1000 Separator (.)"
              },
              "comma_1000_separator": {
                "label": "1000 Separator (,)"
              }
            },
            "val": "period_1000_separator"
          },
          "format__currency_symbol": {
            "type": "select",
            "label": "Symbol",
            "show_if": "this.format__category=='currency'",
            "required": true,
            "options": {
              "dollar": {
                "label": "$"
              },
              "euro": {
                "label": "€"
              },
              "pound": {
                "label": "£"
              },
              "yen": {
                "label": "¥ (Yen, currency of Japan)"
              },
              "colon": {
                "label": "₡ (Colón, currency of Costa Rica)"
              },
              "naira": {
                "label": "₦ (Naira, currency of Nigeria)"
              },
              "rupee": {
                "label": "₨ (Rupee, currency of India)"
              },
              "rupie": {
                "label": "₹ (Rupee, currency of India)"
              },
              "won": {
                "label": "₩ (Won, currency in South Korea and North Korea)"
              },
              "hebrew": {
                "label": "₪ (Currency of Israel)"
              },
              "dong": {
                "label": "₫ (Currency of Vietnam)"
              },
              "kip": {
                "label": "₭ (Kip, currency of Laos)"
              },
              "mongolia": {
                "label": "₮ (Currency of Mongolia)"
              },
              "peso": {
                "label": "₱ (Peso, currency of the Philippines)"
              },
              "guarani": {
                "label": "₲ (Guaraní, currency of Paraguay)"
              },
              "hryvnia": {
                "label": "₴ (Hryvnia, currency of Ukraine)"
              },
              "tenge": {
                "label": "₸ (Tenge, currency of Kazakhstan)"
              },
              "lira": {
                "label": "₺ (Lira, currency of Turkey)"
              },
              "manat": {
                "label": "₼ (Manat, currency of Azerbaijan)"
              },
              "rubles": {
                "label": "₽ (Rubles, currency of Russia)"
              },
              "lari": {
                "label": "₾ (Lari, currency of Georgia)"
              },
              "bitcoin": {
                "label": "₿ (Bitcoin, crypto currency)"
              }
            },
            "val": "dollar"
          },
          "format__date_format": {
            "type": "select",
            "label": "Type",
            "show_if": "this.format__category=='date'",
            "required": true,
            "options": {
              "mm/dd/yyyy": {
                "label": "3/14/2012"
              },
              "D, M dd, Y": {
                "label": "Wednesday, March 14, 2012"
              },
              "yyyy-mm-dd": {
                "label": "2012-03-14"
              }
            },
            "val": "mm/dd/yyyy",
            "breakLine": true
          },
          "delete": {
            "show_if": "this.label_name != ''",
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        },
        "breakLine": true
      },
      "create_new_table": {
        "type": "checkbox",
        "label": "Output as new table",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true,
        "style": "margin-top: 10px"
      }
    }
  }
}
,
"/CrosstabOptions.json/CrosstabOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "transpose_type": {
        "type": "hidden",
        "val": "crosstab"
      },
      "crosstab__group_data_by_these_values_frame": {
        "type": "fieldset",
        "label": "Select column(s) to apply",
        "style": "border: 1px solid #ccc",        
        "repeat": false,
        "fields": {
          "crosstab.group_data_by_these_values": {
            "type": "select",
            "label": "Group data by these values",
            "style": "float: left; width: 50%",
            "table": "table_id",
            "multiple": true,
            "bind": "COLUMNS"
          },
          "crosstab.group_data_by_these_values__all_but_selected": {
            "type": "checkbox",
            "label": "All but selected",
            "style": "float: right; width: 40%",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          }
        }
      },
      "crosstab.change_column_headers": {
        "type": "select",
        "label": "Change Column Header",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "crosstab.values_for_new_columns": {
        "type": "select",
        "label": "Values For New Columns",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "crosstab.method_for_aggregating_values": {
        "type": "select",
        "label": "Method for Aggregating Values",
        "options": {
          "Concatenate": {
            "label": "Concatenate"
          },
          "First": {
            "label": "First"
          },
          "Last": {
            "label": "Last"
          },
          "Sum": {
            "label": "Sum"
          },
          "Average": {
            "label": "Average"
          },
          "Count": {
            "label": "Count"
          },
          "User Defined": {
            "label": "User Defined"
          }
        },
        "val": "Concatenate",
        "required": true
      },
      "crosstab.user_defined_str": {
        "type": "text",
        "label": "User Defined Value",
        "show_if": "crosstab.method_for_aggregating_values=='User Defined'",
        "val": "x",
        "trim": "false",
        "breakLine": true
      },
      "crosstab.separator": {
        "type": "text",
        "label": "Separator",
        "show_if": "method_for_aggregating_values=='Concatenate'",
        "val": ",",
        "trim": "false",
        "required": true,
        "breakLine": true
      }
    }
  }
}
,
"/RunByParameterOptions.json/RunByParameterOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.input_type": {
        "type": "select",
        "label": "Input Type",
        "required": true,
        "options": {
          "input_by_menu": {
            "label": "Input by Menu"
          },
          "input_by_table": {
            "label": "Input by Table"
          }
        },
        "val": "input_by_menu",
        "breakLine": true
      },
      "options.parameters": {
        "type": "fieldset",
        "label": "Configure task parameters",
        "show_if": "options.input_type=='input_by_menu'",
        "repeat": true,
        "fields": {
          "input_task": {
            "type": "select",
            "label": "Select Task",
            "bind": "TASKS",
            "empty": "",
            "required": true
          },
          "field_name": {
            "type": "text",
            "label": "Nesting Structure",
            "val": ""
          },
          "field_value": {
            "type": "text",
            "label": "Value",
            "val": ""
          },
          "replace_next_row_parameter_prior_to_run": {
            "type": "checkbox",
            "label": "Replace next row parameter prior to run",
            "val": "false",
            "isOn": "true",
            "isOff": "false"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.table_id": {
        "type": "select",
        "label": "Select Table",
        "show_if": "options.input_type=='input_by_table'",
        "bind": "TABLES",
        "empty": "",
        "required": true,
        "breakLine": true
      },
      "options.table_help": {
        "type": "textarea",
        "label": "",
        "show_if": "options.input_type=='input_by_table'",
        "val": "Table Structure ( Flow Name(optional) | Task Name | Nesting Structure | Value | Next rows simultaneous replace(optional) )",
        "disabled": true,
        "md_no_resize": false,
        "width": "100%"
      },
      "options.output_type": {
        "type": "select",
        "label": "Output Type",
        "required": true,
        "options": {
          "standard_output": {
            "label": "Standard Output"
          },
          "unify_output_tables": {
            "label": "Unify Output Tables"
          },
          "task_by_task_output": {
            "label": "Task by Task Output"
          }
        },
        "val": "standard_output",
        "breakLine": true
      },
      "output.output_and_setting": {
        "type": "hidden",
        "val": "true"
      }
    }
  }
}
,
"/RunAllOptions.json/RunAllOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "input_table_options": {
        "type": "fieldset",
        "label": "Specify Input Tables",
        "breakLine": true,
        "repeat": false,
        "fields": {
          "options.select_type": {
            "type": "select",
            "label": "Select Type",
            "required": true,
            "options": {
              "table_selection": {
                "label": "Table Selection"
              },
              "select_by_pattern": {
                "label": "Select by Pattern"
              }
            },
            "val": "table_selection"
          },
          "options.table_ids": {
            "type": "select",
            "label": "Select Tables",
            "bind": "TABLES",
            "empty": "",
            "multiple": true,
            "show_if": "options.select_type=='table_selection'",
            "required": true
          },
          "options.filter_params": {
            "type": "fieldset",
            "label": "Match tables",
            "show_if": "options.select_type=='select_by_pattern'",
            "breakLine": true,
            "repeat": true,
            "fields": {
              "keyword": {
                "type": "text",
                "label": "Enter Keyword",
                "required": true,
                "val": ""
              },
              "filter_target": {
                "type": "select",
                "label": "Filter on",
                "required": true,
                "options": {
                  "table_name": {
                    "label": "Table Name"
                  },
                  "table_tag": {
                    "label": "Table Tag"
                  }
                },
                "val": "table_name"
              },
              "filter_type": {
                "type": "select",
                "label": "Filter type",
                "required": true,
                "options": {
                  "equal": {
                    "label": "Equal"
                  },
                  "contain": {
                    "label": "Contains"
                  },
                  "start_with": {
                    "label": "Starts With"
                  },
                  "end_with": {
                    "label": "Ends With"
                  },
                  "regex": {
                    "label": "Regular Expression"
                  }
                },
                "val": "equal"
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.use_waiting_time": {
            "type": "checkbox",
            "label": "Add waiting time",
            "val": "false",
            "isOn": "true",
            "isOff": "false"
          },
          "options.waiting_period": {
            "type": "number",
            "label": "Waiting time (sec)",
            "val": 0,
            "show_if": "options.use_waiting_time!='false'"
          }
        }
      },
      "task_chain": {
        "type": "checkbox",
        "label": "Task Chain",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "schedule_options": {
        "type": "fieldset",
        "label": "Tasks to schedule",
        "show_if": "task_chain == 'true'",
        "repeat": true,
        "fields": {
          "input_task": {
            "type": "select",
            "label": "Select Task",
            "bind": "TASKS",
            "empty": "",
            "required": true
          },
          "waiting_time": {
            "type": "number",
            "label": "Waiting time (sec)",
            "val": 0,
            "required": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        },
        "breakLine": true
      },
      "unify_output_tables": {
        "type": "checkbox",
        "label": "Unify output tables",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
}
,
"/FlexmonsterOptions.json/FlexmonsterOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "show_if": "options.configure_manual=='true'",
    "repeat": false,
    "fields": {
      "options.type": {
        "type": "hidden",
        "val": "grid"
      },
      "options.add_column_cols": {
        "type": "hidden",
        "val": "true"
      },
      "options.column_cols": {
        "type": "fieldset",
        "label": "Column column(s)",
        "repeat": true,
        "fields": {
          "column_col": {
            "type": "select",
            "label": "Column column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "is_date": {
            "type": "checkbox",
            "label": "Is Date",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.row_cols": {
        "type": "fieldset",
        "label": "Row column(s)",
        "repeat": true,
        "fields": {
          "row_col": {
            "type": "select",
            "label": "Row column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "is_date": {
            "type": "checkbox",
            "label": "Is Date",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.custom_number_format": {
        "type": "checkbox",
        "label": "Custom Value Formatting for all Values",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "default_number_format_frame": {
        "type": "fieldset",
        "label": "Custom Value Formatting",
        "show_if": "options.custom_number_format=='true'",
        "repeat": false,
        "fields": {
          "options.default_format.textAlign": {
            "type": "select",
            "label": "Text Align",
            "options": {
              "right": {
                "label": "Right"
              },
              "left": {
                "label": "Left"
              },
              "center": {
                "label": "Center"
              }
            },
            "val": "right",
            "required": true
          },
          "options.default_format.thousandsSeparator": {
            "type": "select",
            "label": "Thousands Separator",
            "options": {
              "(Space)": {
                "label": "(Space)"
              },
              ",": {
                "label": ","
              },
              ".": {
                "label": "."
              }
            },
            "val": "(Space)",
            "required": true
          },
          "options.default_format.decimalSeparator": {
            "type": "select",
            "label": "Decimal Separator",
            "options": {
              ",": {
                "label": ","
              },
              ".": {
                "label": "."
              }
            },
            "val": ",",
            "required": true
          },
          "options.default_format.decimalPlaces": {
            "type": "select",
            "label": "Decimal Places",
            "options": {
              "-1": {
                "label": "None"
              },
              "0": {
                "label": "0"
              },
              "1": {
                "label": "1"
              },
              "2": {
                "label": "2"
              },
              "3": {
                "label": "3"
              },
              "4": {
                "label": "4"
              },
              "5": {
                "label": "5"
              },
              "6": {
                "label": "6"
              },
              "7": {
                "label": "7"
              },
              "8": {
                "label": "8"
              },
              "9": {
                "label": "9"
              }
            },
            "val": "2",
            "required": true
          },
          "options.default_format.currencySymbol": {
            "type": "text",
            "label": "Currency Symbol",
            "val": ""
          },
          "options.default_format.negativeNumberFormat": {
            "type": "select",
            "label": "Negative Number Format",
            "options": {
              "-1": {
                "label": "-1"
              },
              "- 1": {
                "label": "- 1"
              },
              "1-": {
                "label": "1-"
              },
              "1 -": {
                "label": "1 -"
              }
            },
            "val": "-1",
            "required": true
          },
          "options.default_format.nullValue": {
            "type": "text",
            "label": "Null Value",
            "val": ""
          },
          "options.default_format.isPercent": {
            "type": "select",
            "label": "Format as Percent",
            "show_if": "false",
            "options": {
              "false": {
                "label": "False"
              },
              "true": {
                "label": "True"
              }
            },
            "val": "false",
            "required": true
          }
        }
      },
      "options.use_conditional_format": {
        "type": "checkbox",
        "label": "Conditional Formatting for all values",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px"
      },
      "conditional_format_frame": {
        "type": "fieldset",
        "label": "Conditional Formatting for all values",
        "show_if": "options.use_conditional_format=='true'",
        "repeat": false,
        "fields": {
          "options.conditional_format.op": {
            "type": "select",
            "label": "Operator",
            "options": {
              "<": {
                "label": "Less than"
              },
              "<=": {
                "label": "Less than or equal to"
              },
              ">": {
                "label": "Greater than"
              },
              ">=": {
                "label": "Greater than or equal to"
              },
              "==": {
                "label": "Equal to"
              },
              "!=": {
                "label": "Not equal to"
              },
              "between": {
                "label": "Between"
              }
            },
            "val": ">",
            "required": true
          },
          "options.conditional_format.value": {
            "type": "text",
            "label": "Value",
            "show_if": "options.conditional_format.op=='<' || options.conditional_format.op=='<=' || options.conditional_format.op=='>' || options.conditional_format.op=='>=' || options.conditional_format.op=='==' || options.conditional_format.op=='!=' || options.conditional_format.op=='between'",
            "val": "0"
          },
          "options.conditional_format.value2": {
            "type": "text",
            "label": "Value",
            "show_if": "options.conditional_format.op=='between'",
            "val": "100",
            "breakLine": true
          },
          "options.conditional_format.fontFamily": {
            "type": "select",
            "label": "Font Family",
            "options": {
              "Arial": {
                "label": "Arial"
              },
              "Lucida Sans Unicode": {
                "label": "Lucida Sans Unicode"
              },
              "Verdana": {
                "label": "Verdana"
              },
              "Courier New": {
                "label": "Courier New"
              },
              "Palatino Linotype": {
                "label": "Palatino Linotype"
              },
              "Tahoma": {
                "label": "Tahoma"
              },
              "Impact": {
                "label": "Impact"
              },
              "Trebuchet MS": {
                "label": "Trebuchet MS"
              },
              "Georgia": {
                "label": "Georgia"
              },
              "Times New Roman": {
                "label": "Times New Roman"
              }
            },
            "val": "Arial",
            "required": true
          },
          "options.conditional_format.fontSize": {
            "type": "select",
            "label": "Font Size",
            "options": {
              "8px": {
                "label": "8px"
              },
              "9px": {
                "label": "9px"
              },
              "10px": {
                "label": "10px"
              },
              "11px": {
                "label": "11px"
              },
              "12px": {
                "label": "12px"
              },
              "13px": {
                "label": "13px"
              }
            },
            "val": "12px",
            "required": true
          },
          "options.conditional_format.color": {
            "type": "select",
            "label": "Color",
            "options": {
              "000000": {
                "label": "Black"
              },
              "FFFFFF": {
                "label": "White"
              },
              "F44336": {
                "label": "Red"
              },
              "FFEB3B": {
                "label": "Yellow"
              },
              "8BC34A": {
                "label": "Green"
              },
              "03A9F4": {
                "label": "Blue"
              },
              "custom": {
                "label": "Custom"
              }
            },
            "val": "F44336",
            "required": true
          },
          "options.conditional_format.custom_color": {
            "type": "text",
            "label": "Custom Color",
            "show_if": "options.conditional_format.color=='custom'",
            "placeholder": "3F51B5",
            "val": "",
            "breakLine": true
          },
          "options.conditional_format.backgroundColor": {
            "type": "select",
            "label": "Background Color",
            "options": {
              "000000": {
                "label": "Black"
              },
              "FFFFFF": {
                "label": "White"
              },
              "F44336": {
                "label": "Red"
              },
              "FFEB3B": {
                "label": "Yellow"
              },
              "8BC34A": {
                "label": "Green"
              },
              "03A9F4": {
                "label": "Blue"
              },
              "custom": {
                "label": "Custom"
              }
            },
            "val": "FFFFFF",
            "required": true
          },
          "options.conditional_format.custom_background_color": {
            "type": "text",
            "label": "Custom Background Color",
            "show_if": "options.conditional_format.backgroundColor=='custom'",
            "placeholder": "FFFFFF",
            "val": "",
            "breakLine": true
          }
        }
      },
      "options.measure_cols": {
        "type": "fieldset",
        "label": "Values",
        "repeat": true,
        "fields": {
          "measure_col": {
            "type": "select",
            "label": "Value Column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "aggregation": {
            "type": "select",
            "label": "Aggregation Function",
            "options": {
              "sum": {
                "label": "Sum"
              },
              "count": {
                "label": "Count"
              },
              "distinctcount": {
                "label": "Distinct Count"
              },
              "average": {
                "label": "Average"
              },
              "median": {
                "label": "Median"
              },
              "product": {
                "label": "Product"
              },
              "min": {
                "label": "Min"
              },
              "max": {
                "label": "Max"
              },
              "stdevp": {
                "label": "Population Standard Deviation"
              },
              "stdevs": {
                "label": "Sample Standard Deviation"
              },
              "percent": {
                "label": "Percent"
              }
            },
            "val": "sum",
            "required": true,
            "breakLine": true
          },
          "custom_format": {
            "type": "checkbox",
            "label": "Custom Value Formatting for this Value",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "custom_format_textAlign": {
            "type": "select",
            "label": "Text Align",
            "show_if": "this.custom_format=='true'",
            "options": {
              "right": {
                "label": "Right"
              },
              "left": {
                "label": "Left"
              },
              "center": {
                "label": "Center"
              }
            },
            "val": "right",
            "required": true
          },
          "custom_format_thousandsSeparator": {
            "type": "select",
            "label": "Thousands Separator",
            "show_if": "this.custom_format=='true'",
            "options": {
              "(Space)": {
                "label": "(Space)"
              },
              ",": {
                "label": ","
              },
              ".": {
                "label": "."
              }
            },
            "val": "(Space)",
            "required": true
          },
          "custom_format_decimalSeparator": {
            "type": "select",
            "label": "Decimal Separator",
            "show_if": "this.custom_format=='true'",
            "options": {
              ",": {
                "label": ","
              },
              ".": {
                "label": "."
              }
            },
            "val": ",",
            "required": true
          },
          "custom_format_decimalPlaces": {
            "type": "select",
            "label": "Decimal Places",
            "show_if": "this.custom_format=='true'",
            "options": {
              "-1": {
                "label": "None"
              },
              "0": {
                "label": "0"
              },
              "1": {
                "label": "1"
              },
              "2": {
                "label": "2"
              },
              "3": {
                "label": "3"
              },
              "4": {
                "label": "4"
              },
              "5": {
                "label": "5"
              },
              "6": {
                "label": "6"
              },
              "7": {
                "label": "7"
              },
              "8": {
                "label": "8"
              },
              "9": {
                "label": "9"
              }
            },
            "val": "2",
            "required": true
          },
          "custom_format_currencySymbol": {
            "type": "text",
            "label": "Currency Symbol",
            "show_if": "this.custom_format=='true'",
            "val": ""
          },
          "custom_format_negativeNumberFormat": {
            "type": "select",
            "label": "Negative Number Format",
            "show_if": "this.custom_format=='true'",
            "options": {
              "-1": {
                "label": "-1"
              },
              "- 1": {
                "label": "- 1"
              },
              "1-": {
                "label": "1-"
              },
              "1 -": {
                "label": "1 -"
              }
            },
            "val": "-1",
            "required": true
          },
          "custom_format_nullValue": {
            "type": "text",
            "label": "Null Value",
            "show_if": "this.custom_format=='true'",
            "val": ""
          },
          "custom_format_isPercent": {
            "type": "select",
            "label": "Format as Percent",
            "show_if": "false",
            "options": {
              "false": {
                "label": "False"
              },
              "true": {
                "label": "True"
              }
            },
            "val": "false",
            "required": true,
            "breakLine": true
          },
          "use_conditional_format": {
            "type": "checkbox",
            "label": "Conditional Formatting for this Value",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "op": {
            "type": "select",
            "label": "Operator",
            "show_if": "this.use_conditional_format=='true'",
            "options": {
              "<": {
                "label": "Less than"
              },
              "<=": {
                "label": "Less than or equal to"
              },
              ">": {
                "label": "Greater than"
              },
              ">=": {
                "label": "Greater than or equal to"
              },
              "==": {
                "label": "Equal to"
              },
              "!=": {
                "label": "Not equal to"
              },
              "between": {
                "label": "Between"
              }
            },
            "val": ">",
            "required": true
          },
          "value": {
            "type": "text",
            "label": "Value",
            "show_if": "this.use_conditional_format=='true' && (this.op=='<' || this.op=='<=' || this.op=='>' || this.op=='>=' || this.op=='==' || this.op=='!=' || this.op=='between')",
            "val": "0"
          },
          "value2": {
            "type": "text",
            "label": "Value",
            "show_if": "this.use_conditional_format=='true' && this.op=='between'",
            "val": "100",
            "breakLine": true
          },
          "fontFamily": {
            "type": "select",
            "label": "Font Family",
            "show_if": "this.use_conditional_format=='true'",
            "options": {
              "Arial": {
                "label": "Arial"
              },
              "Lucida Sans Unicode": {
                "label": "Lucida Sans Unicode"
              },
              "Verdana": {
                "label": "Verdana"
              },
              "Courier New": {
                "label": "Courier New"
              },
              "Palatino Linotype": {
                "label": "Palatino Linotype"
              },
              "Tahoma": {
                "label": "Tahoma"
              },
              "Impact": {
                "label": "Impact"
              },
              "Trebuchet MS": {
                "label": "Trebuchet MS"
              },
              "Georgia": {
                "label": "Georgia"
              },
              "Times New Roman": {
                "label": "Times New Roman"
              }
            },
            "val": "Arial",
            "required": true
          },
          "fontSize": {
            "type": "select",
            "label": "Font Size",
            "show_if": "this.use_conditional_format=='true'",
            "options": {
              "8px": {
                "label": "8px"
              },
              "9px": {
                "label": "9px"
              },
              "10px": {
                "label": "10px"
              },
              "11px": {
                "label": "11px"
              },
              "12px": {
                "label": "12px"
              },
              "13px": {
                "label": "13px"
              }
            },
            "val": "12px",
            "required": true
          },
          "color": {
            "type": "select",
            "label": "Color",
            "show_if": "this.use_conditional_format=='true'",
            "options": {
              "000000": {
                "label": "Black"
              },
              "FFFFFF": {
                "label": "White"
              },
              "F44336": {
                "label": "Red"
              },
              "FFEB3B": {
                "label": "Yellow"
              },
              "8BC34A": {
                "label": "Green"
              },
              "03A9F4": {
                "label": "Blue"
              },
              "custom": {
                "label": "Custom"
              }
            },
            "val": "FFEB3B",
            "required": true
          },
          "custom_color": {
            "type": "text",
            "label": "Custom Color",
            "show_if": "this.use_conditional_format=='true' && this.color=='custom'",
            "placeholder": "3F51B5",
            "val": "",
            "breakLine": true
          },
          "backgroundColor": {
            "type": "select",
            "label": "Background Color",
            "show_if": "this.use_conditional_format=='true'",
            "options": {
              "000000": {
                "label": "Black"
              },
              "FFFFFF": {
                "label": "White"
              },
              "F44336": {
                "label": "Red"
              },
              "FFEB3B": {
                "label": "Yellow"
              },
              "8BC34A": {
                "label": "Green"
              },
              "03A9F4": {
                "label": "Blue"
              },
              "custom": {
                "label": "Custom"
              }
            },
            "val": "FFFFFF",
            "required": true
          },
          "custom_background_color": {
            "type": "text",
            "label": "Custom Background Color",
            "show_if": "this.use_conditional_format=='true' && this.backgroundColor=='custom'",
            "placeholder": "FFFFFF",
            "val": "",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.add_filter": {
        "type": "checkbox",
        "label": "Add Filter Column(s)",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "options.filter": {
        "type": "fieldset",
        "label": "Filter Column(s)",
        "show_if": "options.add_filter=='true'",
        "repeat": true,
        "fields": {
          "filter_col": {
            "type": "select",
            "label": "Filter column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      }
    }
  }
}
,
"/DCClimateWorldDataYears2.json/DCClimateWorldDataYears2.json": {
  "options.sel_year2": {
    "type": "select",
    "label": "Select year",
    "show_if": "options.stat_var_name=='Max_Temperature_RCP45' || options.stat_var_name=='DifferenceAcrossModels_Max_Temperature_RCP45' || options.stat_var_name=='Min_Temperature_RCP45' || options.stat_var_name=='DifferenceAcrossModels_Min_Temperature_RCP45' || options.stat_var_name=='PrecipitationRate_RCP45' || options.stat_var_name=='DifferenceAcrossModels_PrecipitationRate_RCP45' || options.stat_var_name=='DifferenceRelativeToBaseDate2006_Max_Temperature_RCP45' || options.stat_var_name=='DifferenceRelativeToBaseDate2006_Min_Temperature_RCP45' || options.stat_var_name=='DifferenceRelativeToBaseDate2006_PrecipitationRate_RCP45' || options.stat_var_name=='Max_Temperature_RCP85' || options.stat_var_name=='DifferenceAcrossModels_Max_Temperature_RCP85' || options.stat_var_name=='Min_Temperature_RCP85' || options.stat_var_name=='DifferenceAcrossModels_Min_Temperature_RCP85' || options.stat_var_name=='PrecipitationRate_RCP85' || options.stat_var_name=='DifferenceAcrossModels_PrecipitationRate_RCP85' || options.stat_var_name=='DifferenceRelativeToBaseDate2006_Max_Temperature_RCP85' || options.stat_var_name=='DifferenceRelativeToBaseDate2006_Min_Temperature_RCP85' || options.stat_var_name=='DifferenceRelativeToBaseDate2006_PrecipitationRate_RCP85'",
    "required": true,
    "options": {
      "2006": {
        "label": "2006"
      },
      "2007": {
        "label": "2007"
      },
      "2008": {
        "label": "2008"
      },
      "2009": {
        "label": "2009"
      },
      "2010": {
        "label": "2010"
      },
      "2011": {
        "label": "2011"
      },
      "2012": {
        "label": "2012"
      },
      "2013": {
        "label": "2013"
      },
      "2014": {
        "label": "2014"
      },
      "2015": {
        "label": "2015"
      },
      "2016": {
        "label": "2016"
      },
      "2017": {
        "label": "2017"
      },
      "2018": {
        "label": "2018"
      },
      "2019": {
        "label": "2019"
      },
      "2020": {
        "label": "2020"
      },
      "2021": {
        "label": "2021"
      },
      "2022": {
        "label": "2022"
      },
      "2023": {
        "label": "2023"
      },
      "2024": {
        "label": "2024"
      },
      "2025": {
        "label": "2025"
      },
      "2026": {
        "label": "2026"
      },
      "2027": {
        "label": "2027"
      },
      "2028": {
        "label": "2028"
      },
      "2029": {
        "label": "2029"
      },
      "2030": {
        "label": "2030"
      },
      "2031": {
        "label": "2031"
      },
      "2032": {
        "label": "2032"
      },
      "2033": {
        "label": "2017"
      },
      "2034": {
        "label": "2034"
      },
      "2035": {
        "label": "2035"
      },
      "2036": {
        "label": "2036"
      },
      "2037": {
        "label": "2037"
      },
      "2038": {
        "label": "2038"
      },
      "2039": {
        "label": "2039"
      },
      "2040": {
        "label": "2040"
      },
      "2041": {
        "label": "2041"
      },
      "2042": {
        "label": "2042"
      },
      "2043": {
        "label": "2043"
      },
      "2044": {
        "label": "2044"
      },
      "2045": {
        "label": "2045"
      },
      "2046": {
        "label": "2046"
      },
      "2047": {
        "label": "2047"
      },
      "2048": {
        "label": "2048"
      },
      "2049": {
        "label": "2049"
      },
      "2050": {
        "label": "2050"
      },
      "2051": {
        "label": "2051"
      },
      "2052": {
        "label": "2052"
      },
      "2053": {
        "label": "2053"
      },
      "2054": {
        "label": "2054"
      },
      "2055": {
        "label": "2055"
      },
      "2056": {
        "label": "2056"
      },
      "2057": {
        "label": "2057"
      },
      "2058": {
        "label": "2058"
      },
      "2059": {
        "label": "2059"
      },
      "2060": {
        "label": "2060"
      },
      "2061": {
        "label": "2061"
      },
      "2062": {
        "label": "2062"
      },
      "2063": {
        "label": "2063"
      },
      "2064": {
        "label": "2064"
      },
      "2065": {
        "label": "2065"
      },
      "2066": {
        "label": "2066"
      },
      "2067": {
        "label": "2067"
      },
      "2068": {
        "label": "2068"
      },
      "2069": {
        "label": "2069"
      },
      "2070": {
        "label": "2070"
      },
      "2071": {
        "label": "2071"
      },
      "2072": {
        "label": "2072"
      },
      "2073": {
        "label": "2073"
      },
      "2074": {
        "label": "2074"
      },
      "2075": {
        "label": "2075"
      },
      "2076": {
        "label": "2076"
      },
      "2077": {
        "label": "2077"
      },
      "2078": {
        "label": "2078"
      },
      "2079": {
        "label": "2079"
      },
      "2080": {
        "label": "2080"
      },
      "2081": {
        "label": "2081"
      },
      "2082": {
        "label": "2082"
      },
      "2083": {
        "label": "2083"
      },
      "2084": {
        "label": "2084"
      },
      "2085": {
        "label": "2085"
      },
      "2086": {
        "label": "2086"
      },
      "2087": {
        "label": "2087"
      },
      "2088": {
        "label": "2088"
      },
      "2089": {
        "label": "2089"
      },
      "2090": {
        "label": "2090"
      },
      "2091": {
        "label": "2091"
      },
      "2092": {
        "label": "2092"
      },
      "2093": {
        "label": "2093"
      },
      "2094": {
        "label": "2094"
      },
      "2095": {
        "label": "2095"
      },
      "2096": {
        "label": "2096"
      },
      "2097": {
        "label": "2097"
      },
      "2098": {
        "label": "2098"
      },
      "2099": {
        "label": "2099"
      },
      "2100": {
        "label": "2100"
      }
    },
    "val": "2100",
    "breakLine": true
  }
},
"/EmailReadOptions.json/EmailReadOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "Select Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.task_type": {
        "type": "hidden",
        "val": "read_email"
      },
      "options.all_folders": {
        "type": "checkbox",
        "label": "Import all mail folders",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "options.read_folders": {
        "type": "select",
        "label": "Mail Folder(s) to import",
        "show_if": "options.all_folders=='false'",
        "required": true,
        "multiple": true,
        "options": {
          "Archive": {
            "label": "Archive"
          },
          "Conversation History": {
            "label": "Conversation History"
          },
          "Deleted Items": {
            "label": "Deleted Items"
          },
          "Drafts": {
            "label": "Drafts"
          },
          "Inbox": {
            "label": "Inbox"
          },
          "Junk Email": {
            "label": "Junk Email"
          },
          "Outbox": {
            "label": "Outbox"
          },
          "RSS Feeds": {
            "label": "RSS Feeds"
          },
          "Sent Items": {
            "label": "Sent Items"
          },
          "Sync Issues": {
            "label": "Sync Issues"
          }
        },
        "val": ["Inbox"],
        "breakLine": true
      },
      "options.all_columns": {
        "type": "checkbox",
        "label": "Import all columns",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "options.import_columns": {
        "type": "select",
        "label": "Columns to import",
        "show_if": "options.all_columns=='false'",
        "required": true,
        "multiple": true,
        "options": {
          "CreatedAt": {
            "label": "CreatedAt"
          },
          "ReceivedAt": {
            "label": "ReceivedAt"
          },
          "SentAt": {
            "label": "SentAt"
          },
          "Subject": {
            "label": "Subject"
          },
          "BodyPreview": {
            "label": "BodyPreview"
          },
          "From": {
            "label": "From"
          },
          "CC": {
            "label": "CC"
          },
          "BCC": {
            "label": "BCC"
          },
          "HasAttachments": {
            "label": "HasAttachments"
          },
          "IsRead": {
            "label": "IsRead"
          },
          "IsDraft": {
            "label": "IsDraft"
          },
          "WebLink": {
            "label": "WebLink"
          },
          "Body": {
            "label": "Body"
          }
        },
        "val": ["CreatedAt","Subject","BodyPreview","From","HasAttachments","WebLink"]
      },
      "info3": {
        "type": "text",
        "label": "",
        "val": "This task only supports users logged in via Microsoft Login",
        "disabled": true,
        "style": "width: 100%"
      }
    }
  }
},
"/AutofillOptions.json/AutofillOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "target_table.table_id": {
        "type": "select",
        "label": "Target Table",
        "bind": "TABLES",
        "required": true
      },
      "value_columns_frame": {
        "type": "fieldset",
        "label": "Select column(s) to apply",
        "repeat": false,
        "fields": {
          "options.value_columns__all_but_selected": {
            "type": "checkbox",
            "label": "All but selected",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.value_columns": {
            "type": "select",
            "label": "Value Columns",
            "table": "target_table.table_id",
            "bind": "COLUMNS",
            "multiple": true
          }
        }
      },
      "options.mapping_column": {
        "type": "select",
        "label": "Mapping Column",
        "table": "target_table.table_id",
        "bind": "COLUMNS",
        "breakLine": true
      },
      "options.autofill_empty_cells": {
        "type": "checkbox",
        "label": "Autofill Empty Cells",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "options.operation": {
        "type": "select",
        "label": "Operation",
        "show_if": "options.autofill_empty_cells=='false'",
        "required": true,
        "options": {
          "replace": {
            "label": "Replace Existing Content"
          },
          "add": {
            "label": "Add to Existing Content"
          },
          "average": {
            "label": "Build Average with Existing Content"
          }
        },
        "val": "replace",
        "breakLine": true
      },
      "options.use_filter": {
        "type": "checkbox",
        "label": "Use Filter",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "filter_box": {
        "type": "fieldset",
        "label": "Filter Options",
        "show_if": "options.use_filter=='true'",
        "repeat": false,
        "fields": {
          "options.filter": {
            "type": "fieldset",
            "label": "Add Filter Conditions",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "target_table.table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group",
            "show_if": "options.apply_to_record=='false'",
            "repeat": false,
            "fields": {
              "options.apply_to_group_columns__all_but_selected": {
                "type": "checkbox",
                "label": "All but selected",
                "val": "false",
                "isOn": "true",
                "isOff": "false",
                "breakLine": true
              },
              "options.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "width": "100%",
                "table": "target_table.table_id",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      }
    }
  }
}
,
"/ImportFileFromGithubOptions.json/ImportFileFromGithubOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.from": {
        "type": "hidden",
        "val": "web"
      },
      "options.webservice": {
        "type": "hidden",
        "val": "github"
      },
      "options.output_format": {
        "type": "select",
        "label": "Select Type",
        "options": {
          "csv_table": {
            "label": "CSV-Table"
          },
          "line_by_line": {
            "label": "Line by Line"
          },
          "word_by_word": {
            "label": "Text"
          },
          "JSON": {
            "label": "JSON"
          }
        },
        "val": "csv_table",
        "required": true
      },
      "options.word_pattern_type": {
        "type": "select",
        "label": "Word Pattern",
        "show_if": "options.output_format=='word_by_word' && options.specify_word_pattern=='true'",
        "options": {
          "regex": {
            "label": "Regular Expression"
          }
        },
        "val": "regex",
        "required": true
      },
      "options.word_pattern_regex": {
        "type": "text",
        "label": "Regular Expression",
        "show_if": "options.output_format=='word_by_word' && options.specify_word_pattern=='true' && options.word_pattern_type=='regex'",
        "required": true,
        "val": "[a-z][1-9]",
        "breakLine": true
      },
      "options.column_setting": {
        "type": "checkbox",
        "label": "Column Settings",
        "show_if": "options.output_format!='file_list'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "column_setting_frame": {
        "type": "fieldset",
        "label": "Column Settings",
        "show_if": "options.output_format!='file_list' && options.column_setting=='true'",
        "repeat": false,
        "fields": {
          "options.add_row_column": {
            "type": "checkbox",
            "label": "Add Row Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_word_count_column": {
            "type": "checkbox",
            "label": "Add 'Word Count' Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_word_nonword_column": {
            "type": "checkbox",
            "label": "Add 'Word & Non-Word' Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_section_column": {
            "type": "checkbox",
            "label": "Add Section Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "section_column_types_frame": {
            "type": "fieldset",
            "label": "Section Column Types",
            "show_if": "options.output_format=='word_by_word' && options.add_section_column=='true'",
            "repeat": false,
            "fields": {
              "options.section_columns.add_paragraph_section_column": {
                "type": "checkbox",
                "label": "Paragraph",
                "val": "false",
                "isOn": "true",
                "isOff": "false",
                "breakLine": true
              },
              "options.section_columns.add_custom_section_column": {
                "type": "checkbox",
                "label": "Custom Section Delimiter",
                "val": "false",
                "isOn": "true",
                "isOff": "false"
              },
              "options.section_columns.custom_delimiter": {
                "type": "text",
                "label": "Delimiter(1 character)",
                "show_if": "options.section_columns.add_custom_section_column=='true'",
                "maxLength": 1,
                "required": true,
                "breakLine": true
              },
              "options.section_columns.add_brackets_punctuation_section_column": {
                "type": "checkbox",
                "label": "Brackets and Punctuation",
                "val": "false",
                "isOn": "true",
                "isOff": "false"
              },
              "options.section_columns.brackets_punctuation_section_column_type": {
                "type": "select",
                "label": "Brackets Type",
                "show_if": "options.section_columns.add_brackets_punctuation_section_column=='true'",
                "options": {
                  "nesting_structure": {
                    "label": "Nesting Structure"
                  },
                  "inner_bracket": {
                    "label": "Inner Bracket"
                  },
                  "brackets_only": {
                    "label": "Brackets Only"
                  },
                  "show_all": {
                    "label": "Show All"
                  }
                },
                "val": "show_all",
                "required": true,
                "breakLine": true
              }
            }
          },
          "options.add_filename_column": {
            "type": "checkbox",
            "label": "Add Column for File Name",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "options.add_filepath_column": {
            "type": "checkbox",
            "label": "Add Column for File Path",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          }
        }
      },
      "options.is_cloud_dir": {
        "type": "hidden",
        "val": "false"
      },
      "if_dir_frame": {
        "type": "fieldset",
        "label": "Directory Import Options",
        "show_if": "options.output_format!='file_list' && options.is_cloud_dir=='true'",
        "repeat": false,
        "fields": {
          "options.unify_in_one_table": {
            "type": "checkbox",
            "label": "Unify in one table",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.suffix": {
            "type": "select",
            "label": "Output tables suffix",
            "show_if": "options.unify_in_one_table=='false'",
            "options": {
              "number": {
                "label": "Number"
              },
              "filename": {
                "label": "Filename"
              }
            },
            "val": "number",
            "required": true,
            "breakLine": true
          },
          "options.include_subdir": {
            "type": "checkbox",
            "label": "Include Subdirectories",
            "show_if": "options.output_format!='file_list' && options.is_cloud_dir=='true'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true,
            "style": "margin-top: 10px"
          }
        }
      },
      "options.file_list.include_subdir": {
        "type": "checkbox",
        "label": "Include Subdirectories",
        "show_if": "options.output_format=='file_list'",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true,
        "style": "margin-top: 10px"
      },
      "options.file_list.add_change_date_column": {
        "type": "checkbox",
        "label": "Add Change Date Column",
        "show_if": "options.output_format=='file_list'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  },
  "import_link_token_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px",
    "repeat": false,
    "fields": {
      "options.link_csv_file": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test/blob/main/example.csv",
        "show_if": "options.webservice=='github' && options.is_cloud_dir=='false' && options.output_format=='csv_table'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.link_text_file": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test/blob/main/example.txt(json, csv, etc)",
        "show_if": "options.webservice=='github' && options.is_cloud_dir=='false' && options.output_format!='csv_table' && options.output_format!='file_list'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.one_drive.file_path": {
        "type": "text",
        "label": "Enter path to file e.g. ZippyDoc/Subdir1/test.txt",
        "show_if": "options.webservice=='ms_one_drive' && options.output_format!='file_list' && options.is_cloud_dir=='false'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox.file_path": {
        "type": "text",
        "label": "Enter path to file e.g. ZippyDoc/Subdir1/test.txt",
        "show_if": "options.webservice=='dropbox' && options.output_format!='file_list' && options.is_cloud_dir=='false'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dir_path_filter": {
        "type": "fieldset",
        "label": "Import Path and File Filter",
        "show_if": "options.output_format=='file_list' || options.is_cloud_dir=='true'",
        "repeat": true,
        "fields": {
          "github__link_directory": {
            "type": "text",
            "label": "Enter link e.g. https://github.com/zippydoc/test",
            "show_if": "options.webservice=='github'",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "one_drive__dir_path": {
            "type": "text",
            "label": "Enter path to dir e.g. ZippyDoc/Subdir1",
            "show_if": "options.webservice=='ms_one_drive'",
            "width": "100%",
            "breakLine": true
          },
          "dropbox__dir_path": {
            "type": "text",
            "label": "Enter path to dir e.g. ZippyDoc/Subdir1",
            "show_if": "options.webservice=='dropbox'",
            "width": "100%",
            "breakLine": true
          },
          "google_drive__dir_path": {
            "type": "text",
            "label": "Enter path to dir",
            "show_if": "options.webservice=='google_drive'",
            "width": "100%",
            "breakLine": true
          },
          "dir_filter__filter_type": {
            "type": "select",
            "label": "Filter Type",
            "options": {
              "all": {
                "label": "All"
              },
              "contains": {
                "label": "Contains"
              },
              "starts_with": {
                "label": "Starts With"
              },
              "ends_with": {
                "label": "Ends With"
              },
              "regex": {
                "label": "Regular Expression"
              }
            },
            "val": "all",
            "required": true
          },
          "dir_filter__filter_string": {
            "type": "text",
            "label": "Filter",
            "show_if": "this.dir_filter__filter_type!='all'",
            "required": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.is_github_private": {
        "type": "checkbox",
        "label": "Github repository is private",
        "show_if": "options.webservice=='github'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "options.github_token": {
        "type": "text",
        "label": "Github personal access token",
        "show_if": "options.webservice=='github' && options.is_github_private=='true'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.one_drive.access_token": {
        "type": "text",
        "label": "One Drive Access Token",
        "show_if": "options.webservice=='ms_one_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox.auth_code": {
        "type": "text",
        "label": "Dropbox Authorization Code",
        "show_if": "options.webservice=='dropbox'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.google_drive.access_token": {
        "type": "text",
        "label": "Google Drive Access Token",
        "show_if": "options.webservice=='google_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      }
    }
  }
}
,
"/ConsolidateOptions.json/ConsolidateOptions.json": {
  "input": {
    "type": "fieldset",
    "label": "Consolidate Options",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": true,
    "fields": {
      "new_position": {
        "type": "text",
        "label": "New Position",
        "val": "",
        "placeholder": "Text",
        "required": true,
        "breakLine": true
      },
      "table_id": {
        "type": "select",
        "label": "Select Table",
        "bind": "TABLES",
        "empty": "",
        "required": true
      },
      "rows": {
        "type": "select",
        "label": "Row Selection",
        "required": true,
        "table": "this.table_id",
        "multiple": true,
        "bind": "LABELS"
      },
      "multiplier": {
        "type": "select",
        "label": "Multiplier",
        "required": true,
        "options": {
          "positive": {
            "label": "Keep sign"
          },
          "negative": {
            "label": "Switch sign"
          }
        },
        "val": "positive",
        "breakLine": true
      },
      "format__category": {
        "type": "select",
        "label": "Display Format",
        "required": true,
        "options": {
          "standard": {
            "label": "Standard"
          },
          "number": {
            "label": "Number"
          },
          "percentage": {
            "label": "Percentage"
          },
          "text": {
            "label": "Text"
          },
          "date": {
            "label": "Date"
          },
          "currency": {
            "label": "Currency"
          }
        },
        "val": "standard"
      },
      "format__rounding": {
        "type": "select",
        "label": "Decimal Places for display",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "required": true,
        "options": {
          "no_rounding": {
            "label": "No rounding"
          },
          "0": {
            "label": "0 digits"
          },
          "1": {
            "label": "1 digits"
          },
          "2": {
            "label": "2 digits"
          },
          "3": {
            "label": "3 digits"
          },
          "4": {
            "label": "4 digits"
          },
          "5": {
            "label": "5 digits"
          },
          "6": {
            "label": "6 digits"
          },
          "7": {
            "label": "7 digits"
          },
          "8": {
            "label": "8 digits"
          },
          "9": {
            "label": "9 digits"
          }
        },
        "val": "2"
      },
      "format__use_1000_separator": {
        "type": "checkbox",
        "label": "Use 1000 Separator(.)",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "format__currency_symbol": {
        "type": "select",
        "label": "Symbol",
        "show_if": "this.format__category=='currency'",
        "required": true,
        "options": {
          "dollar": {
            "label": "$"
          },
          "euro": {
            "label": "€"
          },
          "pound": {
            "label": "£"
          }
        },
        "val": "dollar"
      },
      "format__date_format": {
        "type": "select",
        "label": "Type",
        "show_if": "this.format__category=='date'",
        "required": true,
        "options": {
          "mm/dd/yyyy": {
            "label": "3/14/2012"
          },
          "D, M dd, Y": {
            "label": "Wednesday, March 14, 2012"
          },
          "yyyy-mm-dd": {
            "label": "2012-03-14"
          },
          "m.dd.yyyy": {
            "label": "3.14.2012"
          },
          "m.dd.yy": {
            "label": "3.14.12"
          },
          "dd.m.yyyy": {
            "label": "14.3.2012"
          },
          "dd.m.yy": {
            "label": "14.3.12"
          },
          "M dd, Y": {
            "label": "March 14, 2012"
          },
          "dd-mm-yyyy": {
            "label": "14-03-2012"
          },
          "mm-dd-yyyy": {
            "label": "03-14-2012"
          },
          "dd-mm-yy": {
            "label": "14-03-12"
          },
          "mm-dd-yy": {
            "label": "03-14-12"
          }
        },
        "val": "mm/dd/yyyy",
        "breakLine": true
      },
      "delete": {
        "type": "button",
        "label": "Delete",
        "function": "DELETE_ROW"
      }
    }
  }
},
"/ConvertOptions.json/ConvertOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.convert_direction": {
        "type": "radio",
        "label": "Convert Type",
        "required": true,
        "values": {
          "to_word_by_word": "Line by Line to Word by Word",
          "to_line_by_line": "Word by Word to Line by Line"
        },
        "val": "to_word_by_word",
        "breakLine": true
      }
    }
  }
}
,
"/ExportOptions.json/ExportOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.to": {
        "type": "select",
        "label": "Type",
        "options": {
          "database": {
            "label": "Export to database"
          },
          "file": {
            "label": "Export to file"
          }
        },
        "val": "database",
        "required": true
      },
      "options.export_series": {
        "type": "checkbox",
        "label": "Export Series",
        "show_if": "options.to=='file'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.file_name_column": {
        "type": "select",
        "label": "Select File Name Column",
        "show_if": "options.to=='file' && options.export_series=='true'",
        "table": "input_table",
        "bind": "COLUMNS",
        "required": true,
        "breakLine": true
      },
      "postgresql_db_credential_box": {
        "type": "fieldset",
        "label": "Database Connection Credentials",
        "show_if": "options.to=='database'",
        "repeat": false,
        "fields": {
          "options.dbms": {
            "type": "select",
            "label": "Select DBMS",
            "options": {
              "postgresql": {
                "label": "PostgreSQL"
              },
              "mysql": {
                "label": "MySQL"
              },
              "sql_server": {
                "label": "MS SQL Server"
              },
              "oracle": {
                "label": "Oracle"
              }
            },
            "val": "postgresql",
            "required": true,
            "breakLine": true
          },
          "options.postgresql_credential.user": {
            "type": "text",
            "label": "User",
            "show_if": "options.dbms=='postgresql'",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "options.postgresql_credential.password": {
            "type": "text",
            "label": "Password",
            "show_if": "options.dbms=='postgresql'",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "options.postgresql_credential.host": {
            "type": "text",
            "label": "Host",
            "show_if": "options.dbms=='postgresql'",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "options.postgresql_credential.database": {
            "type": "text",
            "label": "Database",
            "show_if": "options.dbms=='postgresql'",
            "required": true,
            "width": "100%",
            "breakLine": true
          }
        }
      },
      "options.schema_name_to_export": {
        "type": "text",
        "label": "Schema name to export into",
        "show_if": "options.to=='database' && options.dbms=='postgresql'",
        "required": true,
        "val": "public",
        "width": "100%",
        "breakLine": true
      },
      "options.webservice": {
        "type": "select",
        "label": "Select Webservice",
        "show_if": "options.to=='file' || options.to=='mytask'",
        "options": {
          "github": {
            "label": "Github"
          },
          "dropbox": {
            "label": "Dropbox"
          },
          "ms_one_drive": {
            "label": "Microsoft OneDrive"
          },
          "google_drive": {
            "label": "Google Drive"
          }
        },
        "val": "github",
        "required": true
      },
      "options.export_format": {
        "type": "select",
        "label": "Export Format",
        "show_if": "options.to=='file'",
        "options": {
          "csv_file": {
            "label": "Csv file(s)"
          },
          "word_by_word": {
            "label": "Word by Word"
          },
          "line_by_line": {
            "label": "Line by Line"
          }
        },
        "val": "csv_file",
        "required": true,
        "breakLine": true
      },
      "options.github_create_pr": {
        "type": "checkbox",
        "label": "Create pull request",
        "show_if": "options.to=='file' && options.webservice=='github'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.github_url": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test",
        "show_if": "options.to=='file' && options.webservice=='github'",
        "val": "https://github.com/zippydoc/public-tables",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.export_dir": {
        "type": "text",
        "label": "Enter dir e.g. /MyZippyDocFiles/SubDir/",
        "show_if": "options.to=='file' && options.webservice!='github'",
        "val": "/",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.github_token": {
        "type": "text",
        "label": "Specify the Github personal access token that has write permission:",
        "show_if": "options.to=='file' && options.webservice=='github'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.ms_one_drive_token": {
        "type": "text",
        "label": "Microsoft Graph API access token. You can get it here https://ms-oauth.herokuapp.com/",
        "show_if": "options.to=='file' && options.webservice=='ms_one_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.google_authorization_code": {
        "type": "text",
        "label": "Google OAuth Authorization Code with scope https://www.googleapis.com/auth/drive. You can get it here https://developers.google.com/oauthplayground/",
        "show_if": "options.to=='file' && options.webservice=='google_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox_authorization_code": {
        "type": "text",
        "label": "Dropbox Authorization Code. You can get it here https://www.dropbox.com/oauth2/authorize?client_id=9i7woztjp94jrkw&response_type=code",
        "show_if": "options.to=='file' && options.webservice=='dropbox'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.if_duplicated": {
        "type": "select",
        "label": "If duplicated",
        "show_if": "options.to=='database' || (options.to=='file' && options.webservice=='github')",
        "val": "drop_if_exist",
        "options": {
          "drop_if_exist": {
            "label": "Create or Drop (if already existing)"
          },
          "error_if_exist": {
            "label": "Create New (throw error if existing)"
          },
          "error_if_not_exist": {
            "label": "Drop (throw error if not-existing)"
          },
          "append": {
            "label": "Append"
          }
        }
      },
      "options.export_task_name": {
        "type": "text",
        "label": "Input Task Name",
        "show_if": "options.to=='mytask'",
        "required": true,
        "val": "Flow6_Task1_AddColumns",
        "width": "100%",
        "breakLine": true
      }
    }
  }
}
,
"/PlanningOptions.json/PlanningOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "Planning Type",
    "style": "border-radius: 3px; border: 1px solid #ccc;",
    "repeat": false,
    "fields": {
      "options.output_type": {
        "type": "select",
        "label": "Output Type",
        "required": true,
        "options": {
          "pdf_planning_package": {
            "label": "PDF Planning Package"
          },
          "interactive_drill_down": {
            "label": "Interactive Drill-Down"
          },
          "table_output": {
            "label": "Table Output"
          }
        },
        "val": "pdf_planning_package"
      },
      "options.where_to_create": {
        "type": "select",
        "label": "Where to create",
        "show_if": "options.output_type=='pdf_planning_package'",
        "options": {
          "only_open_in_browser": {
            "label": "Pop-Up PDF"
          },
          "only_export_to_cloud": {
            "label": "Export to OneDrive"
          }
        },
        "val": "only_open_in_browser",
        "required": true
      },
      "options.interactive_drill_down_type": {
        "type": "select",
        "label": "Drill-Down Type",
        "show_if": "options.output_type=='interactive_drill_down'",
        "required": true,
        "options": {
          "profit_loss": {
            "label": "Profit & Loss"
          },
          "cash_flow": {
            "label": "Cash Flow"
          },
          "balance_sheet": {
            "label": "Balance Sheet"
          }
        },
        "val": "profit_loss"
      },
      "options.table_output_type": {
        "type": "select",
        "label": "Table Output Type",
        "show_if": "options.output_type=='table_output'",
        "required": true,
        "options": {
          "planning_assumptions": {
            "label": "Planning Assumptions"
          },
          "transaction_list_details": {
            "label": "Transaction List Details"
          },
          "profit_loss": {
            "label": "Profit & Loss"
          },
          "cash_flow": {
            "label": "Cash Flow"
          },
          "balance_sheet_details": {
            "label": "Balance Sheet Details"
          },
          "bs_summary_list": {
            "label": "Balance Sheet Summary List"
          },
          "all_detail_tables": {
            "label": "All Detail Tables"
          }
        },
        "val": "planning_assumptions"
      },
      "options.planning_table__group_by": {
        "type": "select",
        "label": "Group By",
        "show_if": "options.output_type=='table_output' && (options.table_output_type=='profit_loss' || options.table_output_type=='cash_flow')",
        "multiple": true,
        "options": {
          "Year": {
            "label": "Year"
          },
          "Quarter": {
            "label": "Quarter"
          },
          "Month": {
            "label": "Month"
          },
          "Week": {
            "label": "Week"
          },
          "Day": {
            "label": "Day"
          },
          "Position": {
            "label": "Position"
          },
          "Sub Position": {
            "label": "Sub Position"
          },
          "Item": {
            "label": "Item"
          }
        },
        "val": ["Year", "Quarter", "Month", "Position"],
        "required": true,
        "breakLine": true
      }
    }
  },
  "export_link_frame": {
    "type": "fieldset",
    "label": "Export path in MS One Drive",
    "show_if": "options.output_type=='pdf_planning_package' && options.where_to_create=='only_export_to_cloud'",
    "repeat": false,
    "fields": {
      "options.export_dir": {
        "type": "text",
        "label": "Enter dir e.g. /MyZippyDocFiles/SubDir/",
        "val": "/",
        "width": "100%",
        "breakLine": true
      }
    }
  },
  "planing_position_frame": {
    "type": "fieldset",
    "label": "Configure planning position",
    "repeat": false,
    "fields": {
      "options.configure_by_table": {
        "type": "select",
        "label": "Configure planning position by",
        "required": true,
        "options": {
          "by_assumption_menu": {
            "label": "Configure planning by assumption menu"
          },
          "by_assumption_table": {
            "label": "Configure planning by assumption table"
          },
          "by_transaction_table": {
            "label": "Configure planning by transaction table"
          }
        },
        "val": "by_assumption_menu",
        "breakLine": true
      },
      "options.assumption_table_id": {
        "type": "select",
        "label": "Assumption Table",
        "show_if": "options.configure_by_table=='by_assumption_table'",
        "bind": "TABLES",
        "empty": "",
        "required": true,
        "breakLine": true
      },
      "options.configure_by_assumption_table_help": {
        "type": "textarea",
        "label": "",
        "show_if": "options.configure_by_table=='by_assumption_table'",
        "val": "Table Structure ( Position* | Sub Position | Item | Initial Date* | Repetition* | Final Date* | Amount* | Growth* | Growth Period* | Growth Curve* | Payment Days* )",
        "disabled": true,
        "md_no_resize": false,
        "width": "100%"
      },
      "options.transaction_list_details_table_id": {
        "type": "select",
        "label": "Transaction List Details Table",
        "show_if": "options.configure_by_table=='by_transaction_table'",
        "bind": "TABLES",
        "empty": "",
        "required": true,
        "style": "min-width: 200px",
        "breakLine": true
      },
      "options.configure_by_transaction_list_details_table_help": {
        "type": "textarea",
        "label": "",
        "show_if": "options.configure_by_table=='by_transaction_table'",
        "val": "Table Structure ( Position* | Sub Position | Item | Amount* | Date* | Payment Date* )",
        "disabled": true,
        "md_no_resize": false,
        "width": "100%"
      },
      "options.custom.table": {
        "type": "fieldset",
        "label": "Planning",
        "show_if": "options.configure_by_table=='by_assumption_menu'",
        "repeat": true,
        "fields": {
          "position": {
            "type": "select",
            "label": "Position",
            "options": {
              "Revenues": {
                "label": "Revenues"
              },
              "Cost of Goods Sold": {
                "label": "Cost of Goods Sold"
              },
              "Sales Expenses": {
                "label": "Sales Expenses"
              },
              "Marketing Expenses": {
                "label": "Marketing Expenses"
              },
              "Operating Expenses": {
                "label": "Operating Expenses"
              },
              "General and Administration Expenses": {
                "label": "General and Administration Expenses"
              },
              "Personnel Expenses": {
                "label": "Personnel Expenses"
              },
              "Tax": {
                "label": "Tax"
              },
              "Interest": {
                "label": "Interest"
              },
              "Extraordinary Items": {
                "label": "Extraordinary Items"
              },
              "Capital Expenditure": {
                "label": "Capital Expenditure"
              },
              "Depreciation": {
                "label": "Depreciation"
              },
              "Amortization": {
                "label": "Amortization"
              }
            },
            "val": "Revenues",
            "required": true
          },
          "revenues__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position=='Revenues'",
            "options": {
              "Sales": {
                "label": "Sales"
              },
              "Product Revenues": {
                "label": "Product Revenues"
              },
              "License Revenues": {
                "label": "License Revenues"
              },
              "Project Revenues": {
                "label": "Project Revenues"
              },
              "Service Revenues": {
                "label": "Service Revenues"
              },              
              "Increase(+)/Decrease(-) Inventories": {
                "label": "Increase(+)/Decrease(-) Inventories"
              },
              "Other Revenues": {
                "label": "Other Revenues"
              }
            },
            "val": "Sales",
            "required": true
          },
          "cost_of_goods_sold__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position=='Cost of Goods Sold'",
            "options": {
              "Material Costs": {
                "label": "Material Costs"
              },
              "Consumable Costs": {
                "label": "Consumable Costs"
              },
              "Personal Costs": {
                "label": "Personal Costs"
              },
              "Purchased Services": {
                "label": "Purchased Services"
              }
            },
            "val": "Material Costs",
            "required": true
          },
          "sales_expenses__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position=='Sales Expenses'",
            "options": {
              "Material Costs": {
                "label": "Material Costs"
              },
              "Personal Costs": {
                "label": "Personal Costs"
              },
              "Office Items": {
                "label": "Office Items"
              },
              "Consulting": {
                "label": "Consulting"
              },
              "Purchased Services": {
                "label": "Purchased Services"
              },
              "Recruiting": {
                "label": "Recruiting"
              },
              "Other Expenses": {
                "label": "Other Expenses"
              }
            },
            "val": "Purchased Services",
            "required": true
          },
          "marketing_expenses__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position=='Marketing Expenses'",
            "options": {
              "Material Costs": {
                "label": "Material Costs"
              },
              "Personal Costs": {
                "label": "Personal Costs"
              },
              "Office Items": {
                "label": "Office Items"
              },
              "Consulting": {
                "label": "Consulting"
              },
              "Purchased Services": {
                "label": "Purchased Services"
              },
              "Recruiting": {
                "label": "Recruiting"
              },
              "Other Expenses": {
                "label": "Other Expenses"
              }
            },
            "val": "Material Costs",
            "required": true
          },
          "operating_expenses__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position=='Operating Expenses'",
            "options": {
              "Material Costs": {
                "label": "Material Costs"
              },
              "Personal Costs": {
                "label": "Personal Costs"
              },
              "Rental Expenses": {
                "label": "Rental Expenses"
              },
              "Cleaning": {
                "label": "Cleaning"
              },
              "Office Items": {
                "label": "Office Items"
              },
              "Consulting": {
                "label": "Consulting"
              },
              "Purchased Services": {
                "label": "Purchased Services"
              },
              "Recruiting": {
                "label": "Recruiting"
              },
              "Other Expenses": {
                "label": "Other Expenses"
              }
            },
            "val": "Material Costs",
            "required": true
          },
          "depreciation__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position=='Depreciation'",
            "options": {
              "Equipment": {
                "label": "Equipment"
              },
              "Buildings": {
                "label": "Buildings"
              },
              "Vehicles": {
                "label": "Vehicles"
              },
              "Property": {
                "label": "Property"
              },
              "Material Assets": {
                "label": "Material Assets"
              },
              "Immaterial Assets": {
                "label": "Immaterial Assets"
              },
              "Other Assets": {
                "label": "Other Assets"
              },
              "Other Depreciation": {
                "label": "Other Depreciation"
              }
            },
            "val": "Material Assets",
            "required": true
          },
          "amortisation__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position=='Amortization'",
            "options": {             
              "Acquisitions": {
                "label": "Acquisitions"
              },
              "Material Assets": {
                "label": "Material Assets"
              },
              "Immaterial Assets": {
                "label": "Immaterial Assets"
              },
              "Other Assets": {
                "label": "Other Assets"
              },
              "Other Amortisation": {
                "label": "Other Amortisation"
              }
            },
            "val": "Acquisitions",
            "required": true
          },
          "general_administration_expenses__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position=='General and Administration Expenses'",
            "options": {
              "Rental Expenses": {
                "label": "Rental Expenses"
              },
              "Cleaning": {
                "label": "Cleaning"
              },
              "Office Items": {
                "label": "Office Items"
              },
              "Consulting": {
                "label": "Consulting"
              },
              "Purchased Services": {
                "label": "Purchased Services"
              },
              "Recruiting": {
                "label": "Recruiting"
              },
              "Other Expenses": {
                "label": "Other Expenses"
              }
            },
            "val": "Rental Expenses",
            "required": true
          },
          "personnel_expenses__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position=='Personnel Expenses'",
            "options": {
              "Fix Salary": {
                "label": "Fix Salary"
              },
              "Bonus": {
                "label": "Bonus"
              },
              "Social Security": {
                "label": "Social Security"
              },
              "Employee Tax": {
                "label": "Employee Tax"
              },
              "Employee Car": {
                "label": "Employee Car"
              },
              "Employee Benefits": {
                "label": "Employee Benefits"
              },
              "Other Expenses": {
                "label": "Other Expenses"
              },              
              "Other Compensation": {
                "label": "Other Compensation"
              }
            },
            "val": "Fix Salary",
            "required": true
          },
          "capital_expenditure__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position=='Capital Expenditure'",
            "options": {            
              "Maintenance Capex": {
                "label": "Maintenance Capex"
              },
              "Expansion Capex": {
                "label": "Expansion Capex"
              },
              "Building": {
                "label": "Building"
              },
              "Land": {
                "label": "Land"
              },
              "Equipment": {
                "label": "Equipment"
              },
              "Vehicles": {
                "label": "Vehicles"
              }, 
              "Other Capital Expenditure": {
                "label": "Other Capital Expenditure"
              }
            },
            "val": "Maintenance Capex",
            "required": true
          },
          "extraordinary_items__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position=='Extraordinary Items'",
            "options": {
              "Extraordinary Income": {
                "label": "Extraordinary Income"
              },
              "Extraordinary Expenses": {
                "label": "Extraordinary Expenses"
              }
            },
            "val": "Extraordinary Income",
            "required": true
          },
          "tax__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position=='Tax'",
            "options": {
              "Value Added Tax": {
                "label": "Value Added Tax"
              },
              "Corporate Tax": {
                "label": "Corporate Tax"
              },
              "Trade Tax": {
                "label": "Trade Tax"
              },
              "Other Tax": {
                "label": "Other Tax"
              }
            },
            "val": "Value Added Tax",
            "required": true
          },
          "interest__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position=='Interest'",
            "options": {
              "Interest Income": {
                "label": "Interest Income"
              },
              "Interest Expenses": {
                "label": "Interest Expenses"
              }
            },
            "val": "Interest Income",
            "required": true
          },
          "item": {
            "type": "text",
            "label": "Item",
            "val": ""
          },
          "amount": {
            "type": "number",
            "label": "Amount",
            "val": 0,
            "required": true 
          },
          "payment_days": {
            "type": "number",
            "label": "Payment Days",
            "show_if": "this.no_payment=='false'",
            "val": 0
          },
          "no_payment": {
            "type": "checkbox",
            "label": "No Payment",
            "show_if": "this.position!='Depreciation' && this.position!='Amortization'",
            "val": "false",
            "isOn": "true",
            "isOff": "false"
          },
          "no_payment_2": {
            "type": "checkbox",
            "label": "No Payment",
            "show_if": "this.position=='Depreciation' || this.position=='Amortization'",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "disabled": true
          },
          "initial_date": {
            "type": "date",
            "label": "(Initial) Date",
            "val": "",
            "required": true
          },
          "final_date": {
            "type": "date",
            "label": "Final Date",
            "show_if": "this.periodicy!='One-Off'",
            "val": "",
            "breakLine": true
          },
          "periodicy": {
            "type": "select",
            "label": "Repetition (of Position)",
            "required": true,
            "options": {
              "One-Off": {
                "label": "None"
              },
              "Daily": {
                "label": "Daily"
              },
              "Weekly": {
                "label": "Weekly"
              },
              "Monthly": {
                "label": "Monthly"
              },
              "Quarterly": {
                "label": "Quarterly"
              },
              "Yearly": {
                "label": "Yearly"
              }
            },
            "val": "One-Off"
          },
          "growth": {
            "type": "number",
            "label": "Growth in %...",
            "show_if": "this.periodicy!='One-Off'",
            "val": 0
          },
          "growth_period": {
            "type": "select",
            "label": "...applied on Period",
            "show_if": "this.periodicy!='One-Off'",
            "options": {
              "selected_period": {
                "label": "Equal to Repetition"
              },
              "Weekly": {
                "label": "Weekly"
              },
              "Monthly": {
                "label": "Monthly"
              },
              "Quarterly": {
                "label": "Quarterly"
              },
              "Yearly": {
                "label": "Yearly"
              }
            },
            "val": "selected_period"
          },
          "growth_pattern": {
            "type": "select",
            "label": "Growth Curve",
            "show_if": "this.periodicy!='One-Off' && this.growth_period!='selected_period'",
            "options": {
              "Linear": {
                "label": "Linear"
              },
              "Compounding": {
                "label": "Compounding"
              },
              "Jump-Fix": {
                "label": "Jump-Fix"
              }
            },
            "val": "Compounding",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.set_plan_config": {
        "type": "checkbox",
        "label": "Planning Configuration",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      }
    }
  },
  "planning_configuration_frame": {
    "type": "fieldset",
    "label": "Planning Configuration",
    "show_if": "options.set_plan_config=='true'",
    "repeat": false,
    "fields": {
      "options.is_sort_position_pl_items": {
        "type": "checkbox",
        "label": "Sort Position of P&L Items",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "options.sort_position_pl_items": {
        "type": "fieldset",
        "label": "Sort Position of P&L Items",
        "show_if": "options.is_sort_position_pl_items=='true'",
        "repeat": true,
        "fields": {
          "position_type": {
            "type": "select",
            "label": "Type",
            "options": {
              "standard": {
                "label": "Standard Position"
              },
              "calculated": {
                "label": "Calculated Position"
              }
            },
            "val": "standard",
            "required": true
          },
          "position": {
            "type": "select",
            "label": "Position",
            "show_if": "this.position_type=='standard'",
            "options": {
              "Revenues": {
                "label": "Revenues"
              },
              "Cost of Goods Sold": {
                "label": "Cost of Goods Sold"
              },
              "Sales Expenses": {
                "label": "Sales Expenses"
              },
              "Marketing Expenses": {
                "label": "Marketing Expenses"
              },
              "Operating Expenses": {
                "label": "Operating Expenses"
              },
              "General and Administration Expenses": {
                "label": "General and Administration Expenses"
              },
              "Personnel Expenses": {
                "label": "Personnel Expenses"
              },
              "Tax": {
                "label": "Tax"
              },
              "Interest": {
                "label": "Interest"
              },
              "Extraordinary Items": {
                "label": "Extraordinary Items"
              },
              "Capital Expenditure": {
                "label": "Capital Expenditure"
              },
              "Depreciation": {
                "label": "Depreciation"
              },
              "Amortization": {
                "label": "Amortization"
              },
              "Gross Profit": {
                "label": "Gross Profit"
              },
              "EBT": {
                "label": "EBT"
              },
              "EBIT": {
                "label": "EBIT"
              },
              "EBITDA": {
                "label": "EBITDA"
              },
              "Gross Profit Margin": {
                "label": "Gross Profit Margin"
              },
              "EBT Margin": {
                "label": "EBT Margin"
              },
              "EBIT Margin": {
                "label": "EBIT Margin"
              },
              "EBITDA Margin": {
                "label": "EBITDA Margin"
              }
            },
            "val": "Revenues",
            "required": true
          },
          "revenues__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position_type=='standard' && this.position=='Revenues'",
            "options": {
              "All": {
                "label": "all Subpositions"
              },
              "Sales": {
                "label": "Sales"
              },
              "Product Revenues": {
                "label": "Product Revenues"
              },
              "License Revenues": {
                "label": "License Revenues"
              },
              "Project Revenues": {
                "label": "Project Revenues"
              },
              "Service Revenues": {
                "label": "Service Revenues"
              },
              "Increase(+)/Decrease(-) Inventories": {
                "label": "Increase(+)/Decrease(-) Inventories"
              },
              "Other Revenues": {
                "label": "Other Revenues"
              }
            },
            "val": "Sales",
            "required": true
          },
          "cost_of_goods_sold__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position_type=='standard' && this.position=='Cost of Goods Sold'",
            "options": {
              "All": {
                "label": "all Subpositions"
              },
              "Material Costs": {
                "label": "Material Costs"
              },
              "Consumable Costs": {
                "label": "Consumable Costs"
              },
              "Personal Costs": {
                "label": "Personal Costs"
              },
              "Purchased Services": {
                "label": "Purchased Services"
              }
            },
            "val": "Material Costs",
            "required": true
          },
          "sales_expenses__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position_type=='standard' && this.position=='Sales Expenses'",
            "options": {
              "All": {
                "label": "all Subpositions"
              },
              "Material Costs": {
                "label": "Material Costs"
              },
              "Personal Costs": {
                "label": "Personal Costs"
              },
              "Office Items": {
                "label": "Office Items"
              },
              "Consulting": {
                "label": "Consulting"
              },
              "Purchased Services": {
                "label": "Purchased Services"
              },
              "Recruiting": {
                "label": "Recruiting"
              },
              "Other Expenses": {
                "label": "Other Expenses"
              }
            },
            "val": "Purchased Services",
            "required": true
          },
          "marketing_expenses__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position_type=='standard' && this.position=='Marketing Expenses'",
            "options": {
              "All": {
                "label": "all Subpositions"
              },
              "Material Costs": {
                "label": "Material Costs"
              },
              "Personal Costs": {
                "label": "Personal Costs"
              },
              "Office Items": {
                "label": "Office Items"
              },
              "Consulting": {
                "label": "Consulting"
              },
              "Purchased Services": {
                "label": "Purchased Services"
              },
              "Recruiting": {
                "label": "Recruiting"
              },
              "Other Expenses": {
                "label": "Other Expenses"
              }
            },
            "val": "Material Costs",
            "required": true
          },
          "operating_expenses__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position_type=='standard' && this.position=='Operating Expenses'",
            "options": {
              "All": {
                "label": "all Subpositions"
              },
              "Material Costs": {
                "label": "Material Costs"
              },
              "Personal Costs": {
                "label": "Personal Costs"
              },
              "Rental Expenses": {
                "label": "Rental Expenses"
              },
              "Cleaning": {
                "label": "Cleaning"
              },
              "Office Items": {
                "label": "Office Items"
              },
              "Consulting": {
                "label": "Consulting"
              },
              "Purchased Services": {
                "label": "Purchased Services"
              },
              "Recruiting": {
                "label": "Recruiting"
              },
              "Other Expenses": {
                "label": "Other Expenses"
              }
            },
            "val": "Material Costs",
            "required": true
          },
          "general_and_administration_expenses__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position_type=='standard' && this.position=='General and Administration Expenses'",
            "options": {
              "All": {
                "label": "all Subpositions"
              },
              "Rental Expenses": {
                "label": "Rental Expenses"
              },
              "Cleaning": {
                "label": "Cleaning"
              },
              "Office Items": {
                "label": "Office Items"
              },
              "Consulting": {
                "label": "Consulting"
              },
              "Purchased Services": {
                "label": "Purchased Services"
              },
              "Recruiting": {
                "label": "Recruiting"
              },
              "Other Expenses": {
                "label": "Other Expenses"
              }
            },
            "val": "Rental Expenses",
            "required": true
          },
          "personnel_expenses__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position_type=='standard' && this.position=='Personnel Expenses'",
            "options": {
              "All": {
                "label": "all Subpositions"
              },
              "Fix Salary": {
                "label": "Fix Salary"
              },
              "Bonus": {
                "label": "Bonus"
              },
              "Social Security": {
                "label": "Social Security"
              },
              "Employee Tax": {
                "label": "Employee Tax"
              },
              "Employee Car": {
                "label": "Employee Car"
              },
              "Employee Benefits": {
                "label": "Employee Benefits"
              },
              "Other Expenses": {
                "label": "Other Expenses"
              },
              "Other Compensation": {
                "label": "Other Compensation"
              }
            },
            "val": "Fix Salary",
            "required": true
          },
          "tax__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position_type=='standard' && this.position=='Tax'",
            "options": {
              "All": {
                "label": "all Subpositions"
              },
              "Value Added Tax": {
                "label": "Value Added Tax"
              },
              "Corporate Tax": {
                "label": "Corporate Tax"
              },
              "Trade Tax": {
                "label": "Trade Tax"
              },
              "Other Tax": {
                "label": "Other Tax"
              }
            },
            "val": "Value Added Tax",
            "required": true
          },
          "interest__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position_type=='standard' && this.position=='Interest'",
            "options": {
              "All": {
                "label": "all Subpositions"
              },
              "Interest Income": {
                "label": "Interest Income"
              },
              "Interest Expenses": {
                "label": "Interest Expenses"
              }
            },
            "val": "Interest Income",
            "required": true
          },
          "extraordinary_items__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position_type=='standard' && this.position=='Extraordinary Items'",
            "options": {
              "All": {
                "label": "all Subpositions"
              },
              "Extraordinary Income": {
                "label": "Extraordinary Income"
              },
              "Extraordinary Expenses": {
                "label": "Extraordinary Expenses"
              }
            },
            "val": "Extraordinary Income",
            "required": true
          },
          "capital_expenditure__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position_type=='standard' && this.position=='Capital Expenditure'",
            "options": {
              "All": {
                "label": "all Subpositions"
              },
              "Maintenance Capex": {
                "label": "Maintenance Capex"
              },
              "Expansion Capex": {
                "label": "Expansion Capex"
              },
              "Building": {
                "label": "Building"
              },
              "Land": {
                "label": "Land"
              },
              "Equipment": {
                "label": "Equipment"
              },
              "Vehicles": {
                "label": "Vehicles"
              },
              "Other Capital Expenditure": {
                "label": "Other Capital Expenditure"
              }
            },
            "val": "Maintenance Capex",
            "required": true
          },
          "depreciation__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position_type=='standard' && this.position=='Depreciation'",
            "options": {
              "All": {
                "label": "all Subpositions"
              },
              "Equipment": {
                "label": "Equipment"
              },
              "Buildings": {
                "label": "Buildings"
              },
              "Vehicles": {
                "label": "Vehicles"
              },
              "Property": {
                "label": "Property"
              },
              "Material Assets": {
                "label": "Material Assets"
              },
              "Immaterial Assets": {
                "label": "Immaterial Assets"
              },
              "Other Assets": {
                "label": "Other Assets"
              },
              "Other Depreciation": {
                "label": "Other Depreciation"
              }
            },
            "val": "Material Assets",
            "required": true
          },
          "amortization__sub_position": {
            "type": "select",
            "label": "Sub Position",
            "show_if": "this.position_type=='standard' && this.position=='Amortization'",
            "options": {
              "All": {
                "label": "all Subpositions"
              },
              "Acquisitions": {
                "label": "Acquisitions"
              },
              "Material Assets": {
                "label": "Material Assets"
              },
              "Immaterial Assets": {
                "label": "Immaterial Assets"
              },
              "Other Assets": {
                "label": "Other Assets"
              },
              "Other Amortisation": {
                "label": "Other Amortisation"
              }
            },
            "val": "Acquisitions",
            "required": true
          },
          "calculation": {
            "type": "select",
            "label": "Calculation",
            "show_if": "this.position_type=='calculated'",
            "options": {
              "addition": {
                "label": "Addition"
              },
              "quota": {
                "label": "Quota"
              },
              "multiply": {
                "label": "Multiply"
              },
              "fix_multiply": {
                "label": "Fix multiply"
              }
            },
            "val": "addition",
            "required": true
          },
          "new_position": {
            "type": "text",
            "label": "New Position",
            "show_if": "this.position_type=='calculated'",
            "placeholder": "",
            "val": "",
            "required": true
          },
          "addition_positions": {
            "type": "select",
            "label": "Select Position(s)",
            "show_if": "this.position_type=='calculated' && (this.calculation=='addition' || this.calculation=='multiply' || this.calculation=='fix_multiply')",
            "multiple": true,
            "options": {
              "Revenues": {
                "label": "Revenues"
              },
              "Cost of Goods Sold": {
                "label": "Cost of Goods Sold"
              },
              "Sales Expenses": {
                "label": "Sales Expenses"
              },
              "Marketing Expenses": {
                "label": "Marketing Expenses"
              },
              "Operating Expenses": {
                "label": "Operating Expenses"
              },
              "General and Administration Expenses": {
                "label": "General and Administration Expenses"
              },
              "Personnel Expenses": {
                "label": "Personnel Expenses"
              },
              "Tax": {
                "label": "Tax"
              },
              "Interest": {
                "label": "Interest"
              },
              "Extraordinary Items": {
                "label": "Extraordinary Items"
              },
              "Capital Expenditure": {
                "label": "Capital Expenditure"
              },
              "Depreciation": {
                "label": "Depreciation"
              },
              "Amortization": {
                "label": "Amortization"
              }
            },
            "val": "",
            "required": true
          },
          "quota_positions": {
            "type": "select",
            "label": "Select Position(s)",
            "show_if": "this.position_type=='calculated' && this.calculation=='quota'",
            "multiple": true,
            "options": {
              "Revenues": {
                "label": "Revenues"
              },
              "Cost of Goods Sold": {
                "label": "Cost of Goods Sold"
              },
              "Sales Expenses": {
                "label": "Sales Expenses"
              },
              "Marketing Expenses": {
                "label": "Marketing Expenses"
              },
              "Operating Expenses": {
                "label": "Operating Expenses"
              },
              "General and Administration Expenses": {
                "label": "General and Administration Expenses"
              },
              "Personnel Expenses": {
                "label": "Personnel Expenses"
              },
              "Tax": {
                "label": "Tax"
              },
              "Interest": {
                "label": "Interest"
              },
              "Extraordinary Items": {
                "label": "Extraordinary Items"
              },
              "Capital Expenditure": {
                "label": "Capital Expenditure"
              },
              "Depreciation": {
                "label": "Depreciation"
              },
              "Amortization": {
                "label": "Amortization"
              }
            },
            "val": "",
            "required": true
          },
          "denominator_position": {
            "type": "select",
            "label": "Denominator Position",
            "show_if": "this.position_type=='calculated' && this.calculation=='quota'",
            "options": {
              "Revenues": {
                "label": "Revenues"
              },
              "Cost of Goods Sold": {
                "label": "Cost of Goods Sold"
              },
              "Sales Expenses": {
                "label": "Sales Expenses"
              },
              "Marketing Expenses": {
                "label": "Marketing Expenses"
              },
              "Operating Expenses": {
                "label": "Operating Expenses"
              },
              "General and Administration Expenses": {
                "label": "General and Administration Expenses"
              },
              "Personnel Expenses": {
                "label": "Personnel Expenses"
              },
              "Tax": {
                "label": "Tax"
              },
              "Interest": {
                "label": "Interest"
              },
              "Extraordinary Items": {
                "label": "Extraordinary Items"
              },
              "Capital Expenditure": {
                "label": "Capital Expenditure"
              },
              "Depreciation": {
                "label": "Depreciation"
              },
              "Amortization": {
                "label": "Amortization"
              }
            },
            "val": "",
            "required": true
          },
          "multiply_position": {
            "type": "select",
            "label": "Multiply Position",
            "show_if": "this.position_type=='calculated' && this.calculation=='multiply'",
            "options": {
              "Revenues": {
                "label": "Revenues"
              },
              "Cost of Goods Sold": {
                "label": "Cost of Goods Sold"
              },
              "Sales Expenses": {
                "label": "Sales Expenses"
              },
              "Marketing Expenses": {
                "label": "Marketing Expenses"
              },
              "Operating Expenses": {
                "label": "Operating Expenses"
              },
              "General and Administration Expenses": {
                "label": "General and Administration Expenses"
              },
              "Personnel Expenses": {
                "label": "Personnel Expenses"
              },
              "Tax": {
                "label": "Tax"
              },
              "Interest": {
                "label": "Interest"
              },
              "Extraordinary Items": {
                "label": "Extraordinary Items"
              },
              "Capital Expenditure": {
                "label": "Capital Expenditure"
              },
              "Depreciation": {
                "label": "Depreciation"
              },
              "Amortization": {
                "label": "Amortization"
              }
            },
            "val": "",
            "required": true
          },
          "fix_multiply": {
            "type": "number",
            "label": "Fix multiply",
            "show_if": "this.position_type=='calculated' && this.calculation=='fix_multiply'",
            "val": 1
          },
          "format": {
            "type": "select",
            "label": "Format",
            "multiple": true,
            "options": {
              "Formatted": {
                "label": "Formatted"
              },
              "line above": {
                "label": "Line above"
              },
              "line below": {
                "label": "Line below"
              },
              "double line above": {
                "label": "Double line above"
              },
              "double line below": {
                "label": "Double line below"
              }
            },
            "val": ""
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        },
        "breakLine": true
      },
      "options.balance_sheet_impact__configure": {
        "type": "checkbox",
        "label": "Customize Balance Sheet Impact",
        "show_if": "(options.output_type=='table_output' && options.table_output_type=='balance_sheet_details') || (options.output_type=='table_output' && options.table_output_type=='bs_summary_list') || (options.output_type=='table_output' && options.table_output_type=='all_detail_tables') || (options.output_type=='interactive_drill_down' && options.interactive_drill_down_type=='balance_sheet') || options.output_type=='pdf_planning_package'",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "balance_sheet_impact_frame": {
        "type": "fieldset",
        "label": "Configure Balance Sheet Impact",
        "show_if": "(options.output_type=='table_output' && options.table_output_type=='balance_sheet_details' && options.balance_sheet_impact__configure=='true') || (options.output_type=='table_output' && options.table_output_type=='bs_summary_list' && options.balance_sheet_impact__configure=='true') || (options.output_type=='table_output' && options.table_output_type=='all_detail_tables' && options.balance_sheet_impact__configure=='true') || (options.output_type=='interactive_drill_down' && options.interactive_drill_down_type=='balance_sheet' && options.balance_sheet_impact__configure=='true') || (options.output_type=='pdf_planning_package' && options.balance_sheet_impact__configure=='true')",
        "repeat": false,
        "fields": {
          "options.balance_sheet_impact__configure_by_table": {
            "type": "checkbox",
            "label": "Configure by table",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.balance_sheet_impact_table_id": {
            "type": "select",
            "label": "Select Table",
            "show_if": "options.balance_sheet_impact__configure_by_table=='true'",
            "bind": "TABLES",
            "empty": "",
            "required": true,
            "breakLine": true
          },
          "options.balance_sheet_impact_table_help": {
            "type": "textarea",
            "label": "",
            "show_if": "options.balance_sheet_impact__configure_by_table=='true'",
            "val": "Table structure like Balance Sheet Impact Table by A24",
            "disabled": true,
            "md_no_resize": false,
            "width": "100%"
          },
          "options.balance_sheet_impact_table__extra": {
            "type": "fieldset",
            "label": "Additional Balance Sheet Impact Planning",
            "show_if": "options.balance_sheet_impact__configure_by_table=='false'",
            "repeat": true,
            "fields": {
              "position": {
                "type": "select",
                "label": "Position; Sub Position",
                "multiple" : true,
                "options": {
                  "Revenues; *": {
                    "label": "Revenues; *"
                  },
                  "Cost of Goods Sold; *": {
                    "label": "Cost of Goods Sold; *"
                  },
                  "Sales Expenses; *": {
                    "label": "Sales Expenses; *"
                  },
                  "Marketing Expenses; *": {
                    "label": "Marketing Expenses; *"
                  },
                  "Operating Expenses; *": {
                    "label": "Operating Expenses; *"
                  },
                  "General and Administration Expenses; *": {
                    "label": "General and Administration Expenses; *"
                  },
                  "Personnel Expenses; *": {
                    "label": "Personnel Expenses; *"
                  },
                  "Tax; *": {
                    "label": "Tax; *"
                  },
                  "Interest; *": {
                    "label": "Interest; *"
                  },
                  "Extraordinary Items; *": {
                    "label": "Extraordinary Items; *"
                  },
                  "Capital Expenditure; Land": {
                    "label": "Capital Expenditure; Land"
                  },
                  "Capital Expenditure; Building": {
                    "label": "Capital Expenditure; Building"
                  },
                  "Depreciation; *": {
                    "label": "Depreciation; *"
                  },
                  "Amortization; *": {
                    "label": "Amortization; *"
                  }
                },
                "val": "",
                "required": true
              },
              "impact_date": {
                "type": "select",
                "label": "Impact Date",
                "options": {
                  "On Date": {
                    "label": "On Date"
                  },
                  "On Payment Date": {
                    "label": "On Payment Date"
                  }
                },
                "val": "On Date",
                "required": true
              },
              "balance_sheet_category": {
                "type": "select",
                "label": "Balance Sheet Category",
                "required": true,
                "options": {
                  "Property and Equipment": {
                    "label": "Property and Equipment"
                  },
                  "Current Assets": {
                    "label": "Current Assets"
                  },
                  "Other Assets": {
                    "label": "Other Assets"
                  },
                  "Shareholders Equity": {
                    "label": "Shareholder's Equity"
                  },
                  "Long-term Liablities": {
                    "label": "Long-term Liabilities"
                  },
                  "Current Liablities": {
                    "label": "Current Liabilities"
                  }
                },
                "val": "Current Assets"
              },
              "balance_sheet_position": {
                "type": "select",
                "label": "Balance Sheet Position",
                "required": true,
                "options": {
                  "Property": {
                    "label": "Property"
                  },
                  "Land": {
                    "label": "Land"
                  },
                  "Buildings": {
                    "label": "Buildings"
                  },
                  "Equipment": {
                    "label": "Equipment"
                  },
                  "Vehicles": {
                    "label": "Vehicles"
                  },
                  "Cash": {
                    "label": "Cash"
                  },
                  "Bank": {
                    "label": "Bank"
                  },
                  "Cash & Equivalents": {
                    "label": "Cash & Equivalents"
                  },
                  "Accounts Receivable": {
                    "label": "Vehicles"
                  },
                  "Accruals": {
                    "label": "Accruals"
                  },
                  "Equity": {
                    "label": "Equity"
                  },
                  "Paid In Equity": {
                    "label": "Paid In Equity"
                  },
                  "Economic Equity": {
                    "label": "Economic Equity"
                  },
                  "Shareholder Loan": {
                    "label": "Shareholder Loan"
                  },
                  "Bank Loan": {
                    "label": "Bank Loan"
                  },
                  "Trade Liabilities": {
                    "label": "Trade Liabilities"
                  },
                  "Accounts Payable": {
                    "label": "Accounts Payable"
                  },
                  "Tax Liabilities": {
                    "label": "Tax Liabilities"
                  },
                  "Other Current Liablities": {
                    "label": "Other Current Liabilities"
                  },
                  "Profit current Year": {
                    "label": "Profit current Year"
                  }
                },
                "val": "Accounts Payable"
              },
              "change_sign": {
                "type": "select",
                "label": "Change Sign",
                "required": true,
                "options": {
                  "True": {
                    "label": "True"
                  },
                  "False": {
                    "label": "False"
                  }
                },
                "val": "False"
              },
              "balance_sheet_counter_category": {
                "type": "select",
                "label": "Counter Category",
                "required": true,
                "options": {
                  "Property and Equipment": {
                    "label": "Property and Equipment"
                  },
                  "Current Assets": {
                    "label": "Current Assets"
                  },
                  "Other Assets": {
                    "label": "Other Assets"
                  },
                  "Shareholders Equity": {
                    "label": "Shareholder's Equity"
                  },
                  "Longterm Liablities": {
                    "label": "Long-term Liabilities"
                  },
                  "Current Liablities": {
                    "label": "Current Liabilities"
                  }
                },
                "val": "Current Assets"
              },
              "balance_sheet_counter_position": {
                "type": "select",
                "label": "Counter Position",
                "required": true,
                "options": {
                  "Property": {
                    "label": "Property"
                  },
                  "Land": {
                    "label": "Land"
                  },
                  "Buildings": {
                    "label": "Buildings"
                  },
                  "Equipment": {
                    "label": "Equipment"
                  },
                  "Vehicles": {
                    "label": "Vehicles"
                  },
                  "Cash": {
                    "label": "Cash"
                  },
                  "Bank": {
                    "label": "Bank"
                  },
                  "Cash & Equivalents": {
                    "label": "Cash & Equivalents"
                  },
                  "Vehicles": {
                    "label": "Vehicles"
                  },
                  "Accruals": {
                    "label": "Accruals"
                  },
                  "Equity": {
                    "label": "Equity"
                  },
                  "Paid In Equity": {
                    "label": "Paid In Equity"
                  },
                  "Economic Equity": {
                    "label": "Economic Equity"
                  },
                  "Shareholder Loan": {
                    "label": "Shareholder Loan"
                  },
                  "Bank Loan": {
                    "label": "Bank Loan"
                  },
                  "Trade Liabilities": {
                    "label": "Trade Liabilities"
                  },
                  "Accounts Payable": {
                    "label": "Accounts Payable"
                  },
                  "Tax Liabilities": {
                    "label": "Tax Liabilities"
                  },
                  "Other Current Liablities": {
                    "label": "Other Current Liabilities"
                  },
                  "Profit current Year": {
                    "label": "Profit current Year"
                  }
                },
                "val": "Accounts Payable"
              },
              "counter_position_change_sign": {
                "type": "select",
                "label": "Change sign of count. pos.",
                "required": true,
                "options": {
                  "True": {
                    "label": "True"
                  },
                  "False": {
                    "label": "False"
                  }
                },
                "val": "False"
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          }
        },
        "breakLine": true
      },
      "options.balance_sheet_direct_planning__configure": {
        "type": "checkbox",
        "label": "Customize Balance Sheet Direct Planning",
        "show_if": "options.output_type=='pdf_planning_package' || (options.output_type=='table_output' && options.table_output_type=='bs_summary_list')",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "options.balance_sheet_direct_planning": {
        "type": "fieldset",
        "label": "Balance Sheet Direct Planning",
        "show_if": "(options.output_type=='pdf_planning_package' && options.balance_sheet_direct_planning__configure=='true') || (options.output_type=='table_output' && options.table_output_type=='bs_summary_list' && options.balance_sheet_direct_planning__configure=='true')",
        "repeat": true,
        "fields": {
          "balance_sheet_category": {
            "type": "select",
            "label": "Balance Sheet Category",
            "required": true,
            "options": {
              "Property and Equipment": {
                "label": "Property and Equipment"
              },
              "Current Assets": {
                "label": "Current Assets"
              },
              "Other Assets": {
                "label": "Other Assets"
              },
              "Shareholders Equity": {
                "label": "Shareholder's Equity"
              },
              "Long-term Liablities": {
                "label": "Long-term Liabilities"
              },
              "Current Liablities": {
                "label": "Current Liabilities"
              }
            },
            "val": "Current Assets"
          },
          "balance_sheet_position": {
            "type": "select",
            "label": "Balance Sheet Position",
            "required": true,
            "options": {
              "Property": {
                "label": "Property"
              },
              "Land": {
                "label": "Land"
              },
              "Buildings": {
                "label": "Buildings"
              },
              "Equipment": {
                "label": "Equipment"
              },
              "Vehicles": {
                "label": "Vehicles"
              },
              "Cash": {
                "label": "Cash"
              },
              "Bank": {
                "label": "Bank"
              },
              "Cash & Equivalents": {
                "label": "Cash & Equivalents"
              },
              "Accounts Receivable": {
                "label": "Vehicles"
              },
              "Accruals": {
                "label": "Accruals"
              },
              "Equity": {
                "label": "Equity"
              },
              "Paid In Equity": {
                "label": "Paid In Equity"
              },
              "Economic Equity": {
                "label": "Economic Equity"
              },
              "Shareholder Loan": {
                "label": "Shareholder Loan"
              },
              "Bank Loan": {
                "label": "Bank Loan"
              },
              "Trade Liabilities": {
                "label": "Trade Liabilities"
              },
              "Accounts Payable": {
                "label": "Accounts Payable"
              },
              "Tax Liabilities": {
                "label": "Tax Liabilities"
              },
              "Other Current Liablities": {
                "label": "Other Current Liabilities"
              },
              "Profit current Year": {
                "label": "Profit current Year"
              }
            },
            "val": "Accounts Payable"
          },
          "amount": {
            "type": "number",
            "label": "Amount",
            "val": 0,
            "required": true
          },
          "bs_direct_planning_date_year": {
            "type": "select",
            "label": "Year",
            "required": true,
            "options": {
              "2022": {
                "label": "2022"
              },
              "2023": {
                "label": "2023"
              },
              "2024": {
                "label": "2024"
              },
              "2025": {
                "label": "2025"
              },
              "2026": {
                "label": "2026"
              },
              "2027": {
                "label": "2027"
              },
              "2028": {
                "label": "2028"
              },
              "2029": {
                "label": "2029"
              },
              "2030": {
                "label": "2030"
              },
              "2031": {
                "label": "2031"
              },
              "2032": {
                "label": "2032"
              },
              "2033": {
                "label": "2033"
              },
              "2034": {
                "label": "2034"
              },
              "2035": {
                "label": "2035"
              },
              "2036": {
                "label": "2036"
              },
              "2037": {
                "label": "2037"
              },
              "2038": {
                "label": "2038"
              },
              "2039": {
                "label": "2039"
              },
              "2040": {
                "label": "2040"
              },
              "2041": {
                "label": "2041"
              },
              "2042": {
                "label": "2042"
              },
              "2043": {
                "label": "2043"
              },
              "2044": {
                "label": "2044"
              },
              "2045": {
                "label": "2045"
              },
              "2046": {
                "label": "2046"
              },
              "2047": {
                "label": "2047"
              },
              "2048": {
                "label": "2048"
              },
              "2049": {
                "label": "2049"
              },
              "2050": {
                "label": "2050"
              }
            },
            "val": "2023"
          },
          "bs_direct_planning_date_month": {
            "type": "select",
            "label": "Month",
            "required": true,
            "options": {
              "January": {
                "label": "January"
              },
              "February": {
                "label": "February"
              },
              "March": {
                "label": "March"
              },
              "April": {
                "label": "April"
              },
              "May": {
                "label": "May"
              },
              "June": {
                "label": "June"
              },
              "July": {
                "label": "July"
              },
              "August": {
                "label": "August"
              },
              "September": {
                "label": "September"
              },
              "October": {
                "label": "October"
              },
              "November": {
                "label": "November"
              },
              "December": {
                "label": "December"
              }
            },
            "val": "January"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        },
        "breakLine": true
      },
      "options.bs_data__custom_labels": {
        "type": "checkbox",
        "label": "Customise Labels",
        "show_if": "options.output_type=='pdf_planning_package'",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "bs_labels_placeholder__settings_and_title_page__frame": {
        "type": "fieldset",
        "label": "Customise 'Balance Sheet' PDF Labels (Settings and Title Page)",
        "show_if": "options.output_type=='pdf_planning_package' && options.bs_data__custom_labels=='true'",
        "repeat": false,
        "fields": {
          "options.package_type": {
            "type": "select",
            "label": "Package Type",
            "options": {
              "version1": {
                "label": "Version 1"
              },
              "version2": {
                "label": "Version 2"
              }
            },
            "val": "version1",
            "required": true,
            "breakLine": true
          },
          "options.bs_data.all_figures_in": {
            "type": "text",
            "label": "All Figures in",
            "placeholder": "All Figures in",
            "val": ""
          },
          "options.bs_data.planning_date_name": {
            "type": "text",
            "label": "Planning Date Name",
            "placeholder": "Planning Date Name",
            "val": ""
          },
          "options.bs_data.planning_version_name": {
            "type": "text",
            "label": "Planning Version Name",
            "placeholder": "Planning Version Name",
            "val": ""
          },
          "options.bs_data.confidential_note": {
            "type": "text",
            "label": "Confidential Note",
            "placeholder": "Confidential Note",
            "val": "Powered by ZIPPYDOC"
          },
          "options.bs_data.position_name": {
            "type": "text",
            "label": "Position Name",
            "placeholder": "Position Name",
            "val": "Position"
          },
          "options.bs_data.sub_position_name": {
            "type": "text",
            "label": "Sub Position Name",
            "placeholder": "Sub Position Name",
            "val": "Sub Position"
          },
          "options.bs_data.item_name": {
            "type": "text",
            "label": "Item Name",
            "placeholder": "Item Name",
            "val": "Item"
          },
          "options.bs_data.growth_curve_name": {
            "type": "text",
            "label": "Growth Curve Name",
            "placeholder": "Growth Curve Name",
            "val": "Growth Curve"
          },
          "options.bs_data.growth_name": {
            "type": "text",
            "label": "Growth Name",
            "placeholder": "Growth Name",
            "val": "Growth (%)"
          },
          "options.bs_data.year_1_name": {
            "type": "text",
            "label": "Year1 Name",
            "placeholder": "Year1 Name",
            "val": "2021"
          },
          "options.bs_data.year_2_name": {
            "type": "text",
            "label": "Year2 Name",
            "placeholder": "Year2 Name",
            "val": "2023"
          },
          "options.bs_data.year_3_name": {
            "type": "text",
            "label": "Year3 Name",
            "placeholder": "Year3 Name",
            "val": "2023"
          },
          "options.bs_data.year_4_name": {
            "type": "text",
            "label": "Year4 Name",
            "placeholder": "Year4 Name",
            "val": "2024"
          },
          "options.bs_data.year_5_name": {
            "type": "text",
            "label": "Year5 Name",
            "placeholder": "Year5 Name",
            "val": "2025"
          },
          "options.bs_data.qrt_1_name": {
            "type": "text",
            "label": "Qrt. 1 Name",
            "placeholder": "Qrt. 1 Name",
            "val": "Qrt. 1"
          },
          "options.bs_data.qrt_2_name": {
            "type": "text",
            "label": "Qrt. 2 Name",
            "placeholder": "Qrt. 2 Name",
            "val": "Qrt. 2"
          },
          "options.bs_data.qrt_3_name": {
            "type": "text",
            "label": "Qrt. 3 Name",
            "placeholder": "Qrt. 3 Name",
            "val": "Qrt. 3"
          },
          "options.bs_data.qrt_4_name": {
            "type": "text",
            "label": "Qrt. 4 Name",
            "placeholder": "Qrt. 4 Name",
            "val": "Qrt. 4"
          },
          "options.bs_data.month_1_name": {
            "type": "text",
            "label": "Month 1 Name",
            "placeholder": "Month 1 Name",
            "val": "Jan"
          },
          "options.bs_data.month_2_name": {
            "type": "text",
            "label": "Month 2 Name",
            "placeholder": "Month 2 Name",
            "val": "Feb"
          },
          "options.bs_data.month_3_name": {
            "type": "text",
            "label": "Month 3 Name",
            "placeholder": "Month 3 Name",
            "val": "Mar"
          },
          "options.bs_data.month_4_name": {
            "type": "text",
            "label": "Month 4 Name",
            "placeholder": "Month 4 Name",
            "val": "Apr"
          },
          "options.bs_data.month_5_name": {
            "type": "text",
            "label": "Month 5 Name",
            "placeholder": "Month 5 Name",
            "val": "May"
          },
          "options.bs_data.month_6_name": {
            "type": "text",
            "label": "Month 6 Name",
            "placeholder": "Month 6 Name",
            "val": "Jun"
          },
          "options.bs_data.month_7_name": {
            "type": "text",
            "label": "Month 7 Name",
            "placeholder": "Month 7 Name",
            "val": "Jul"
          },
          "options.bs_data.month_8_name": {
            "type": "text",
            "label": "Month 8 Name",
            "placeholder": "Month 8 Name",
            "val": "Aug"
          },
          "options.bs_data.month_9_name": {
            "type": "text",
            "label": "Month 9 Name",
            "placeholder": "Month 9 Name",
            "val": "Sep"
          },
          "options.bs_data.month_10_name": {
            "type": "text",
            "label": "Month 10 Name",
            "placeholder": "Month 10 Name",
            "val": "Oct"
          },
          "options.bs_data.month_11_name": {
            "type": "text",
            "label": "Month 11 Name",
            "placeholder": "Month 11 Name",
            "val": "Nov"
          },
          "options.bs_data.month_12_name": {
            "type": "text",
            "label": "Month 12 Name",
            "placeholder": "Month 12 Name",
            "val": "Dec"
          },
          "options.bs_data.full_year_name": {
            "type": "text",
            "label": "Full Year Name",
            "placeholder": "Full Year Name",
            "val": "FY"
          },
          "options.bs_data.year_on_year_name": {
            "type": "text",
            "label": "Year on Year Name",
            "placeholder": "Year on Year Name",
            "val": "YoY"
          },
          "options.bs_data.month_on_month_name": {
            "type": "text",
            "label": "Month on Month Name",
            "placeholder": "Month on Month Name",
            "val": "MoM"
          },
          "options.bs_data.title_planning_package": {
            "type": "text",
            "label": "Title Planning Package",
            "placeholder": "Title Planning Package",
            "val": "Planning Package v1"
          },
          "options.bs_data.sub_title_planning_package": {
            "type": "text",
            "label": "Subtitle Planning Package",
            "placeholder": "Subtitle Planning Package",
            "val": "Enjoy a new planning experience!"
          },
          "options.bs_data.notes_planning_package": {
            "type": "text",
            "label": "Notes Planning Package",
            "placeholder": "Notes Planning Package",
            "val": ""
          },
          "options.bs_data.planning_version": {
            "type": "text",
            "label": "Planning Version",
            "placeholder": "Planning Version",
            "val": ""
          },
          "options.bs_data.planning_date": {
            "type": "text",
            "label": "Planning Date",
            "placeholder": "Planning Date",
            "val": ""
          }
        },
        "breakLine": true
      },
      "bs_labels_placeholder__balance_sheet__frame": {
        "type": "fieldset",
        "label": "Customise 'Balance Sheet' PDF Labels (Balance Sheet)",
        "show_if": "options.output_type=='pdf_planning_package' && options.bs_data__custom_labels=='true'",
        "repeat": false,
        "fields": {
          "options.bs_data.company_name": {
            "type": "text",
            "label": "Company Name",
            "placeholder": "My Company ltd.",
            "val": "BIG DATA BUSINESS PLANNING"
          },
          "options.bs_date_year": {
            "type": "select",
            "label": "Balance Sheet Date's Year",
            "required": true,
            "options": {
              "2022": {
                "label": "2022"
              },
              "2023": {
                "label": "2023"
              },
              "2024": {
                "label": "2024"
              },
              "2025": {
                "label": "2025"
              },
              "2026": {
                "label": "2026"
              },
              "2027": {
                "label": "2027"
              },
              "2028": {
                "label": "2028"
              },
              "2029": {
                "label": "2029"
              },
              "2030": {
                "label": "2030"
              },
              "2031": {
                "label": "2031"
              },
              "2032": {
                "label": "2032"
              },
              "2033": {
                "label": "2033"
              },
              "2034": {
                "label": "2034"
              },
              "2035": {
                "label": "2035"
              },
              "2036": {
                "label": "2036"
              },
              "2037": {
                "label": "2037"
              },
              "2038": {
                "label": "2038"
              },
              "2039": {
                "label": "2039"
              },
              "2040": {
                "label": "2040"
              },
              "2041": {
                "label": "2041"
              },
              "2042": {
                "label": "2042"
              },
              "2043": {
                "label": "2043"
              },
              "2044": {
                "label": "2044"
              },
              "2045": {
                "label": "2045"
              },
              "2046": {
                "label": "2046"
              },
              "2047": {
                "label": "2047"
              },
              "2048": {
                "label": "2048"
              },
              "2049": {
                "label": "2049"
              },
              "2050": {
                "label": "2050"
              }
            },
            "val": "2023"
          },
          "options.bs_date_month": {
            "type": "select",
            "label": "Balance Sheet Date's Month",
            "required": true,
            "options": {
              "January": {
                "label": "January"
              },
              "February": {
                "label": "February"
              },
              "March": {
                "label": "March"
              },
              "April": {
                "label": "April"
              },
              "May": {
                "label": "May"
              },
              "June": {
                "label": "June"
              },
              "July": {
                "label": "July"
              },
              "August": {
                "label": "August"
              },
              "September": {
                "label": "September"
              },
              "October": {
                "label": "October"
              },
              "November": {
                "label": "November"
              },
              "December": {
                "label": "December"
              }
            },
            "val": "December"
          },
          "options.bs_data__date_format": {
            "type": "select",
            "label": "Date Format",
            "required": true,
            "options": {
              "mm/dd/yyyy": {
                "label": "3/14/2012"
              },
              "D, M dd, Y": {
                "label": "Wednesday, March 14, 2012"
              },
              "yyyy-mm-dd": {
                "label": "2012-03-14"
              },
              "m.dd.yyyy": {
                "label": "3.14.2012"
              },
              "m.dd.yy": {
                "label": "3.14.12"
              },
              "dd.m.yyyy": {
                "label": "14.3.2012"
              },
              "dd.m.yy": {
                "label": "14.3.12"
              },
              "M dd, Y": {
                "label": "March 14, 2012"
              },
              "dd-mm-yyyy": {
                "label": "14-03-2012"
              },
              "mm-dd-yyyy": {
                "label": "03-14-2012"
              },
              "dd-mm-yy": {
                "label": "14-03-12"
              },
              "mm-dd-yy": {
                "label": "03-14-12"
              }
            },
            "val": "M dd, Y",
            "breakLine": true
          },
          "options.bs_data.currency": {
            "type": "text",
            "label": "Currency",
            "placeholder": "€ million",
            "val": ""
          },
          "options.bs_data.logo": {
            "type": "text",
            "label": "Logo(Base64 Encoded Data of JPEG)",
            "placeholder": "data:image/jpeg;base64, /9j/4AAQSkZJRgABAQEA",
            "val": "",
            "width": "100%"
          },
          "options.bs_data__help_text_logo": {
            "type": "text",
            "label": "",
            "val": "For conversion you may use e.g. https://onlinejpgtools.com/convert-jpg-to-base64",
            "disabled": true,
            "width": "100%"
          },
          "options.bs_data.title_balance_sheet": {
            "type": "text",
            "label": "Title Balance Sheet",
            "placeholder": "Title Balance Sheet",
            "val": "Balance Sheet"
          },
          "options.bs_data.sub_title_balance_sheet": {
            "type": "text",
            "label": "Subtitle Balance Sheet",
            "placeholder": "Subtitle Balance Sheet",
            "val": ""
          },
          "options.bs_data.notes_balance_sheet": {
            "type": "text",
            "label": "Notes Balance Sheet",
            "placeholder": "Notes Balance Sheet",
            "val": ""
          },
          "options.bs_data.assets_header_name": {
            "type": "text",
            "label": "Assets Header Name",
            "placeholder": "Assets Header Name",
            "val": "Assets"
          },
          "options.bs_data.liabilities_header_name": {
            "type": "text",
            "label": "Liabilities Header Name",
            "placeholder": "Liabilities Header Name",
            "val": "Liabilities"
          },
          "options.bs_data.total_assets_name": {
            "type": "text",
            "label": "Total Assets Name",
            "placeholder": "Total Assets Name",
            "val": "Total Assets"
          },
          "options.bs_data.total_liablities_name": {
            "type": "text",
            "label": "Total Liabilities Name",
            "placeholder": "Total Liabilities Name",
            "val": "Total Liabilities"
          },
          "options.bs_data.current_assets_name": {
            "type": "text",
            "label": "Current Assets Name",
            "placeholder": "Current Assets Name",
            "val": "Current Assets"
          },
          "options.bs_data.current_liabilities_name": {
            "type": "text",
            "label": "Current Liabilities Name",
            "placeholder": "Current Liabilities Name",
            "val": "Current Liabilities"
          },
          "options.bs_data.property_equipment_name": {
            "type": "text",
            "label": "Property Equipment Name",
            "placeholder": "Property Equipment Name",
            "val": "Property & Equipment"
          },
          "options.bs_data.longterm_liabilities_name": {
            "type": "text",
            "label": "Longterm Liabilities Name",
            "placeholder": "Longterm Liabilities Name",
            "val": "Long-term Liabilities"
          },
          "options.bs_data.other_assets_name": {
            "type": "text",
            "label": "Other Assets Name",
            "placeholder": "Other Assets Name",
            "val": "Other Assets"
          },
          "options.bs_data.other_liablities_name": {
            "type": "text",
            "label": "Other Liablities Name",
            "placeholder": "Other Liablities Name",
            "val": "Other Liabilities"
          },
          "options.bs_data.shareholders_equity_name": {
            "type": "text",
            "label": "Shareholders Equity Name",
            "placeholder": "Shareholders Equity Name",
            "val": "Shareholders Equity"
          }
        },
        "breakLine": true
      },
      "bs_labels_placeholder__profit_and_loss__frame": {
        "type": "fieldset",
        "label": "Customise 'Balance Sheet' PDF Labels (Profit & Loss)",
        "show_if": "options.output_type=='pdf_planning_package' && options.bs_data__custom_labels=='true'",
        "repeat": false,
        "fields": {
          "options.bs_data.title_profit_and_loss_yearly": {
            "type": "text",
            "label": "Yearly Profit & Loss Title",
            "placeholder": "Yearly Profit & Loss Title",
            "val": "Yearly Profit & Loss Development"
          },
          "options.bs_data.sub_title_profit_and_loss_yearly": {
            "type": "text",
            "label": "Subtitle Profit & Loss Yearly",
            "placeholder": "Subtitle Profit & Loss Yearly",
            "val": ""
          },
          "options.bs_data.notes_profit_and_loss_yearly": {
            "type": "text",
            "label": "Notes Profit & Loss Yearly",
            "placeholder": "Notes Profit & Loss Yearly",
            "val": ""
          },
          "options.bs_data.title_profit_and_loss_quarterly": {
            "type": "text",
            "label": "Quarterly Profit & Loss Title",
            "placeholder": "Quarterly Profit & Loss Title",
            "val": "Quarterly Profit & Loss Development"
          },
          "options.bs_data.sub_title_profit_and_loss_quarterly": {
            "type": "text",
            "label": "Subtitle Profit & Loss Quarterly",
            "placeholder": "Subtitle Profit & Loss Quarterly",
            "val": ""
          },
          "options.bs_data.notes_profit_and_loss_quarterly": {
            "type": "text",
            "label": "Notes Profit & Loss Quarterly",
            "placeholder": "Notes Profit & Loss Quarterly",
            "val": ""
          },
          "options.bs_data.title_profit_and_loss_monthly": {
            "type": "text",
            "label": "Monthly Profit & Loss Title",
            "placeholder": "Monthly Profit & Loss Title",
            "val": "Monthly Profit & Loss Development"
          },
          "options.bs_data.sub_title_profit_and_loss_monthly": {
            "type": "text",
            "label": "Subtitle Profit & Loss Monthly",
            "placeholder": "Subtitle Profit & Loss Monthly",
            "val": ""
          },
          "options.bs_data.notes_profit_and_loss_monthly": {
            "type": "text",
            "label": "Notes Profit & Loss Monthly",
            "placeholder": "Notes Profit & Loss Monthly",
            "val": ""
          }
        },
        "breakLine": true
      },
      "bs_labels_placeholder__cash_flow__frame": {
        "type": "fieldset",
        "label": "Customise 'Balance Sheet' PDF Labels (Cash Flow)",
        "show_if": "options.output_type=='pdf_planning_package' && options.bs_data__custom_labels=='true'",
        "repeat": false,
        "fields": {
          "options.bs_data.title_cash_flow_yearly": {
            "type": "text",
            "label": "Yearly Cashflow Title",
            "placeholder": "Yearly Cashflow Title",
            "val": "Yearly Cashflow Development"
          },
          "options.bs_data.sub_title_cash_flow_yearly": {
            "type": "text",
            "label": "Subtitle Cashflow Yearly",
            "placeholder": "Subtitle Cashflow Yearly",
            "val": ""
          },
          "options.bs_data.notes_cash_flow_yearly": {
            "type": "text",
            "label": "Notes Cashflow Yearly",
            "placeholder": "Notes Cashflow Yearly",
            "val": ""
          },
          "options.bs_data.title_cash_flow_quarterly": {
            "type": "text",
            "label": "Quarterly Cashflow Title",
            "placeholder": "Quarterly Cashflow Title",
            "val": "Quarterly Cashflow Development"
          },
          "options.bs_data.sub_title_cash_flow_quarterly": {
            "type": "text",
            "label": "Subtitle Cashflow Quarterly",
            "placeholder": "Subtitle Cashflow Quarterly",
            "val": ""
          },
          "options.bs_data.notes_cash_flow_quarterly": {
            "type": "text",
            "label": "Notes Cashflow Quarterly",
            "placeholder": "Notes Cashflow Quarterly",
            "val": ""
          },
          "options.bs_data.title_cash_flow_monthly": {
            "type": "text",
            "label": "Monthly Cashflow Title",
            "placeholder": "Monthly Cashflow Title",
            "val": "Monthly Cashflow Development"
          },
          "options.bs_data.sub_title_cash_flow_monthly": {
            "type": "text",
            "label": "Subtitle Cashflow Monthly",
            "placeholder": "Subtitle Cashflow Monthly",
            "val": ""
          },
          "options.bs_data.notes_cash_flow_monthly": {
            "type": "text",
            "label": "Notes Cashflow Monthly",
            "placeholder": "Notes Cashflow Monthly",
            "val": ""
          }
        },
        "breakLine": true
      },
      "bs_labels_placeholder__bs_development__frame": {
        "type": "fieldset",
        "label": "Customise 'Balance Sheet' PDF Labels (Balance Sheet Development)",
        "show_if": "options.output_type=='pdf_planning_package' && options.bs_data__custom_labels=='true'",
        "repeat": false,
        "fields": {
          "options.bs_data.title_balance_sheet_development_yearly": {
            "type": "text",
            "label": "Yearly Balance Sheet Title",
            "placeholder": "Yearly Balance Sheet Title",
            "val": "Yearly Balance Sheet Development"
          },
          "options.bs_data.sub_title_balance_sheet_development_yearly": {
            "type": "text",
            "label": "Subtitle Balance Sheet Yearly",
            "placeholder": "Subtitle Balance Sheet Yearly",
            "val": ""
          },
          "options.bs_data.notes_balance_sheet_development_yearly": {
            "type": "text",
            "label": "Notes Balance Sheet Development Yearly",
            "placeholder": "Notes Balance Sheet Development Yearly",
            "val": ""
          },
          "options.bs_data.title_balance_sheet_development_quarterly": {
            "type": "text",
            "label": "Quarterly Balance Sheet Title",
            "placeholder": "Quarterly Balance Sheet Title",
            "val": "Quarterly Balance Sheet Development"
          },
          "options.bs_data.sub_title_balance_sheet_development_quarterly": {
            "type": "text",
            "label": "Subtitle Balance Sheet Quarterly",
            "placeholder": "Subtitle Balance Sheet Quarterly",
            "val": ""
          },
          "options.bs_data.notes_balance_sheet_development_quarterly": {
            "type": "text",
            "label": "Notes Balance Sheet Development Quarterly",
            "placeholder": "Notes Balance Sheet Development Quarterly",
            "val": ""
          },
          "options.bs_data.title_balance_sheet_development_monthly": {
            "type": "text",
            "label": "Monthly Balance Sheet Title",
            "placeholder": "Monthly Balance Sheet Title",
            "val": "Monthly Balance Sheet Development"
          },
          "options.bs_data.sub_title_balance_sheet_development_monthly": {
            "type": "text",
            "label": "Subtitle Balance Sheet Monthly",
            "placeholder": "Subtitle Balance Sheet Monthly",
            "val": ""
          },
          "options.bs_data.notes_balance_sheet_development_monthly": {
            "type": "text",
            "label": "Notes Balance Sheet Development Monthly",
            "placeholder": "Notes Balance Sheet Development Monthly",
            "val": ""
          }
        },
        "breakLine": true
      },
      "bs_labels_placeholder__assumptions_overview__frame": {
        "type": "fieldset",
        "label": "Customise 'Balance Sheet' PDF Labels (Assumptions Overview)",
        "show_if": "options.output_type=='pdf_planning_package' && options.bs_data__custom_labels=='true'",
        "repeat": false,
        "fields": {
          "options.bs_data.title_planning_assumptions": {
            "type": "text",
            "label": "Planning Assumptions",
            "placeholder": "Planning Assumptions",
            "val": "Planning Assumptions"
          },
          "options.bs_data.sub_title_planning_assumptions": {
            "type": "text",
            "label": "Subtitle Planning Assumptions",
            "placeholder": "Subtitle Planning Assumptions",
            "val": ""
          },
          "options.bs_data.notes_planning_assumptions": {
            "type": "text",
            "label": "Notes Planning Assumptions",
            "placeholder": "Notes Planning Assumptions",
            "val": ""
          },
          "options.bs_data.title_planning_package": {
            "type": "text",
            "label": "Title Planning Package",
            "placeholder": "Title Planning Package",
            "val": "Planning Package"
          },
          "options.bs_data.sub_title_planning_package": {
            "type": "text",
            "label": "Subtitle Planning Package",
            "placeholder": "Subtitle Planning Package",
            "val": ""
          },
          "options.bs_data.assumptions_position_name": {
            "type": "text",
            "label": "Assumptions Position Name",
            "placeholder": "Assumptions Position Name",
            "val": "Position"
          },
          "options.bs_data.assumptions_sub_position_name": {
            "type": "text",
            "label": "Assumptions Sub Position Name",
            "placeholder": "Assumptions Sub Position Name",
            "val": "Sub Position"
          },
          "options.bs_data.assumptions_item_name": {
            "type": "text",
            "label": "Assumptions Item Name",
            "placeholder": "Assumptions Item Name",
            "val": "Item"
          },
          "options.bs_data.assumptions_amount_name": {
            "type": "text",
            "label": "Assumptions Amount Name",
            "placeholder": "Assumptions Amount Name",
            "val": "Amount"
          },
          "options.bs_data.assumptions_payment_days_name": {
            "type": "text",
            "label": "Assumptions Payment Days Name",
            "placeholder": "Assumptions Payment Days Name",
            "val": "Payment Days"
          },
          "options.bs_data.assumptions_initial_date_name": {
            "type": "text",
            "label": "Assumptions Initial Date Name",
            "placeholder": "Assumptions Initial Date Name",
            "val": "(Initial) Date"
          },
          "options.bs_data.assumptions_final_date_name": {
            "type": "text",
            "label": "Assumptions Final Date Name",
            "placeholder": "Assumptions Final Date Name",
            "val": "Final Date"
          },
          "options.bs_data.assumptions_repetition_name": {
            "type": "text",
            "label": "Assumptions Repetition Name",
            "placeholder": "Assumptions Repetition Name",
            "val": "Repetition"
          },
          "options.bs_data.assumptions_growth_name": {
            "type": "text",
            "label": "Assumptions Growth Name",
            "placeholder": "Assumptions Growth Name",
            "val": "Growth..."
          },
          "options.bs_data.assumptions_applied_on_period_name": {
            "type": "text",
            "label": "Assumptions Applied on Period Name",
            "placeholder": "Assumptions Applied on Period Name",
            "val": "...applied on period"
          },
          "options.bs_data.assumptions_growth_curve_name": {
            "type": "text",
            "label": "Assumptions Growth Curve Name",
            "placeholder": "Assumptions Growth Curve Name",
            "val": "Growth Curve"
          },
          "options.bs_data.assumptions_notes_name": {
            "type": "text",
            "label": "Assumptions Notes Name",
            "placeholder": "Assumptions Notes Name",
            "val": "Notes"
          }
        },
        "breakLine": true
      },
      "options.add_categories": {
        "type": "checkbox",
        "label": "Add Categories",
        "show_if": "options.configure_by_table=='by_assumption_menu'",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "options.categories": {
        "type": "fieldset",
        "label": "Add Categories",
        "show_if": "options.configure_by_table=='by_assumption_menu' && options.add_categories=='true'",
        "repeat": true,
        "fields": {
          "category": {
            "type": "text",
            "label": "Category",
            "val": "",
            "required": true
          },
          "value": {
            "type": "text",
            "label": "Value",
            "val": ""
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        },
        "breakLine": true
      },
      "options.start_date": {
        "type": "date",
        "label": "Start Date of Table",
        "val": ""
      },
      "options.end_date": {
        "type": "date",
        "label": "End Date of Table",
        "val": "",
        "breakLine": true
      }
    }
  },
  "formatting_frame": {
    "type": "fieldset",
    "label": "Set Formatting",
    "show_if": "options.set_plan_config=='true'",
    "repeat": false,
    "fields": {
      "options.set_amount_column_formatting": {
        "type": "checkbox",
        "label": "Set Amount Column Formatting",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px"
      },
      "amount_column_formatting_frame": {
        "type": "fieldset",
        "label": "Amount Column Formatting",
        "show_if": "options.set_amount_column_formatting=='true'",
        "repeat": false,
        "fields": {
          "options.amount.format__category": {
            "type": "select",
            "label": "Amount Format",
            "required": true,
            "options": {
              "standard": {
                "label": "Standard"
              },
              "number": {
                "label": "Number"
              },
              "percentage": {
                "label": "Percentage"
              },
              "text": {
                "label": "Text"
              },
              "currency": {
                "label": "Currency"
              }
            },
            "val": "currency"
          },
          "options.amount.format__rounding": {
            "type": "select",
            "label": "Decimal Places for display",
            "show_if": "options.amount.format__category=='number' || options.amount.format__category=='percentage' || options.amount.format__category=='currency'",
            "required": true,
            "options": {
              "no_rounding": {
                "label": "No rounding"
              },
              "0": {
                "label": "0 digits"
              },
              "1": {
                "label": "1 digits"
              },
              "2": {
                "label": "2 digits"
              },
              "3": {
                "label": "3 digits"
              },
              "4": {
                "label": "4 digits"
              },
              "5": {
                "label": "5 digits"
              },
              "6": {
                "label": "6 digits"
              },
              "7": {
                "label": "7 digits"
              },
              "8": {
                "label": "8 digits"
              },
              "9": {
                "label": "9 digits"
              }
            },
            "val": "2"
          },
          "options.amount.format__use_1000_separator": {
            "type": "checkbox",
            "label": "Use 1000 Separator(,)",
            "show_if": "options.amount.format__category=='number' || options.amount.format__category=='percentage' || options.amount.format__category=='currency'",
            "val": "true",
            "isOn": "true",
            "isOff": "false"
          },
          "options.amount.format__currency_symbol": {
            "type": "select",
            "label": "Symbol",
            "show_if": "options.amount.format__category=='currency'",
            "required": true,
            "options": {
              "dollar": {
                "label": "$"
              },
              "euro": {
                "label": "€"
              },
              "pound": {
                "label": "£"
              },
              "yen": {
                "label": "¥ (Yen, currency of Japan)"
              },
              "colon": {
                "label": "₡ (Colón, currency of Costa Rica)"
              },
              "naira": {
                "label": "₦ (Naira, currency of Nigeria)"
              },
              "rupee": {
                "label": "₨ (Rupee, currency of India)"
              },
              "rupie": {
                "label": "₹ (Rupee, currency of India)"
              },
              "won": {
                "label": "₩ (Won, currency in South Korea and North Korea)"
              },
              "hebrew": {
                "label": "₪ (Currency of Israel)"
              },
              "dong": {
                "label": "₫ (Currency of Vietnam)"
              },
              "kip": {
                "label": "₭ (Kip, currency of Laos)"
              },
              "mongolia": {
                "label": "₮ (Currency of Mongolia)"
              },
              "peso": {
                "label": "₱ (Peso, currency of the Philippines)"
              },
              "guarani": {
                "label": "₲ (Guaraní, currency of Paraguay)"
              },
              "hryvnia": {
                "label": "₴ (Hryvnia, currency of Ukraine)"
              },
              "tenge": {
                "label": "₸ (Tenge, currency of Kazakhstan)"
              },
              "lira": {
                "label": "₺ (Lira, currency of Turkey)"
              },
              "manat": {
                "label": "₼ (Manat, currency of Azerbaijan)"
              },
              "rubles": {
                "label": "₽ (Rubles, currency of Russia)"
              },
              "lari": {
                "label": "₾ (Lari, currency of Georgia)"
              },
              "bitcoin": {
                "label": "₿ (Bitcoin, crypto currency)"
              }
            },
            "val": "dollar"
          },
          "options.amount.format__date_format": {
            "type": "select",
            "label": "Type",
            "show_if": "options.amount.format__category=='date'",
            "required": true,
            "options": {
              "mm/dd/yyyy": {
                "label": "3/14/2012"
              },
              "D, M dd, Y": {
                "label": "Wednesday, March 14, 2012"
              },
              "yyyy-mm-dd": {
                "label": "2012-03-14"
              },
              "m.dd.yyyy": {
                "label": "3.14.2012"
              },
              "m.dd.yy": {
                "label": "3.14.12"
              },
              "dd.m.yyyy": {
                "label": "14.3.2012"
              },
              "dd.m.yy": {
                "label": "14.3.12"
              },
              "M dd, Y": {
                "label": "March 14, 2012"
              },
              "dd-mm-yyyy": {
                "label": "14-03-2012"
              },
              "mm-dd-yyyy": {
                "label": "03-14-2012"
              },
              "dd-mm-yy": {
                "label": "14-03-12"
              },
              "mm-dd-yy": {
                "label": "03-14-12"
              }
            },
            "val": "mm/dd/yyyy",
            "breakLine": true
          }
        },
        "breakLine": true
      },
      "options.set_date_column_formatting": {
        "type": "checkbox",
        "label": "Set Date Column Formatting",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px"
      },
      "date_column_formatting_frame": {
        "type": "fieldset",
        "label": "Date Column Formatting",
        "show_if": "options.set_date_column_formatting=='true'",
        "repeat": false,
        "fields": {
          "options.date.format__category": {
            "type": "hidden",
            "val": "date"
          },
          "options.date.format__date_format": {
            "type": "select",
            "label": "Type",
            "show_if": "options.date.format__category=='date'",
            "required": true,
            "options": {
              "mm/dd/yyyy": {
                "label": "3/14/2012"
              },
              "D, M dd, Y": {
                "label": "Wednesday, March 14, 2012"
              },
              "yyyy-mm-dd": {
                "label": "2012-03-14"
              },
              "m.dd.yyyy": {
                "label": "3.14.2012"
              },
              "m.dd.yy": {
                "label": "3.14.12"
              },
              "dd.m.yyyy": {
                "label": "14.3.2012"
              },
              "dd.m.yy": {
                "label": "14.3.12"
              },
              "M dd, Y": {
                "label": "March 14, 2012"
              },
              "dd-mm-yyyy": {
                "label": "14-03-2012"
              },
              "mm-dd-yyyy": {
                "label": "03-14-2012"
              },
              "dd-mm-yy": {
                "label": "14-03-12"
              },
              "mm-dd-yy": {
                "label": "03-14-12"
              }
            },
            "val": "mm/dd/yyyy",
            "breakLine": true
          }
        },
        "breakLine": true
      }
    }
  }
}
,
"/PlanningOutput.json/PlanningOutput.json": {
  "output": {
    "type": "fieldset",
    "label": "Output and Settings",
    "show_if": "(options.output_type=='table_output' && output.output_and_setting=='true') || (options.output_type=='pdf_planning_package' && options.where_to_create=='only_export_to_cloud' && output.output_and_setting=='true')",
    "repeat": false,
    "fields": {
    }
  }
},
"/TableToJsonOptions.json/TableToJsonOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.category": {
        "type": "hidden",
        "val": "table_to_json"
      }
    }
  }
},
"/DCClimateWorldDataOptions.json/DCClimateWorldDataOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.task_symbol": {
        "type": "hidden",
        "val": "climate"
      },
      "options.group_by": {
        "type": "select",
        "label": "Group By",
        "required": true,
        "options": {
          "Region": {
            "label": "Region"
          },
          "Income Group": {
            "label": "Income Group"
          }
        },
        "val": "Region"
      },
      "options.stat_var_name": {
        "type": "select",
        "label": "Statistics Data",
        "required": true,
        "options": {
          "Amount_Emissions_CarbonDioxide_PerCapita": {
            "label": "CO2 Emissions Per Capita"
          },
          "Count_EarthquakeEvent": {
            "label": "Count of Earthquake Event"
          },
          "Count_EarthquakeEvent_M3To4": {
            "label": "Count of Earthquake Event of 3 - 4 Magnitude"
          },
          "Count_EarthquakeEvent_M3Onwards": {
            "label": "Count of Earthquake Event of 3 Magnitude or More"
          },
          "Count_EarthquakeEvent_M4To5": {
            "label": "Count of Earthquake Event of 4 - 5 Magnitude"
          },
          "Count_EarthquakeEvent_M4Onwards": {
            "label": "Count of Earthquake Event of 4 Magnitude or More"
          },
          "Count_EarthquakeEvent_M5To6": {
            "label": "Count of Earthquake Event of 5 - 6 Magnitude"
          },
          "Count_EarthquakeEvent_M5Onwards": {
            "label": "Count of Earthquake Event of 5 Magnitude or More"
          },
          "Max_Temperature": {
            "label": "Max Temperature"
          },
          "DifferenceAcrossModels_Max_Temperature": {
            "label": "Max Temperature (Difference Across Models)"
          },
          "Min_Temperature": {
            "label": "Min Temperature"
          },
          "DifferenceAcrossModels_Min_Temperature": {
            "label": "Min Temperature (Difference Across Models)"
          },
          "PrecipitationRate": {
            "label": "Precipitation Rate"
          },
          "DifferenceAcrossModels_PrecipitationRate": {
            "label": "Precipitation Rate (Difference Across Models)"
          },
          "Max_Temperature_RCP45": {
            "label": "Max Temperature Based on RCP 4.5"
          },
          "DifferenceAcrossModels_Max_Temperature_RCP45": {
            "label": "Max Temperature Based on RCP 4.5 (Difference Across Models)"
          },
          "Min_Temperature_RCP45": {
            "label": "Min Temperature Based on RCP 4.5"
          },
          "DifferenceAcrossModels_Min_Temperature_RCP45": {
            "label": "Min Temperature Based on RCP 4.5 (Difference Across Models)"
          },
          "PrecipitationRate_RCP45": {
            "label": "Precipitation Rate Based on RCP 4.5"
          },
          "DifferenceAcrossModels_PrecipitationRate_RCP45": {
            "label": "Precipitation Rate Based on RCP 4.5 (Difference Across Models)"
          },
          "DifferenceRelativeToBaseDate2006_Max_Temperature_RCP45": {
            "label": "Max Temperature Relative To 2006, RCP 4.5 (Difference Relative To Base Date)"
          },
          "DifferenceRelativeToBaseDate2006_Min_Temperature_RCP45": {
            "label": "Min Temperature Relative To 2006, RCP 4.5 (Difference Relative To Base Date)"
          },
          "DifferenceRelativeToBaseDate2006_PrecipitationRate_RCP45": {
            "label": "Precipitation Rate Relative To 2006, RCP 4.5 (Difference Relative To Base Date)"
          },
          "Max_Temperature_RCP85": {
            "label": "Max Temperature Based on RCP 8.5"
          },
          "DifferenceAcrossModels_Max_Temperature_RCP85": {
            "label": "Max Temperature Based on RCP 8.5 (Difference Across Models)"
          },
          "Min_Temperature_RCP85": {
            "label": "Min Temperature Based on RCP 8.5"
          },
          "DifferenceAcrossModels_Min_Temperature_RCP85": {
            "label": "Min Temperature Based on RCP 8.5 (Difference Across Models)"
          },
          "PrecipitationRate_RCP85": {
            "label": "Precipitation Rate Based on RCP 8.5"
          },
          "DifferenceAcrossModels_PrecipitationRate_RCP85": {
            "label": "Precipitation Rate Based on RCP 8.5 (Difference Across Models)"
          },
          "DifferenceRelativeToBaseDate2006_Max_Temperature_RCP85": {
            "label": "Max Temperature Relative To 2006, RCP 8.5 (Difference Relative To Base Date)"
          },
          "DifferenceRelativeToBaseDate2006_Min_Temperature_RCP85": {
            "label": "Min Temperature Relative To 2006, RCP 8.5 (Difference Relative To Base Date)"
          },
          "DifferenceRelativeToBaseDate2006_PrecipitationRate_RCP85": {
            "label": "Precipitation Rate Relative To 2006, RCP 8.5 (Difference Relative To Base Date)"
          },
          "DifferenceRelativeToBaseDate1990_Max_Temperature": {
            "label": "Max Temperature Relative To 1990 (Difference Relative To Base Date)"
          },
          "DifferenceRelativeToBaseDate1990_Min_Temperature": {
            "label": "Min Temperature Relative To 1990 (Difference Relative To Base Date)"
          },
          "DifferenceRelativeToBaseDate1990_PrecipitationRate": {
            "label": "Precipitation Rate Relative To 1990 (Difference Relative To Base Date)"
          }
        },
        "val": "Amount_Emissions_CarbonDioxide_PerCapita"
      },
      "options.per_capita": {
        "type": "checkbox",
        "label": "Per capita",
        "show_if": "false",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.help_1": {
        "type": "text",
        "label": "",
        "show_if": "options.stat_var_name=='Max_Temperature_RCP45' || options.stat_var_name=='DifferenceAcrossModels_Max_Temperature_RCP45' || options.stat_var_name=='DifferenceRelativeToBaseDate2006_Max_Temperature_RCP45'",
        "val": "Maximum near-surface air temperature under RCP4.5 emissions scenario",
        "disabled": true,
        "width": "100%"
      },
      "options.help_2": {
        "type": "text",
        "label": "",
        "show_if": "options.stat_var_name=='Min_Temperature_RCP45' || options.stat_var_name=='DifferenceAcrossModels_Min_Temperature_RCP45' || options.stat_var_name=='DifferenceRelativeToBaseDate2006_Min_Temperature_RCP45'",
        "val": "Minimum near-surface air temperature under RCP4.5 emissions scenario",
        "disabled": true,
        "width": "100%"
      },
      "options.help_3": {
        "type": "text",
        "label": "",
        "show_if": "options.stat_var_name=='PrecipitationRate_RCP45' || options.stat_var_name=='DifferenceAcrossModels_PrecipitationRate_RCP45' || options.stat_var_name=='DifferenceRelativeToBaseDate2006_PrecipitationRate_RCP45'",
        "val": "Precipitation rate at surface projected under RCP4.5 emissions scenario",
        "disabled": true,
        "width": "100%"
      },
      "options.help_4": {
        "type": "text",
        "label": "",
        "show_if": "options.stat_var_name=='Max_Temperature_RCP85' || options.stat_var_name=='DifferenceAcrossModels_Max_Temperature_RCP85' || options.stat_var_name=='DifferenceRelativeToBaseDate2006_Max_Temperature_RCP85'",
        "val": "Maximum near-surface air temperature under RCP8.5 emissions scenario",
        "disabled": true,
        "width": "100%"
      },
      "options.help_5": {
        "type": "text",
        "label": "",
        "show_if": "options.stat_var_name=='Min_Temperature_RCP85' || options.stat_var_name=='DifferenceAcrossModels_Min_Temperature_RCP85' || options.stat_var_name=='DifferenceRelativeToBaseDate2006_Min_Temperature_RCP85'",
        "val": "Minimum near-surface air temperature under RCP8.5 emissions scenario",
        "disabled": true,
        "width": "100%"
      },
      "options.help_6": {
        "type": "text",
        "label": "",
        "show_if": "options.stat_var_name=='PrecipitationRate_RCP85' || options.stat_var_name=='DifferenceAcrossModels_PrecipitationRate_RCP85' || options.stat_var_name=='DifferenceRelativeToBaseDate2006_PrecipitationRate_RCP85'",
        "val": "Precipitation rate at surface projected under RCP8.5 emissions scenario",
        "disabled": true,
        "width": "100%"
      },
      "options.all_countries": {
        "type": "checkbox",
        "label": "All countries",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.output_as_chart": {
        "type": "checkbox",
        "label": "Output a Graph",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "options.graph_type": {
        "type": "select",
        "label": "Graph Type",
        "show_if": "options.output_as_chart=='true'",
        "required": true,
        "options": {
          "zoomable_sunburst": {
            "label": "Sunburst"
          },
          "tidy_tree": {
            "label": "Tree"
          },
          "treemap": {
            "label": "Treemap"
          }
        },
        "val": "zoomable_sunburst",
        "breakLine": true
      }
    }
  }
}
,
"/DCEducationWorldDataOptions.json/DCEducationWorldDataOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.group_by": {
        "type": "select",
        "label": "Group By",
        "required": true,
        "options": {
          "Region": {
            "label": "Region"
          },
          "Income Group": {
            "label": "Income Group"
          }
        },
        "val": "Region",
        "breakLine": true
      },
      "options.stat_var_name": {
        "type": "select",
        "label": "Statistics Data",
        "required": true,
        "options": {
          "Count_Person_25OrMoreYears_BachelorsDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears": {
            "label": "Bachelors Degree or Higher Population Per Capita 25 or More Years"
          },
          "Count_Person_25OrMoreYears_Female_BachelorsDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears_Female": {
            "label": "Bachelors Degree or Higher, Female Population Per Capita 25 or More Years Female"
          },
          "Count_Person_25OrMoreYears_Male_BachelorsDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears_Male": {
            "label": "Bachelors Degree or Higher, Male Population Per Capita 25 or More Years Male"
          },
          "Count_Person_25OrMoreYears_DoctorateDegree_AsFractionOf_Count_Person_25OrMoreYears": {
            "label": "Doctorate Degree Population Per Capita 25 or More Years"
          },
          "Count_Person_25OrMoreYears_Female_DoctorateDegree_AsFractionOf_Count_Person_25OrMoreYears_Female": {
            "label": "Doctorate Degree, Female Population Per Capita 25 or More Years Female"
          },
          "Count_Person_25OrMoreYears_Male_DoctorateDegree_AsFractionOf_Count_Person_25OrMoreYears_Male": {
            "label": "Doctorate Degree, Male Population Per Capita 25 or More Years Male"
          },
          "Count_Person_25OrMoreYears_MastersDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears": {
            "label": "Masters Degree or Higher Population Per Capita 25 or More Years"
          },
          "Count_Person_25OrMoreYears_Female_MastersDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears_Female": {
            "label": "Masters Degree or Higher, Female Population Per Capita 25 or More Years Female"
          },
          "Count_Person_25OrMoreYears_Male_MastersDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears_Male": {
            "label": "Masters Degree or Higher, Male Population Per Capita 25 or More Years Male"
          },
          "Count_Person_25OrMoreYears_TertiaryEducation_AsFractionOf_Count_Person_25OrMoreYears": {
            "label": "Tertiary Education Population Per Capita 25 or More Years"
          },
          "Count_Person_25OrMoreYears_Female_TertiaryEducation_AsFractionOf_Count_Person_25OrMoreYears_Female": {
            "label": "Tertiary Education, Female Population Per Capita 25 or More Years Female"
          },
          "Count_Person_25OrMoreYears_Male_TertiaryEducation_AsFractionOf_Count_Person_25OrMoreYears_Male": {
            "label": "Tertiary Education, Male Population Per Capita 25 or More Years Male"
          }
        },
        "val": "Count_Person_25OrMoreYears_BachelorsDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears"
      },
      "options.per_capita": {
        "type": "checkbox",
        "label": "Per capita",
        "show_if": "false",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.all_countries": {
        "type": "checkbox",
        "label": "All countries",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.output_as_chart": {
        "type": "checkbox",
        "label": "Output a Graph",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "options.graph_type": {
        "type": "select",
        "label": "Graph Type",
        "show_if": "options.output_as_chart=='true'",
        "required": true,
        "options": {
          "zoomable_sunburst": {
            "label": "Sunburst"
          },
          "treemap": {
            "label": "Treemap"
          }
        },
        "val": "zoomable_sunburst",
        "breakLine": true
      }
    }
  }
}
,
"/EncryptOptions.json/EncryptOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "task_type": {
        "type": "select",
        "label": "Task Type",
        "required": true,
        "options": {
          "encrypt": {
            "label": "Encrypt (secure)"
          },
          "decrypt": {
            "label": "Decrypt (secure)"
          },
          "encrypt_simple": {
            "label": "Encrypt (simple)"
          },
          "decrypt_simple": {
            "label": "Decrypt (simple)"
          },
          "mask": {
            "label": "Mask"
          }
        },
        "val": "encrypt"
      },
      "mask_type": {
        "type": "select",
        "label": "Mask Type",
        "show_if": "task_type == 'mask'",
        "required": true,
        "options": {
          "trailing": {
            "label": "Trailing N Characters"
          },
          "leading": {
            "label": "Leading N Characters"
          },
          "numbers": {
            "label": "Numbers"
          },
          "alphabets": {
            "label": "Characters"
          },
          "regex": {
            "label": "Regular Expression"
          }
        },
        "val": "trailing"
      },
      "password": {
        "type": "password",
        "label": "Password",
        "show_if": "task_type != 'mask'",
        "required": true,
        "minLength": 1,
        "maxLength": 31,
        "val": ""
      },
      "varn": {
        "type": "number",
        "label": "N",
        "show_if": "task_type == 'mask' && (mask_type == 'trailing' || mask_type == 'leading')",
        "required": true,
        "val": 1
      },
      "regexp": {
        "type": "text",
        "label": "Expression",
        "show_if": "task_type == 'mask' && (mask_type == 'regex')",
        "required": true,
        "val": "",
        "placeholder": "[a-fA-F0-9]"
      },
      "replace": {
        "type": "text",
        "label": "Mask string",
        "show_if": "task_type == 'mask' && (mask_type == 'regex')",
        "required": true,
        "val": "*",
        "breakLine": true
      }
    }
  }
}
,
"/LookupInput.json/LookupInput.json": {
  "columns": {
    "type": "select",
    "label": "Select column(s)",
    "show_if": "search_tables=='false' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells')",
    "table": "table_id",
    "multiple": true,
    "bind": "COLUMNS",
    "required": true
  },
  "search_tables__columns_text": {
    "type": "text",
    "label": "Select column(s) (separated by `;`)",
    "show_if": "search_tables=='true' && search_tables__select_columns_by=='by_name_text' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells')",
    "val": "",
    "placeholder": "Column1; Column2; ColumnN",
    "required": true,
    "style": "width: 100%"
  },
  "search_tables__columns_order": {
    "type": "select",
    "label": "Select column(s)",
    "required": true,
    "show_if" :  "search_tables=='true' && search_tables__select_columns_by=='by_order' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells')",
    "options": {
      "col1": {
        "label": "Column 1"
      },
      "col2": {
        "label": "Column 2"
      },
      "col3": {
        "label": "Column 3"
      },
      "col4": {
        "label": "Column 4"
      },
      "col5": {
        "label": "Column 5"
      },
      "col6": {
        "label": "Column 6"
      },
      "col7": {
        "label": "Column 7"
      },
      "col8": {
        "label": "Column 8"
      },
      "col9": {
        "label": "Column 9"
      },
      "col10": {
        "label": "Column 10"
      },
      "col11": {
        "label": "Column 11"
      },
      "col12": {
        "label": "Column 12"
      },
      "col13": {
        "label": "Column 13"
      },
      "col14": {
        "label": "Column 14"
      },
      "col15": {
        "label": "Column 15"
      },
      "col16": {
        "label": "Column 16"
      },
      "col17": {
        "label": "Column 17"
      },
      "col18": {
        "label": "Column 18"
      },
      "col19": {
        "label": "Column 19"
      },
      "col20": {
        "label": "Column 20"
      }
    },
    "multiple": true,
    "val": []
  },
  "column_for_generate": {
    "type": "select",
    "label": "Select column",
    "show_if": "search_tables=='false' && (options.task_type=='label_duplicates' || options.task_type=='generate_lookup_table')",
    "table": "table_id",
    "bind": "COLUMNS",
    "required": true
  },
  "search_tables__column_for_generate_text": {
    "type": "text",
    "label": "Select column",
    "show_if": "search_tables=='true' && search_tables__select_columns_by=='by_name_text' && (options.task_type=='label_duplicates' || options.task_type=='generate_lookup_table')",
    "val": "",
    "placeholder": "Column1",
    "required": true
  },
  "search_tables__column_for_generate_order": {
    "type": "select",
    "label": "Select column",
    "required": true,
    "show_if" :  "search_tables=='true' && search_tables__select_columns_by=='by_order' && (options.task_type=='label_duplicates' || options.task_type=='generate_lookup_table')",
    "options": {
      "col1": {
        "label": "Column 1"
      },
      "col2": {
        "label": "Column 2"
      },
      "col3": {
        "label": "Column 3"
      },
      "col4": {
        "label": "Column 4"
      },
      "col5": {
        "label": "Column 5"
      },
      "col6": {
        "label": "Column 6"
      },
      "col7": {
        "label": "Column 7"
      },
      "col8": {
        "label": "Column 8"
      },
      "col9": {
        "label": "Column 9"
      },
      "col10": {
        "label": "Column 10"
      },
      "col11": {
        "label": "Column 11"
      },
      "col12": {
        "label": "Column 12"
      },
      "col13": {
        "label": "Column 13"
      },
      "col14": {
        "label": "Column 14"
      },
      "col15": {
        "label": "Column 15"
      },
      "col16": {
        "label": "Column 16"
      },
      "col17": {
        "label": "Column 17"
      },
      "col18": {
        "label": "Column 18"
      },
      "col19": {
        "label": "Column 19"
      },
      "col20": {
        "label": "Column 20"
      }
    },
    "val": ""
  }
},
"/JoinInput.json/JoinInput.json": {
  "input": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "left_table.table_id": {
        "type": "select",
        "label": "Select Left Table",
        "bind": "TABLES"
      },
      "left_table.remove_input_table_after_processing": {
        "type": "hidden",
        "val": "false"
      },
      "left_table.is_word": {
        "type": "hidden",
        "val": "false",
        "breakLine": true
      },
      "right_table.table_id": {
        "type": "select",
        "label": "Select Right Table",
        "bind": "TABLES"
      },
      "right_table.remove_input_table_after_processing": {
        "type": "hidden",
        "val": "false"
      },
      "right_table.is_word": {
        "type": "hidden",
        "val": "false"
      }
    }
  }
}
,
"/RunIfFoundOptions.json/RunIfFoundOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Select Find Conditions",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.use_content_condition": {
        "type": "checkbox",
        "label": "Content Condition",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.content_condition": {
        "type": "fieldset",
        "label": "Content Condition",
        "show_if" :  "options.use_content_condition == 'true'",
        "repeat": true,
        "fields": {
          "initial_op": {
            "type": "select",
            "label": "Select Logic Operator",
            "required": true,
            "show_if" :  "$index == 0",
            "options": {
              "if": {
                "label": "IF"
              },
              "if_not": {
                "label": "IF NOT"
              }
            },
            "val": "if"
          },
          "op": {
            "type": "select",
            "label": "Select Logic Operator",
            "required": true,
            "show_if" :  "$index > 0",
            "options": {
              "and": {
                "label": "AND"
              },
              "or": {
                "label": "OR"
              },
              "and_not": {
                "label": "AND NOT"
              },
              "or_not": {
                "label": "OR NOT"
              }
            },
            "val": "and"
          },
          "column_header_name": {
            "type": "text",
            "label": "Column Header Name",
            "val": "",
            "required": true
          },
          "condition": {
            "type": "select",
            "label": "Select Operator",
            "required": true,
            "options": {
              "CONTAINS": {
                "label": "CONTAINS"
              },
              "CONTAINED IN STRING": {
                "label": "CONTAINED IN"
              },
              "STARTS WITH": {
                "label": "STARTS WITH"
              },
              "ENDS WITH": {
                "label": "ENDS WITH"
              },
              "=": {
                "label": "EQUAL"
              },
              ">": {
                "label": "GREATER THAN"
              },
              ">=": {
                "label": "GREATER OR EQUAL"
              },
              "<": {
                "label": "SMALLER THAN"
              },
              "<=": {
                "label": "SMALLER OR EQUAL"
              },
              "EMPTY": {
                "label": "IS EMPTY"
              },
              "BLANK": {
                "label": "IS BLANK"
              },
              "IS NULL": {
                "label": "IS NULL"
              },
              "IS TRUE": {
                "label": "IS TRUE"
              },
              "IS FALSE": {
                "label": "IS FALSE"
              },
              "REGEX MATCH": {
                "label": "REGEX MATCH"
              },
              "CONTAINED IN TABLE": {
                "label": "IN TABLE"
              },
              "IN REGEX TABLE": {
                "label": "IN REGEX TABLE"
              },
              "DATE": {
                "label": "DATE"
              }
            },
            "val": "CONTAINS"
          },
          "date_condition": {
            "type": "select",
            "label": "Select Date Operator",
            "required": true,
            "show_if": "this.condition == 'DATE'",
            "options": {
              "<": {
                "label": "PRIOR"
              },
              "<=": {
                "label": "PRIOR OR EQUAL"
              },
              "=": {
                "label": "EQUAL"
              },
              ">": {
                "label": "AFTER"
              },
              ">=": {
                "label": "AFTER OR EQUAL"
              }
            },
            "val": "="
          },
          "compare_with": {
            "type": "select",
            "label": "Compare with",
            "required": true,
            "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
            "options": {
              "custom_value": {
                "label": "Custom value"
              },
              "column_value": {
                "label": "Column value"
              }
            },
            "val": "custom_value"
          },
          "self_compare_column": {
            "type": "select",
            "label": "Select Compare Column",
            "table": "table_id",
            "bind": "COLUMNS",
            "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
            "required": true
          },
          "date_value": {
            "type": "date",
            "label": "Select Date",
            "show_if": "this.condition=='DATE'",
            "val": "",
            "required": true
          },
          "value": {
            "type": "text",
            "label": "Input Value",
            "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
            "val": "",
            "required": true
          },
          "case_sensitive": {
            "type": "select",
            "label": "Select Case Sensitive",
            "required": true,
            "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "options": {
              "yes": {
                "label": "Case Sensitive"
              },
              "no": {
                "label": "Case Insensitive"
              }
            },
            "val": "yes"
          },
          "compare_table_id": {
            "type": "select",
            "label": "Select Table",
            "bind": "TABLES",
            "empty": "",
            "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "required": true
          },
          "compare_column": {
            "type": "select",
            "label": "Select Column",
            "table": "this.compare_table_id",
            "bind": "COLUMNS",
            "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "required": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.use_column_condition": {
        "type": "checkbox",
        "label": "Column Condition",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.column_condition": {
        "type": "fieldset",
        "label": "Column Condition",
        "show_if" :  "options.use_column_condition == 'true'",
        "repeat": true,
        "fields": {
          "initial_op": {
            "type": "select",
            "label": "Logic Operator",
            "required": true,
            "show_if" :  "$index == 0",
            "options": {
              "if": {
                "label": "IF"
              },
              "if_not": {
                "label": "IF NOT"
              }
            },
            "val": "if"
          },
          "op": {
            "type": "select",
            "label": "Logic Operator",
            "required": true,
            "show_if" :  "$index > 0",
            "options": {
              "and": {
                "label": "AND"
              },
              "or": {
                "label": "OR"
              },
              "and_not": {
                "label": "AND NOT"
              },
              "or_not": {
                "label": "OR NOT"
              }
            },
            "val": "and"
          },
          "column_header_name": {
            "type": "text",
            "label": "Column Header Name",
            "val": "",
            "required": true
          },
          "rows": {
            "type": "select",
            "label": "Condition",
            "required": true,
            "options": {
              "All rows": {
                "label": "All rows"
              },
              "Some rows": {
                "label": "Some rows"
              }
            },
            "val": "All rows"
          },
          "condition": {
            "type": "select",
            "label": "Operator",
            "required": true,
            "options": {
              "CONTAINS": {
                "label": "CONTAINS"
              },
              "CONTAINED IN STRING": {
                "label": "CONTAINED IN"
              },
              "STARTS WITH": {
                "label": "STARTS WITH"
              },
              "ENDS WITH": {
                "label": "ENDS WITH"
              },
              "=": {
                "label": "EQUAL"
              },
              "REGEX MATCH": {
                "label": "REGEX MATCH"
              },
              "Only Numbers": {
                "label": "Only Numbers"
              },
              "Only Characters": {
                "label": "Only Characters"
              },
              "Contains Characters": {
                "label": "Contains Characters"
              },
              "Contains Whitespace": {
                "label": "Contains Whitespace"
              },
              "Contains Punctuation": {
                "label": "Contains Punctuation"
              }
            },
            "val": "CONTAINS"
          },
          "value": {
            "type": "text",
            "label": "Input Value",
            "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "val": "",
            "required": true
          },
          "case_sensitive": {
            "type": "select",
            "label": "Case Sensitive",
            "required": true,
            "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "options": {
              "yes": {
                "label": "Case Sensitive"
              },
              "no": {
                "label": "Case Insensitive"
              }
            },
            "val": "yes"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.use_table_condition": {
        "type": "checkbox",
        "label": "Table Condition",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "options.table_condition": {
        "type": "fieldset",
        "label": "Table Condition",
        "show_if" :  "options.use_table_condition == 'true'",
        "repeat": true,
        "fields": {
          "initial_op": {
            "type": "select",
            "label": "Logic Operator",
            "required": true,
            "show_if" :  "$index == 0",
            "options": {
              "if": {
                "label": "IF"
              },
              "if_not": {
                "label": "IF NOT"
              }
            },
            "val": "if"
          },
          "op": {
            "type": "select",
            "label": "Logic Operator",
            "required": true,
            "show_if" :  "$index > 0",
            "options": {
              "and": {
                "label": "AND"
              },
              "or": {
                "label": "OR"
              },
              "and_not": {
                "label": "AND NOT"
              },
              "or_not": {
                "label": "OR NOT"
              }
            },
            "val": "and"
          },
          "type": {
            "type": "select",
            "label": "Type",
            "required": true,
            "options": {
              "Table Name": {
                "label": "Table Name"
              },
              "Tags": {
                "label": "Tags"
              }
            },
            "val": "Table Name"
          },
          "rows": {
            "type": "select",
            "label": "Condition",
            "show_if": "this.type == 'Tags'",
            "required": true,
            "options": {
              "All Tags": {
                "label": "All Tags"
              },
              "Some Tags": {
                "label": "Some Tags"
              }
            },
            "val": "Some Tags"
          },
          "condition": {
            "type": "select",
            "label": "Operator",
            "required": true,
            "options": {
              "CONTAINS": {
                "label": "CONTAINS"
              },
              "CONTAINED IN STRING": {
                "label": "CONTAINED IN"
              },
              "STARTS WITH": {
                "label": "STARTS WITH"
              },
              "ENDS WITH": {
                "label": "ENDS WITH"
              },
              "=": {
                "label": "EQUAL"
              },
              "REGEX MATCH": {
                "label": "REGEX MATCH"
              }
            },
            "val": "CONTAINS"
          },
          "value": {
            "type": "text",
            "label": "Input Value",
            "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "val": "",
            "required": true
          },
          "case_sensitive": {
            "type": "select",
            "label": "Case Sensitive",
            "required": true,
            "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "options": {
              "yes": {
                "label": "Case Sensitive"
              },
              "no": {
                "label": "Case Insensitive"
              }
            },
            "val": "yes"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      }
    }
  }
}
,
"/PayInput.json/PayInput.json": {
  "input": {
    "type": "fieldset",
    "label": "Select Input Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "table_id": {
        "type": "select",
        "label": "Select Table",
        "bind": "TABLES",
        "empty": "",
        "required": true,
        "breakLine": true
      },
      "remove_input_table_after_processing": {
        "type": "hidden",
        "val": "false"
      },
      "is_word": {
        "type": "hidden",
        "val": "false"
      },
      "help_text_stripe_charge": {
        "type": "text",
        "label": "",
        "show_if": "options.provider=='stripe' && options.type=='charge'",
        "val": "Table Structure ( Customer ID | Card ID | Currency | Amount )",
        "disabled": true,
        "width": "100%"
      },
      "help_text_stripe_transfer": {
        "type": "text",
        "label": "",
        "show_if": "options.provider=='stripe' && options.type=='transfer'",
        "val": "Table Structure ( Connected Account  ID | Currency | Amount )",
        "disabled": true,
        "width": "100%"
      }
    }
  }
}
,
"/FlexmonsterBarOptions.json/FlexmonsterBarOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "show_if": "options.configure_manual=='true'",
    "repeat": false,
    "fields": {
      "options.type": {
        "type": "hidden",
        "val": "bar_chart"
      },
      "options.chart_type": {
        "type": "hidden",
        "val": "bar_h"
      },
      "options.add_column_cols": {
        "type": "checkbox",
        "label": "by Category",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.column_cols": {
        "type": "fieldset",
        "label": "Category column(s)",
        "show_if": "options.add_column_cols=='true'",
        "repeat": true,
        "fields": {
          "column_col": {
            "type": "select",
            "label": "Category column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "is_date": {
            "type": "checkbox",
            "label": "Is Date",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.row_cols": {
        "type": "fieldset",
        "label": "Series column(s)",
        "repeat": true,
        "fields": {
          "row_col": {
            "type": "select",
            "label": "Series column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "is_date": {
            "type": "checkbox",
            "label": "Is Date",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.measure_cols": {
        "type": "fieldset",
        "label": "Value column(s)",
        "repeat": true,
        "fields": {
          "measure_col": {
            "type": "select",
            "label": "Value Column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "aggregation": {
            "type": "select",
            "label": "Aggregation Function",
            "options": {
              "sum": {
                "label": "Sum"
              },
              "count": {
                "label": "Count"
              },
              "distinctcount": {
                "label": "Distinct Count"
              },
              "average": {
                "label": "Average"
              },
              "median": {
                "label": "Median"
              },
              "product": {
                "label": "Product"
              },
              "min": {
                "label": "Min"
              },
              "max": {
                "label": "Max"
              },
              "stdevp": {
                "label": "Population Standard Deviation"
              },
              "stdevs": {
                "label": "Sample Standard Deviation"
              },
              "percent": {
                "label": "Percent"
              }
            },
            "val": "sum",
            "required": true,
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      }
    }
  }
}
,
"/Attribute Summary.json/Attribute Summary.json": ,
"/FlexmonsterLineOptions.json/FlexmonsterLineOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "show_if": "options.configure_manual=='true'",
    "repeat": false,
    "fields": {
      "options.type": {
        "type": "hidden",
        "val": "line_chart"
      },
      "options.chart_type": {
        "type": "hidden",
        "val": "line"
      },
      "options.add_column_cols": {
        "type": "checkbox",
        "label": "by Category",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.column_cols": {
        "type": "fieldset",
        "label": "Category column(s)",
        "show_if": "options.add_column_cols=='true'",
        "repeat": true,
        "fields": {
          "column_col": {
            "type": "select",
            "label": "Category column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "is_date": {
            "type": "checkbox",
            "label": "Is Date",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.row_cols": {
        "type": "fieldset",
        "label": "Series column(s)",
        "repeat": true,
        "fields": {
          "row_col": {
            "type": "select",
            "label": "Series column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "is_date": {
            "type": "checkbox",
            "label": "Is Date",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.measure_cols": {
        "type": "fieldset",
        "label": "Value column(s)",
        "repeat": true,
        "fields": {
          "measure_col": {
            "type": "select",
            "label": "Value Column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "aggregation": {
            "type": "select",
            "label": "Aggregation Function",
            "options": {
              "sum": {
                "label": "Sum"
              },
              "count": {
                "label": "Count"
              },
              "distinctcount": {
                "label": "Distinct Count"
              },
              "average": {
                "label": "Average"
              },
              "median": {
                "label": "Median"
              },
              "product": {
                "label": "Product"
              },
              "min": {
                "label": "Min"
              },
              "max": {
                "label": "Max"
              },
              "stdevp": {
                "label": "Population Standard Deviation"
              },
              "stdevs": {
                "label": "Sample Standard Deviation"
              },
              "percent": {
                "label": "Percent"
              }
            },
            "val": "sum",
            "required": true,
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      }
    }
  }
}
,
"/UserManageOptions.json/UserManageOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Select Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.manage_type": {
        "type": "select",
        "label": "Type",
        "required": true,
        "options": {
          "add_user": {
            "label": "Add user"
          },
          "delete_user": {
            "label": "Delete user"
          }
        },
        "val": "add_user",
        "breakLine": true
      },
      "options.email": {
        "type": "text",
        "label": "MS login email",
        "show_if": "options.manage_type=='add_user'",
        "required": true,
        "val": "",
        "breakLine": true
      },
      "options.user_role": {
        "type": "select",
        "label": "User role",
        "show_if": "options.manage_type=='add_user'",
        "options": {
          "ROLE_USER": {
            "label": "User"
          },
          "ROLE_ADMIN": {
            "label": "Admin"
          }
        },
        "val": "ROLE_USER",
        "breakLine": true
      },
      "options.points": {
        "type": "number",
        "label": "Available points",
        "show_if": "options.manage_type=='add_user'",
        "required": true,
        "val": 100,
        "breakLine": true
      },
      "options.user_id_to_delete": {
        "type": "number",
        "label": "User ID",
        "show_if": "options.manage_type=='delete_user'",
        "required": true,
        "val": 0,
        "breakLine": true
      }
    }
  }
}
,
"/DCCOVID19WorldDataOptions.json/DCCOVID19WorldDataOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.group_by": {
        "type": "select",
        "label": "Group By",
        "required": true,
        "options": {
          "Region": {
            "label": "Region"
          },
          "Income Group": {
            "label": "Income Group"
          }
        },
        "val": "Region"
      },
      "options.stat_var_name": {
        "type": "select",
        "label": "Statistics Data",
        "required": true,
        "options": {
          "CumulativeCount_Vaccine_COVID_19_Administered": {
            "label": "Cumulative Count of COVID_19, Vaccine Administered"
          },
          "IncrementalCount_Vaccine_COVID_19_Administered": {
            "label": "Incremental Count of COVID_19, Vaccine Administered"
          },
          "CumulativeCount_MedicalTest_ConditionCOVID_19": {
            "label": "Cumulative Count of COVID_19"
          },
          "IncrementalCount_MedicalTest_ConditionCOVID_19": {
            "label": "Incremental Count of COVID_19"
          },
          "CumulativeCount_MedicalTest_COVID_19_PCR": {
            "label": "Cumulative Count of COVID_19, COVID-19 PCRTest"
          },
          "IncrementalCount_MedicalTest_COVID_19_PCR": {
            "label": "Incremental Count of COVID_19, COVID-19 PCRTest"
          },
          "CumulativeCount_MedicalConditionIncident_COVID_19_ConfirmedCase": {
            "label": "Cumulative Count of Confirmed Case"
          },
          "IncrementalCount_MedicalConditionIncident_COVID_19_ConfirmedCase": {
            "label": "Incremental Count of Confirmed Case"
          },
          "CumulativeCount_MedicalConditionIncident_COVID_19_PatientDeceased": {
            "label": "Cumulative Count of Patient Deceased"
          },
          "IncrementalCount_MedicalConditionIncident_COVID_19_PatientDeceased": {
            "label": "Incremental Count of Patient Deceased"
          },
          "Count_MedicalConditionIncident_COVID_19_PatientHospitalized": {
            "label": "Count of Patient Hospitalized"
          },
          "Count_MedicalConditionIncident_COVID_19_PatientInICU": {
            "label": "Count of Patient in ICU"
          },
          "dc/n9rqwq8d3lcx3": {
            "label": "Covid 19 Mobility Trend of Grocery Store & Pharmacy"
          },
          "dc/0ny9m7k0lzmn5": {
            "label": "Covid 19 Mobility Trend of Local Business"
          },
          "dc/p49ghylpwz93f": {
            "label": "Covid 19 Mobility Trend of Park"
          },
          "dc/7fmnve6yyc508": {
            "label": "Covid 19 Mobility Trend of Residence"
          },
          "dc/qdbhwwr88yhl7": {
            "label": "Covid 19 Mobility Trend of Transport Hub"
          },
          "dc/tbbjnf9bk96yh": {
            "label": "Covid 19 Mobility Trend of Workplace"
          }
        },
        "val": "CumulativeCount_Vaccine_COVID_19_Administered"
      },
      "options.per_capita": {
        "type": "checkbox",
        "label": "Per capita",
        "show_if": "false",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.all_countries": {
        "type": "checkbox",
        "label": "All countries",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.output_as_chart": {
        "type": "checkbox",
        "label": "Output a Graph",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "options.graph_type": {
        "type": "select",
        "label": "Graph Type",
        "show_if": "options.output_as_chart=='true'",
        "required": true,
        "options": {
          "zoomable_sunburst": {
            "label": "Sunburst"
          },
          "tidy_tree": {
            "label": "Tree"
          },
          "treemap": {
            "label": "Treemap"
          }
        },
        "val": "zoomable_sunburst",
        "breakLine": true
      }
    }
  }
}
,
"/FlexmonsterPieOptions.json/FlexmonsterPieOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "show_if": "options.configure_manual=='true'",
    "repeat": false,
    "fields": {
      "options.type": {
        "type": "hidden",
        "val": "pie_chart"
      },
      "options.chart_type": {
        "type": "hidden",
        "val": "pie"
      },
      "options.add_column_cols": {
        "type": "checkbox",
        "label": "by Category",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.column_cols": {
        "type": "fieldset",
        "label": "Category column(s)",
        "show_if": "options.add_column_cols=='true'",
        "repeat": true,
        "fields": {
          "column_col": {
            "type": "select",
            "label": "Category column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "is_date": {
            "type": "checkbox",
            "label": "Is Date",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.row_cols": {
        "type": "fieldset",
        "label": "Pie column(s)",
        "repeat": true,
        "fields": {
          "row_col": {
            "type": "select",
            "label": "Pie column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "is_date": {
            "type": "checkbox",
            "label": "Is Date",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.measure_cols": {
        "type": "fieldset",
        "label": "Value column(s)",
        "repeat": true,
        "fields": {
          "measure_col": {
            "type": "select",
            "label": "Value Column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "aggregation": {
            "type": "select",
            "label": "Aggregation Function",
            "options": {
              "sum": {
                "label": "Sum"
              },
              "count": {
                "label": "Count"
              },
              "distinctcount": {
                "label": "Distinct Count"
              },
              "average": {
                "label": "Average"
              },
              "median": {
                "label": "Median"
              },
              "product": {
                "label": "Product"
              },
              "min": {
                "label": "Min"
              },
              "max": {
                "label": "Max"
              },
              "stdevp": {
                "label": "Population Standard Deviation"
              },
              "stdevs": {
                "label": "Sample Standard Deviation"
              },
              "percent": {
                "label": "Percent"
              }
            },
            "val": "sum",
            "required": true,
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      }
    }
  }
}
,
"/CleanOptions.json/CleanOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; border: none; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "modify_case": {
        "type": "fieldset",
        "label": "",
        "style": "float: left; width: 43%; min-height: 155px; border: 1px solid #ccc",
        "repeat": false,
        "fields": {
          "modify_case": {
            "type": "checkbox",
            "label": "Modify Case",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": false
          },
          "modify_case_by": {
            "type": "radio",
            "show_if": "modify_case=='true'",
            "val": "upper",
            "values": {
              "upper": "to Upper Case",
              "lower": "to Lower Case",
              "title": "to Title Case"
            },
            "breakLine": false
          }
        }
      },
      "replace_null": {
        "type": "fieldset",
        "label": "",
        "style": "float: right; width: 43%; min-height: 155px; border: 1px solid #ccc",
        "repeat": false,
        "fields": {
          "replace_null": {
            "type": "checkbox",
            "label": "Treat Empty Records",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "replace_null_type": {
            "type": "select",
            "label": "Action",
            "show_if": "replace_null=='true'",
            "options": {
              "Replace Empty by Blank": {
                "label": "Replace Empty by Blank"
              },
              "Replace Empty by Zero": {
                "label": "Replace Empty by Zero"
              },
              "Replace Blank by Zero": {
                "label": "Replace Blank by Zero"
              },
              "Replace NULL by Blank": {
                "label": "Replace NULL by Blank"
              },
              "Replace NULL by Zero": {
                "label": "Replace NULL by Zero"
              }
            },
            "val": "Replace Empty by Zero",
            "breakLine": true
          },
          "delete_corresponding_row": {
            "type": "checkbox",
            "label": "Delete corresponding row",
            "show_if": "replace_null=='true'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          }
        }
      },
      "remove_whitespace": {
        "type": "fieldset",
        "label": "Remove Whitespace",
        "style": "float: left; width: 43%; min-height: 360px; border: 1px solid #ccc",
        "repeat": false,
        "fields": {
          "remove_characters.all_whitespace": {
            "type": "checkbox",
            "label": "All Whitespace",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "remove_characters.leading_whitespace": {
            "type": "checkbox",
            "label": "Leading Whitespace",
            "show_if": "remove_characters.all_whitespace=='false'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "remove_characters.trailing_whitespace": {
            "type": "checkbox",
            "label": "Trailing Whitespace",
            "show_if": "remove_characters.all_whitespace=='false'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "remove_characters.whitespace": {
            "type": "checkbox",
            "label": "Space",
            "show_if": "remove_characters.all_whitespace=='false'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "remove_characters.tabs": {
            "type": "checkbox",
            "label": "Tabs",
            "show_if": "remove_characters.all_whitespace=='false'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "remove_characters.line_breaks": {
            "type": "checkbox",
            "label": "Line Breaks",
            "show_if": "remove_characters.all_whitespace=='false'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "remove_characters.duplicate_whitespace": {
            "type": "checkbox",
            "label": "Duplicate Whitespace",
            "show_if": "remove_characters.all_whitespace=='false'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          }
        }
      },
      "remove_characters": {
        "type": "fieldset",
        "label": "Remove Characters",
        "style": "float: right; width: 43%; min-height: 362px; border: 1px solid #ccc",
        "repeat": false,
        "fields": {
          "remove_characters.letters": {
            "type": "checkbox",
            "label": "Letters",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "remove_characters.numbers": {
            "type": "checkbox",
            "label": "Numbers",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "remove_characters.punctuation": {
            "type": "checkbox",
            "label": "Punctuation",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "remove_characters.trailing_zero": {
            "type": "checkbox",
            "label": "Trailing 0",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "remove_characters.custom": {
            "type": "checkbox",
            "label": "To-be-delted Characters",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "remove_characters.custom_chars": {
            "type": "text",
            "label": "enter characters",
            "style": "float: left; width: 45%",
            "show_if": "remove_characters.custom=='true'",
            "val": "",
            "required": true,
            "breakLine": true
          },
          "remove_characters.custom_delimiter": {
            "type": "select",
            "label": "Delimiter",
            "show_if": "remove_characters.custom=='true'",
            "options": {
              ",": {
                "label": ","
              },
              ";": {
                "label": ";"
              },
              ".": {
                "label": "."
              }
            },
            "val": ","
          },
          "remove_characters.custom_mode": {
            "type": "select",
            "label": "Position",
            "show_if": "remove_characters.custom=='true'",
            "options": {
              "all": {
                "label": "all"
              },
              "leading only": {
                "label": "leading only"
              },
              "trailing only": {
                "label": "trailing only"
              }
            },
            "val": "all"
          }
        }
      },
      "remove_duplicates": {
        "type": "fieldset",
        "label": "Remove Duplicates",
        "style": "float: left; width: 43%; min-height: 165px; border: 1px solid #ccc",
        "repeat": false,
        "fields": {
          "remove_duplicates.rows": {
            "type": "checkbox",
            "label": "Duplicate Rows",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "remove_duplicates.cell": {
            "type": "checkbox",
            "label": "Duplicates in Cell",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "remove_duplicates.delimiter": {
            "type": "text",
            "label": "Delimiter",
            "style": "float: left; width: 30%",
            "show_if": "remove_duplicates.cell=='true'",
            "val": ";",
            "required": true,
            "breakLine": false            
          },
          "remove_duplicates.include_whitespace": {
            "type": "checkbox",
            "label": "incl. whitespace",
            "style": "float: right; width: 60%",
            "show_if": "remove_duplicates.cell=='true'",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          }
        }
      },
      "rounding": {
        "type": "fieldset",
        "label": "Apply Rounding",
        "style": "float: right; width: 43%; min-height: 167px; border: 1px solid #ccc",
        "repeat": false,
        "fields": {
          "is_rounding": {
            "type": "checkbox",
            "label": "Rounding",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "rounding": {
            "type": "select",
            "label": "Rounding",
            "show_if": "is_rounding=='true'",
            "required": true,
            "options": {
              "no_rounding": {
                "label": "No rounding"
              },
              "0": {
                "label": "0 digits"
              },
              "1": {
                "label": "1 digits"
              },
              "2": {
                "label": "2 digits"
              },
              "3": {
                "label": "3 digits"
              },
              "4": {
                "label": "4 digits"
              },
              "5": {
                "label": "5 digits"
              },
              "6": {
                "label": "6 digits"
              },
              "7": {
                "label": "7 digits"
              },
              "8": {
                "label": "8 digits"
              },
              "9": {
                "label": "9 digits"
              }
            },
            "val": "2 digits"
          }
        }
      },
      "options.use_filter": {
        "type": "checkbox",
        "label": "Use Filter",
        "style": "margin-top: 5px",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "filter_box": {
        "type": "fieldset",
        "label": "Filter Options",
        "style": "border: 1px solid #ccc",
        "show_if": "options.use_filter=='true'",
        "repeat": false,
        "fields": {
          "options.filter": {
            "type": "fieldset",
            "label": "Add Filter Conditions",
            "style": "border: 1px solid #ccc",            
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if" :  "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if" :  "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "show_if": "search_tables=='false'",
                "table": "table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "search_tables__column_text": {
                "type": "text",
                "label": "Input Column Name",
                "show_if": "search_tables=='true' && search_tables__select_columns_by=='by_name_text'",
                "val": "",
                "required": true
              },
              "search_tables__column_order": {
                "type": "select",
                "label": "Select Column",
                "required": true,
                "show_if" :  "search_tables=='true' && search_tables__select_columns_by=='by_order'",
                "options": {
                  "col1": {
                    "label": "Column 1"
                  },
                  "col2": {
                    "label": "Column 2"
                  },
                  "col3": {
                    "label": "Column 3"
                  },
                  "col4": {
                    "label": "Column 4"
                  },
                  "col5": {
                    "label": "Column 5"
                  },
                  "col6": {
                    "label": "Column 6"
                  },
                  "col7": {
                    "label": "Column 7"
                  },
                  "col8": {
                    "label": "Column 8"
                  },
                  "col9": {
                    "label": "Column 9"
                  },
                  "col10": {
                    "label": "Column 10"
                  },
                  "col11": {
                    "label": "Column 11"
                  },
                  "col12": {
                    "label": "Column 12"
                  },
                  "col13": {
                    "label": "Column 13"
                  },
                  "col14": {
                    "label": "Column 14"
                  },
                  "col15": {
                    "label": "Column 15"
                  },
                  "col16": {
                    "label": "Column 16"
                  },
                  "col17": {
                    "label": "Column 17"
                  },
                  "col18": {
                    "label": "Column 18"
                  },
                  "col19": {
                    "label": "Column 19"
                  },
                  "col20": {
                    "label": "Column 20"
                  }
                },
                "val": ""
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "search_tables=='false' && this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "search_tables__self_compare_column_text": {
                "type": "text",
                "label": "Input Compare Column Name",
                "show_if": "search_tables=='true' && search_tables__select_columns_by=='by_name_text' && this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "val": "",
                "required": true
              },
              "search_tables__self_compare_column_order": {
                "type": "select",
                "label": "Select Compare Column",
                "required": true,
                "show_if" :  "search_tables=='true' && search_tables__select_columns_by=='by_order' && this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "options": {
                  "col1": {
                    "label": "Column 1"
                  },
                  "col2": {
                    "label": "Column 2"
                  },
                  "col3": {
                    "label": "Column 3"
                  },
                  "col4": {
                    "label": "Column 4"
                  },
                  "col5": {
                    "label": "Column 5"
                  },
                  "col6": {
                    "label": "Column 6"
                  },
                  "col7": {
                    "label": "Column 7"
                  },
                  "col8": {
                    "label": "Column 8"
                  },
                  "col9": {
                    "label": "Column 9"
                  },
                  "col10": {
                    "label": "Column 10"
                  },
                  "col11": {
                    "label": "Column 11"
                  },
                  "col12": {
                    "label": "Column 12"
                  },
                  "col13": {
                    "label": "Column 13"
                  },
                  "col14": {
                    "label": "Column 14"
                  },
                  "col15": {
                    "label": "Column 15"
                  },
                  "col16": {
                    "label": "Column 16"
                  },
                  "col17": {
                    "label": "Column 17"
                  },
                  "col18": {
                    "label": "Column 18"
                  },
                  "col19": {
                    "label": "Column 19"
                  },
                  "col20": {
                    "label": "Column 20"
                  }
                },
                "val": ""
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table",
                "bind": "COLUMNS",
                "show_if": "search_tables=='false' && (this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE')",
                "required": true
              },
              "search_tables__compare_column_text": {
                "type": "text",
                "label": "Input Compare Column Name",
                "show_if": "search_tables=='true' && search_tables__select_columns_by=='by_name_text' && (this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE')",
                "val": "",
                "required": true
              },
              "search_tables__compare_column_order": {
                "type": "select",
                "label": "Select Compare Column",
                "required": true,
                "show_if" :  "search_tables=='true' && search_tables__select_columns_by=='by_order' && (this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE')",
                "options": {
                  "col1": {
                    "label": "Column 1"
                  },
                  "col2": {
                    "label": "Column 2"
                  },
                  "col3": {
                    "label": "Column 3"
                  },
                  "col4": {
                    "label": "Column 4"
                  },
                  "col5": {
                    "label": "Column 5"
                  },
                  "col6": {
                    "label": "Column 6"
                  },
                  "col7": {
                    "label": "Column 7"
                  },
                  "col8": {
                    "label": "Column 8"
                  },
                  "col9": {
                    "label": "Column 9"
                  },
                  "col10": {
                    "label": "Column 10"
                  },
                  "col11": {
                    "label": "Column 11"
                  },
                  "col12": {
                    "label": "Column 12"
                  },
                  "col13": {
                    "label": "Column 13"
                  },
                  "col14": {
                    "label": "Column 14"
                  },
                  "col15": {
                    "label": "Column 15"
                  },
                  "col16": {
                    "label": "Column 16"
                  },
                  "col17": {
                    "label": "Column 17"
                  },
                  "col18": {
                    "label": "Column 18"
                  },
                  "col19": {
                    "label": "Column 19"
                  },
                  "col20": {
                    "label": "Column 20"
                  }
                },
                "val": ""
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 5px",
            "breakLine": true
          },
          "apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group",
            "style": "border: 1px solid #ccc",
            "show_if": "options.apply_to_record=='false'",
            "repeat": false,
            "fields": {
              "options.apply_to_group_columns__all_but_selected": {
                "type": "checkbox",
                "label": "All but selected",
                "val": "false",
                "isOn": "true",
                "isOff": "false",
                "breakLine": true
              },
              "options.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "show_if": "search_tables=='false'",
                "required": true,
                "width": "100%",
                "table": "table_id",
                "multiple": true,
                "bind": "COLUMNS"
              },
              "options.search_tables__apply_to_group_columns_text": {
                "type": "text",
                "label": "Group Column(s) separated by `;`",
                "show_if": "search_tables=='true' && search_tables__select_columns_by=='by_name_text'",
                "val": "",
                "placeholder": "Column1; Column2; ColumnN",
                "required": true,
                "style": "width: 100%"
              },
              "options.search_tables__apply_to_group_columns_order": {
                "type": "select",
                "label": "Group Column(s)",
                "required": true,
                "show_if" :  "search_tables=='true' && search_tables__select_columns_by=='by_order'",
                "options": {
                  "col1": {
                    "label": "Column 1"
                  },
                  "col2": {
                    "label": "Column 2"
                  },
                  "col3": {
                    "label": "Column 3"
                  },
                  "col4": {
                    "label": "Column 4"
                  },
                  "col5": {
                    "label": "Column 5"
                  },
                  "col6": {
                    "label": "Column 6"
                  },
                  "col7": {
                    "label": "Column 7"
                  },
                  "col8": {
                    "label": "Column 8"
                  },
                  "col9": {
                    "label": "Column 9"
                  },
                  "col10": {
                    "label": "Column 10"
                  },
                  "col11": {
                    "label": "Column 11"
                  },
                  "col12": {
                    "label": "Column 12"
                  },
                  "col13": {
                    "label": "Column 13"
                  },
                  "col14": {
                    "label": "Column 14"
                  },
                  "col15": {
                    "label": "Column 15"
                  },
                  "col16": {
                    "label": "Column 16"
                  },
                  "col17": {
                    "label": "Column 17"
                  },
                  "col18": {
                    "label": "Column 18"
                  },
                  "col19": {
                    "label": "Column 19"
                  },
                  "col20": {
                    "label": "Column 20"
                  }
                },
                "multiple": true,
                "val": []
              }
            }
          }
        }
      }
    }
  }
}
,
"/MirrorMatrixOptions.json/MirrorMatrixOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "transpose_type": {
        "type": "hidden",
        "val": "mirror_matrix"
      },
      "mirror_matrix.exchange_label_header": {
        "type": "checkbox",
        "label": "Convert header to label, label to header",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "mirror_matrix.convert_header_to_label": {
        "type": "checkbox",
        "label": "Convert header to label",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "mirror_matrix.convert_label_to_header": {
        "type": "checkbox",
        "label": "Convert label to header",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
}
,
"/ImportFromDirOutput.json/ImportFromDirOutput.json": {
  "output": {
    "type": "fieldset",
    "label": "Define Output Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "output.custom_text": {
        "type": "text",
        "label": "Output Table Name",
        "show_if": "output.custom_options=='false' || (output.custom_options=='true' && output.compose_table_name=='false')",
        "minLength": 1,
        "val": "",
        "width": "100%",
        "breakLine": true
      },
      "output.custom_options": {
        "type": "checkbox",
        "label": "Output Options",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "output.compose_table_name": {
        "type": "checkbox",
        "label": "Compose Table Name",
        "show_if": "output.custom_options=='true'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "compose_table_name_frame": {
        "type": "fieldset",
        "label": "Compose Output Table Name",
        "show_if": "output.custom_options=='true' && output.compose_table_name=='true'",
        "repeat": false,
        "fields": {
          "output.prefix_rule": {
            "type": "select",
            "label": "Prefix",
            "show_if": "output.compose_table_name=='true'",
            "val": "empty",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.prefix_text": {
            "type": "text",
            "label": "Prefix Text",
            "show_if": "output.compose_table_name=='true' && output.prefix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "output.core_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "show_if": "output.compose_table_name=='true' && output.prefix_rule!='empty'",
            "val": "_",
            "width": "50px"
          },
          "output.core_rule": {
            "type": "select",
            "label": "Table Name",
            "show_if": "output.compose_table_name=='true'",
            "val": "script_name",
            "options": {
              "script_name": {
                "label": "Task Name"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.core_text": {
            "type": "text",
            "label": "Main Table Name",
            "show_if": "output.compose_table_name=='true' && output.core_rule=='custom'",
            "required": true,
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "output.suffix_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "show_if": "output.compose_table_name=='true'",
            "val": "_",
            "width": "50px"
          },
          "output.suffix_rule": {
            "type": "select",
            "label": "Suffix",
            "show_if": "output.compose_table_name=='true'",
            "val": "script_name",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.suffix_text": {
            "type": "text",
            "label": "Suffix Text",
            "show_if": "output.compose_table_name=='true' && output.suffix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": "",
            "breakLine": true
          },
          "output.timezone": {
            "type": "select",
            "label": "Timezone",
            "show_if": "output.compose_table_name=='true' && (output.prefix_rule=='date_string_type1' || output.prefix_rule=='date_string_type2' || output.prefix_rule=='time_string' || output.prefix_rule=='datetime_string' || output.suffix_rule=='date_string_type1' || output.suffix_rule=='date_string_type2' || output.suffix_rule=='time_string' || output.suffix_rule=='datetime_string')",
            "val": "Europe/Berlin",
            "required": true,
            "options": {
              "America/Adak": {
                "label": "Adak, Gambier"
              },
              "Australia/Adelaide": {
                "label": "Adelaide, Broken_Hill, Darwin"
              },
              "America/Anchorage": {
                "label": "Anchorage, Juneau, Sitka"
              },
              "Pacific/Apia": {
                "label": "Apia, Asau, Mulifanua, Afega, Leulumoega"
              },
              "Pacific/Enderbury": {
                "label": "Apia, Fiji, Tongatapu"
              },
              "Antarctica/McMurdo": {
                "label": "Auckland, Casey, Davis"
              },
              "Pacific/Auckland": {
                "label": "Auckland, Wellington, Christchurch"
              },
              "Asia/Bangkok": {
                "label": "Bangkok, Jakarta, Novosibirsk"
              },
              "Europe/Berlin": {
                "label": "Berlin, Paris, Amsterdam"
              },
              "Australia/Perth": {
                "label": "Brunei, Singapore, Perth"
              },
              "Atlantic/Cape_Verde": {
                "label": "Cape_Verde,Praia, Mindelo, Santa Maria"
              },
              "America/Belize": {
                "label": "Costa_Rica, El_Salvador, Denver"
              },
              "Antarctica/Vostok": {
                "label": "Dhaka, Bishkek, Omsk"
              },
              "Europe/Astrakhan": {
                "label": "Dubai, Baku, Tbilisi"
              },
              "Australia/Eucla": {
                "label": "Eucla"
              },
              "Pacific/Honolulu": {
                "label": "Honolulu, Rarotonga, Tahiti"
              },
              "Asia/Kabul": {
                "label": "Kabul, Kandahār, Mazār-e Sharīf, Herāt, Jalālābād"
              },
              "Asia/Aqtau": {
                "label": "Karachi, Tashkent, Maldives"
              },
              "Asia/Kathmandu": {
                "label": "Kathmandu,Pokhara, Pātan, Biratnagar"
              },
              "Pacific/Kiritimati": {
                "label": "Kiritimati"
              },
              "Asia/Colombo": {
                "label": "Kolkata, Colombo,Jaffna, Negombo"
              },
              "Europe/Guernsey": {
                "label": "London. Dublin, Lisbon"
              },
              "Australia/Lord_Howe": {
                "label": "Lord_Howe"
              },
              "America/Creston": {
                "label": "Los_Angeles, Vancouver, Hermosillo"
              },
              "Pacific/Marquesas": {
                "label": "Marquesas,Taiohae"
              },
              "America/Cayman": {
                "label": "Mexico_City, Panama, Chicago"
              },
              "Pacific/Niue": {
                "label": "Midway, Niue, Pago_Pago"
              },
              "Europe/Mariehamn": {
                "label": "Moscow, Istanbul, Qatar"
              },
              "Asia/Kolkata": {
                "label": "Mumbai, Delhi, Bengaluru, Kolkata, Chennai"
              },
              "America/Miquelon": {
                "label": "Noronha, Nuuk, Miquelon"
              },
              "America/Danmarkshavn": {
                "label": "Reykjavik, Dakar, Casablanca"
              },
              "Pacific/Bougainville": {
                "label": "Sakhalin, Norfolk, Bougainville"
              },
              "America/Araguaina": {
                "label": "Sao_Paulo, Buenos_Aires, Montevideo"
              },
              "America/St_Johns": {
                "label": "St_Johns,Mount Pearl, Corner Brook"
              },
              "Asia/Tehran": {
                "label": "Tehran, Mashhad, Isfahan, Karaj, Tabriz"
              },
              "Asia/Tokyo": {
                "label": "Tokyo, Seoul, Jayapura"
              },
              "America/New_York": {
                "label": "Toronto, Santiago, New_York"
              },
              "Australia/Sydney": {
                "label": "Vladivostok, Sydney, Brisbane"
              },
              "Asia/Yangon": {
                "label": "Yangon, Cocos,Mandalay, Nay Pyi Taw, Mawlamyine"
              },
              "Indian/Cocos": {
                "label": "Yangon, Cocos,West Island"
              }
            },
            "breakLine": true
          }
        }
      }
    }
  }
},
"/DCCrimeWorldDataOptions.json/DCCrimeWorldDataOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.group_by": {
        "type": "select",
        "label": "Group By",
        "required": true,
        "options": {
          "Region": {
            "label": "Region"
          },
          "Income Group": {
            "label": "Income Group"
          }
        },
        "val": "Region"
      },
      "options.stat_var_name": {
        "type": "select",
        "label": "Statistics Data",
        "required": true,
        "options": {
          "Count_CriminalActivities_MurderAndNonNegligentManslaughter_AsFractionOf_Count_Person": {
            "label": "Count of Murder And Non Negligent Manslaughter Per Capita"
          },
          "Count_CriminalActivities_MurderAndNonNegligentManslaughter_Female_AsFractionOf_Count_Person_Female": {
            "label": "Count of Female Murder And Non Negligent Manslaughter Per Female Capita"
          },
          "Count_CriminalActivities_MurderAndNonNegligentManslaughter_Male_AsFractionOf_Count_Person_Male": {
            "label": "Count of Male Murder And Non Negligent Manslaughter Per Male Capita"
          }
        },
        "val": "Count_CriminalActivities_MurderAndNonNegligentManslaughter_AsFractionOf_Count_Person"
      },
      "options.per_capita": {
        "type": "checkbox",
        "label": "Per capita",
        "show_if": "false",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "help_Count_CriminalActivities_MurderAndNonNegligentManslaughter_AsFractionOf_Count_Person": {
        "type": "textarea",
        "label": "",
        "show_if": "options.stat_var_name=='help_Count_CriminalActivities_MurderAndNonNegligentManslaughter_AsFractionOf_Count_Person'",
        "val": "Intentional homicides are unlawful homicides purposely inflicted as a result of domestic disputes, interpersonal violence, violent conflicts over land resources, intergang violence over turf or control, and predatory violence and killing by armed groups. Intentional homicide does not include all intentional killing; the difference is usually in the organization of the killing. Individuals or small groups usually commit homicide, whereas killing in armed conflict is usually committed by fairly cohesive groups of up to several hundred members and is thus usually excluded.",
        "md_no_resize": false,
        "rows": 9,
        "disabled": true,
        "width": "100%"
      },
      "options.all_countries": {
        "type": "checkbox",
        "label": "All countries",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.output_as_chart": {
        "type": "checkbox",
        "label": "Output a Graph",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "options.graph_type": {
        "type": "select",
        "label": "Graph Type",
        "show_if": "options.output_as_chart=='true'",
        "required": true,
        "options": {
          "zoomable_sunburst": {
            "label": "Sunburst"
          },
          "tidy_tree": {
            "label": "Tree"
          },
          "treemap": {
            "label": "Treemap"
          }
        },
        "val": "zoomable_sunburst",
        "breakLine": true
      }
    }
  }
}
,
"/ImportFileFromGDriveOptions.json/ImportFileFromGDriveOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Select Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.from": {
        "type": "hidden",
        "val": "web"
      },
      "options.webservice": {
        "type": "hidden",
        "val": "google_drive"
      },
      "options.output_format": {
        "type": "select",
        "label": "Select Type",
        "options": {
          "csv_table": {
            "label": "CSV-Table"
          },
          "line_by_line": {
            "label": "Line by Line"
          },
          "word_by_word": {
            "label": "Text"
          }
        },
        "val": "csv_table",
        "required": true
      },
      "options.word_pattern_type": {
        "type": "select",
        "label": "Word Pattern",
        "show_if": "options.output_format=='word_by_word' && options.specify_word_pattern=='true'",
        "options": {
          "regex": {
            "label": "Regular Expression"
          }
        },
        "val": "regex",
        "required": true
      },
      "options.word_pattern_regex": {
        "type": "text",
        "label": "Regular Expression",
        "show_if": "options.output_format=='word_by_word' && options.specify_word_pattern=='true' && options.word_pattern_type=='regex'",
        "required": true,
        "val": "[a-z][1-9]",
        "breakLine": true
      },
      "options.column_setting": {
        "type": "checkbox",
        "label": "Column Settings",
        "show_if": "options.output_format!='file_list'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "column_setting_frame": {
        "type": "fieldset",
        "label": "Column Settings",
        "show_if": "options.output_format!='file_list' && options.column_setting=='true'",
        "repeat": false,
        "fields": {
          "options.add_row_column": {
            "type": "checkbox",
            "label": "Add Row Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_word_count_column": {
            "type": "checkbox",
            "label": "Add 'Word Count' Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_word_nonword_column": {
            "type": "checkbox",
            "label": "Add 'Word & Non-Word' Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_section_column": {
            "type": "checkbox",
            "label": "Add Section Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "section_column_types_frame": {
            "type": "fieldset",
            "label": "Section Column Types",
            "show_if": "options.output_format=='word_by_word' && options.add_section_column=='true'",
            "repeat": false,
            "fields": {
              "options.section_columns.add_paragraph_section_column": {
                "type": "checkbox",
                "label": "Paragraph",
                "val": "false",
                "isOn": "true",
                "isOff": "false",
                "breakLine": true
              },
              "options.section_columns.add_custom_section_column": {
                "type": "checkbox",
                "label": "Custom Section Delimiter",
                "val": "false",
                "isOn": "true",
                "isOff": "false"
              },
              "options.section_columns.custom_delimiter": {
                "type": "text",
                "label": "Delimiter(1 character)",
                "show_if": "options.section_columns.add_custom_section_column=='true'",
                "maxLength": 1,
                "required": true,
                "breakLine": true
              },
              "options.section_columns.add_brackets_punctuation_section_column": {
                "type": "checkbox",
                "label": "Brackets and Punctuation",
                "val": "false",
                "isOn": "true",
                "isOff": "false"
              },
              "options.section_columns.brackets_punctuation_section_column_type": {
                "type": "select",
                "label": "Brackets Type",
                "show_if": "options.section_columns.add_brackets_punctuation_section_column=='true'",
                "options": {
                  "nesting_structure": {
                    "label": "Nesting Structure"
                  },
                  "inner_bracket": {
                    "label": "Inner Bracket"
                  },
                  "brackets_only": {
                    "label": "Brackets Only"
                  },
                  "show_all": {
                    "label": "Show All"
                  }
                },
                "val": "show_all",
                "required": true,
                "breakLine": true
              }
            }
          },
          "options.add_filename_column": {
            "type": "checkbox",
            "label": "Add Column for File Name",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "options.add_filepath_column": {
            "type": "checkbox",
            "label": "Add Column for File Path",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          }
        }
      },
      "options.is_cloud_dir": {
        "type": "hidden",
        "val": "false"
      },
      "if_dir_frame": {
        "type": "fieldset",
        "label": "Directory Import Options",
        "show_if": "options.output_format!='file_list' && options.is_cloud_dir=='true'",
        "repeat": false,
        "fields": {
          "options.unify_in_one_table": {
            "type": "checkbox",
            "label": "Unify in one table",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.suffix": {
            "type": "select",
            "label": "Output tables suffix",
            "show_if": "options.unify_in_one_table=='false'",
            "options": {
              "number": {
                "label": "Number"
              },
              "filename": {
                "label": "Filename"
              }
            },
            "val": "number",
            "required": true,
            "breakLine": true
          },
          "options.include_subdir": {
            "type": "checkbox",
            "label": "Include Subdirectories",
            "show_if": "options.output_format!='file_list' && options.is_cloud_dir=='true'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true,
            "style": "margin-top: 10px"
          }
        }
      },
      "options.file_list.include_subdir": {
        "type": "checkbox",
        "label": "Include Subdirectories",
        "show_if": "options.output_format=='file_list'",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true,
        "style": "margin-top: 10px"
      },
      "options.file_list.add_change_date_column": {
        "type": "checkbox",
        "label": "Add Change Date Column",
        "show_if": "options.output_format=='file_list'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  },
  "import_link_token_frame": {
    "type": "fieldset",
    "label": "Import Link",
    "repeat": false,
    "fields": {
      "options.link_csv_file": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test/blob/main/example.csv",
        "show_if": "options.webservice=='github' && options.is_cloud_dir=='false' && options.output_format=='csv_table'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.link_text_file": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test/blob/main/example.txt(json, csv, etc)",
        "show_if": "options.webservice=='github' && options.is_cloud_dir=='false' && options.output_format!='csv_table' && options.output_format!='file_list'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.one_drive.file_path": {
        "type": "text",
        "label": "Enter path to file e.g. ZippyDoc/Subdir1/test.txt",
        "show_if": "options.webservice=='ms_one_drive' && options.output_format!='file_list' && options.is_cloud_dir=='false'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox.file_path": {
        "type": "text",
        "label": "Enter path to file e.g. ZippyDoc/Subdir1/test.txt",
        "show_if": "options.webservice=='dropbox' && options.output_format!='file_list' && options.is_cloud_dir=='false'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dir_path_filter": {
        "type": "fieldset",
        "label": "Import Path and File Filter",
        "show_if": "options.output_format=='file_list' || options.is_cloud_dir=='true'",
        "repeat": true,
        "fields": {
          "github__link_directory": {
            "type": "text",
            "label": "Enter link e.g. https://github.com/zippydoc/test",
            "show_if": "options.webservice=='github'",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "one_drive__dir_path": {
            "type": "text",
            "label": "Enter path to dir e.g. ZippyDoc/Subdir1",
            "show_if": "options.webservice=='ms_one_drive'",
            "width": "100%",
            "breakLine": true
          },
          "dropbox__dir_path": {
            "type": "text",
            "label": "Enter path to dir e.g. ZippyDoc/Subdir1",
            "show_if": "options.webservice=='dropbox'",
            "width": "100%",
            "breakLine": true
          },
          "google_drive__dir_path": {
            "type": "text",
            "label": "Enter path to dir",
            "show_if": "options.webservice=='google_drive'",
            "width": "100%",
            "breakLine": true
          },
          "dir_filter__filter_type": {
            "type": "select",
            "label": "Filter Type",
            "options": {
              "all": {
                "label": "All"
              },
              "contains": {
                "label": "Contains"
              },
              "starts_with": {
                "label": "Starts With"
              },
              "ends_with": {
                "label": "Ends With"
              },
              "regex": {
                "label": "Regular Expression"
              }
            },
            "val": "all",
            "required": true
          },
          "dir_filter__filter_string": {
            "type": "text",
            "label": "Filter",
            "show_if": "this.dir_filter__filter_type!='all'",
            "required": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.is_github_private": {
        "type": "checkbox",
        "label": "Github repository is private",
        "show_if": "options.webservice=='github'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "options.github_token": {
        "type": "text",
        "label": "Github personal access token",
        "show_if": "options.webservice=='github' && options.is_github_private=='true'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.one_drive.access_token": {
        "type": "text",
        "label": "One Drive Access Token",
        "show_if": "options.webservice=='ms_one_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox.auth_code": {
        "type": "text",
        "label": "Dropbox Authorization Code",
        "show_if": "options.webservice=='dropbox'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.google_drive.access_token": {
        "type": "text",
        "label": "Google Drive Access Token",
        "show_if": "options.webservice=='google_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      }
    }
  }
}
,
"/JoinOptions.json/JoinOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "join_type": {
        "type": "select",
        "label": "Join By",
        "options": {
          "join_by_automatic": {
            "label": "Automatic"
          },
          "join_by_specific_field": {
            "label": "Specific Field"
          },
          "join_by_record_position": {
            "label": "Record Position"
          }
        },
        "val": "join_by_automatic",
        "breakLine": true
      },
      "join_fields": {
        "type": "fieldset",
        "label": "Join By Columns",
        "show_if": "join_type=='join_by_specific_field'",
        "repeat": true,
        "fields": {
          "left_table_field": {
            "type": "select",
            "label": "Left Table Column",
            "table": "left_table.table_id",
            "bind": "COLUMNS"
          },
          "right_table_field": {
            "type": "select",
            "label": "Right Table Column",
            "table": "right_table.table_id",
            "bind": "COLUMNS"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      }
    }
  }
}
,
"/FormulaOptions.json/FormulaOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.column": {
        "type": "select",
        "label": "Column to apply",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "options.column_value_type": {
        "type": "select",
        "label": "Type",
        "required": true,
        "options": {
          "static_value": {
            "label": "Static Value"
          },
          "numeric_formula": {
            "label": "Numeric Formula"
          },
          "text_formula": {
            "label": "Text Formula"
          },
          "inc_dec_percent": {
            "label": "Increase / Decrease (%)"
          },
          "inc_dec_abs": {
            "label": "Increase / Decrease (Absolute)"
          }
        },
        "val": "static_value"
      },
      "options.inc_or_dec": {
        "type": "select",
        "label": "Increase Type",
        "show_if": "options.column_value_type=='inc_dec_percent' || options.column_value_type=='inc_dec_abs'",
        "required": true,
        "options": {
          "increase": {
            "label": "Increase"
          },
          "decrease": {
            "label": "Decrease"
          }
        },
        "val": "increase"
      },
      "options.inc_or_dec_val": {
        "type": "text",
        "label": "Input Value",
        "show_if": "options.column_value_type=='inc_dec_percent' || options.column_value_type=='inc_dec_abs'",
        "val": "1",
        "breakLine": true
      },
      "options.static_value__type": {
        "type": "select",
        "label": "Static Value Type",
        "show_if": "options.column_value_type=='static_value'",
        "required": true,
        "options": {
          "custom": {
            "label": "Custom"
          },
          "input_table_name": {
            "label": "Input Table Name"
          },
          "output_table_name": {
            "label": "Output Table Name"
          },
          "tags": {
            "label": "Tags"
          }
        },
        "val": "custom"
      },
      "options.static_value": {
        "type": "text",
        "label": "Input Value",
        "show_if": "options.column_value_type=='static_value' && options.static_value__type=='custom'",
        "val": "",
        "width": "100%"
      },
      "options.numeric_formula": {
        "type": "text",
        "label": "Input Formula, e.g. [Column1] + 2 * ([Row-1:Column3] - [Column1])",
        "show_if": "options.column_value_type=='numeric_formula'",
        "val": "",
        "width": "100%"
      },
      "options.text_formula": {
        "type": "text",
        "label": "Input Formula, e.g. [firstName] + ' ' + [lastName] + ' ' + [Row-1:Column3]",
        "show_if": "options.column_value_type=='text_formula'",
        "val": "",
        "width": "100%"
      },
      "options.rounding": {
        "type": "select",
        "label": "Rounding",
        "show_if": "options.column_value_type=='numeric_formula' || options.column_value_type=='inc_dec_percent' || options.column_value_type=='inc_dec_abs'",
        "required": true,
        "options": {
          "no_rounding": {
            "label": "No rounding"
          },
          "0": {
            "label": "0 digits"
          },
          "1": {
            "label": "1 digits"
          },
          "2": {
            "label": "2 digits"
          },
          "3": {
            "label": "3 digits"
          },
          "4": {
            "label": "4 digits"
          },
          "5": {
            "label": "5 digits"
          },
          "6": {
            "label": "6 digits"
          },
          "7": {
            "label": "7 digits"
          },
          "8": {
            "label": "8 digits"
          },
          "9": {
            "label": "9 digits"
          }
        },
        "val": "0"
      },
      "options.use_multi_row": {
        "type": "checkbox",
        "label": "Multi-Row Options",
        "show_if": "options.column_value_type=='numeric_formula' || options.column_value_type=='text_formula'",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "options.if_row_not_exist": {
        "type": "select",
        "label": "If referred row not exist",
        "show_if": "(options.column_value_type=='numeric_formula' || options.column_value_type=='text_formula') && options.use_multi_row=='true'",
        "required": true,
        "options": {
          "empty": {
            "label": "Empty or 0"
          },
          "closest": {
            "label": "Closest Row Value"
          }
        },
        "val": "empty"
      },
      "options.refer_row_type": {
        "type": "select",
        "label": "Refer row type",
        "show_if": "options.column_value_type=='numeric_formula' && options.use_multi_row=='true'",
        "required": true,
        "options": {
          "non_cumulative": {
            "label": "non cumulative"
          },
          "cumulative": {
            "label": "cumulative"
          }
        },
        "val": "cumulative",
        "breakLine": true
      },
      "options.use_filter": {
        "type": "checkbox",
        "label": "Use Filter",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "filter_box": {
        "type": "fieldset",
        "label": "Filter Options",
        "show_if": "options.use_filter=='true'",
        "repeat": false,
        "fields": {
          "options.filter": {
            "type": "fieldset",
            "label": "Add Filter Conditions",
            "show_if": "options.use_filter=='true'",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if" :  "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if" :  "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table_id": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table_id",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group",
            "show_if": "options.apply_to_record=='false'",
            "repeat": false,
            "fields": {
              "options.apply_to_group_columns__all_but_selected": {
                "type": "checkbox",
                "label": "All but selected",
                "val": "false",
                "isOn": "true",
                "isOff": "false",
                "breakLine": true
              },
              "options.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "width": "100%",
                "table": "table_id",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      }
    }
  }
}
,
"/FilterOptions.json/FilterOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "filter": {
        "type": "fieldset",
        "label": "Add Filter Conditions",
        "repeat": true,
        "fields": {
          "initial_op": {
            "type": "select",
            "label": "Select Logic Operator",
            "required": true,
            "show_if" :  "$index == 0",
            "options": {
              "if": {
                "label": "IF"
              },
              "if_not": {
                "label": "IF NOT"
              }
            },
            "val": "if"
          },
          "op": {
            "type": "select",
            "label": "Select Logic Operator",
            "required": true,
            "show_if" :  "$index > 0",
            "options": {
              "and": {
                "label": "AND"
              },
              "or": {
                "label": "OR"
              },
              "and_not": {
                "label": "AND NOT"
              },
              "or_not": {
                "label": "OR NOT"
              }
            },
            "val": "and"
          },
          "column": {
            "type": "select",
            "label": "Select Column",
            "show_if": "search_tables=='false'",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "search_tables__column_text": {
            "type": "text",
            "label": "Input Column Name",
            "show_if": "search_tables=='true' && search_tables__select_columns_by=='by_name_text'",
            "val": "",
            "required": true
          },
          "search_tables__column_order": {
            "type": "select",
            "label": "Select Column",
            "required": true,
            "show_if" :  "search_tables=='true' && search_tables__select_columns_by=='by_order'",
            "options": {
              "col1": {
                "label": "Column 1"
              },
              "col2": {
                "label": "Column 2"
              },
              "col3": {
                "label": "Column 3"
              },
              "col4": {
                "label": "Column 4"
              },
              "col5": {
                "label": "Column 5"
              },
              "col6": {
                "label": "Column 6"
              },
              "col7": {
                "label": "Column 7"
              },
              "col8": {
                "label": "Column 8"
              },
              "col9": {
                "label": "Column 9"
              },
              "col10": {
                "label": "Column 10"
              },
              "col11": {
                "label": "Column 11"
              },
              "col12": {
                "label": "Column 12"
              },
              "col13": {
                "label": "Column 13"
              },
              "col14": {
                "label": "Column 14"
              },
              "col15": {
                "label": "Column 15"
              },
              "col16": {
                "label": "Column 16"
              },
              "col17": {
                "label": "Column 17"
              },
              "col18": {
                "label": "Column 18"
              },
              "col19": {
                "label": "Column 19"
              },
              "col20": {
                "label": "Column 20"
              }
            },
            "val": ""
          },
          "condition": {
            "type": "select",
            "label": "Select Operator",
            "required": true,
            "options": {
              "CONTAINS": {
                "label": "CONTAINS"
              },
              "CONTAINED IN STRING": {
                "label": "CONTAINED IN"
              },
              "STARTS WITH": {
                "label": "STARTS WITH"
              },
              "ENDS WITH": {
                "label": "ENDS WITH"
              },
              "=": {
                "label": "EQUAL"
              },
              ">": {
                "label": "GREATER THAN"
              },
              ">=": {
                "label": "GREATER OR EQUAL"
              },
              "<": {
                "label": "SMALLER THAN"
              },
              "<=": {
                "label": "SMALLER OR EQUAL"
              },
              "EMPTY": {
                "label": "IS EMPTY"
              },
              "BLANK": {
                "label": "IS BLANK"
              },
              "IS NULL": {
                "label": "IS NULL"
              },
              "IS TRUE": {
                "label": "IS TRUE"
              },
              "IS FALSE": {
                "label": "IS FALSE"
              },
              "REGEX MATCH": {
                "label": "REGEX MATCH"
              },
              "CONTAINED IN TABLE": {
                "label": "IN TABLE"
              },
              "IN REGEX TABLE": {
                "label": "IN REGEX TABLE"
              },
              "DATE": {
                "label": "DATE"
              }
            },
            "val": "CONTAINS"
          },
          "date_condition": {
            "type": "select",
            "label": "Select Date Operator",
            "required": true,
            "show_if": "this.condition == 'DATE'",
            "options": {
              "<": {
                "label": "PRIOR"
              },
              "<=": {
                "label": "PRIOR OR EQUAL"
              },
              "=": {
                "label": "EQUAL"
              },
              ">": {
                "label": "AFTER"
              },
              ">=": {
                "label": "AFTER OR EQUAL"
              }
            },
            "val": "="
          },
          "compare_with": {
            "type": "select",
            "label": "Compare with",
            "required": true,
            "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
            "options": {
              "custom_value": {
                "label": "Custom value"
              },
              "column_value": {
                "label": "Column value"
              }
            },
            "val": "custom_value"
          },
          "self_compare_column": {
            "type": "select",
            "label": "Select Compare Column",
            "table": "table_id",
            "bind": "COLUMNS",
            "show_if": "search_tables=='false' && this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
            "required": true
          },
          "search_tables__self_compare_column_text": {
            "type": "text",
            "label": "Input Compare Column Name",
            "show_if": "search_tables=='true' && search_tables__select_columns_by=='by_name_text' && this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
            "val": "",
            "required": true
          },
          "search_tables__self_compare_column_order": {
            "type": "select",
            "label": "Select Compare Column",
            "required": true,
            "show_if" :  "search_tables=='true' && search_tables__select_columns_by=='by_order' && this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
            "options": {
              "col1": {
                "label": "Column 1"
              },
              "col2": {
                "label": "Column 2"
              },
              "col3": {
                "label": "Column 3"
              },
              "col4": {
                "label": "Column 4"
              },
              "col5": {
                "label": "Column 5"
              },
              "col6": {
                "label": "Column 6"
              },
              "col7": {
                "label": "Column 7"
              },
              "col8": {
                "label": "Column 8"
              },
              "col9": {
                "label": "Column 9"
              },
              "col10": {
                "label": "Column 10"
              },
              "col11": {
                "label": "Column 11"
              },
              "col12": {
                "label": "Column 12"
              },
              "col13": {
                "label": "Column 13"
              },
              "col14": {
                "label": "Column 14"
              },
              "col15": {
                "label": "Column 15"
              },
              "col16": {
                "label": "Column 16"
              },
              "col17": {
                "label": "Column 17"
              },
              "col18": {
                "label": "Column 18"
              },
              "col19": {
                "label": "Column 19"
              },
              "col20": {
                "label": "Column 20"
              }
            },
            "val": ""
          },
          "date_value": {
            "type": "date",
            "label": "Select Date",
            "show_if": "this.condition=='DATE'",
            "val": "",
            "required": true
          },
          "value": {
            "type": "text",
            "label": "Input Value",
            "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
            "val": "",
            "required": true
          },
          "case_sensitive": {
            "type": "select",
            "label": "Select Case Sensitive",
            "required": true,
            "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "options": {
              "yes": {
                "label": "Case Sensitive"
              },
              "no": {
                "label": "Case Insensitive"
              }
            },
            "val": "yes"
          },
          "compare_table_id": {
            "type": "select",
            "label": "Select Table",
            "bind": "TABLES",
            "empty": "",
            "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "required": true
          },
          "compare_column": {
            "type": "select",
            "label": "Select Compare Column",
            "table": "this.compare_table_id",
            "bind": "COLUMNS",
            "show_if": "search_tables=='false' && (this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE')",
            "required": true
          },
          "search_tables__compare_column_text": {
            "type": "text",
            "label": "Input Compare Column Name",
            "show_if": "search_tables=='true' && search_tables__select_columns_by=='by_name_text' && (this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE')",
            "val": "",
            "required": true
          },
          "search_tables__compare_column_order": {
            "type": "select",
            "label": "Select Compare Column",
            "required": true,
            "show_if" :  "search_tables=='true' && search_tables__select_columns_by=='by_order' && (this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE')",
            "options": {
              "col1": {
                "label": "Column 1"
              },
              "col2": {
                "label": "Column 2"
              },
              "col3": {
                "label": "Column 3"
              },
              "col4": {
                "label": "Column 4"
              },
              "col5": {
                "label": "Column 5"
              },
              "col6": {
                "label": "Column 6"
              },
              "col7": {
                "label": "Column 7"
              },
              "col8": {
                "label": "Column 8"
              },
              "col9": {
                "label": "Column 9"
              },
              "col10": {
                "label": "Column 10"
              },
              "col11": {
                "label": "Column 11"
              },
              "col12": {
                "label": "Column 12"
              },
              "col13": {
                "label": "Column 13"
              },
              "col14": {
                "label": "Column 14"
              },
              "col15": {
                "label": "Column 15"
              },
              "col16": {
                "label": "Column 16"
              },
              "col17": {
                "label": "Column 17"
              },
              "col18": {
                "label": "Column 18"
              },
              "col19": {
                "label": "Column 19"
              },
              "col20": {
                "label": "Column 20"
              }
            },
            "val": ""
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "apply_to_record": {
        "type": "checkbox",
        "label": "Apply to Record",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "apply_to_group_box": {
        "type": "fieldset",
        "label": "Apply to Group",
        "show_if": "apply_to_record=='false'",
        "repeat": false,
        "fields": {
          "apply_to_group_columns__all_but_selected": {
            "type": "checkbox",
            "label": "All but selected",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "apply_to_group_columns": {
            "type": "select",
            "label": "Select Group Column(s)",
            "show_if": "search_tables=='false'",
            "required": true,
            "width": "100%",
            "table": "table_id",
            "multiple": true,
            "bind": "COLUMNS"
          },
          "search_tables__apply_to_group_columns_text": {
            "type": "text",
            "label": "Group Column(s) separated by `;`",
            "show_if": "search_tables=='true' && search_tables__select_columns_by=='by_name_text'",
            "val": "",
            "placeholder": "Column1; Column2; ColumnN",
            "required": true,
            "style": "width: 100%"
          },
          "search_tables__apply_to_group_columns_order": {
            "type": "select",
            "label": "Group Column(s)",
            "required": true,
            "show_if" :  "search_tables=='true' && search_tables__select_columns_by=='by_order'",
            "options": {
              "col1": {
                "label": "Column 1"
              },
              "col2": {
                "label": "Column 2"
              },
              "col3": {
                "label": "Column 3"
              },
              "col4": {
                "label": "Column 4"
              },
              "col5": {
                "label": "Column 5"
              },
              "col6": {
                "label": "Column 6"
              },
              "col7": {
                "label": "Column 7"
              },
              "col8": {
                "label": "Column 8"
              },
              "col9": {
                "label": "Column 9"
              },
              "col10": {
                "label": "Column 10"
              },
              "col11": {
                "label": "Column 11"
              },
              "col12": {
                "label": "Column 12"
              },
              "col13": {
                "label": "Column 13"
              },
              "col14": {
                "label": "Column 14"
              },
              "col15": {
                "label": "Column 15"
              },
              "col16": {
                "label": "Column 16"
              },
              "col17": {
                "label": "Column 17"
              },
              "col18": {
                "label": "Column 18"
              },
              "col19": {
                "label": "Column 19"
              },
              "col20": {
                "label": "Column 20"
              }
            },
            "multiple": true,
            "val": []
          }
        }
      }
    }
  }
}
,
"/ExportToDbOptions.json/ExportToDbOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.to": {
        "type": "hidden",
        "val": "database"
      },
      "postgresql_db_credential_box": {
        "type": "fieldset",
        "label": "Database Connection Credentials",
        "repeat": false,
        "fields": {
          "options.dbms": {
            "type": "select",
            "label": "Select DBMS",
            "options": {
              "postgresql": {
                "label": "PostgreSQL"
              },
              "mysql": {
                "label": "MySQL"
              },
              "sql_server": {
                "label": "MS SQL Server"
              },
              "oracle": {
                "label": "Oracle"
              }
            },
            "val": "postgresql",
            "required": true,
            "breakLine": true
          },
          "options.host": {
            "type": "text",
            "label": "Host",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "options.user": {
            "type": "text",
            "label": "User",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "options.password": {
            "type": "password",
            "label": "Password",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "options.database": {
            "type": "text",
            "label": "Database",
            "required": true,
            "width": "100%",
            "breakLine": true
          }
        }
      },
      "options.schema_name_to_export": {
        "type": "text",
        "label": "Schema name to export into",
        "show_if": "options.dbms=='postgresql' || options.dbms=='sql_server' || options.dbms=='oracle'",
        "required": true,
        "val": "public",
        "width": "100%",
        "breakLine": true
      },
      "options.if_duplicated": {
        "type": "select",
        "label": "If duplicated",
        "val": "drop_if_exist",
        "options": {
          "drop_if_exist": {
            "label": "Create or Drop (if already existing)"
          },
          "error_if_exist": {
            "label": "Create New (throw error if existing)"
          },
          "error_if_not_exist": {
            "label": "Drop (throw error if not-existing)"
          },
          "append": {
            "label": "Append"
          }
        },
        "breakLine": true
      },
      "output.output_as_new_table": {
        "type": "hidden",
        "val": "true"
      }
    }
  }
}
,
"/TableStructureOptions.json/TableStructureOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.all_fields": {
        "type": "checkbox",
        "label": "All Info Fields",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.info_fields": {
        "type": "select",
        "label": "Info Fields",
        "show_if" :  "options.all_fields == 'false'",
        "multiple": true,
        "options": {
          "Record Count": {
            "label": "Record Count"
          },
          "Empty Records": {
            "label": "Empty Records"
          },
          "Distinct Records": {
            "label": "Distinct Records"
          },
          "Only Numbers": {
            "label": "Only Numbers"
          },
          "Only Characters": {
            "label": "Only Characters"
          },
          "Contains Characters": {
            "label": "Contains Characters"
          },
          "Contains Whitespace": {
            "label": "Contains Whitespace"
          },
          "Contains Punctuation": {
            "label": "Contains Punctuation"
          }
        },
        "val": ["Record Count"],
        "required": true,
        "breakLine": true
      }
    }
  }
}
,
"/ReplacePlaceholderOptions.json/ReplacePlaceholderOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.find_col": {
        "type": "select",
        "label": "Placeholder Column",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "options.placeholder_type": {
        "type": "select",
        "label": "Placeholder type",
        "required": true,
        "options": {
          "text": {
            "label": "Text"
          },
          "regex": {
            "label": "Regular Expression"
          }
        },
        "val": "text"
      },
      "options.placeholder_text": {
        "type": "text",
        "label": "Placeholder",
        "show_if": "options.placeholder_type=='text'",
        "val": "",
        "placeholder": "FindText",
        "required": true,
        "breakLine": true
      },
      "options.placeholder_regex": {
        "type": "text",
        "label": "Placeholder RegEx",
        "show_if": "options.placeholder_type=='regex'",
        "val": "",
        "placeholder": "\\sFindText\\s",
        "required": true
      },
      "options.case_sensitivity": {
        "type": "select",
        "label": "Case Sensitivity",
        "required": true,
        "options": {
          "yes": {
            "label": "Case Sensitive"
          },
          "no": {
            "label": "Case Insensitive"
          }
        },
        "val": "yes",
        "breakLine": true
      },
      "options.replace_col": {
        "type": "select",
        "label": "Replace By Column",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true,
        "breakLine": true
      }
    }
  }
}
,
"/RecordIDOptions.json/RecordIDOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.new_column_name": {
        "type": "text",
        "label": "New Column Name",
        "val": "RecordID",
        "required": true
      },
      "options.starting_value": {
        "type": "text",
        "label": "Starting Value",
        "val": "1",
        "required": true
      },
      "options.position": {
        "type": "select",
        "label": "Position",
        "required": true,
        "options": {
          "first_column": {
            "label": "First Column"
          },
          "last_column": {
            "label": "Last Column"
          }
        },
        "val": "first_column",
        "breakLine": true
      },
      "options.count_per_group": {
        "type": "checkbox",
        "label": "Restart counting per each group",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "options.group_cols": {
        "type": "select",
        "label": "Group column(s)",
        "show_if": "options.count_per_group=='true'",
        "table": "table_id",
        "bind": "COLUMNS",
        "multiple": true
      },
      "options.treat_each_change_as_new_group": {
        "type": "checkbox",
        "label": "Treat each change as new Group",
        "show_if": "options.count_per_group=='true'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
}
,
"/JsonToTableOptions.json/JsonToTableOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.category": {
        "type": "hidden",
        "val": "json_to_table"
      },
      "options.input_by_table": {
        "type": "checkbox",
        "label": "Input by table",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.json_str": {
        "type": "textarea",
        "label": "Input JSON",
        "show_if": "options.input_by_table=='false'",
        "val": "{\n  \"k1\": \"v1\",\n  \"k2\": \"v2\",\n  \"k3\": {\n    \"k4\": \"v4\",\n    \"k5\": [\n      {\n        \"k6\": \"v6\",\n        \"k7\": \"v7\"\n      },\n      {\n        \"k8\": [\n          \"v8-1\",\n          \"v8-2\",\n          [\n            \"v8-3-1\",\n            \"v8-3-2\"\n          ],\n          {\n            \"k10\": \"v10\"\n          }\n        ]\n      }\n    ]\n  }\n}",
        "width": "100%",
        "rows": 6,
        "required": true,
        "breakLine": true
      },
      "options.table_id": {
        "type": "select",
        "label": "Select Table",
        "show_if": "options.input_by_table=='true'",
        "bind": "TABLES",
        "empty": "",
        "required": true
      },
      "options.json_column": {
        "type": "select",
        "label": "JSON column",
        "show_if": "options.input_by_table=='true'",
        "table": "options.table_id",
        "bind": "COLUMNS",
        "required": true,
        "breakLine": true
      },
      "options.output_nesting_structure": {
        "type": "checkbox",
        "label": "Output Nesting Structure",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
},
"/TestInputOptions.json/TestInputOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Table Header & Label Result",
    "repeat": false,
    "fields": {
      "has_header": {
        "type": "button",
        "label": "Has header!",
        "show_if": "$input_table.numOfHeader >= 1"
      },
      "has_label": {
        "type": "button",
        "label": "Has label!",
        "show_if": "$input_table.numOfLabel >= 1"
      },
      "has_both": {
        "type": "button",
        "label": "Have both!",
        "show_if": "$input_table.numOfHeader >= 1 && $input_table.numOfLabel >= 1"
      },
      "has_both2": {
        "type": "text",
        "label": "Have both2!",
        "show_if": "$input_table.numOfHeader>=1 && $input_table.numOfLabel>=1",
        "val": "both"
      },
      "header_only": {
        "type": "button",
        "label": "Header only!",
        "show_if": "$input_table.numOfHeader >= 1 && $input_table.numOfLabel < 1"
      },
      "label_only": {
        "type": "button",
        "label": "Label only!",
        "show_if": "$input_table.numOfHeader < 1 && $input_table.numOfLabel >= 1"
      },
      "no_header": {
        "type": "button",
        "label": "No header!",
        "show_if": "$input_table.numOfHeader < 1"
      },
      "no_label": {
        "type": "button",
        "label": "No label!",
        "show_if": "$input_table.numOfLabel < 1"
      }
    }
  }
},
"/FindReplaceByTableOptions.json/FindReplaceByTableOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "incoming_value_to_replace.type": {
        "type": "hidden",
        "val": "replacement_table"
      },
      "incoming_value_to_replace.value": {
        "type": "text",
        "label": "Incoming Value To Replace",
        "required": true,
        "show_if": "incoming_value_to_replace.type=='user_specified_value' || incoming_value_to_replace.type=='begins_with' || incoming_value_to_replace.type=='ends_with'",
        "val": "",
        "style": "min-width: 170px"
      },
      "incoming_value_to_replace.regex": {
        "type": "text",
        "label": "Regular Expression",
        "required": true,
        "show_if": "incoming_value_to_replace.type=='regex'",
        "val": "(.*),(.*),(.*)\\s(\\d{5})(-\\d{4})?",
        "style": "min-width: 200px"
      },
      "replace_table.table_id": {
        "type": "select",
        "label": "Replacement Table",
        "show_if": "incoming_value_to_replace.type=='replacement_table'",
        "bind": "TABLES",
        "required": true
      },
      "replace_table.find_column": {
        "type": "select",
        "label": "Select Find Column",
        "show_if": "incoming_value_to_replace.type=='replacement_table'",
        "table": "replace_table.table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "replace_table.replace_with_column": {
        "type": "select",
        "label": "Select Replace with Column",
        "show_if": "incoming_value_to_replace.type=='replacement_table'",
        "table": "replace_table.table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "incoming_value_to_replace.partial_match": {
        "type": "select",
        "label": "Partial Match",
        "show_if": "incoming_value_to_replace.type=='user_specified_value' || incoming_value_to_replace.type=='replacement_table'",
        "options": {
          "full_match": {
            "label": "Full match"
          },
          "full_and_partial_match": {
            "label": "Full and partial match"
          },
          "partial_match_only": {
            "label": "Partial match only"
          }
        },
        "val": "full_and_partial_match"
      },
      "replace_with.value_type": {
        "type": "select",
        "label": "Replace With",
        "show_if": "incoming_value_to_replace.type!='regex' && incoming_value_to_replace.type!='replacement_table'",
        "options": {
          "user_specified_value": {
            "label": "Custom Value"
          },
          "average": {
            "label": "Column Average"
          },
          "median": {
            "label": "Column Median"
          },
          "mode": {
            "label": "Column Mode"
          },
          "sum": {
            "label": "Column Sum"
          },
          "table": {
            "label": "Table Column"
          }
        },
        "val": "user_specified_value",
        "style": "min-width: 190px"
      },
      "replace_with.value": {
        "type": "text",
        "label": "Replace With Value",
        "show_if": "incoming_value_to_replace.type!='regex' && replace_with.value_type=='user_specified_value' && incoming_value_to_replace.type!='replacement_table'",
        "val": ""
      },
      "replace_with.regex_value": {
        "type": "text",
        "label": "Replace With Value",
        "show_if": "incoming_value_to_replace.type=='regex' && incoming_value_to_replace.type!='replacement_table'",
        "val": "\\4: \\2, \\3"
      },
      "replace_with.table_id": {
        "type": "select",
        "label": "Select Table",
        "show_if": "incoming_value_to_replace.type!='regex' && replace_with.value_type=='table' && incoming_value_to_replace.type!='replacement_table'",
        "bind": "TABLES",
        "required": true
      },
      "replace_with.column": {
        "type": "select",
        "label": "Select Column",
        "show_if": "incoming_value_to_replace.type!='regex' && replace_with.value_type=='table' && incoming_value_to_replace.type!='replacement_table'",
        "table": "replace_with.table_id",
        "bind": "COLUMNS",
        "required": true,
        "breakLine": true
      },
      "replacement_table_notice": {
        "type": "text",
        "label": "",
        "show_if": "incoming_value_to_replace.type=='replacement_table'",
        "val": "Line-break will be ignored in replacement table",
        "disabled": true,
        "width": "100%"
      },
      "use_replace_table_filter": {
        "type": "checkbox",
        "label": "Use Filter on \"Replace With\" Table",
        "show_if": "incoming_value_to_replace.type=='replacement_table' || (incoming_value_to_replace.type!='regex' && replace_with.value_type=='table')",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "replace_table_filter_option_box": {
        "type": "fieldset",
        "label": "\"Replace With\" Table Filter Options",
        "show_if": "use_replace_table_filter=='true' && (incoming_value_to_replace.type=='replacement_table' || (incoming_value_to_replace.type!='regex' && replace_with.value_type=='table'))",
        "repeat": false,
        "fields": {
          "replace_table_filter_option.filter": {
            "type": "fieldset",
            "label": "Add Filter Conditions on \"Replace With\" Table",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if" :  "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if" :  "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "replace_with.table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table_id": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table_id",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "replace_table_filter_option.apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record on \"Replace With\" Table",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "replace_table_filter_option_apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group on \"Replace With\" Table",
            "show_if": "replace_table_filter_option.apply_to_record=='false' && (incoming_value_to_replace.type!='replacement_table' && incoming_value_to_replace.type!='regex' && replace_with.value_type=='table')",
            "repeat": false,
            "fields": {
              "replace_table_filter_option.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "required": true,
                "width": "100%",
                "table": "replace_with.table_id",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          },
          "replacement_table_filter_option_apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group on \"Replace With\" Table",
            "show_if": "replace_table_filter_option.apply_to_record=='false' && incoming_value_to_replace.type=='replacement_table'",
            "repeat": false,
            "fields": {
              "replacement_table_filter_option.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "required": true,
                "width": "100%",
                "table": "replace_table.table_id",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      }
    }
  }
}
,
"/EmailByMenuOptions.json/EmailByMenuOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "Select Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.task_type": {
        "type": "hidden",
        "val": "write_email"
      },
      "options.to": {
        "type": "text",
        "label": "To",
        "required": true,
        "val": "",
        "placeholder": "user1@domain.com; user2@domain.com;",
        "width": "100%"
      },
      "options.add_cc": {
        "type": "checkbox",
        "label": "CC",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.cc": {
        "type": "text",
        "label": "CC",
        "show_if": "options.add_cc=='true'",
        "val": "",
        "placeholder": "ccuser1@domain.com; ccuser2@domain.com",
        "width": "100%",
        "breakLine": true
      },
      "options.add_bcc": {
        "type": "checkbox",
        "label": "BCC",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.bcc": {
        "type": "text",
        "label": "BCC",
        "show_if": "options.add_bcc=='true'",
        "val": "",
        "placeholder": "bccuser1@domain.com; bccuser1@domain.com",
        "width": "100%",
        "breakLine": true
      },
      "options.subject": {
        "type": "text",
        "label": "Subject",
        "required": true,
        "val": "",
        "placeholder": "Subject",
        "width": "100%"
      },
      "options.body": {
        "type": "textarea",
        "label": "Body",
        "val": "",
        "placeholder": "Text",
        "md_no_resize": true,
        "rows": 3,
        "width": "100%"
      },
      "options.add_table": {
        "type": "checkbox",
        "label": "Embed a Table",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.embed_mode": {
        "type": "select",
        "label": "Table Embed Type",
        "show_if": "options.add_table=='true'",
        "options": {
          "embed": {
            "label": "Embed"
          },
          "attach_csv_comma_separated": {
            "label": "Attach as csv (',' - separated)"
          },
          "attach_csv_semicolon_separated": {
            "label": "Attach as csv (';' - separated)"
          }
        },
        "val": "embed",
        "breakLine": true
      },
      "options.embed_table_footer": {
        "type": "text",
        "label": "Table Footer",
        "show_if": "options.add_table=='true'",
        "val": "",
        "style": "width: 100%"
      },
      "info3": {
        "type": "text",
        "label": "",
        "val": "This task only supports users logged in via Microsoft Login",
        "disabled": true,
        "style": "width: 100%"
      }
    }
  }
},
"/D3TableInfoSettings.json/D3TableInfoSettings.json": {
  "options.popup_or_table": {
    "type": "select",
    "label": "Type",
    "required": true,
    "options": {
      "popup": {
        "label": "Pop-Up"
      },
      "embedded": {
        "label": "Embedded"
      }
    },
    "val": "popup",
    "breakLine": true
  }
},
"/DatetimeOptions.json/DatetimeOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.convert_type": {
        "type": "select",
        "label": "Convert Type",
        "required": true,
        "options": {
          "complete_date": {
            "label": "Complete date"
          },
          "expand_date": {
            "label": "Expand date"
          },
          "convert_date": {
            "label": "Convert date"
          },
          "convert_date_range": {
            "label": "Convert date range"
          }
        },
        "val": "complete_date"
      },
      "options.date_convert_type": {
        "type": "select",
        "label": "Convert to",
        "show_if": "options.convert_type=='convert_date'",
        "required": true,
        "options": {
          "begin_of_month": {
            "label": "Begin of Month"
          },
          "end_of_month": {
            "label": "End of Month"
          },
          "hy_year": {
            "label": "HY Year"
          },
          "qrt_year": {
            "label": "Qrt Year"
          },
          "month_year": {
            "label": "Month Year"
          },
          "week_year": {
            "label": "Week Year"
          }
        },
        "val": "begin_of_month"
      },
      "options.date_range_convert_type": {
        "type": "select",
        "label": "Convert to",
        "show_if": "options.convert_type=='convert_date_range'",
        "required": true,
        "options": {
          "begin_of_month": {
            "label": "Begin of Month"
          },
          "end_of_month": {
            "label": "End of Month"
          },
          "begin_of_range": {
            "label": "Begin of Range"
          },
          "end_of_range": {
            "label": "End of Range"
          },
          "begin_of_quarter": {
            "label": "Begin of Quarter"
          },
          "end_of_quarter": {
            "label": "End of Quarter"
          }
        },
        "val": "begin_of_month",
        "breakLine": true
      },
      "options.output_in_new_column": {
        "type": "checkbox",
        "label": "Output in New Column",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "options.new_field_name": {
        "type": "text",
        "label": "New column name",
        "show_if": "options.output_in_new_column=='true'",
        "val": "GeneratedDate",
        "required": true,
        "minLength": 1,
        "maxLength": 255,
        "breakLine": true
      }
    }
  }
}
,
"/DCHealthOptions.json/DCHealthOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.all_countries": {
        "type": "hidden",
        "val": "false"
      },
      "options.stat_vars": {
        "type": "fieldset",
        "label": "Statistics data category(s)",
        "repeat": true,
        "fields": {
          "stat_var_name": {
            "type": "select",
            "label": "Statistics Data",
            "required": true,
            "options": {
              "FertilityRate_Person_Female": {
                "label": "Fertility Rate"
              },
              "LifeExpectancy_Person": {
                "label": "Life Expectancy"
              },
              "Count_BirthEvent_LiveBirth_AsFractionOf_Count_Person": {
                "label": "Number of live births occurring during the year, Per Capita"
              },
              "Count_Person_20To79Years_Diabetes_AsFractionOf_Count_Person_20To79Years": {
                "label": "Percentage of people ages 20-79 who have type 1 or type 2 diabetes"
              },
              "Count_Death": {
                "label": "Count of Mortality Event"
              },
              "Count_Person_15OrMoreYears_Smoking_AsFractionOf_Count_Person_15OrMoreYears": {
                "label": "15 Years or More, Smoking Population Per Capita 15 or More Years"
              },
              "Count_Person_Upto4Years_Overweight_AsFractionOf_Count_Person_Upto4Years": {
                "label": "4 Years or Less, Overweight Population Per Capita Upto 4 Years"
              }
            }
          },
          "per_capita": {
            "type": "checkbox",
            "label": "Per capita",
            "show_if": "false",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.output_as_chart": {
        "type": "checkbox",
        "label": "Output a Graph",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
}
,
"/StringLookupOptions.json/StringLookupOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.task_type": {
        "type": "select",
        "label": "Task Type",
        "required": true,
        "options": {
          "generate_lookup_table": {
            "label": "Generate Lookup-Table"
          },
          "apply_lookup_table": {
            "label": "Apply Lookup-Table"
          },
          "apply_regex_table": {
            "label": "Apply Regex-Table"
          },
          "apply_lookup_table_to_cells": {
            "label": "Apply Lookup-Table to Cells"
          },
          "apply_regex_table_to_cells": {
            "label": "Apply Regex-Table to Cells"
          }
        },
        "val": "generate_lookup_table"
      },
      "options.pattern_type": {
        "type": "hidden",
        "val": "duplicate_pattern"
      },
      "duplicate_option_box": {
        "type": "fieldset",
        "label": "Duplicate Patterns Option",
        "show_if": "options.task_type=='label_duplicates' || (options.task_type=='generate_lookup_table' && options.pattern_type=='duplicate_pattern')",
        "repeat": false,
        "fields": {
          "options.minimum_number_of_matching_characters": {
            "type": "text",
            "label": "Minimum Number of matching Characters",
            "val": "3",
            "required": true,
            "style": "min-width: 240px"
          },
          "options.minimum_number_of_duplicates": {
            "type": "text",
            "label": "Minimum Number of duplicates",
            "val": "2",
            "required": true,
            "style": "min-width: 240px",
            "breakLine": true
          }
        }
      },
      "number_range_option_box": {
        "type": "fieldset",
        "label": "Number Ranges Option",
        "show_if": "options.task_type=='generate_lookup_table' && options.pattern_type=='number_range'",
        "repeat": false,
        "fields": {
          "options.number_range.range_type": {
            "type": "select",
            "label": "Range Type",
            "required": true,
            "options": {
              "equal_interval": {
                "label": "N Equal Intervals"
              },
              "equal_range": {
                "label": "Equal Range"
              },
              "custom_range": {
                "label": "Custom Range"
              }
            },
            "val": "equal_interval"
          },
          "options.number_range.n_value": {
            "type": "text",
            "label": "N",
            "show_if": "options.number_range.range_type=='equal_interval'",
            "val": "3",
            "required": true
          },
          "options.number_range.range_value": {
            "type": "text",
            "label": "Range",
            "show_if": "options.number_range.range_type=='equal_range'",
            "val": "10",
            "required": true
          },
          "options.number_range.custom_ranges": {
            "type": "fieldset",
            "label": "Add Custom Range Pattern",
            "show_if": "options.number_range.range_type=='custom_range'",
            "repeat": true,
            "fields": {
              "pattern": {
                "type": "text",
                "label": "Pattern",
                "val": "0<=x<10",
                "required": true
              },
              "label": {
                "type": "text",
                "label": "Label",
                "val": "positive10",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          }
        }
      },
      "options.is_custom_lookup_table": {
        "type": "checkbox",
        "label": "Custom Lookup Table",
        "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells'",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "lookup_table_frame": {
        "type": "fieldset",
        "label": "Select Lookup Table",
        "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells'",
        "repeat": false,
        "fields": {
          "options.lookup_table_id": {
            "type": "select",
            "label": "Lookup Table",
            "show_if": "options.is_custom_lookup_table=='false'",
            "bind": "TABLES",
            "empty": "",
            "required": true,
            "breakLine": true
          },
          "options.custom_lookup_table": {
            "type": "fieldset",
            "label": "Custom Lookup Table",
            "show_if": "options.is_custom_lookup_table=='true'",
            "repeat": true,
            "fields": {
              "lookup": {
                "type": "text",
                "label": "Lookup",
                "val": "",
                "required": true
              },
              "label": {
                "type": "text",
                "label": "Label",
                "val": "",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.manual_select": {
            "type": "checkbox",
            "label": "Select manually",
            "show_if": "options.pattern_type=='duplicate_pattern' && options.is_custom_lookup_table=='false' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table')",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.apply_lookup_table__lookup_table_pattern_label_columns": {
            "type": "fieldset",
            "label": "Add Pattern column / Label column pairs",
            "show_if": "options.pattern_type=='duplicate_pattern' && options.is_custom_lookup_table=='false' && options.manual_select=='true' && options.task_type=='apply_lookup_table'",
            "repeat": true,
            "fields": {
              "pattern_column": {
                "type": "select",
                "label": "Pattern Column",
                "table": "options.lookup_table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "label_column": {
                "type": "select",
                "label": "Label Column",
                "table": "options.lookup_table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.apply_regex_table__lookup_table_pattern_column": {
            "type": "select",
            "label": "Pattern Column",
            "show_if": "options.pattern_type=='duplicate_pattern' && options.is_custom_lookup_table=='false' && options.manual_select=='true' && options.task_type=='apply_regex_table'",
            "table": "options.lookup_table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "options.apply_regex_table__lookup_table_label_columns": {
            "type": "select",
            "label": "Label Column(s)",
            "show_if": "options.pattern_type=='duplicate_pattern' && options.task_type=='apply_regex_table' && options.manual_select=='true'",
            "table": "options.lookup_table_id",
            "bind": "COLUMNS",
            "multiple": true,
            "required": true
          },
          "options.apply_regex_table__match_column_name": {
            "type": "text",
            "label": "Match Column Name",
            "show_if": "options.pattern_type=='duplicate_pattern' && options.task_type=='apply_regex_table' && options.manual_select=='true'",
            "val": "Match",
            "required": true
          },
          "options.apply_regex_table__full_match_column_name": {
            "type": "text",
            "label": "Full Match Column Name",
            "show_if": "options.pattern_type=='duplicate_pattern' && options.task_type=='apply_regex_table' && options.manual_select=='true'",
            "val": "Full-Match",
            "required": true
          },
          "options.partial_match": {
            "type": "checkbox",
            "label": "Partial Match",
            "show_if": "options.pattern_type=='duplicate_pattern' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_lookup_table_to_cells')",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "options.case_sensitive": {
            "type": "checkbox",
            "label": "Case Sensitive",
            "show_if": "options.pattern_type=='duplicate_pattern' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table' || options.task_type=='apply_regex_table_to_cells')",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.use_delimiter": {
            "type": "checkbox",
            "label": "Custom Delimiter",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px"
          },
          "options.delimiter": {
            "type": "text",
            "label": "Input Delimiter",
            "show_if": "options.use_delimiter=='true'",
            "val": ";",
            "required": true,
            "breakLine": true
          }
        }
      },
      "help_1": {
        "type": "textarea",
        "label": "",
        "show_if": "options.task_type=='apply_regex_table' || options.task_type=='apply_regex_table_to_cells'",
        "val": "To compile a regular expression you may e.g. use  regex101.com",
        "disabled": true,
        "style": "width: 100%"
      },
      "options.input_table.use_filter": {
        "type": "checkbox",
        "label": "Use Filter for Input table",
        "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "input_table_filter_box": {
        "type": "fieldset",
        "label": "Input Table Filter Options",
        "show_if": "options.input_table.use_filter=='true' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells')",
        "repeat": false,
        "fields": {
          "options.input_table.filter": {
            "type": "fieldset",
            "label": "Add Filter Conditions for Input table",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "input_table",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table_id": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table_id",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.input_table.apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record for Input table filter",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "input_table_apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group of Input table",
            "show_if": "options.input_table.apply_to_record=='false'",
            "repeat": false,
            "fields": {
              "options.input_table.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "required": true,
                "width": "100%",
                "table": "input_table",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      },
      "options.lookup_table.use_filter": {
        "type": "checkbox",
        "label": "Use Filter for Lookup table",
        "show_if": "options.is_custom_lookup_table=='false' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells')",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "lookup_table_filter_box": {
        "type": "fieldset",
        "label": "Lookup Table Filter Options",
        "show_if": "options.lookup_table.use_filter=='true' && options.is_custom_lookup_table=='false' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells')",
        "repeat": false,
        "fields": {
          "options.lookup_table.filter": {
            "type": "fieldset",
            "label": "Add Filter Conditions for Lookup table",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "options.lookup_table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table_id": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table_id",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.lookup_table.apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record for Lookup table filter",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "lookup_table_apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group of Lookup table",
            "show_if": "options.lookup_table.apply_to_record=='false'",
            "repeat": false,
            "fields": {
              "options.lookup_table.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "required": true,
                "width": "100%",
                "table": "options.lookup_table",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      },
      "options.input_table.apply_to_group_for_concatenation.enabled": {
        "type": "checkbox",
        "label": "Apply to Group for Rows Concatenation",
        "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "options.input_table.apply_to_group_for_concatenation.allow_group_lists": {
        "type": "checkbox",
        "label": "Allow Group-Lists",
        "show_if": "options.input_table.apply_to_group_for_concatenation.enabled=='true' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table')",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "options.input_table.apply_to_group_for_concatenation.group_column": {
        "type": "select",
        "label": "Select Group Column for Rows Concatenation",
        "show_if": "options.input_table.apply_to_group_for_concatenation.enabled=='true' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table')",
        "required": true,
        "width": "100%",
        "table": "table_id",
        "bind": "COLUMNS",
        "breakLine": true
      },
      "options.add_filename": {
        "type": "checkbox",
        "label": "Add File Name",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
}
,
"/CrosstabMultiHeaderOptions.json/CrosstabMultiHeaderOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Select Options",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "transpose_type": {
        "type": "hidden",
        "val": "crosstab"
      },
      "crosstab.group_data_by_these_values": {
        "type": "fieldset",
        "label": "Rows",
        "repeat": true,
        "fields": {
          "row": {
            "type": "select",
            "label": "Row",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "crosstab.change_column_headers": {
        "type": "fieldset",
        "label": "Columns",
        "repeat": true,
        "fields": {
          "column": {
            "type": "select",
            "label": "Column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "crosstab.values_for_new_columns": {
        "type": "select",
        "label": "Values",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "crosstab.values_set_format": {
        "type": "checkbox",
        "label": "Reformat Values",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "crosstab_values_format_frame": {
        "type": "fieldset",
        "label": "Values Formatting",
        "show_if": "crosstab.values_set_format=='true'",
        "repeat": false,
        "fields": {
          "crosstab.values.format__category": {
            "type": "select",
            "label": "Display Format",
            "required": true,
            "options": {
              "standard": {
                "label": "Standard"
              },
              "number": {
                "label": "Number"
              },
              "percentage": {
                "label": "Percentage"
              },
              "text": {
                "label": "Text"
              },
              "date": {
                "label": "Date"
              },
              "currency": {
                "label": "Currency"
              }
            },
            "val": "standard"
          },
          "crosstab.values.format__rounding": {
            "type": "select",
            "label": "Decimal Places for display",
            "show_if": "crosstab.values.format__category=='number' || crosstab.values.format__category=='percentage' || crosstab.values.format__category=='currency'",
            "required": true,
            "options": {
              "no_rounding": {
                "label": "No rounding"
              },
              "0": {
                "label": "0 digits"
              },
              "1": {
                "label": "1 digits"
              },
              "2": {
                "label": "2 digits"
              },
              "3": {
                "label": "3 digits"
              },
              "4": {
                "label": "4 digits"
              },
              "5": {
                "label": "5 digits"
              },
              "6": {
                "label": "6 digits"
              },
              "7": {
                "label": "7 digits"
              },
              "8": {
                "label": "8 digits"
              },
              "9": {
                "label": "9 digits"
              }
            },
            "val": "2"
          },
          "crosstab.values.format__use_1000_separator": {
            "type": "checkbox",
            "label": "Use 1000 Separator(,)",
            "show_if": "crosstab.values.format__category=='number' || crosstab.values.format__category=='percentage' || crosstab.values.format__category=='currency'",
            "val": "true",
            "isOn": "true",
            "isOff": "false"
          },
          "crosstab.values.format__currency_symbol": {
            "type": "select",
            "label": "Symbol",
            "show_if": "crosstab.values.format__category=='currency'",
            "required": true,
            "options": {
              "dollar": {
                "label": "$"
              },
              "euro": {
                "label": "€"
              },
              "pound": {
                "label": "£"
              },
              "yen": {
                "label": "¥ (Yen, currency of Japan)"
              },
              "colon": {
                "label": "₡ (Colón, currency of Costa Rica)"
              },
              "naira": {
                "label": "₦ (Naira, currency of Nigeria)"
              },
              "rupee": {
                "label": "₨ (Rupee, currency of India)"
              },
              "rupie": {
                "label": "₹ (Rupee, currency of India)"
              },
              "won": {
                "label": "₩ (Won, currency in South Korea and North Korea)"
              },
              "hebrew": {
                "label": "₪ (Currency of Israel)"
              },
              "dong": {
                "label": "₫ (Currency of Vietnam)"
              },
              "kip": {
                "label": "₭ (Kip, currency of Laos)"
              },
              "mongolia": {
                "label": "₮ (Currency of Mongolia)"
              },
              "peso": {
                "label": "₱ (Peso, currency of the Philippines)"
              },
              "guarani": {
                "label": "₲ (Guaraní, currency of Paraguay)"
              },
              "hryvnia": {
                "label": "₴ (Hryvnia, currency of Ukraine)"
              },
              "tenge": {
                "label": "₸ (Tenge, currency of Kazakhstan)"
              },
              "lira": {
                "label": "₺ (Lira, currency of Turkey)"
              },
              "manat": {
                "label": "₼ (Manat, currency of Azerbaijan)"
              },
              "rubles": {
                "label": "₽ (Rubles, currency of Russia)"
              },
              "lari": {
                "label": "₾ (Lari, currency of Georgia)"
              },
              "bitcoin": {
                "label": "₿ (Bitcoin, crypto currency)"
              }
            },
            "val": "dollar"
          },
          "crosstab.values.format__date_format": {
            "type": "select",
            "label": "Type",
            "show_if": "crosstab.values.format__category=='date'",
            "required": true,
            "options": {
              "mm/dd/yyyy": {
                "label": "3/14/2012"
              },
              "D, M dd, Y": {
                "label": "Wednesday, March 14, 2012"
              },
              "yyyy-mm-dd": {
                "label": "2012-03-14"
              },
              "m.dd.yyyy": {
                "label": "3.14.2012"
              },
              "m.dd.yy": {
                "label": "3.14.12"
              },
              "dd.m.yyyy": {
                "label": "14.3.2012"
              },
              "dd.m.yy": {
                "label": "14.3.12"
              },
              "M dd, Y": {
                "label": "March 14, 2012"
              },
              "dd-mm-yyyy": {
                "label": "14-03-2012"
              },
              "mm-dd-yyyy": {
                "label": "03-14-2012"
              },
              "dd-mm-yy": {
                "label": "14-03-12"
              },
              "mm-dd-yy": {
                "label": "03-14-12"
              }
            },
            "val": "mm/dd/yyyy",
            "breakLine": true
          }
        }
      },
      "crosstab.method_for_aggregating_values": {
        "type": "select",
        "label": "Method for Aggregating Values",
        "options": {
          "Concatenate": {
            "label": "Concatenate"
          },
          "First": {
            "label": "First"
          },
          "Last": {
            "label": "Last"
          },
          "Sum": {
            "label": "Sum"
          },
          "Average": {
            "label": "Average"
          },
          "Count": {
            "label": "Count"
          },
          "User Defined": {
            "label": "User Defined"
          }
        },
        "val": "Concatenate",
        "required": true
      },
      "crosstab.user_defined_str": {
        "type": "text",
        "label": "User Defined Value",
        "show_if": "crosstab.method_for_aggregating_values=='User Defined'",
        "val": "x",
        "trim": "false",
        "breakLine": true
      },
      "crosstab.separator": {
        "type": "text",
        "label": "Separator",
        "show_if": "method_for_aggregating_values=='Concatenate'",
        "val": ",",
        "trim": "false",
        "required": true,
        "breakLine": true
      }
    }
  }
},
"/TableTypeOptions.json/TableTypeOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Change Table Type",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "header_levels": {
        "type": "select",
        "label": "Column-Headers",
        "required": true,
        "options": {
          "keep": {
            "label": "Keep Current"
          },
          "0": {
            "label": "0 header levels"
          },
          "1": {
            "label": "1 header level"
          },
          "2": {
            "label": "2 header levels"
          },
          "3": {
            "label": "3 header levels"
          }
        },
        "val": "keep"
      },
      "label_levels": {
        "type": "select",
        "label": "Row-Labels",
        "required": true,
        "options": {
          "keep": {
            "label": "Keep Current"
          },
          "0": {
            "label": "0 label levels"
          },
          "1": {
            "label": "1 label level"
          },
          "2": {
            "label": "2 label levels"
          },
          "3": {
            "label": "3 label levels"
          }
        },
        "val": "keep",
        "breakLine": true
      }
    }
  }
}
,
"/FlowPermissionInput.json/FlowPermissionInput.json": {
  "input.table_or_flow": {
    "type": "hidden",
    "val": "set_flow_permissions"
  }
}
,
"/DCEconomicWorldDataOptions.json/DCEconomicWorldDataOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.group_by": {
        "type": "select",
        "label": "Group By",
        "required": true,
        "options": {
          "Region": {
            "label": "Region"
          },
          "Income Group": {
            "label": "Income Group"
          }
        },
        "val": "Region",
        "breakLine": true
      },
      "options.stat_var_name": {
        "type": "select",
        "label": "Statistics Data",
        "required": true,
        "options": {
          "Amount_EconomicActivity_GrossDomesticProduction_Nominal": {
            "label": "GDP"
          },
          "GrowthRate_Amount_EconomicActivity_GrossDomesticProduction": {
            "label": "Growth Rate of GDP"
          },
          "Amount_EconomicActivity_GrossNationalIncome_PurchasingPowerParity": {
            "label": "GNI (Purchasing Power Parity)"
          },
          "Count_Product_MobileCellularSubscription_AsFractionOf_Count_Person": {
            "label": "Mobile Subscriptions Per Capita"
          },
          "Amount_Debt_Government": {
            "label": "Debt With Government"
          },
          "Amount_Debt_Government_AsAFractionOfGrossDomesticProduction": {
            "label": "Debt With Government as Fraction of Gross Domestic Production"
          },
          "GiniIndex_EconomicActivity": {
            "label": "Gini Index of Economic Activity"
          },
          "Amount_EconomicActivity_ExpenditureActivity_MilitaryExpenditure_Government": {
            "label": "Military Expenditure, Government"
          },
          "Amount_EconomicActivity_ExpenditureActivity_MilitaryExpenditure_Government_AsFractionOf_Amount_EconomicActivity_GrossDomesticProduction_Nominal": {
            "label": "Military Expenditure, Government as Fraction of Economic Activity Gross Domestic Production Nominal"
          },
          "Amount_EconomicActivity_ExpenditureActivity_EducationExpenditure_Government_AsFractionOf_Amount_EconomicActivity_ExpenditureActivity_Government": {
            "label": "Education Expenditure, Government as Fraction of Economic Activity Expenditure Activity Government"
          },
          "Amount_EconomicActivity_ExpenditureActivity_EducationExpenditure_Government_AsFractionOf_Amount_EconomicActivity_GrossDomesticProduction_Nominal": {
            "label": "Education Expenditure, Government as Fraction of Economic Activity Gross Domestic Production Nominal"
          },
          "Amount_EconomicActivity_ExpenditureActivity_HealthcareExpenditure_AsFractionOf_Count_Person": {
            "label": "Expenditure Activity, Healthcare Expenditure Per Capita"
          },
          "Amount_EconomicActivity_ExpenditureActivity_TertiaryEducationExpenditure_Government_AsFractionOf_Amount_EconomicActivity_ExpenditureActivity_EducationExpenditure_Government": {
            "label": "Tertiary Education Expenditure, Government as Fraction of Economic Activity Expenditure Activity Education Expenditure Government"
          },
          "Amount_EconomicActivity_GrossValueAdded_RealValue": {
            "label": "Gross Value Added (Real Value)"
          },
          "Amount_EconomicActivity_GrossValueAdded_ISICAgricultureHuntingForestryFishing_RealValue": {
            "label": "Gross Value Added, Agriculture, Hunting, Forestry, Fishing (Real Value)"
          },
          "Amount_EconomicActivity_GrossValueAdded_ISICConstruction_RealValue": {
            "label": "Gross Value Added, Construction (Real Value)"
          },
          "Amount_EconomicActivity_GrossValueAdded_ISICManufacturing_RealValue": {
            "label": "Gross Value Added, Manufacturing (Real Value)"
          },
          "Amount_EconomicActivity_GrossValueAdded_ISICMiningManufacturingUtilities_RealValue": {
            "label": "Gross Value Added, Mining, Manufacturing, Utilities (Real Value)"
          },
          "Amount_EconomicActivity_GrossValueAdded_ISICTransportStorageCommunications_RealValue": {
            "label": "Gross Value Added, Transport, Storage And Communications (Real Value)"
          },
          "Amount_EconomicActivity_GrossValueAdded_ISICWholesaleRetailTradeRestaurantsHotels_RealValue": {
            "label": "Gross Value Added, Wholesale, Retail Trade, Restaurants And Hotels (Real Value)"
          },
          "Amount_Remittance_OutwardRemittance": {
            "label": "Outward Remittance"
          },
          "Amount_Remittance_InwardRemittance": {
            "label": "Inward Remittance"
          },
          "Amount_Remittance_InwardRemittance_AsFractionOf_Amount_EconomicActivity_GrossDomesticProduction_Nominal": {
            "label": "Inward Remittance as Fraction of Economic Activity Gross Domestic Production Nominal"
          },
          "Amount_Stock": {
            "label": "Stock"
          },
          "Amount_Stock_AsFractionOf_Amount_EconomicActivity_GrossDomesticProduction_Nominal": {
            "label": "Stock as Fraction of Economic Activity Gross Domestic Production Nominal"
          }
        },
        "val": "Amount_EconomicActivity_GrossDomesticProduction_Nominal"
      },
      "options.per_capita": {
        "type": "checkbox",
        "label": "Per capita",
        "show_if": "options.stat_var_name=='Amount_EconomicActivity_GrossDomesticProduction_Nominal'||options.stat_var_name=='Amount_EconomicActivity_GrossNationalIncome_PurchasingPowerParity'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.help_1": {
        "type": "textarea",
        "label": "",
        "show_if": "options.stat_var_name=='Amount_EconomicActivity_ExpenditureActivity_MilitaryExpenditure_Government_AsFractionOf_Amount_EconomicActivity_GrossDomesticProduction_Nominal'",
        "val": "Military Expenditure, Government as Fraction of Economic Activity Gross Domestic Production Nominal",
        "disabled": true,
        "md_no_resize": false,
        "rows": 2,
        "width": "100%"
      },
      "options.help_2": {
        "type": "textarea",
        "label": "",
        "show_if": "options.stat_var_name=='Amount_EconomicActivity_ExpenditureActivity_EducationExpenditure_Government_AsFractionOf_Amount_EconomicActivity_ExpenditureActivity_Government'",
        "val": "Education Expenditure, Government as Fraction of Economic Activity Expenditure Activity Government",
        "disabled": true,
        "md_no_resize": false,
        "rows": 2,
        "width": "100%"
      },
      "options.help_3": {
        "type": "textarea",
        "label": "",
        "show_if": "options.stat_var_name=='Amount_EconomicActivity_ExpenditureActivity_EducationExpenditure_Government_AsFractionOf_Amount_EconomicActivity_GrossDomesticProduction_Nominal'",
        "val": "Education Expenditure, Government as Fraction of Economic Activity Gross Domestic Production Nominal",
        "disabled": true,
        "md_no_resize": false,
        "rows": 2,
        "width": "100%"
      },
      "options.help_4": {
        "type": "textarea",
        "label": "",
        "show_if": "options.stat_var_name=='Amount_EconomicActivity_ExpenditureActivity_TertiaryEducationExpenditure_Government_AsFractionOf_Amount_EconomicActivity_ExpenditureActivity_EducationExpenditure_Government'",
        "val": "Tertiary Education Expenditure, Government as Fraction of Economic Activity Expenditure Activity Education Expenditure Government",
        "disabled": true,
        "md_no_resize": false,
        "rows": 2,
        "width": "100%"
      },
      "options.all_countries": {
        "type": "checkbox",
        "label": "All countries",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.output_as_chart": {
        "type": "checkbox",
        "label": "Output a Graph",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "options.graph_type": {
        "type": "select",
        "label": "Graph Type",
        "show_if": "options.output_as_chart=='true'",
        "required": true,
        "options": {
          "zoomable_sunburst": {
            "label": "Sunburst"
          },
          "treemap": {
            "label": "Treemap"
          }
        },
        "val": "zoomable_sunburst",
        "breakLine": true
      }
    }
  }
}
,
"/UploadOptions.json/UploadOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "output_config_frame": {
        "type": "fieldset",
        "label": "Output Configuration",
        "repeat": false,
        "fields": {
          "output.add_tag": {
            "type": "checkbox",
            "label": "Add Tag",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-right: 15px"
          },
          "output.tag_name": {
            "type": "text",
            "label": "Tag Name",
            "show_if": "output.add_tag=='true'",
            "required": true,
            "minLength": 1,
            "maxLength": 255,
            "val": "",
            "breakLine": true,
            "style": "margin-left: 15px"
          }
        }
      },
      "output.if_table_exist.type": {
        "type": "select",
        "label": "If existing",
        "val": "drop_if_exist",
        "options": {
          "drop_if_exist": {
            "label": "Create or Drop (if already existing)"
          },
          "error_if_exist": {
            "label": "Create New (throw error if existing)"
          },
          "error_if_not_exist": {
            "label": "Drop (throw error if not-existing)"
          },
          "append_all": {
            "label": "Append All"
          },
          "append_not_existing": {
            "label": "Append not existing"
          },
          "append_changes": {
            "label": "Append changes"
          }
        }
      },
      "output.if_table_exist.append_not_existing_cols": {
        "type": "select",
        "label": "Select Column(s)",
        "show_if": "output.if_table_exist.type=='append_not_existing'",
        "table": "input_table",
        "bind": "COLUMNS",
        "multiple": true,
        "required": true,
        "breakLine": true
      },
      "output.if_table_exist.append_changes__add_timestamp": {
        "type": "checkbox",
        "label": "Add Timestamp",
        "show_if": "output.if_table_exist.type=='append_changes'",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "output.if_table_exist.append_changes__timestamp_colname": {
        "type": "text",
        "label": "Timestamp column name",
        "show_if": "output.if_table_exist.type=='append_changes' && output.if_table_exist.append_changes__add_timestamp=='true'",
        "val": "Timestamp",
        "required": true,
        "breakLine": true
      },
      "output.if_table_exist.append_changes__add_row": {
        "type": "checkbox",
        "label": "Add Row",
        "show_if": "output.if_table_exist.type=='append_changes'",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "output.if_table_exist.append_changes__row_colname": {
        "type": "text",
        "label": "Row column name",
        "show_if": "output.if_table_exist.type=='append_changes' && output.if_table_exist.append_changes__add_row=='true'",
        "val": "Row",
        "required": true,
        "breakLine": true
      },
      "append_not_existing_info1": {
        "type": "text",
        "label": "",
        "show_if": "output.if_table_exist.type=='append_not_existing'",
        "val": "Appends rows only if the value of the",
        "disabled": true,
        "style": "width: 100%"
      },
      "append_not_existing_info2": {
        "type": "text",
        "label": "",
        "show_if": "output.if_table_exist.type=='append_not_existing'",
        "val": "selected column is new in the existing table.",
        "disabled": true,
        "style": "width: 100%"
      },
      "append_not_existing_info3": {
        "type": "text",
        "label": "",
        "show_if": "output.if_table_exist.type=='append_not_existing'",
        "val": "It is assumed that the selected column",
        "disabled": true,
        "style": "width: 100%"
      },
      "append_not_existing_info4": {
        "type": "text",
        "label": "",
        "show_if": "output.if_table_exist.type=='append_not_existing'",
        "val": "is found in the output and existing table",
        "disabled": true,
        "style": "width: 100%"
      }
    }
  }
}
,
"/AddPermissionOptions.json/AddPermissionOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.table_permission.set_or_delete": {
        "type": "select",
        "label": "Type",
        "show_if": "input.table_or_flow=='set_table_permissions'",
        "required": true,
        "options": {
          "set_permissions_by_user_list": {
            "label": "Set permissions by user list"
          },
          "set_permissions_by_user_table": {
            "label": "Set permissions by user table"
          },
          "delete_permissions": {
            "label": "Delete all permissions"
          }
        },
        "val": "set_permissions_by_user_list",
        "breakLine": true
      },
      "options.table_permission.emails": {
        "type": "text",
        "label": "Permitted Users (; separated list)",
        "show_if": "input.table_or_flow=='set_table_permissions' && options.table_permission.set_or_delete=='set_permissions_by_user_list'",
        "required": true,
        "width": "100%"
      },
      "users_table_id": {
        "type": "select",
        "label": "Select Users Table",
        "show_if": "input.table_or_flow=='set_table_permissions' && options.table_permission.set_or_delete=='set_permissions_by_user_table'",
        "bind": "TABLES",
        "empty": "",
        "required": true
      },
      "user_column": {
        "type": "select",
        "label": "Select Users Column",
        "show_if": "input.table_or_flow=='set_table_permissions' && options.table_permission.set_or_delete=='set_permissions_by_user_table'",
        "required": true,
        "table": "users_table_id",
        "bind": "COLUMNS",
        "breakLine": true
      },
      "options.table_permission.all_rows": {
        "type": "checkbox",
        "label": "Give permissions to users of all Rows",
        "show_if": "input.table_or_flow=='set_table_permissions' && options.table_permission.set_or_delete=='set_permissions_by_user_table'",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-right: 15px"
      },
      "user_rows": {
        "type": "select",
        "label": "User rows",
        "show_if": "input.table_or_flow=='set_table_permissions' && options.table_permission.set_or_delete=='set_permissions_by_user_table' && options.table_permission.all_rows=='false'",
        "multiple": true,
        "unique_values_only": true,
        "table": "users_table_id",
        "column_list": "user_column",
        "bind": "RECORDS",
        "required": true
      },
      "options.table_permission.permissions": {
        "type": "fieldset",
        "label": "Set Permissions",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "input.table_or_flow=='set_table_permissions' && (options.table_permission.set_or_delete=='set_permissions_by_user_list' || options.table_permission.set_or_delete=='set_permissions_by_user_table')",
        "repeat": true,
        "fields": {
          "rows_or_columns": {
            "type": "select",
            "label": "Type for Table",
            "required": true,
            "options": {
              "select_rows": {
                "label": "Select Row(s)"
              },
              "select_columns": {
                "label": "Select Column(s)"
              }
            },
            "val": "select_columns"
          },
          "rows": {
            "type": "select",
            "label": "Select Row(s)",
            "show_if": "this.rows_or_columns=='select_rows'",
            "table": "input.table_id",
            "bind": "LABELS",
            "multiple": true,
            "required": true
          },
          "columns": {
            "type": "select",
            "label": "Select Columns(s)",
            "show_if": "this.rows_or_columns=='select_columns'",
            "table": "input.table_id",
            "bind": "COLUMNS",
            "multiple": true,
            "required": true
          },
          "permission_type": {
            "type": "select",
            "label": "Permission Type",
            "required": true,
            "options": {
              "READ": {
                "label": "Read"
              },
              "WRITE": {
                "label": "Write"
              },
              "PASS_ON": {
                "label": "Pass-On"
              }
            },
            "val": "READ"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.flow_permission.set_or_delete": {
        "type": "select",
        "label": "Type of Action",
        "show_if": "input.table_or_flow=='set_flow_permissions'",
        "required": true,
        "options": {
          "set_permissions": {
            "label": "Set permissions"
          }
        },
        "val": "set_permissions",
        "breakLine": true
      },
      "options.flow_permission.emails": {
        "type": "text",
        "label": "Permitted Users (; separated list)",
        "show_if": "input.table_or_flow=='set_flow_permissions' && options.flow_permission.set_or_delete=='set_permissions'",
        "required": true,
        "width": "100%"
      },
      "options.flow_permission.permission_type": {
        "type": "select",
        "label": "Permission Type",
        "show_if": "input.table_or_flow=='set_flow_permissions' && options.flow_permission.set_or_delete=='set_permissions'",
        "required": true,
        "options": {
          "READ": {
            "label": "Read"
          },
          "WRITE": {
            "label": "Write"
          },
          "PASS_ON": {
            "label": "Pass-On"
          }
        },
        "val": "READ"
      }
    }
  }
}
,
"/ExportToGithubOptions.json/ExportToGithubOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.to": {
        "type": "hidden",
        "val": "file"
      },
      "options.webservice": {
        "type": "hidden",
        "val": "github"
      },
      "options.export_format": {
        "type": "select",
        "label": "Export Format",
        "options": {
          "csv_file": {
            "label": "Csv file(s)"
          },
          "word_by_word": {
            "label": "Word by Word"
          },
          "line_by_line": {
            "label": "Line by Line"
          },
          "JSON": {
            "label": "JSON"
          }
        },
        "val": "csv_file",
        "required": true,
        "breakLine": true
      },
      "options.if_duplicated": {
        "type": "select",
        "label": "If existing",
        "show_if": "options.webservice=='github'",
        "val": "drop_if_exist",
        "options": {
          "drop_if_exist": {
            "label": "Create or Drop (if already existing)"
          },
          "error_if_exist": {
            "label": "Create New (throw error if existing)"
          },
          "error_if_not_exist": {
            "label": "Drop (throw error if not-existing)"
          },
          "append": {
            "label": "Append"
          }
        },
        "breakLine": true
      },
      "options.export_series": {
        "type": "checkbox",
        "label": "Export Series",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.file_name_column": {
        "type": "select",
        "label": "Select File Name Column",
        "show_if": "options.export_series=='true'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true,
        "breakLine": true
      },
      "options.set_file_path_column": {
        "type": "checkbox",
        "label": "Export to specified path",
        "show_if": "options.export_series=='true'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.file_path_column": {
        "type": "select",
        "label": "Select File Path Column",
        "show_if": "options.export_series=='true' && options.set_file_path_column=='true'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true,
        "breakLine": true
      }
    }
  },
  "export_link_token_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px",
    "repeat": false,
    "fields": {
      "options.github_url": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test",
        "show_if": "options.webservice=='github'",
        "val": "",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.export_dir": {
        "type": "text",
        "label": "Enter dir e.g. /MyZippyDocFiles/SubDir/",
        "show_if": "options.webservice!='github'",
        "val": "/",
        "width": "100%",
        "breakLine": true
      },
      "options.github_token": {
        "type": "text",
        "label": "Specify the Github personal access token that has write permission:",
        "show_if": "options.webservice=='github'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.github_create_pr": {
        "type": "checkbox",
        "label": "Create pull request",
        "show_if": "options.webservice=='github'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.ms_one_drive_token": {
        "type": "text",
        "label": "Microsoft Graph API access token. You can get it here https://ms-oauth.herokuapp.com/",
        "show_if": "options.webservice=='ms_one_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.google_authorization_code": {
        "type": "text",
        "label": "Google OAuth Authorization Code with scope https://www.googleapis.com/auth/drive. You can get it here https://developers.google.com/oauthplayground/",
        "show_if": "options.webservice=='google_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox_authorization_code": {
        "type": "text",
        "label": "Dropbox Authorization Code. You can get it here https://www.dropbox.com/oauth2/authorize?client_id=9i7woztjp94jrkw&response_type=code",
        "show_if": "options.webservice=='dropbox'",
        "required": true,
        "width": "100%",
        "breakLine": true
      }
    }
  }
}
,
"/PersonnelPlanningOptions.json/PersonnelPlanningOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Select Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "task_label": {
        "type": "hidden",
        "val": "personnel_planning"
      },
      "options.type": {
        "type": "hidden",
        "val": "custom"
      },
      "options.custom.table": {
        "type": "fieldset",
        "label": "Planning Position",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "repeat": true,
        "fields": {
          "item": {
            "type": "text",
            "label": "Name",
            "val": "",
            "required": true
          },
          "position": {
            "type": "select",
            "label": "Position",
            "options": {
              "fix salary": {
                "label": "fix salary"
              },
              "bonus": {
                "label": "bonus"
              },
              "other compensation": {
                "label": "other compensation"
              }
            },
            "val": "fix salary",
            "required": true
          },
          "amount": {
            "type": "number",
            "label": "Amount",
            "val": 0,
            "required": true
          },
          "initial_date": {
            "type": "date",
            "label": "Initial Date",
            "val": "",
            "required": true
          },
          "periodicy": {
            "type": "select",
            "label": "Periodicy",
            "required": true,
            "options": {
              "One-Off": {
                "label": "One-Off"
              },
              "Daily": {
                "label": "Daily"
              },
              "Work-Daily": {
                "label": "Work-Daily"
              },
              "Weekly": {
                "label": "Weekly"
              },
              "Monthly": {
                "label": "Monthly"
              },
              "Quarterly": {
                "label": "Quarterly"
              },
              "Yearly": {
                "label": "Yearly"
              }
            },
            "val": "One-Off"
          },
          "growth": {
            "type": "number",
            "label": "Growth",
            "show_if": "this.periodicy!='One-Off'",
            "val": 0,
            "required": true
          },
          "growth_period": {
            "type": "select",
            "label": "Growth Period",
            "show_if": "this.periodicy!='One-Off'",
            "options": {
              "Weekly": {
                "label": "Weekly"
              },
              "Monthly": {
                "label": "Month on Month"
              },
              "Quarterly": {
                "label": "Quarter on Quarter"
              },
              "Yearly": {
                "label": "Year on Year"
              }
            },
            "val": "Weekly"
          },
          "growth_pattern": {
            "type": "select",
            "label": "Growth Pattern",
            "show_if": "this.periodicy!='One-Off'",
            "options": {
              "Compounding": {
                "label": "Compounding"
              },
              "Linear": {
                "label": "Linear"
              },
              "Jump-Fix": {
                "label": "Jump-Fix"
              }
            },
            "val": "Compounding"
          },
          "final_date": {
            "type": "date",
            "label": "Final Date",
            "show_if": "this.periodicy!='One-Off'",
            "val": ""
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.end_date": {
        "type": "date",
        "label": "End Date of Table",
        "show_if": "options.type=='process' || options.type=='custom'",
        "val": "",
        "required": true,
        "style": "width: 300px"
      }
    }
  }
},
"/SystemDataOptions.json/SystemDataOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.table_type": {
        "type": "select",
        "label": "System Table",
        "options": {
          "resource_consumption": {
            "label": "Resource Consumption"
          },
          "my_flows_log": {
            "label": "My Flows Log"
          },
          "my_flows": {
            "label": "My Flows"
          },
          "my_table_permissions": {
            "label": "My Table Permissions"
          },
          "my_tables": {
            "label": "My Tables"
          },
          "my_tasks_log": {
            "label": "My Tasks Log"
          }
        },
        "val": "resource_consumption",
        "required": true
      },
      "options.resource_consumption_cols": {
        "type": "select",
        "label": "Import Columns",
        "show_if": "options.table_type=='resource_consumption'",
        "multiple": true,
        "options": {
          "Year": {
            "label": "Year"
          },
          "Month": {
            "label": "Month"
          },
          "Runs (per Month)": {
            "label": "Runs (per Month)"
          },
          "Processing Time(MS)": {
            "label": "Processing Time(MS)"
          },
          "Max Storage Space(MBytes)": {
            "label": "Max Storage Space(MBytes)"
          },
          "Point Consumption": {
            "label": "Point Consumption"
          }
        },
        "val": ["Year","Month","Runs (per Month)","Processing Time(MS)","Max Storage Space(MBytes)","Point Consumption"],
        "required": true
      },
      "options.my_flows_log_cols": {
        "type": "select",
        "label": "Import Columns",
        "show_if": "options.table_type=='my_flows_log'",
        "multiple": true,
        "options": {
          "Flow": {
            "label": "Flow"
          },
          "Task ID": {
            "label": "Task ID"
          },
          "Task-Order-Number": {
            "label": "Task-Order-Number"
          },
          "Task-Name": {
            "label": "Task-Name"
          },
          "Task Add/Delete": {
            "label": "Task Add/Delete"
          },
          "Parameter-Settings Old": {
            "label": "Parameter-Settings Old"
          },
          "Parameter-Settings New": {
            "label": "Parameter-Settings New"
          },
          "Schedule Old": {
            "label": "Schedule Old"
          },
          "Schedule New": {
            "label": "Schedule New"
          },
          "Timestamp": {
            "label": "Timestamp"
          },
          "UserId": {
            "label": "UserId"
          },
          "TableId": {
            "label": "TableId"
          }
        },
        "val": ["Flow","Task ID","Task-Order-Number","Task-Name","Task Add/Delete","Parameter-Settings Old","Parameter-Settings New","Schedule Old","Schedule New","Timestamp","UserId","TableId"],
        "required": true
      },
      "options.my_flows_cols": {
        "type": "select",
        "label": "Import Columns",
        "show_if": "options.table_type=='my_flows'",
        "multiple": true,
        "options": {
          "FlowID": {
            "label": "FlowID"
          },
          "Flow-Name": {
            "label": "Flow-Name"
          },
          "Flow Schedule": {
            "label": "Flow Schedule"
          },
          "Task ID": {
            "label": "Task ID"
          },
          "Task-Order-Number": {
            "label": "Task-Order-Number"
          },
          "Task-Name": {
            "label": "Task-Name"
          },
          "Parameter-Settings (JSON)": {
            "label": "Parameter-Settings (JSON)"
          },
          "Task Schedule": {
            "label": "Task Schedule"
          },
          "Permissions": {
            "label": "Permissions"
          }
        },
        "val": ["FlowID","Flow-Name","Flow Schedule","Task ID","Task-Order-Number","Task-Name","Parameter-Settings (JSON)","Task Schedule","Permissions"],
        "required": true
      },
      "options.my_table_permissions_cols": {
        "type": "select",
        "label": "Import Columns",
        "show_if": "options.table_type=='my_table_permissions'",
        "multiple": true,
        "options": {
          "FlowID": {
            "label": "FlowID"
          },
          "TableID": {
            "label": "TableID"
          },
          "PermissionID": {
            "label": "PermissionID"
          },
          "Type": {
            "label": "Type"
          },
          "Users": {
            "label": "Users"
          },
          "Headers": {
            "label": "Headers"
          },
          "Labels": {
            "label": "Labels"
          }
        },
        "val": ["FlowID","TableID","PermissionID","Type","Users","Headers","Labels"],
        "required": true
      },
      "options.my_tables_cols": {
        "type": "select",
        "label": "Import Columns",
        "show_if": "options.table_type=='my_tables'",
        "multiple": true,
        "options": {
          "TableID": {
            "label": "TableID"
          },
          "Table-Name": {
            "label": "Table-Name"
          },
          "Header Names per Table": {
            "label": "Header Names per Table"
          },
          "Label Names per Table": {
            "label": "Label Names per Table"
          },
          "Corner Info per Table": {
            "label": "Corner Info per Table"
          },
          "Table Info": {
            "label": "Table Info"
          },
          "Permissions per Table": {
            "label": "Permissions per Table"
          },
          "Creation Time": {
            "label": "Creation Time"
          },
          "Created by": {
            "label": "Created by"
          },
          "Latest Change Timestamp": {
            "label": "Latest Change Timestamp"
          },
          "Table-Tags": {
            "label": "Table-Tags"
          }
        },
        "val": ["TableID","Table-Name","Header Names per Table","Label Names per Table","Corner Info per Table","Table Info","Permissions per Table","Creation Time","Created by","Latest Change Timestamp","Table-Tags"],
        "required": true
      },
      "options.my_tasks_log_cols": {
        "type": "select",
        "label": "Import Columns",
        "show_if": "options.table_type=='my_tasks_log'",
        "multiple": true,
        "options": {
          "Flow": {
            "label": "Flow"
          },
          "Task ID": {
            "label": "Task ID"
          },
          "Task-Order-Number": {
            "label": "Task-Order-Number"
          },
          "Task-Name": {
            "label": "Task-Name"
          },
          "Parameter-Settings (JSON)": {
            "label": "Parameter-Settings (JSON)"
          },
          "Timestamp": {
            "label": "Timestamp"
          },
          "Scheduled": {
            "label": "Scheduled"
          },
          "Success": {
            "label": "Success"
          },
          "Message": {
            "label": "Message"
          }
        },
        "val": ["Flow","Task ID","Task-Order-Number","Task-Name","Parameter-Settings (JSON)","Timestamp","Scheduled","Success","Message"],
        "required": true,
        "breakLine": true
      }
    }
  }
}
,
"/GetPermissionOptions.json/GetPermissionOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.table_or_flow": {
        "type": "select",
        "label": "Table or Flow",
        "options": {
          "table": {
            "label": "Table Permissions"
          },
          "flow": {
            "label": "Flow Permissions"
          }
        },
        "val": "table",
        "required": true,
        "breakLine": true
      }
    }
  }
},
"/VectorOptions.json/VectorOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Select Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "task_type": {
        "type": "select",
        "label": "Task Type",
        "required": true,
        "options": {
          "multiplication": {
            "label": "Multiplication"
          },
          "addition": {
            "label": "Addition"
          }
        },
        "val": "multiplication",
        "breakLine": true
      }
    }
  }
},
"/RangeLookupOptions.json/RangeLookupOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.task_type": {
        "type": "select",
        "label": "Task Type",
        "required": true,
        "options": {
          "generate_lookup_table": {
            "label": "Generate Lookup-Table"
          },
          "apply_lookup_table": {
            "label": "Apply Lookup-Table"
          },
          "apply_lookup_table_to_cells": {
            "label": "Apply Lookup-Table to Cells"
          }
        },
        "val": "generate_lookup_table"
      },
      "options.pattern_type": {
        "type": "hidden",
        "val": "number_range"
      },
      "duplicate_option_box": {
        "type": "fieldset",
        "label": "Duplicate Patterns Option",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.task_type=='label_duplicates' || (options.task_type=='generate_lookup_table' && options.pattern_type=='duplicate_pattern')",
        "repeat": false,
        "fields": {
          "options.minimum_number_of_matching_characters": {
            "type": "text",
            "label": "Minimum Number of matching Characters",
            "val": "3",
            "required": true,
            "style": "min-width: 240px"
          },
          "options.minimum_number_of_duplicates": {
            "type": "text",
            "label": "Minimum Number of duplicates",
            "val": "2",
            "required": true,
            "style": "min-width: 240px",
            "breakLine": true
          }
        }
      },
      "number_range_option_box": {
        "type": "fieldset",
        "label": "Number Ranges Option",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.task_type=='generate_lookup_table' && options.pattern_type=='number_range'",
        "repeat": false,
        "fields": {
          "options.number_range.range_type": {
            "type": "select",
            "label": "Range Type",
            "required": true,
            "options": {
              "equal_interval": {
                "label": "N Equal Intervals"
              },
              "equal_range": {
                "label": "Equal Range"
              },
              "custom_range": {
                "label": "Custom Range"
              }
            },
            "val": "equal_interval"
          },
          "options.number_range.n_value": {
            "type": "text",
            "label": "N",
            "show_if": "options.number_range.range_type=='equal_interval'",
            "val": "3",
            "required": true
          },
          "options.number_range.range_value": {
            "type": "text",
            "label": "Range",
            "show_if": "options.number_range.range_type=='equal_range'",
            "val": "10",
            "required": true
          },
          "options.number_range.custom_ranges": {
            "type": "fieldset",
            "label": "Add Custom Range Pattern",
            "style": "border-radius: 3px; border: 1px solid #ccc",
            "show_if": "options.number_range.range_type=='custom_range'",
            "repeat": true,
            "fields": {
              "pattern": {
                "type": "text",
                "label": "Pattern",
                "val": "0<=x<10",
                "required": true
              },
              "label": {
                "type": "text",
                "label": "Label",
                "val": "positive10",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          }
        }
      },
      "options.is_custom_lookup_table": {
        "type": "checkbox",
        "label": "Custom Lookup Table",
        "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells'",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "lookup_table_frame": {
        "type": "fieldset",
        "label": "",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells'",
        "repeat": false,
        "fields": {
          "options.lookup_table_id": {
            "type": "select",
            "label": "Lookup Table",
            "show_if": "options.is_custom_lookup_table=='false'",
            "bind": "TABLES",
            "empty": "",
            "required": true,
            "breakLine": true
          },
          "options.custom_lookup_table": {
            "type": "fieldset",
            "label": "Custom Lookup Table",
            "style": "border-radius: 3px; border: 1px solid #ccc",
            "show_if": "options.is_custom_lookup_table=='true'",
            "repeat": true,
            "fields": {
              "lookup": {
                "type": "text",
                "label": "Lookup",
                "placeholder": "10 < x <= 100",
                "val": "",
                "required": true
              },
              "label": {
                "type": "text",
                "label": "Label",
                "placeholder": "10 < x <= 100",
                "val": "",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.partial_match": {
            "type": "checkbox",
            "label": "Partial Match",
            "show_if": "options.pattern_type=='duplicate_pattern' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_lookup_table_to_cells')",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "options.case_sensitive": {
            "type": "checkbox",
            "label": "Case Sensitive",
            "show_if": "options.pattern_type=='duplicate_pattern' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_lookup_table_to_cells')",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.use_delimiter": {
            "type": "checkbox",
            "label": "Custom Delimiter",
            "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_lookup_table_to_cells'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px"
          },
          "options.delimiter": {
            "type": "text",
            "label": "Input Delimiter",
            "show_if": "options.use_delimiter=='true' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_lookup_table_to_cells')",
            "val": ";",
            "required": true,
            "breakLine": true
          }
        }
      },
      "options.input_table.use_filter": {
        "type": "checkbox",
        "label": "Use Filter for Input table",
        "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "input_table_filter_box": {
        "type": "fieldset",
        "label": "Input Table Filter Options",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.input_table.use_filter=='true' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells')",
        "repeat": false,
        "fields": {
          "options.input_table.filter": {
            "type": "fieldset",
            "label": "Add Filter Conditions for Input table",
            "style": "border-radius: 3px; border: 1px solid #ccc",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.input_table.apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record for Input table filter",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "input_table_apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group of Input table",
            "style": "border-radius: 3px; border: 1px solid #ccc",
            "show_if": "options.input_table.apply_to_record=='false'",
            "repeat": false,
            "fields": {
              "options.input_table.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "required": true,
                "width": "100%",
                "table": "table_id",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      },
      "options.lookup_table.use_filter": {
        "type": "checkbox",
        "label": "Use Filter for Lookup table",
        "show_if": "options.is_custom_lookup_table=='false' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells')",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "lookup_table_filter_box": {
        "type": "fieldset",
        "label": "Lookup Table Filter Options",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.lookup_table.use_filter=='true' && options.is_custom_lookup_table=='false' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells')",
        "repeat": false,
        "fields": {
          "options.lookup_table.filter": {
            "type": "fieldset",
            "label": "Add Filter Conditions for Lookup table",
            "style": "border-radius: 3px; border: 1px solid #ccc",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "options.lookup_table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.lookup_table.apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record for Lookup table filter",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "lookup_table_apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group of Lookup table",
            "style": "border-radius: 3px; border: 1px solid #ccc",
            "show_if": "options.lookup_table.apply_to_record=='false'",
            "repeat": false,
            "fields": {
              "options.lookup_table.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "required": true,
                "width": "100%",
                "table": "options.lookup_table",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      },
      "options.input_table.apply_to_group_for_concatenation.enabled": {
        "type": "checkbox",
        "label": "Apply to Group for Rows Concatenation",
        "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "options.input_table.apply_to_group_for_concatenation.allow_group_lists": {
        "type": "checkbox",
        "label": "Allow Group-Lists",
        "show_if": "options.input_table.apply_to_group_for_concatenation.enabled=='true' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table')",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "options.input_table.apply_to_group_for_concatenation.group_column": {
        "type": "select",
        "label": "Select Group Column for Rows Concatenation",
        "show_if": "options.input_table.apply_to_group_for_concatenation.enabled=='true' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table')",
        "required": true,
        "width": "100%",
        "table": "table_id",
        "bind": "COLUMNS",
        "breakLine": true
      },
      "options.add_filename": {
        "type": "checkbox",
        "label": "Add File Name",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
}
,
"/HolidayOptions.json/HolidayOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.is_generate_holiday_table": {
        "type": "hidden",
        "val": "generate_table"
      },
      "date_period_box": {
        "type": "fieldset",
        "label": "Select Date Period",
        "show_if": "options.is_generate_holiday_table=='generate_table'",
        "repeat": false,
        "fields": {
          "options.date_period_start": {
            "type": "select",
            "label": "Input start year",
            "options": {
              "1900": {
                "label": "1900"
              },
              "1901": {
                "label": "1901"
              },
              "1902": {
                "label": "1902"
              },
              "1903": {
                "label": "1903"
              },
              "1904": {
                "label": "1904"
              },
              "1905": {
                "label": "1905"
              },
              "1906": {
                "label": "1906"
              },
              "1907": {
                "label": "1907"
              },
              "1908": {
                "label": "1908"
              },
              "1909": {
                "label": "1909"
              },
              "1910": {
                "label": "1910"
              },
              "1911": {
                "label": "1911"
              },
              "1912": {
                "label": "1912"
              },
              "1913": {
                "label": "1913"
              },
              "1914": {
                "label": "1914"
              },
              "1915": {
                "label": "1915"
              },
              "1916": {
                "label": "1916"
              },
              "1917": {
                "label": "1917"
              },
              "1918": {
                "label": "1918"
              },
              "1919": {
                "label": "1919"
              },
              "1920": {
                "label": "1920"
              },
              "1921": {
                "label": "1921"
              },
              "1922": {
                "label": "1922"
              },
              "1923": {
                "label": "1923"
              },
              "1924": {
                "label": "1924"
              },
              "1925": {
                "label": "1925"
              },
              "1926": {
                "label": "1926"
              },
              "1927": {
                "label": "1927"
              },
              "1928": {
                "label": "1928"
              },
              "1929": {
                "label": "1929"
              },
              "1930": {
                "label": "1930"
              },
              "1931": {
                "label": "1931"
              },
              "1932": {
                "label": "1932"
              },
              "1933": {
                "label": "1933"
              },
              "1934": {
                "label": "1934"
              },
              "1935": {
                "label": "1935"
              },
              "1936": {
                "label": "1936"
              },
              "1937": {
                "label": "1937"
              },
              "1938": {
                "label": "1938"
              },
              "1939": {
                "label": "1939"
              },
              "1940": {
                "label": "1940"
              },
              "1941": {
                "label": "1941"
              },
              "1942": {
                "label": "1942"
              },
              "1943": {
                "label": "1943"
              },
              "1944": {
                "label": "1944"
              },
              "1945": {
                "label": "1945"
              },
              "1946": {
                "label": "1946"
              },
              "1947": {
                "label": "1947"
              },
              "1948": {
                "label": "1948"
              },
              "1949": {
                "label": "1949"
              },
              "1950": {
                "label": "1950"
              },
              "1951": {
                "label": "1951"
              },
              "1952": {
                "label": "1952"
              },
              "1953": {
                "label": "1953"
              },
              "1954": {
                "label": "1954"
              },
              "1955": {
                "label": "1955"
              },
              "1956": {
                "label": "1956"
              },
              "1957": {
                "label": "1957"
              },
              "1958": {
                "label": "1958"
              },
              "1959": {
                "label": "1959"
              },
              "1960": {
                "label": "1960"
              },
              "1961": {
                "label": "1961"
              },
              "1962": {
                "label": "1962"
              },
              "1963": {
                "label": "1963"
              },
              "1964": {
                "label": "1964"
              },
              "1965": {
                "label": "1965"
              },
              "1966": {
                "label": "1966"
              },
              "1967": {
                "label": "1967"
              },
              "1968": {
                "label": "1968"
              },
              "1969": {
                "label": "1969"
              },
              "1970": {
                "label": "1970"
              },
              "1971": {
                "label": "1971"
              },
              "1972": {
                "label": "1972"
              },
              "1973": {
                "label": "1973"
              },
              "1974": {
                "label": "1974"
              },
              "1975": {
                "label": "1975"
              },
              "1976": {
                "label": "1976"
              },
              "1977": {
                "label": "1977"
              },
              "1978": {
                "label": "1978"
              },
              "1979": {
                "label": "1979"
              },
              "1980": {
                "label": "1980"
              },
              "1981": {
                "label": "1981"
              },
              "1982": {
                "label": "1982"
              },
              "1983": {
                "label": "1983"
              },
              "1984": {
                "label": "1984"
              },
              "1985": {
                "label": "1985"
              },
              "1986": {
                "label": "1986"
              },
              "1987": {
                "label": "1987"
              },
              "1988": {
                "label": "1988"
              },
              "1989": {
                "label": "1989"
              },
              "1990": {
                "label": "1990"
              },
              "1991": {
                "label": "1991"
              },
              "1992": {
                "label": "1992"
              },
              "1993": {
                "label": "1993"
              },
              "1994": {
                "label": "1994"
              },
              "1995": {
                "label": "1995"
              },
              "1996": {
                "label": "1996"
              },
              "1997": {
                "label": "1997"
              },
              "1998": {
                "label": "1998"
              },
              "1999": {
                "label": "1999"
              },
              "2000": {
                "label": "2000"
              },
              "2001": {
                "label": "2001"
              },
              "2002": {
                "label": "2002"
              },
              "2003": {
                "label": "2003"
              },
              "2004": {
                "label": "2004"
              },
              "2005": {
                "label": "2005"
              },
              "2006": {
                "label": "2006"
              },
              "2007": {
                "label": "2007"
              },
              "2008": {
                "label": "2008"
              },
              "2009": {
                "label": "2009"
              },
              "2010": {
                "label": "2010"
              },
              "2011": {
                "label": "2011"
              },
              "2012": {
                "label": "2012"
              },
              "2013": {
                "label": "2013"
              },
              "2014": {
                "label": "2014"
              },
              "2015": {
                "label": "2015"
              },
              "2016": {
                "label": "2016"
              },
              "2017": {
                "label": "2017"
              },
              "2018": {
                "label": "2018"
              },
              "2019": {
                "label": "2019"
              },
              "2020": {
                "label": "2020"
              },
              "2021": {
                "label": "2021"
              },
              "2022": {
                "label": "2022"
              },
              "2023": {
                "label": "2023"
              },
              "2024": {
                "label": "2024"
              },
              "2025": {
                "label": "2025"
              },
              "2026": {
                "label": "2026"
              },
              "2027": {
                "label": "2027"
              },
              "2028": {
                "label": "2028"
              },
              "2029": {
                "label": "2029"
              },
              "2030": {
                "label": "2030"
              },
              "2031": {
                "label": "2031"
              },
              "2032": {
                "label": "2032"
              },
              "2033": {
                "label": "2033"
              },
              "2034": {
                "label": "2034"
              },
              "2035": {
                "label": "2035"
              },
              "2036": {
                "label": "2036"
              },
              "2037": {
                "label": "2037"
              },
              "2038": {
                "label": "2038"
              },
              "2039": {
                "label": "2039"
              },
              "2040": {
                "label": "2040"
              },
              "2041": {
                "label": "2041"
              },
              "2042": {
                "label": "2042"
              },
              "2043": {
                "label": "2043"
              },
              "2044": {
                "label": "2044"
              },
              "2045": {
                "label": "2045"
              },
              "2046": {
                "label": "2046"
              },
              "2047": {
                "label": "2047"
              },
              "2048": {
                "label": "2048"
              },
              "2049": {
                "label": "2049"
              },
              "2050": {
                "label": "2050"
              },
              "2051": {
                "label": "2051"
              },
              "2052": {
                "label": "2052"
              },
              "2053": {
                "label": "2053"
              },
              "2054": {
                "label": "2054"
              },
              "2055": {
                "label": "2055"
              },
              "2056": {
                "label": "2056"
              },
              "2057": {
                "label": "2057"
              },
              "2058": {
                "label": "2058"
              },
              "2059": {
                "label": "2059"
              },
              "2060": {
                "label": "2060"
              },
              "2061": {
                "label": "2061"
              },
              "2062": {
                "label": "2062"
              },
              "2063": {
                "label": "2063"
              },
              "2064": {
                "label": "2064"
              },
              "2065": {
                "label": "2065"
              },
              "2066": {
                "label": "2066"
              },
              "2067": {
                "label": "2067"
              },
              "2068": {
                "label": "2068"
              },
              "2069": {
                "label": "2069"
              },
              "2070": {
                "label": "2070"
              },
              "2071": {
                "label": "2071"
              },
              "2072": {
                "label": "2072"
              },
              "2073": {
                "label": "2073"
              },
              "2074": {
                "label": "2074"
              },
              "2075": {
                "label": "2075"
              },
              "2076": {
                "label": "2076"
              },
              "2077": {
                "label": "2077"
              },
              "2078": {
                "label": "2078"
              },
              "2079": {
                "label": "2079"
              },
              "2080": {
                "label": "2080"
              },
              "2081": {
                "label": "2081"
              },
              "2082": {
                "label": "2082"
              },
              "2083": {
                "label": "2083"
              },
              "2084": {
                "label": "2084"
              },
              "2085": {
                "label": "2085"
              },
              "2086": {
                "label": "2086"
              },
              "2087": {
                "label": "2087"
              },
              "2088": {
                "label": "2088"
              },
              "2089": {
                "label": "2089"
              },
              "2090": {
                "label": "2090"
              },
              "2091": {
                "label": "2091"
              },
              "2092": {
                "label": "2092"
              },
              "2093": {
                "label": "2093"
              },
              "2094": {
                "label": "2094"
              },
              "2095": {
                "label": "2095"
              },
              "2096": {
                "label": "2096"
              },
              "2097": {
                "label": "2097"
              },
              "2098": {
                "label": "2098"
              },
              "2099": {
                "label": "2099"
              },
              "2100": {
                "label": "2100"
              }
            },
            "val": "2021"
          },
          "options.date_period_end": {
            "type": "select",
            "label": "Input end year",
            "options": {
              "1900": {
                "label": "1900"
              },
              "1901": {
                "label": "1901"
              },
              "1902": {
                "label": "1902"
              },
              "1903": {
                "label": "1903"
              },
              "1904": {
                "label": "1904"
              },
              "1905": {
                "label": "1905"
              },
              "1906": {
                "label": "1906"
              },
              "1907": {
                "label": "1907"
              },
              "1908": {
                "label": "1908"
              },
              "1909": {
                "label": "1909"
              },
              "1910": {
                "label": "1910"
              },
              "1911": {
                "label": "1911"
              },
              "1912": {
                "label": "1912"
              },
              "1913": {
                "label": "1913"
              },
              "1914": {
                "label": "1914"
              },
              "1915": {
                "label": "1915"
              },
              "1916": {
                "label": "1916"
              },
              "1917": {
                "label": "1917"
              },
              "1918": {
                "label": "1918"
              },
              "1919": {
                "label": "1919"
              },
              "1920": {
                "label": "1920"
              },
              "1921": {
                "label": "1921"
              },
              "1922": {
                "label": "1922"
              },
              "1923": {
                "label": "1923"
              },
              "1924": {
                "label": "1924"
              },
              "1925": {
                "label": "1925"
              },
              "1926": {
                "label": "1926"
              },
              "1927": {
                "label": "1927"
              },
              "1928": {
                "label": "1928"
              },
              "1929": {
                "label": "1929"
              },
              "1930": {
                "label": "1930"
              },
              "1931": {
                "label": "1931"
              },
              "1932": {
                "label": "1932"
              },
              "1933": {
                "label": "1933"
              },
              "1934": {
                "label": "1934"
              },
              "1935": {
                "label": "1935"
              },
              "1936": {
                "label": "1936"
              },
              "1937": {
                "label": "1937"
              },
              "1938": {
                "label": "1938"
              },
              "1939": {
                "label": "1939"
              },
              "1940": {
                "label": "1940"
              },
              "1941": {
                "label": "1941"
              },
              "1942": {
                "label": "1942"
              },
              "1943": {
                "label": "1943"
              },
              "1944": {
                "label": "1944"
              },
              "1945": {
                "label": "1945"
              },
              "1946": {
                "label": "1946"
              },
              "1947": {
                "label": "1947"
              },
              "1948": {
                "label": "1948"
              },
              "1949": {
                "label": "1949"
              },
              "1950": {
                "label": "1950"
              },
              "1951": {
                "label": "1951"
              },
              "1952": {
                "label": "1952"
              },
              "1953": {
                "label": "1953"
              },
              "1954": {
                "label": "1954"
              },
              "1955": {
                "label": "1955"
              },
              "1956": {
                "label": "1956"
              },
              "1957": {
                "label": "1957"
              },
              "1958": {
                "label": "1958"
              },
              "1959": {
                "label": "1959"
              },
              "1960": {
                "label": "1960"
              },
              "1961": {
                "label": "1961"
              },
              "1962": {
                "label": "1962"
              },
              "1963": {
                "label": "1963"
              },
              "1964": {
                "label": "1964"
              },
              "1965": {
                "label": "1965"
              },
              "1966": {
                "label": "1966"
              },
              "1967": {
                "label": "1967"
              },
              "1968": {
                "label": "1968"
              },
              "1969": {
                "label": "1969"
              },
              "1970": {
                "label": "1970"
              },
              "1971": {
                "label": "1971"
              },
              "1972": {
                "label": "1972"
              },
              "1973": {
                "label": "1973"
              },
              "1974": {
                "label": "1974"
              },
              "1975": {
                "label": "1975"
              },
              "1976": {
                "label": "1976"
              },
              "1977": {
                "label": "1977"
              },
              "1978": {
                "label": "1978"
              },
              "1979": {
                "label": "1979"
              },
              "1980": {
                "label": "1980"
              },
              "1981": {
                "label": "1981"
              },
              "1982": {
                "label": "1982"
              },
              "1983": {
                "label": "1983"
              },
              "1984": {
                "label": "1984"
              },
              "1985": {
                "label": "1985"
              },
              "1986": {
                "label": "1986"
              },
              "1987": {
                "label": "1987"
              },
              "1988": {
                "label": "1988"
              },
              "1989": {
                "label": "1989"
              },
              "1990": {
                "label": "1990"
              },
              "1991": {
                "label": "1991"
              },
              "1992": {
                "label": "1992"
              },
              "1993": {
                "label": "1993"
              },
              "1994": {
                "label": "1994"
              },
              "1995": {
                "label": "1995"
              },
              "1996": {
                "label": "1996"
              },
              "1997": {
                "label": "1997"
              },
              "1998": {
                "label": "1998"
              },
              "1999": {
                "label": "1999"
              },
              "2000": {
                "label": "2000"
              },
              "2001": {
                "label": "2001"
              },
              "2002": {
                "label": "2002"
              },
              "2003": {
                "label": "2003"
              },
              "2004": {
                "label": "2004"
              },
              "2005": {
                "label": "2005"
              },
              "2006": {
                "label": "2006"
              },
              "2007": {
                "label": "2007"
              },
              "2008": {
                "label": "2008"
              },
              "2009": {
                "label": "2009"
              },
              "2010": {
                "label": "2010"
              },
              "2011": {
                "label": "2011"
              },
              "2012": {
                "label": "2012"
              },
              "2013": {
                "label": "2013"
              },
              "2014": {
                "label": "2014"
              },
              "2015": {
                "label": "2015"
              },
              "2016": {
                "label": "2016"
              },
              "2017": {
                "label": "2017"
              },
              "2018": {
                "label": "2018"
              },
              "2019": {
                "label": "2019"
              },
              "2020": {
                "label": "2020"
              },
              "2021": {
                "label": "2021"
              },
              "2022": {
                "label": "2022"
              },
              "2023": {
                "label": "2023"
              },
              "2024": {
                "label": "2024"
              },
              "2025": {
                "label": "2025"
              },
              "2026": {
                "label": "2026"
              },
              "2027": {
                "label": "2027"
              },
              "2028": {
                "label": "2028"
              },
              "2029": {
                "label": "2029"
              },
              "2030": {
                "label": "2030"
              },
              "2031": {
                "label": "2031"
              },
              "2032": {
                "label": "2032"
              },
              "2033": {
                "label": "2033"
              },
              "2034": {
                "label": "2034"
              },
              "2035": {
                "label": "2035"
              },
              "2036": {
                "label": "2036"
              },
              "2037": {
                "label": "2037"
              },
              "2038": {
                "label": "2038"
              },
              "2039": {
                "label": "2039"
              },
              "2040": {
                "label": "2040"
              },
              "2041": {
                "label": "2041"
              },
              "2042": {
                "label": "2042"
              },
              "2043": {
                "label": "2043"
              },
              "2044": {
                "label": "2044"
              },
              "2045": {
                "label": "2045"
              },
              "2046": {
                "label": "2046"
              },
              "2047": {
                "label": "2047"
              },
              "2048": {
                "label": "2048"
              },
              "2049": {
                "label": "2049"
              },
              "2050": {
                "label": "2050"
              },
              "2051": {
                "label": "2051"
              },
              "2052": {
                "label": "2052"
              },
              "2053": {
                "label": "2053"
              },
              "2054": {
                "label": "2054"
              },
              "2055": {
                "label": "2055"
              },
              "2056": {
                "label": "2056"
              },
              "2057": {
                "label": "2057"
              },
              "2058": {
                "label": "2058"
              },
              "2059": {
                "label": "2059"
              },
              "2060": {
                "label": "2060"
              },
              "2061": {
                "label": "2061"
              },
              "2062": {
                "label": "2062"
              },
              "2063": {
                "label": "2063"
              },
              "2064": {
                "label": "2064"
              },
              "2065": {
                "label": "2065"
              },
              "2066": {
                "label": "2066"
              },
              "2067": {
                "label": "2067"
              },
              "2068": {
                "label": "2068"
              },
              "2069": {
                "label": "2069"
              },
              "2070": {
                "label": "2070"
              },
              "2071": {
                "label": "2071"
              },
              "2072": {
                "label": "2072"
              },
              "2073": {
                "label": "2073"
              },
              "2074": {
                "label": "2074"
              },
              "2075": {
                "label": "2075"
              },
              "2076": {
                "label": "2076"
              },
              "2077": {
                "label": "2077"
              },
              "2078": {
                "label": "2078"
              },
              "2079": {
                "label": "2079"
              },
              "2080": {
                "label": "2080"
              },
              "2081": {
                "label": "2081"
              },
              "2082": {
                "label": "2082"
              },
              "2083": {
                "label": "2083"
              },
              "2084": {
                "label": "2084"
              },
              "2085": {
                "label": "2085"
              },
              "2086": {
                "label": "2086"
              },
              "2087": {
                "label": "2087"
              },
              "2088": {
                "label": "2088"
              },
              "2089": {
                "label": "2089"
              },
              "2090": {
                "label": "2090"
              },
              "2091": {
                "label": "2091"
              },
              "2092": {
                "label": "2092"
              },
              "2093": {
                "label": "2093"
              },
              "2094": {
                "label": "2094"
              },
              "2095": {
                "label": "2095"
              },
              "2096": {
                "label": "2096"
              },
              "2097": {
                "label": "2097"
              },
              "2098": {
                "label": "2098"
              },
              "2099": {
                "label": "2099"
              },
              "2100": {
                "label": "2100"
              }
            },
            "val": "2021"
          }
        }
      },
      "generate_country_box": {
        "type": "fieldset",
        "label": "Select country for generating holiday table",
        "show_if": "options.is_generate_holiday_table=='generate_table'",
        "repeat": false,
        "fields": {
          "options.generate_country": {
            "type": "select",
            "label": "Country",
            "required": true,
            "options": {
              "Germany": {
                "label": "Germany"
              }
            },
            "val": "Germany",
            "width": "100%"
          }
        }
      },
      "generate_state_box": {
        "type": "fieldset",
        "label": "Select state(s) for generating holiday table",
        "show_if": "options.is_generate_holiday_table=='generate_table'",
        "repeat": false,
        "fields": {
          "options.is_all_states": {
            "type": "checkbox",
            "label": "All states",
            "val": "true",
            "isOn": "true",
            "isOff": "false"
          },
          "options.generate_states": {
            "type": "select",
            "label": "State(s)",
            "show_if": "options.is_all_states=='false'",
            "required": true,
            "multiple": true,
            "options": {
              "Baden-Württemberg": {
                "label": "Baden-Württemberg"
              },
              "Bayern": {
                "label": "Bayern"
              },
              "Berlin": {
                "label": "Berlin"
              },
              "Brandenburg": {
                "label": "Brandenburg"
              },
              "Bremen": {
                "label": "Bremen"
              },
              "Hamburg": {
                "label": "Hamburg"
              },
              "Hessen": {
                "label": "Hessen"
              },
              "Mecklenburg-Vorpommern": {
                "label": "Mecklenburg-Vorpommern"
              },
              "Niedersachsen": {
                "label": "Niedersachsen"
              },
              "Nordrhein-Westfalen": {
                "label": "Nordrhein-Westfalen"
              },
              "Rheinland-Pfalz": {
                "label": "Rheinland-Pfalz"
              },
              "Saarland": {
                "label": "Saarland"
              },
              "Sachsen": {
                "label": "Sachsen"
              },
              "Sachsen-Anhalt": {
                "label": "Sachsen-Anhalt"
              },
              "Schleswig-Holstein": {
                "label": "Schleswig-Holstein"
              },
              "Thüringen": {
                "label": "Thüringen"
              }
            },
            "val": "",
            "width": "100%"
          }
        }
      },
      "date_box": {
        "type": "fieldset",
        "label": "Select Date",
        "show_if": "options.is_generate_holiday_table=='add_column'",
        "repeat": false,
        "fields": {
          "table_id": {
            "type": "select",
            "label": "Select Table",
            "bind": "TABLES",
            "empty": "",
            "required": true
          },
          "remove_input_table_after_processing": {
            "type": "hidden",
            "val": "false"
          },
          "is_word": {
            "type": "hidden",
            "val": "false"
          },
          "options.date_column": {
            "type": "select",
            "label": "Select date column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true,
            "breakLine": true
          }
        }
      },
      "country_box": {
        "type": "fieldset",
        "label": "Select Country",
        "show_if": "options.is_generate_holiday_table=='add_column'",
        "repeat": false,
        "fields": {
          "options.is_manual_country": {
            "type": "checkbox",
            "label": "Specify country manually",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.country_column": {
            "type": "select",
            "label": "Select country column",
            "show_if": "options.is_manual_country=='false'",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "options.country_manual": {
            "type": "select",
            "label": "Select country",
            "required": true,
            "show_if" :  "options.is_manual_country=='true'",
            "options": {
              "Germany": {
                "label": "Germany"
              }
            },
            "val": "Germany",
            "width": "100%",
            "breakLine": true
          }
        }
      },
      "state_box": {
        "type": "fieldset",
        "label": "Select State",
        "show_if": "options.is_generate_holiday_table=='add_column'",
        "repeat": false,
        "fields": {
          "options.is_manual_state": {
            "type": "checkbox",
            "label": "Specify state manually",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.state_column": {
            "type": "select",
            "label": "Select state column",
            "show_if": "options.is_manual_state=='false'",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "options.state_manual": {
            "type": "select",
            "label": "Select state",
            "required": true,
            "show_if" :  "options.is_manual_state=='true'",
            "options": {
              "Baden-Württemberg": {
                "label": "Baden-Württemberg"
              },
              "Bayern": {
                "label": "Bayern"
              },
              "Berlin": {
                "label": "Berlin"
              },
              "Brandenburg": {
                "label": "Brandenburg"
              },
              "Bremen": {
                "label": "Bremen"
              },
              "Hamburg": {
                "label": "Hamburg"
              },
              "Hessen": {
                "label": "Hessen"
              },
              "Mecklenburg-Vorpommern": {
                "label": "Mecklenburg-Vorpommern"
              },
              "Niedersachsen": {
                "label": "Niedersachsen"
              },
              "Nordrhein-Westfalen": {
                "label": "Nordrhein-Westfalen"
              },
              "Rheinland-Pfalz": {
                "label": "Rheinland-Pfalz"
              },
              "Saarland": {
                "label": "Saarland"
              },
              "Sachsen": {
                "label": "Sachsen"
              },
              "Sachsen-Anhalt": {
                "label": "Sachsen-Anhalt"
              },
              "Schleswig-Holstein": {
                "label": "Schleswig-Holstein"
              },
              "Thüringen": {
                "label": "Thüringen"
              }
            },
            "val": "Berlin",
            "width": "100%"
          }
        }
      }
    }
  },
  "output": {
    "type": "fieldset",
    "label": "Define Output Table",
    "repeat": false,
    "fields": {
      "output.prefix_rule": {
        "type": "select",
        "label": "Prefix",
        "show_if": "options.is_generate_holiday_table=='add_column' && output.core_rule!='auto'",
        "val": "empty",
        "options": {
          "empty": {
            "label": "-"
          },
          "script_name": {
            "label": "Task Name"
          },
          "date_string_type1": {
            "label": "Date: dd_mm_yyyy"
          },
          "date_string_type2": {
            "label": "Date: yyyy_mm_dd"
          },
          "time_string": {
            "label": "Time: h_min_sec"
          },
          "datetime_string": {
            "label": "Date_Time"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.prefix_text": {
        "type": "text",
        "label": "Prefix Text",
        "show_if": "options.is_generate_holiday_table=='add_column' && output.prefix_rule=='custom' && output.core_rule!='auto'",
        "minLength": 1,
        "maxLength": 31,
        "val": ""
      },
      "output.core_delimiter": {
        "type": "text",
        "label": "Delimiter",
        "show_if": "options.is_generate_holiday_table=='add_column' && output.core_rule!='auto' && output.prefix_rule!='empty'",
        "val": "_",
        "width": "50px"
      },
      "output.core_rule": {
        "type": "select",
        "label": "Table Name",
        "show_if": "options.is_generate_holiday_table=='add_column'",
        "val": "auto",
        "options": {
          "auto": {
            "label": "Auto"
          },
          "input_table_name": {
            "label": "Input Table Name"
          },
          "script_name": {
            "label": "Task Name"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.core_text": {
        "type": "text",
        "label": "Output Table Name",
        "show_if": "options.is_generate_holiday_table=='add_column' && output.core_rule=='custom'",
        "required": true,
        "minLength": 1,
        "maxLength": 31,
        "val": ""
      },
      "output.suffix_delimiter": {
        "type": "text",
        "label": "Delimiter",
        "show_if": "options.is_generate_holiday_table=='add_column' && output.core_rule!='auto'",
        "val": "_",
        "width": "50px"
      },
      "output.suffix_rule": {
        "type": "select",
        "label": "Suffix",
        "show_if": "options.is_generate_holiday_table=='add_column' && output.core_rule!='auto'",
        "val": "script_name",
        "options": {
          "empty": {
            "label": "-"
          },
          "script_name": {
            "label": "Task Name"
          },
          "date_string_type1": {
            "label": "Date: dd_mm_yyyy"
          },
          "date_string_type2": {
            "label": "Date: yyyy_mm_dd"
          },
          "time_string": {
            "label": "Time: h_min_sec"
          },
          "datetime_string": {
            "label": "Date_Time"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.suffix_text": {
        "type": "text",
        "label": "Suffix Text",
        "show_if": "options.is_generate_holiday_table=='add_column' && output.suffix_rule=='custom' && output.core_rule!='auto'",
        "minLength": 1,
        "maxLength": 31,
        "val": "",
        "breakLine": true
      },
      "output.generate_prefix_rule": {
        "type": "select",
        "label": "Prefix",
        "show_if": "options.is_generate_holiday_table=='generate_table' && output.generate_core_rule!='auto'",
        "val": "empty",
        "options": {
          "empty": {
            "label": "-"
          },
          "script_name": {
            "label": "Task Name"
          },
          "date_string_type1": {
            "label": "Date: dd_mm_yyyy"
          },
          "date_string_type2": {
            "label": "Date: yyyy_mm_dd"
          },
          "time_string": {
            "label": "Time: h_min_sec"
          },
          "datetime_string": {
            "label": "Date_Time"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.generate_prefix_text": {
        "type": "text",
        "label": "Prefix Text",
        "show_if": "options.is_generate_holiday_table=='generate_table' && output.generate_prefix_rule=='custom' && output.generate_core_rule!='auto'",
        "minLength": 1,
        "maxLength": 31,
        "val": ""
      },
      "output.generate_core_delimiter": {
        "type": "text",
        "label": "Delimiter",
        "show_if": "options.is_generate_holiday_table=='generate_table' && output.generate_core_rule!='auto' && output.generate_prefix_rule!='empty'",
        "val": "_",
        "width": "50px"
      },
      "output.generate_core_rule": {
        "type": "select",
        "label": "Table Name",
        "show_if": "options.is_generate_holiday_table=='generate_table'",
        "val": "auto",
        "options": {
          "auto": {
            "label": "Auto"
          },
          "script_name": {
            "label": "Task Name"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.generate_core_text": {
        "type": "text",
        "label": "Output Table Name",
        "show_if": "options.is_generate_holiday_table=='generate_table' && output.generate_core_rule=='custom'",
        "required": true,
        "minLength": 1,
        "maxLength": 31,
        "val": ""
      },
      "output.generate_suffix_delimiter": {
        "type": "text",
        "label": "Delimiter",
        "show_if": "options.is_generate_holiday_table=='generate_table' && output.generate_core_rule!='auto'",
        "val": "_",
        "width": "50px"
      },
      "output.generate_suffix_rule": {
        "type": "select",
        "label": "Suffix",
        "show_if": "options.is_generate_holiday_table=='generate_table' && output.generate_core_rule!='auto'",
        "val": "script_name",
        "options": {
          "empty": {
            "label": "-"
          },
          "script_name": {
            "label": "Task Name"
          },
          "date_string_type1": {
            "label": "Date: dd_mm_yyyy"
          },
          "date_string_type2": {
            "label": "Date: yyyy_mm_dd"
          },
          "time_string": {
            "label": "Time: h_min_sec"
          },
          "datetime_string": {
            "label": "Date_Time"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.generate_suffix_text": {
        "type": "text",
        "label": "Suffix Text",
        "show_if": "options.is_generate_holiday_table=='generate_table' && output.generate_suffix_rule=='custom' && output.generate_core_rule!='auto'",
        "minLength": 1,
        "maxLength": 31,
        "val": "",
        "breakLine": true
      },
      "output.timezone": {
        "type": "select",
        "label": "Timezone",
        "show_if": "options.is_generate_holiday_table=='add_column' && output.core_rule!='auto' && (output.prefix_rule=='date_string_type1' || output.prefix_rule=='date_string_type2' || output.prefix_rule=='time_string' || output.prefix_rule=='datetime_string' || output.core_rule=='date_string_type1' || output.core_rule=='date_string_type2' || output.core_rule=='time_string' || output.core_rule=='datetime_string' || output.suffix_rule=='date_string_type1' || output.suffix_rule=='date_string_type2' || output.suffix_rule=='time_string' || output.suffix_rule=='datetime_string')",
        "val": "Europe/Berlin",
        "required": true,
        "options": {
          "America/Adak": {
            "label": "Adak, Gambier"
          },
          "Australia/Adelaide": {
            "label": "Adelaide, Broken_Hill, Darwin"
          },
          "America/Anchorage": {
            "label": "Anchorage, Juneau, Sitka"
          },
          "Pacific/Apia": {
            "label": "Apia, Asau, Mulifanua, Afega, Leulumoega"
          },
          "Pacific/Enderbury": {
            "label": "Apia, Fiji, Tongatapu"
          },
          "Antarctica/McMurdo": {
            "label": "Auckland, Casey, Davis"
          },
          "Pacific/Auckland": {
            "label": "Auckland, Wellington, Christchurch"
          },
          "Asia/Bangkok": {
            "label": "Bangkok, Jakarta, Novosibirsk"
          },
          "Europe/Berlin": {
            "label": "Berlin, Paris, Amsterdam"
          },
          "Australia/Perth": {
            "label": "Brunei, Singapore, Perth"
          },
          "Atlantic/Cape_Verde": {
            "label": "Cape_Verde,Praia, Mindelo, Santa Maria"
          },
          "America/Belize": {
            "label": "Costa_Rica, El_Salvador, Denver"
          },
          "Antarctica/Vostok": {
            "label": "Dhaka, Bishkek, Omsk"
          },
          "Europe/Astrakhan": {
            "label": "Dubai, Baku, Tbilisi"
          },
          "Australia/Eucla": {
            "label": "Eucla"
          },
          "Pacific/Honolulu": {
            "label": "Honolulu, Rarotonga, Tahiti"
          },
          "Asia/Kabul": {
            "label": "Kabul, Kandahār, Mazār-e Sharīf, Herāt, Jalālābād"
          },
          "Asia/Aqtau": {
            "label": "Karachi, Tashkent, Maldives"
          },
          "Asia/Kathmandu": {
            "label": "Kathmandu,Pokhara, Pātan, Biratnagar"
          },
          "Pacific/Kiritimati": {
            "label": "Kiritimati"
          },
          "Asia/Colombo": {
            "label": "Kolkata, Colombo,Jaffna, Negombo"
          },
          "Europe/Guernsey": {
            "label": "London. Dublin, Lisbon"
          },
          "Australia/Lord_Howe": {
            "label": "Lord_Howe"
          },
          "America/Creston": {
            "label": "Los_Angeles, Vancouver, Hermosillo"
          },
          "Pacific/Marquesas": {
            "label": "Marquesas,Taiohae"
          },
          "America/Cayman": {
            "label": "Mexico_City, Panama, Chicago"
          },
          "Pacific/Niue": {
            "label": "Midway, Niue, Pago_Pago"
          },
          "Europe/Mariehamn": {
            "label": "Moscow, Istanbul, Qatar"
          },
          "Asia/Kolkata": {
            "label": "Mumbai, Delhi, Bengaluru, Kolkata, Chennai"
          },
          "America/Miquelon": {
            "label": "Noronha, Nuuk, Miquelon"
          },
          "America/Danmarkshavn": {
            "label": "Reykjavik, Dakar, Casablanca"
          },
          "Pacific/Bougainville": {
            "label": "Sakhalin, Norfolk, Bougainville"
          },
          "America/Araguaina": {
            "label": "Sao_Paulo, Buenos_Aires, Montevideo"
          },
          "America/St_Johns": {
            "label": "St_Johns,Mount Pearl, Corner Brook"
          },
          "Asia/Tehran": {
            "label": "Tehran, Mashhad, Isfahan, Karaj, Tabriz"
          },
          "Asia/Tokyo": {
            "label": "Tokyo, Seoul, Jayapura"
          },
          "America/New_York": {
            "label": "Toronto, Santiago, New_York"
          },
          "Australia/Sydney": {
            "label": "Vladivostok, Sydney, Brisbane"
          },
          "Asia/Yangon": {
            "label": "Yangon, Cocos,Mandalay, Nay Pyi Taw, Mawlamyine"
          },
          "Indian/Cocos": {
            "label": "Yangon, Cocos,West Island"
          }
        },
        "breakLine": true
      },
      "output.generate_timezone": {
        "type": "select",
        "label": "Timezone",
        "show_if": "options.is_generate_holiday_table=='generate_table' && output.core_rule!='auto' && (output.prefix_rule=='date_string_type1' || output.prefix_rule=='date_string_type2' || output.prefix_rule=='time_string' || output.prefix_rule=='datetime_string' || output.core_rule=='date_string_type1' || output.core_rule=='date_string_type2' || output.core_rule=='time_string' || output.core_rule=='datetime_string' || output.suffix_rule=='date_string_type1' || output.suffix_rule=='date_string_type2' || output.suffix_rule=='time_string' || output.suffix_rule=='datetime_string')",
        "val": "Europe/Berlin",
        "required": true,
        "options": {
          "America/Adak": {
            "label": "Adak, Gambier"
          },
          "Australia/Adelaide": {
            "label": "Adelaide, Broken_Hill, Darwin"
          },
          "America/Anchorage": {
            "label": "Anchorage, Juneau, Sitka"
          },
          "Pacific/Apia": {
            "label": "Apia, Asau, Mulifanua, Afega, Leulumoega"
          },
          "Pacific/Enderbury": {
            "label": "Apia, Fiji, Tongatapu"
          },
          "Antarctica/McMurdo": {
            "label": "Auckland, Casey, Davis"
          },
          "Pacific/Auckland": {
            "label": "Auckland, Wellington, Christchurch"
          },
          "Asia/Bangkok": {
            "label": "Bangkok, Jakarta, Novosibirsk"
          },
          "Europe/Berlin": {
            "label": "Berlin, Paris, Amsterdam"
          },
          "Australia/Perth": {
            "label": "Brunei, Singapore, Perth"
          },
          "Atlantic/Cape_Verde": {
            "label": "Cape_Verde,Praia, Mindelo, Santa Maria"
          },
          "America/Belize": {
            "label": "Costa_Rica, El_Salvador, Denver"
          },
          "Antarctica/Vostok": {
            "label": "Dhaka, Bishkek, Omsk"
          },
          "Europe/Astrakhan": {
            "label": "Dubai, Baku, Tbilisi"
          },
          "Australia/Eucla": {
            "label": "Eucla"
          },
          "Pacific/Honolulu": {
            "label": "Honolulu, Rarotonga, Tahiti"
          },
          "Asia/Kabul": {
            "label": "Kabul, Kandahār, Mazār-e Sharīf, Herāt, Jalālābād"
          },
          "Asia/Aqtau": {
            "label": "Karachi, Tashkent, Maldives"
          },
          "Asia/Kathmandu": {
            "label": "Kathmandu,Pokhara, Pātan, Biratnagar"
          },
          "Pacific/Kiritimati": {
            "label": "Kiritimati"
          },
          "Asia/Colombo": {
            "label": "Kolkata, Colombo,Jaffna, Negombo"
          },
          "Europe/Guernsey": {
            "label": "London. Dublin, Lisbon"
          },
          "Australia/Lord_Howe": {
            "label": "Lord_Howe"
          },
          "America/Creston": {
            "label": "Los_Angeles, Vancouver, Hermosillo"
          },
          "Pacific/Marquesas": {
            "label": "Marquesas,Taiohae"
          },
          "America/Cayman": {
            "label": "Mexico_City, Panama, Chicago"
          },
          "Pacific/Niue": {
            "label": "Midway, Niue, Pago_Pago"
          },
          "Europe/Mariehamn": {
            "label": "Moscow, Istanbul, Qatar"
          },
          "Asia/Kolkata": {
            "label": "Mumbai, Delhi, Bengaluru, Kolkata, Chennai"
          },
          "America/Miquelon": {
            "label": "Noronha, Nuuk, Miquelon"
          },
          "America/Danmarkshavn": {
            "label": "Reykjavik, Dakar, Casablanca"
          },
          "Pacific/Bougainville": {
            "label": "Sakhalin, Norfolk, Bougainville"
          },
          "America/Araguaina": {
            "label": "Sao_Paulo, Buenos_Aires, Montevideo"
          },
          "America/St_Johns": {
            "label": "St_Johns,Mount Pearl, Corner Brook"
          },
          "Asia/Tehran": {
            "label": "Tehran, Mashhad, Isfahan, Karaj, Tabriz"
          },
          "Asia/Tokyo": {
            "label": "Tokyo, Seoul, Jayapura"
          },
          "America/New_York": {
            "label": "Toronto, Santiago, New_York"
          },
          "Australia/Sydney": {
            "label": "Vladivostok, Sydney, Brisbane"
          },
          "Asia/Yangon": {
            "label": "Yangon, Cocos,Mandalay, Nay Pyi Taw, Mawlamyine"
          },
          "Indian/Cocos": {
            "label": "Yangon, Cocos,West Island"
          }
        },
        "breakLine": true
      },
      "output.select_output_columns": {
        "type": "checkbox",
        "label": "Select Output Columns",
        "show_if": "options.is_generate_holiday_table=='add_column'",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "output_columns": {
        "type": "fieldset",
        "label": "Select OutputColumns",
        "show_if": "options.is_generate_holiday_table=='add_column' && output.select_output_columns=='true'",
        "repeat": true,
        "fields": {
          "field_name": {
            "type": "select",
            "label": "Select Column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "order": {
            "type": "select",
            "label": "Order",
            "options": {
              "-": {
                "label": "-"
              },
              "asc": {
                "label": "Asc"
              },
              "desc": {
                "label": "Desc"
              }
            },
            "val": "-"
          },
          "is_rename": {
            "type": "checkbox",
            "label": "Rename",
            "val": "false",
            "isOn": "true",
            "isOff": "false"
          },
          "rename": {
            "show_if": "this.is_rename == 'true'",
            "type": "text",
            "required": true,
            "minLength": 1,
            "maxLength": 255,
            "label": "New Column Name",
            "style": "margin-left: 10px"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        },
        "breakLine": true,
        "style": "margin-bottom: 20px"
      },
      "output.add_tag": {
        "type": "checkbox",
        "label": "Add Tag",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-right: 15px"
      },
      "output.tag_name": {
        "type": "text",
        "label": "Tag Name",
        "show_if": "output.add_tag=='true'",
        "required": true,
        "minLength": 1,
        "maxLength": 255,
        "val": "",
        "breakLine": true,
        "style": "margin-left: 15px"
      }
    }
  }
}
,
"/FlowOverviewOptions.json/FlowOverviewOptions.json": {
  "task_symbol": {
    "type": "hidden",
    "val": "flow_overview"
  }
}
,
"/UniqueOutput.json/UniqueOutput.json": {
  "output.output_table_types": {
    "type": "select",
    "label": "Output Table Type(s)",
    "required": true,
    "options": {
      "unique": {
        "label": "Unique Table"
      },
      "duplicates": {
        "label": "Duplicates Table"
      }
    },
    "multiple": true,
    "val": ["unique"],
    "breakLine": true
  },
  "output.unify_output_table": {
    "type": "checkbox",
    "label": "Unify output tables",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  },
  "output.standard_ending": {
    "type": "checkbox",
    "label": "Standard Ending",
    "show_if": "output.unify_output_table == 'false'",
    "val": "true",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  },
  "output.unique_ending": {
    "type": "text",
    "label": "Unique Output Ending",
    "show_if": "output.unify_output_table == 'false' && output.standard_ending == 'false'",
    "val": "_u",
    "style": "width: 160px; margin-left: 10px"
  },
  "output.duplicates_ending": {
    "type": "text",
    "label": "Duplicates Output Ending",
    "show_if": "output.unify_output_table == 'false' && output.standard_ending == 'false'",
    "val": "_d",
    "style": "width: 160px; margin-left: 10px",
    "breakLine": true
  }
},
"/Convert2TextOptions.json/Convert2TextOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.text_col": {
        "type": "select",
        "label": "Text column",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true,
        "breakLine": true
      },
      "options.apply_section_by_section": {
        "type": "checkbox",
        "label": "Apply Section by Section",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "section_cols_frame": {
        "type": "fieldset",
        "label": "Select Section Column(s)",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.apply_section_by_section=='true'",
        "repeat": false,
        "fields": {
          "options.section_cols__all_but_selected": {
            "type": "checkbox",
            "label": "All but selected",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.section_cols": {
            "type": "select",
            "label": "Section column(s)",
            "table": "table_id",
            "bind": "COLUMNS",
            "multiple": true
          }
        }
      }
    }
  }
}
,
"/CurveGeneratorOptions.json/CurveGeneratorOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.standard.start": {
        "type": "hidden",
        "val": "1"
      },
      "options.standard.multiplier_at_maximum_impact_level": {
        "type": "text",
        "label": "Maximum Value",
        "val": "2",
        "required": true
      },
      "options.standard.maximum": {
        "type": "text",
        "label": "Maximum Period",
        "val": "50",
        "required": true
      },
      "options.standard.multiplier_end_value": {
        "type": "text",
        "label": "End Value",
        "show_if": "options.standard.end_value_equals_initial_value=='no'",
        "val": "1",
        "required": true
      },
      "options.standard.end": {
        "type": "text",
        "label": "End Period",
        "val": "100",
        "required": true,
        "breakLine": true
      },
      "options.standard.end_value_equals_initial_value": {
        "type": "checkbox",
        "label": "Initial Value and End Value equals 1",
        "width": "100%",
        "val": "yes",
        "isOn": "yes",
        "isOff": "no",
        "breakLine": true
      },
      "options.standard.maximum_plateau": {
        "type": "checkbox",
        "label": "Maximum Plateau",
        "width": "100%",
        "val": "yes",
        "isOn": "yes",
        "isOff": "no",
        "breakLine": true
      },
      "options.standard.no_of_periods_prior_defined_maximum_point": {
        "type": "text",
        "label": "No of periods prior defined maximum point",
        "show_if": "options.standard.maximum_plateau=='yes'",
        "val": "0",
        "style": "width: 250px"
      },
      "options.standard.no_of_periods_post_defined_maximum_point": {
        "type": "text",
        "label": "No of periods post defined maximum point",
        "show_if": "options.standard.maximum_plateau=='yes'",
        "val": "0",
        "style": "width: 250px",
        "breakLine": true
      },
      "options.standard.left_slope": {
        "type": "select",
        "label": "Left Slope",
        "options": {
          "vertical": {
            "label": "Vertical"
          },
          "linear": {
            "label": "Linear"
          },
          "standard_distribution": {
            "label": "Standard Distribution"
          }
        },
        "val": "standard_distribution"
      },
      "options.standard.use_auto_calculated_sigma_for_left_slope": {
        "type": "checkbox",
        "label": "Auto calculated left sigma",
        "show_if": "options.standard.left_slope=='standard_distribution'",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "options.standard.left_slope_sigma": {
        "type": "text",
        "label": "Left Slope Sigma",
        "show_if": "options.standard.left_slope=='standard_distribution' && options.standard.use_auto_calculated_sigma_for_left_slope=='false'",
        "val": "",
        "breakLine": true
      },
      "options.standard.right_slope": {
        "type": "select",
        "label": "Right Slope",
        "required": true,
        "options": {
          "vertical": {
            "label": "Vertical"
          },
          "linear": {
            "label": "Linear"
          },
          "standard_distribution": {
            "label": "Standard Distribution"
          }
        },
        "val": "standard_distribution"
      },
      "options.standard.use_auto_calculated_sigma_for_right_slope": {
        "type": "checkbox",
        "label": "Auto calculated right sigma",
        "show_if": "options.standard.right_slope=='standard_distribution'",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "options.standard.right_slope_sigma": {
        "type": "text",
        "label": "Right Slope Sigma",
        "show_if": "options.standard.right_slope=='standard_distribution' && options.standard.use_auto_calculated_sigma_for_right_slope=='false'",
        "val": "",
        "breakLine": true
      }
    }
  }
}
,
"/UpdateTaskTemplateOptions.json/UpdateTaskTemplateOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.update_entity": {
        "type": "checkbox",
        "label": "Update script menu",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.table_id": {
        "type": "select",
        "label": "Script Entity JSON table",
        "show_if": "options.update_entity=='true'",
        "bind": "TABLES",
        "required": true,
        "breakLine": true
      },
      "help_1": {
        "type": "text",
        "label": "",
        "show_if": "options.update_entity=='true'",
        "val": "You may get base table with `Get Task Template` task",
        "disabled": true,
        "width": "100%",
        "breakLine": true
      },
      "options.update_publish_type": {
        "type": "checkbox",
        "label": "Update publish type",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.publish_type": {
        "type": "select",
        "label": "Publish Type",
        "show_if": "options.update_publish_type=='true'",
        "options": {
          "private": {
            "label": "As private task"
          },
          "public": {
            "label": "As public task"
          }
        },
        "val": "private",
        "required": true,
        "breakLine": true
      }
    }
  }
}
,
"/TransformSelectOutputColumn.json/TransformSelectOutputColumn.json": {
  "output.select_output_columns": {
    "type": "checkbox",
    "label": "Select Output Columns",
    "show_if": "options.type=='transform_group' && output.custom_options=='true'",
    "val": "false",
    "isOn": "true",
    "isOff": "false"
  },
  "output_columns": {
    "type": "fieldset",
    "label": "Select OutputColumns",
    "show_if": "options.type=='transform_group' && output.custom_options=='true' && output.select_output_columns=='true'",
    "repeat": true,
    "fields": {
      "field_name": {
        "type": "select",
        "label": "Select Column",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "is_rename": {
        "type": "checkbox",
        "label": "Rename",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "rename": {
        "show_if": "this.is_rename == 'true'",
        "type": "text",
        "required": true,
        "minLength": 1,
        "maxLength": 255,
        "label": "New Column Name",
        "style": "margin-left: 10px"
      },
      "delete": {
        "type": "button",
        "label": "Delete",
        "function": "DELETE_ROW"
      }
    },
    "breakLine": true,
    "style": "margin-bottom: 20px"
  }
},
"/FindOptions.json/FindOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "add_column": {
        "type": "text",
        "label": "Column name for match status",
        "val": "Match",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "do_not_duplicate": {
        "type": "checkbox",
        "label": "Don't duplicate same matches",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "use_custom_delimiter": {
        "type": "checkbox",
        "label": "Custom delimiter",
        "show_if": "do_not_duplicate=='false'",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "custom_delimiter": {
        "type": "text",
        "label": "Custom delimiter",
        "show_if": "use_custom_delimiter=='true'",
        "val": ";",
        "required": true,
        "breakLine": true
      },
      "filter_box": {
        "type": "fieldset",
        "label": "Filter Options",
        "repeat": false,
        "fields": {
          "filter": {
            "type": "fieldset",
            "label": "Select Conditions for Match",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if" :  "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "show_if" :  "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'IS NULL' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table_id": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table_id",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group",
            "show_if": "apply_to_record=='false'",
            "repeat": false,
            "fields": {
              "apply_to_group_columns__all_but_selected": {
                "type": "checkbox",
                "label": "All but selected",
                "val": "false",
                "isOn": "true",
                "isOff": "false",
                "breakLine": true
              },
              "apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "width": "100%",
                "table": "table_id",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      }
    }
  }
}
,
"/ColByColOptions.json/ColByColOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.position": {
        "type": "select",
        "label": "Select Position",
        "required": true,
        "show_if": "table_type=='header_only'",
        "options": {
          "add_rows_below_selected_row": {
            "label": "Add rows below"
          },
          "add_rows_above_selected_row": {
            "label": "Add rows above"
          },
          "add_rows_at_table_end": {
            "label": "Add rows at table end"
          },
          "add_single_row_at_table_end": {
            "label": "Add single row at table end"
          },
          "add_row_after_each_group": {
            "label": "Add row after each group"
          }
        },
        "val": "add_rows_below_selected_row",
        "breakLine": true
      },
      "options.group_column": {
        "type": "select",
        "label": "Group Column",
        "show_if": "table_type=='header_only' && options.position=='add_row_after_each_group'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true,
        "breakLine": true
      },
      "options.use_filter": {
        "type": "checkbox",
        "label": "Use Filter",
        "show_if": "table_type=='header_only' && (options.position=='add_rows_below_selected_row' || options.position=='add_rows_above_selected_row' || options.position=='add_rows_at_table_end')",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true,
        "style": "margin-top: 10px"
      },
      "filter_box": {
        "type": "fieldset",
        "label": "Filter Options",
        "show_if": "table_type=='header_only' && options.use_filter=='true' && (options.position=='add_rows_below_selected_row' || options.position=='add_rows_above_selected_row' || options.position=='add_rows_at_table_end')",
        "repeat": false,
        "fields": {
          "options.filter": {
            "type": "fieldset",
            "label": "Add Filter Conditions",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group",
            "show_if": "options.apply_to_record=='false'",
            "repeat": false,
            "fields": {
              "options.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "required": true,
                "width": "100%",
                "table": "table_id",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      },
      "options.add_rows": {
        "type": "fieldset",
        "label": "New Rows Option",
        "repeat": true,
        "fields": {
          "new_row_name": {
            "type": "text",
            "label": "New Row Name",
            "val": ""
          },
          "function_type": {
            "type": "select",
            "label": "Task Type",
            "show_if": "false",
            "required": true,
            "options": {
              "multi_column_functions": {
                "label": "Multi-Column"
              },
              "multi_row_functions": {
                "label": "Multi-Row"
              }
            },
            "val": "multi_column_functions"
          },
          "multi_column_functions__function": {
            "type": "select",
            "label": "Select Function",
            "show_if": "this.function_type=='multi_column_functions'",
            "required": true,
            "options": {
              "absolute_growth": {
                "label": "Absolute Growth"
              },
              "relative_growth": {
                "label": "Relative Growth"
              },
              "trailing_average": {
                "label": "Trailing Average"
              },
              "index_growth": {
                "label": "Index Growth"
              },
              "compound_growth": {
                "label": "Compound Growth"
              },
              "discount_rate": {
                "label": "Discount Rate"
              },
              "quota": {
                "label": "Quota"
              }
            },
            "val": "absolute_growth"
          },
          "multi_row_functions__function": {
            "type": "select",
            "label": "Select Function",
            "show_if": "this.function_type=='multi_row_functions'",
            "required": true,
            "options": {
              "sum": {
                "label": "Sum"
              },
              "average": {
                "label": "Average"
              },
              "median": {
                "label": "Median"
              },
              "standard_deviation": {
                "label": "Standard Deviation"
              },
              "variance": {
                "label": "Variance"
              },
              "product": {
                "label": "Product"
              },
              "quota": {
                "label": "Quota"
              }
            },
            "val": "sum"
          },
          "multi_column_functions__sel_labels": {
            "type": "select",
            "label": "Select Rows(s)",
            "show_if": "table_type!='header_only' && this.function_type=='multi_column_functions' && (this.multi_column_functions__function=='absolute_growth' || this.multi_column_functions__function=='relative_growth' || this.multi_column_functions__function=='trailing_average' || this.multi_column_functions__function=='index_growth' || this.multi_column_functions__function=='compound_growth' || this.multi_column_functions__function=='discount_rate')",
            "required": true,
            "table": "table_id",
            "multiple": true,
            "bind": "LABELS"
          },
          "multi_column_functions__n_value": {
            "type": "text",
            "label": "N (positive integer)",
            "show_if": "this.function_type=='multi_column_functions' && (this.multi_column_functions__function=='trailing_average' || this.multi_column_functions__function=='index_growth' || this.multi_column_functions__function=='compound_growth')",
            "val": "1",
            "required": true
          },
          "multi_column_functions__discount_rate__rate": {
            "type": "text",
            "label": "Input Rate",
            "show_if": "this.function_type=='multi_column_functions' && this.multi_column_functions__function=='discount_rate'",
            "val": "1",
            "required": true
          },
          "multi_column_functions__discount_rate__starting_column": {
            "type": "select",
            "label": "Starting column",
            "show_if": "this.function_type=='multi_column_functions' && this.multi_column_functions__function=='discount_rate'",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "multi_column_functions__sel_label_a": {
            "type": "select",
            "label": "Select Label A",
            "show_if": "table_type!='header_only' && this.function_type=='multi_column_functions' && this.multi_column_functions__function=='quota'",
            "required": true,
            "table": "table_id",
            "bind": "LABELS"
          },
          "multi_column_functions__sel_label_b": {
            "type": "select",
            "label": "Select Label B",
            "show_if": "table_type!='header_only' && this.function_type=='multi_column_functions' && this.multi_column_functions__function=='quota'",
            "required": true,
            "table": "table_id",
            "bind": "LABELS"
          },
          "multi_row_functions__sel_label_a": {
            "type": "select",
            "label": "Select Label A",
            "show_if": "table_type!='header_only' && this.function_type=='multi_row_functions' && this.multi_row_functions__function=='quota'",
            "required": true,
            "table": "table_id",
            "bind": "LABELS"
          },
          "multi_row_functions__sel_label_b": {
            "type": "select",
            "label": "Select Label B",
            "show_if": "table_type!='header_only' && this.function_type=='multi_row_functions' && this.multi_row_functions__function=='quota'",
            "required": true,
            "table": "table_id",
            "bind": "LABELS",
            "breakLine": true
          },
          "position": {
            "type": "select",
            "label": "Position",
            "show_if": "table_type!='header_only'",
            "required": true,
            "options": {
              "bottom": {
                "label": "BOTTOM"
              },
              "top": {
                "label": "TOP"
              },
              "above": {
                "label": "ABOVE"
              },
              "below": {
                "label": "BELOW"
              }
            },
            "val": "bottom"
          },
          "positioning_row": {
            "type": "select",
            "label": "Positioning Row",
            "show_if": "table_type!='header_only' && (this.position=='above' || this.position=='below')",
            "required": true,
            "table": "table_id",
            "bind": "LABELS"
          },
          "multi_column_functions__sel_row_a": {
            "type": "select",
            "label": "Select Row A",
            "show_if": "table_type=='header_only' && this.multi_column_functions__function=='quota' && this.function_type=='multi_column_functions'",
            "required": true,
            "options": {
              "row-1": {
                "label": "Row-1"
              },
              "row-2": {
                "label": "Row-2"
              },
              "row-3": {
                "label": "Row-3"
              },
              "row-4": {
                "label": "Row-4"
              },
              "row-5": {
                "label": "Row-5"
              },
              "row-6": {
                "label": "Row-6"
              },
              "row-7": {
                "label": "Row-7"
              },
              "row-8": {
                "label": "Row-8"
              },
              "row-9": {
                "label": "Row-9"
              },
              "row-10": {
                "label": "Row-10"
              },
              "row-11": {
                "label": "Row-11"
              },
              "row-12": {
                "label": "Row-12"
              },
              "row-13": {
                "label": "Row-13"
              },
              "row-14": {
                "label": "Row-14"
              },
              "row-15": {
                "label": "Row-15"
              },
              "row-16": {
                "label": "Row-16"
              },
              "row-17": {
                "label": "Row-17"
              },
              "row-18": {
                "label": "Row-18"
              },
              "row-19": {
                "label": "Row-19"
              },
              "row-20": {
                "label": "Row-20"
              },
              "row+1": {
                "label": "Row+1"
              },
              "row+2": {
                "label": "Row+2"
              },
              "row+3": {
                "label": "Row+3"
              },
              "row+4": {
                "label": "Row+4"
              },
              "row+5": {
                "label": "Row+5"
              },
              "row+6": {
                "label": "Row+6"
              },
              "row+7": {
                "label": "Row+7"
              },
              "row+8": {
                "label": "Row+8"
              },
              "row+9": {
                "label": "Row+9"
              },
              "row+10": {
                "label": "Row+10"
              },
              "row+11": {
                "label": "Row+11"
              },
              "row+12": {
                "label": "Row+12"
              },
              "row+13": {
                "label": "Row+13"
              },
              "row+14": {
                "label": "Row+14"
              },
              "row+15": {
                "label": "Row+15"
              },
              "row+16": {
                "label": "Row+16"
              },
              "row+17": {
                "label": "Row+17"
              },
              "row+18": {
                "label": "Row+18"
              },
              "row+19": {
                "label": "Row+19"
              },
              "row+20": {
                "label": "Row+20"
              }
            },
            "val": "row-1"
          },
          "multi_column_functions__sel_row_b": {
            "type": "select",
            "label": "Select Row B",
            "show_if": "table_type=='header_only' && this.multi_column_functions__function=='quota' && this.function_type=='multi_column_functions'",
            "required": true,
            "options": {
              "row-1": {
                "label": "Row-1"
              },
              "row-2": {
                "label": "Row-2"
              },
              "row-3": {
                "label": "Row-3"
              },
              "row-4": {
                "label": "Row-4"
              },
              "row-5": {
                "label": "Row-5"
              },
              "row-6": {
                "label": "Row-6"
              },
              "row-7": {
                "label": "Row-7"
              },
              "row-8": {
                "label": "Row-8"
              },
              "row-9": {
                "label": "Row-9"
              },
              "row-10": {
                "label": "Row-10"
              },
              "row-11": {
                "label": "Row-11"
              },
              "row-12": {
                "label": "Row-12"
              },
              "row-13": {
                "label": "Row-13"
              },
              "row-14": {
                "label": "Row-14"
              },
              "row-15": {
                "label": "Row-15"
              },
              "row-16": {
                "label": "Row-16"
              },
              "row-17": {
                "label": "Row-17"
              },
              "row-18": {
                "label": "Row-18"
              },
              "row-19": {
                "label": "Row-19"
              },
              "row-20": {
                "label": "Row-20"
              },
              "row+1": {
                "label": "Row+1"
              },
              "row+2": {
                "label": "Row+2"
              },
              "row+3": {
                "label": "Row+3"
              },
              "row+4": {
                "label": "Row+4"
              },
              "row+5": {
                "label": "Row+5"
              },
              "row+6": {
                "label": "Row+6"
              },
              "row+7": {
                "label": "Row+7"
              },
              "row+8": {
                "label": "Row+8"
              },
              "row+9": {
                "label": "Row+9"
              },
              "row+10": {
                "label": "Row+10"
              },
              "row+11": {
                "label": "Row+11"
              },
              "row+12": {
                "label": "Row+12"
              },
              "row+13": {
                "label": "Row+13"
              },
              "row+14": {
                "label": "Row+14"
              },
              "row+15": {
                "label": "Row+15"
              },
              "row+16": {
                "label": "Row+16"
              },
              "row+17": {
                "label": "Row+17"
              },
              "row+18": {
                "label": "Row+18"
              },
              "row+19": {
                "label": "Row+19"
              },
              "row+20": {
                "label": "Row+20"
              }
            },
            "val": "row-1"
          },
          "format__category": {
            "type": "select",
            "label": "Display Format",
            "required": true,
            "options": {
              "standard": {
                "label": "Standard"
              },
              "number": {
                "label": "Number"
              },
              "percentage": {
                "label": "Percentage"
              },
              "text": {
                "label": "Text"
              },
              "date": {
                "label": "Date"
              },
              "currency": {
                "label": "Currency"
              }
            },
            "val": "standard"
          },
          "format__rounding": {
            "type": "select",
            "label": "Decimal Places for display",
            "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
            "required": true,
            "options": {
              "no_rounding": {
                "label": "No rounding"
              },
              "0": {
                "label": "0 digits"
              },
              "1": {
                "label": "1 digits"
              },
              "2": {
                "label": "2 digits"
              },
              "3": {
                "label": "3 digits"
              },
              "4": {
                "label": "4 digits"
              },
              "5": {
                "label": "5 digits"
              },
              "6": {
                "label": "6 digits"
              },
              "7": {
                "label": "7 digits"
              },
              "8": {
                "label": "8 digits"
              },
              "9": {
                "label": "9 digits"
              }
            },
            "val": "no_rounding"
          },
          "format__use_1000_separator": {
            "type": "checkbox",
            "label": "Use 1000 Separator(.)",
            "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
            "val": "false",
            "isOn": "true",
            "isOff": "false"
          },
          "format__currency_symbol": {
            "type": "select",
            "label": "Symbol",
            "show_if": "this.format__category=='currency'",
            "required": true,
            "options": {
              "dollar": {
                "label": "$"
              },
              "euro": {
                "label": "€"
              },
              "pound": {
                "label": "£"
              },
              "yen": {
                "label": "¥ (Yen, currency of Japan)"
              },
              "colon": {
                "label": "₡ (Colón, currency of Costa Rica)"
              },
              "naira": {
                "label": "₦ (Naira, currency of Nigeria)"
              },
              "rupee": {
                "label": "₨ (Rupee, currency of India)"
              },
              "rupie": {
                "label": "₹ (Rupee, currency of India)"
              },
              "won": {
                "label": "₩ (Won, currency in South Korea and North Korea)"
              },
              "hebrew": {
                "label": "₪ (Currency of Israel)"
              },
              "dong": {
                "label": "₫ (Currency of Vietnam)"
              },
              "kip": {
                "label": "₭ (Kip, currency of Laos)"
              },
              "mongolia": {
                "label": "₮ (Currency of Mongolia)"
              },
              "peso": {
                "label": "₱ (Peso, currency of the Philippines)"
              },
              "guarani": {
                "label": "₲ (Guaraní, currency of Paraguay)"
              },
              "hryvnia": {
                "label": "₴ (Hryvnia, currency of Ukraine)"
              },
              "tenge": {
                "label": "₸ (Tenge, currency of Kazakhstan)"
              },
              "lira": {
                "label": "₺ (Lira, currency of Turkey)"
              },
              "manat": {
                "label": "₼ (Manat, currency of Azerbaijan)"
              },
              "rubles": {
                "label": "₽ (Rubles, currency of Russia)"
              },
              "lari": {
                "label": "₾ (Lari, currency of Georgia)"
              },
              "bitcoin": {
                "label": "₿ (Bitcoin, crypto currency)"
              }
            },
            "val": "dollar"
          },
          "format__date_format": {
            "type": "select",
            "label": "Type",
            "show_if": "this.format__category=='date'",
            "required": true,
            "options": {
              "mm/dd/yyyy": {
                "label": "3/14/2012"
              },
              "D, M dd, Y": {
                "label": "Wednesday, March 14, 2012"
              },
              "yyyy-mm-dd": {
                "label": "2012-03-14"
              },
              "m.dd.yyyy": {
                "label": "3.14.2012"
              },
              "m.dd.yy": {
                "label": "3.14.12"
              },
              "dd.m.yyyy": {
                "label": "14.3.2012"
              },
              "dd.m.yy": {
                "label": "14.3.12"
              },
              "M dd, Y": {
                "label": "March 14, 2012"
              },
              "dd-mm-yyyy": {
                "label": "14-03-2012"
              },
              "mm-dd-yyyy": {
                "label": "03-14-2012"
              },
              "dd-mm-yy": {
                "label": "14-03-12"
              },
              "mm-dd-yy": {
                "label": "03-14-12"
              }
            },
            "val": "mm/dd/yyyy"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      }
    }
  }
}
,
"/SplitOptions.json/SplitOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.split_method": {
        "type": "select",
        "label": "Split method",
        "required": true,
        "options": {
          "standard": {
            "label": "Standard"
          },
          "regex": {
            "label": "RegEx"
          }
        },
        "val": "standard"
      },
      "options.split_type": {
        "type": "select",
        "label": "Split type",
        "required": true,
        "options": {
          "split_to_columns": {
            "label": "Split to Columns"
          },
          "split_to_rows": {
            "label": "Split to Rows"
          }
        },
        "val": "split_to_columns"
      },
      "options.standard_delimiter": {
        "type": "select",
        "label": "Split Delimiter",
        "show_if": "options.split_method=='standard'",
        "required": true,
        "options": {
          "tabs": {
            "label": "Tabs"
          },
          "space": {
            "label": "Space"
          },
          "whitespace": {
            "label": "Whitespace"
          },
          "linebreak": {
            "label": "Line break"
          },
          "punctuation": {
            "label": "Punctuation"
          },
          "punctuation_whitespace": {
            "label": "Punctuation and Whitespace"
          },
          "custom": {
            "label": "Custom"
          }
        },
        "val": "punctuation"
      },
      "options.delimiter": {
        "type": "text",
        "label": "Split Delimiter",
        "show_if": "options.split_method=='standard' && options.standard_delimiter=='custom'",
        "val": ",",
        "trim": "false",
        "required": true,
        "breakLine": true
      },
      "format_frame": {
        "type": "fieldset",
        "label": "Format to Parse for Split",
        "show_if": "options.split_method=='regex'",
        "repeat": false,
        "fields": {
          "options.format_to_convert.regular_expression": {
            "type": "text",
            "label": "Parse Regular Expression ( ex: ([a-z]+)\\s([a-z]+) )",
            "val": "[a-z]+\\s[a-z]+",
            "required": true,
            "width": "100%",
            "trim": "false",
            "breakLine": true
          },
          "options.format_to_convert.case_insensitive": {
            "type": "checkbox",
            "label": "Case Insensitive",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          }
        }
      },
      "options.n_multi_n": {
        "type": "checkbox",
        "label": "N x N split if multiple columns are selected",
        "show_if": "options.split_type=='split_to_rows'",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
}
,
"/FlexmonsterColumnOptions.json/FlexmonsterColumnOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "show_if": "options.configure_manual=='true'",
    "repeat": false,
    "fields": {
      "options.type": {
        "type": "hidden",
        "val": "column_chart"
      },
      "options.chart_type": {
        "type": "hidden",
        "val": "column"
      },
      "options.add_column_cols": {
        "type": "checkbox",
        "label": "by Category",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.column_cols": {
        "type": "fieldset",
        "label": "Category column(s)",
        "show_if": "options.add_column_cols=='true'",
        "repeat": true,
        "fields": {
          "column_col": {
            "type": "select",
            "label": "Category column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "is_date": {
            "type": "checkbox",
            "label": "Is Date",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.row_cols": {
        "type": "fieldset",
        "label": "Series column(s)",
        "repeat": true,
        "fields": {
          "row_col": {
            "type": "select",
            "label": "Series column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "is_date": {
            "type": "checkbox",
            "label": "Is Date",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.measure_cols": {
        "type": "fieldset",
        "label": "Value column(s)",
        "repeat": true,
        "fields": {
          "measure_col": {
            "type": "select",
            "label": "Value Column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "aggregation": {
            "type": "select",
            "label": "Aggregation Function",
            "options": {
              "sum": {
                "label": "Sum"
              },
              "count": {
                "label": "Count"
              },
              "distinctcount": {
                "label": "Distinct Count"
              },
              "average": {
                "label": "Average"
              },
              "median": {
                "label": "Median"
              },
              "product": {
                "label": "Product"
              },
              "min": {
                "label": "Min"
              },
              "max": {
                "label": "Max"
              },
              "stdevp": {
                "label": "Population Standard Deviation"
              },
              "stdevs": {
                "label": "Sample Standard Deviation"
              },
              "percent": {
                "label": "Percent"
              }
            },
            "val": "sum",
            "required": true,
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      }
    }
  }
}
,
"/PayStripeInput.json/PayStripeInput.json": {
  "input": {
    "type": "fieldset",
    "label": "Select Input Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "table_id": {
        "type": "select",
        "label": "Select Table",
        "bind": "TABLES",
        "empty": "",
        "required": true,
        "breakLine": true
      },
      "remove_input_table_after_processing": {
        "type": "hidden",
        "val": "false"
      },
      "is_word": {
        "type": "hidden",
        "val": "false"
      },
      "help_text_stripe_charge": {
        "type": "text",
        "label": "",
        "show_if": "options.provider=='stripe' && options.type=='charge'",
        "val": "Table Structure ( Customer ID | Currency | Amount | Description )",
        "disabled": true,
        "width": "100%"
      },
      "help_text_stripe_transfer": {
        "type": "text",
        "label": "",
        "show_if": "options.provider=='stripe' && options.type=='transfer'",
        "val": "Table Structure ( Connected Account  ID | Currency | Amount )",
        "disabled": true,
        "width": "100%"
      }
    }
  }
}
,
"/ImportFromFileOutput.json/ImportFromFileOutput.json": {
  "output": {
    "type": "fieldset",
    "label": "Define Output Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "output.custom_text": {
        "type": "text",
        "label": "Output Table Name",
        "show_if": "options.use_filename_as_output_table_name=='false' && (output.custom_options=='false' || (output.custom_options=='true' && output.compose_table_name=='false'))",
        "minLength": 1,
        "val": "",
        "width": "100%",
        "breakLine": true
      },
      "options.use_filename_as_output_table_name": {
        "type": "checkbox",
        "label": "Use filename as table name",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "output.custom_options": {
        "type": "checkbox",
        "label": "Output Options",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "output.compose_table_name": {
        "type": "checkbox",
        "label": "Compose Table Name",
        "show_if": "options.use_filename_as_output_table_name=='false' && output.custom_options=='true'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "compose_table_name_frame": {
        "type": "fieldset",
        "label": "Compose Output Table Name",
        "show_if": "options.use_filename_as_output_table_name=='false' && output.custom_options=='true' && output.compose_table_name=='true'",
        "repeat": false,
        "fields": {
          "output.prefix_rule": {
            "type": "select",
            "label": "Prefix",
            "show_if": "output.compose_table_name=='true'",
            "val": "empty",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.prefix_text": {
            "type": "text",
            "label": "Prefix Text",
            "show_if": "output.compose_table_name=='true' && output.prefix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "output.core_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "show_if": "output.compose_table_name=='true' && output.prefix_rule!='empty'",
            "val": "_",
            "width": "50px"
          },
          "output.core_rule": {
            "type": "select",
            "label": "Table Name",
            "show_if": "output.compose_table_name=='true'",
            "val": "script_name",
            "options": {
              "script_name": {
                "label": "Task Name"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.core_text": {
            "type": "text",
            "label": "Main Table Name",
            "show_if": "output.compose_table_name=='true' && output.core_rule=='custom'",
            "required": true,
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "output.suffix_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "show_if": "output.compose_table_name=='true'",
            "val": "_",
            "width": "50px"
          },
          "output.suffix_rule": {
            "type": "select",
            "label": "Suffix",
            "show_if": "output.compose_table_name=='true'",
            "val": "script_name",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.suffix_text": {
            "type": "text",
            "label": "Suffix Text",
            "show_if": "output.compose_table_name=='true' && output.suffix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": "",
            "breakLine": true
          },
          "output.timezone": {
            "type": "select",
            "label": "Timezone",
            "show_if": "output.compose_table_name=='true' && (output.prefix_rule=='date_string_type1' || output.prefix_rule=='date_string_type2' || output.prefix_rule=='time_string' || output.prefix_rule=='datetime_string' || output.suffix_rule=='date_string_type1' || output.suffix_rule=='date_string_type2' || output.suffix_rule=='time_string' || output.suffix_rule=='datetime_string')",
            "val": "Europe/Berlin",
            "required": true,
            "options": {
              "America/Adak": {
                "label": "Adak, Gambier"
              },
              "Australia/Adelaide": {
                "label": "Adelaide, Broken_Hill, Darwin"
              },
              "America/Anchorage": {
                "label": "Anchorage, Juneau, Sitka"
              },
              "Pacific/Apia": {
                "label": "Apia, Asau, Mulifanua, Afega, Leulumoega"
              },
              "Pacific/Enderbury": {
                "label": "Apia, Fiji, Tongatapu"
              },
              "Antarctica/McMurdo": {
                "label": "Auckland, Casey, Davis"
              },
              "Pacific/Auckland": {
                "label": "Auckland, Wellington, Christchurch"
              },
              "Asia/Bangkok": {
                "label": "Bangkok, Jakarta, Novosibirsk"
              },
              "Europe/Berlin": {
                "label": "Berlin, Paris, Amsterdam"
              },
              "Australia/Perth": {
                "label": "Brunei, Singapore, Perth"
              },
              "Atlantic/Cape_Verde": {
                "label": "Cape_Verde,Praia, Mindelo, Santa Maria"
              },
              "America/Belize": {
                "label": "Costa_Rica, El_Salvador, Denver"
              },
              "Antarctica/Vostok": {
                "label": "Dhaka, Bishkek, Omsk"
              },
              "Europe/Astrakhan": {
                "label": "Dubai, Baku, Tbilisi"
              },
              "Australia/Eucla": {
                "label": "Eucla"
              },
              "Pacific/Honolulu": {
                "label": "Honolulu, Rarotonga, Tahiti"
              },
              "Asia/Kabul": {
                "label": "Kabul, Kandahār, Mazār-e Sharīf, Herāt, Jalālābād"
              },
              "Asia/Aqtau": {
                "label": "Karachi, Tashkent, Maldives"
              },
              "Asia/Kathmandu": {
                "label": "Kathmandu,Pokhara, Pātan, Biratnagar"
              },
              "Pacific/Kiritimati": {
                "label": "Kiritimati"
              },
              "Asia/Colombo": {
                "label": "Kolkata, Colombo,Jaffna, Negombo"
              },
              "Europe/Guernsey": {
                "label": "London. Dublin, Lisbon"
              },
              "Australia/Lord_Howe": {
                "label": "Lord_Howe"
              },
              "America/Creston": {
                "label": "Los_Angeles, Vancouver, Hermosillo"
              },
              "Pacific/Marquesas": {
                "label": "Marquesas,Taiohae"
              },
              "America/Cayman": {
                "label": "Mexico_City, Panama, Chicago"
              },
              "Pacific/Niue": {
                "label": "Midway, Niue, Pago_Pago"
              },
              "Europe/Mariehamn": {
                "label": "Moscow, Istanbul, Qatar"
              },
              "Asia/Kolkata": {
                "label": "Mumbai, Delhi, Bengaluru, Kolkata, Chennai"
              },
              "America/Miquelon": {
                "label": "Noronha, Nuuk, Miquelon"
              },
              "America/Danmarkshavn": {
                "label": "Reykjavik, Dakar, Casablanca"
              },
              "Pacific/Bougainville": {
                "label": "Sakhalin, Norfolk, Bougainville"
              },
              "America/Araguaina": {
                "label": "Sao_Paulo, Buenos_Aires, Montevideo"
              },
              "America/St_Johns": {
                "label": "St_Johns,Mount Pearl, Corner Brook"
              },
              "Asia/Tehran": {
                "label": "Tehran, Mashhad, Isfahan, Karaj, Tabriz"
              },
              "Asia/Tokyo": {
                "label": "Tokyo, Seoul, Jayapura"
              },
              "America/New_York": {
                "label": "Toronto, Santiago, New_York"
              },
              "Australia/Sydney": {
                "label": "Vladivostok, Sydney, Brisbane"
              },
              "Asia/Yangon": {
                "label": "Yangon, Cocos,Mandalay, Nay Pyi Taw, Mawlamyine"
              },
              "Indian/Cocos": {
                "label": "Yangon, Cocos,West Island"
              }
            },
            "breakLine": true
          }
        }
      }
    }
  }
},
"/DatetimeInput.json/DatetimeInput.json": {
  "options.field_to_convert": {
    "type": "select",
    "label": "Column to convert",
    "table": "table_id",
    "bind": "COLUMNS",
    "required": true,
    "width": "100%"
  }
},
"/FindReplaceOutput.json/FindReplaceOutput.json": {
  "include_imputed_value_indicator_field": {
    "type": "checkbox",
    "label": "Add Matching Column",
    "val": "false",
    "isOn": "true",
    "isOff": "false"
  },
  "include_imputed_value_indicator_suffix": {
    "type": "text",
    "label": "New Column Suffix",
    "show_if": "include_imputed_value_indicator_field=='true'",
    "val": "_Match",
    "required": true,
    "breakLine": true
  },
  "output_imputed_values_as_seperated_field": {
    "type": "checkbox",
    "label": "Output in New Column",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  }
},
"/PdfReProCustomOptions.json/PdfReProCustomOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.script_name": {
        "type": "hidden",
        "val": "PdfReProCustom"
      },
      "options.type": {
        "type": "select",
        "label": "Task Type",
        "options": {
          "get_placeholders_of_all_templates": {
            "label": "Get Placeholders of all Templates"
          },
          "get_placeholders_of_template": {
            "label": "Get Placeholders of a Template"
          },
          "create": {
            "label": "Create PDF and export to cloud"
          }
        },
        "val": "get_placeholders_of_all_templates",
        "required": true,
        "breakLine": true
      },
      "options.where_to_create": {
        "type": "select",
        "label": "Where to create",
        "options": {
          "only_open_in_browser": {
            "label": "Only open PDF in browser"
          },
          "only_export_to_cloud": {
            "label": "Only export to cloud"
          },
          "both_export_to_cloud_and_open_in_browser": {
            "label": "Both export to cloud and open pdf in browser"
          }
        },
        "val": "only_open_in_browser",
        "required": true,
        "breakLine": true
      },
      "options.configure_by_table_help": {
        "type": "text",
        "label": "",
        "show_if": "options.type=='create'",
        "val": "Table Structure ( Template ID | Placeholder | Replace-Text )",
        "disabled": true,
        "width": "100%"
      },
      "options.table_id": {
        "type": "select",
        "label": "Select Table",
        "show_if": "options.type=='create'",
        "bind": "TABLES",
        "empty": "",
        "required": true,
        "breakLine": true
      },
      "pdfrepro_credential_box": {
        "type": "fieldset",
        "label": "Your own PDFrePRO account API Key",
        "repeat": false,
        "fields": {
          "options.pdfrepro_credentials.api_key": {
            "type": "text",
            "label": "API Key",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "options.pdfrepro_credentials.shared_key": {
            "type": "text",
            "label": "Shared Key",
            "required": true,
            "width": "100%",
            "breakLine": true
          }
        }
      },
      "options.template_id": {
        "type": "text",
        "label": "Template ID",
        "show_if": "options.type=='get_placeholders_of_template'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.webservice": {
        "type": "select",
        "label": "Select Webservice",
        "show_if": "options.type=='create'",
        "options": {
          "ms_one_drive": {
            "label": "Microsoft OneDrive"
          },
          "dropbox": {
            "label": "Dropbox"
          },
          "google_drive": {
            "label": "Google Drive"
          }
        },
        "val": "ms_one_drive",
        "required": true,
        "breakLine": true
      },
      "export_link_token_frame": {
        "type": "fieldset",
        "label": "Export Link",
        "show_if": "options.type=='create'",
        "repeat": false,
        "fields": {
          "options.github_url": {
            "type": "text",
            "label": "Enter link e.g. https://github.com/zippydoc/test",
            "show_if": "options.webservice=='github'",
            "val": "",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "options.export_dir": {
            "type": "text",
            "label": "Enter dir e.g. /MyZippyDocFiles/SubDir/",
            "show_if": "options.webservice!='github'",
            "val": "",
            "width": "100%",
            "breakLine": true
          },
          "options.github_token": {
            "type": "text",
            "label": "Specify the Github personal access token that has write permission:",
            "show_if": "options.webservice=='github'",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "options.google_authorization_code": {
            "type": "text",
            "label": "Google OAuth Authorization Code with scope https://www.googleapis.com/auth/drive. You can get it here https://developers.google.com/oauthplayground/",
            "show_if": "options.webservice=='google_drive'",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "options.dropbox_authorization_code": {
            "type": "text",
            "label": "Dropbox Authorization Code. You can get it here https://www.dropbox.com/oauth2/authorize?client_id=9i7woztjp94jrkw&response_type=code",
            "show_if": "options.webservice=='dropbox'",
            "required": true,
            "width": "100%",
            "breakLine": true
          }
        }
      }
    }
  }
},
"/ImportDirFromOneDriveOptions.json/ImportDirFromOneDriveOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.from": {
        "type": "hidden",
        "val": "web"
      },
      "options.webservice": {
        "type": "hidden",
        "val": "ms_one_drive"
      },
      "options.output_format": {
        "type": "select",
        "label": "Select Type",
        "options": {
          "csv_table": {
            "label": "CSV-Table"
          },
          "line_by_line": {
            "label": "Line by Line"
          },
          "word_by_word": {
            "label": "Text"
          },
          "JSON": {
            "label": "JSON"
          },
          "file_list": {
            "label": "File List"
          }
        },
        "val": "csv_table",
        "required": true
      },
      "options.word_pattern_type": {
        "type": "select",
        "label": "Word Pattern",
        "show_if": "options.output_format=='word_by_word' && options.specify_word_pattern=='true'",
        "options": {
          "regex": {
            "label": "Regular Expression"
          }
        },
        "val": "regex",
        "required": true
      },
      "options.word_pattern_regex": {
        "type": "text",
        "label": "Regular Expression",
        "show_if": "options.output_format=='word_by_word' && options.specify_word_pattern=='true' && options.word_pattern_type=='regex'",
        "required": true,
        "val": "[a-z][1-9]",
        "breakLine": true
      },
      "options.column_setting": {
        "type": "checkbox",
        "label": "Column Settings",
        "show_if": "options.output_format!='file_list'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "column_setting_frame": {
        "type": "fieldset",
        "label": "Column Settings",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.output_format!='file_list' && options.column_setting=='true'",
        "repeat": false,
        "fields": {
          "options.add_row_column": {
            "type": "checkbox",
            "label": "Add Row Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_word_count_column": {
            "type": "checkbox",
            "label": "Add 'Word Count' Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_word_nonword_column": {
            "type": "checkbox",
            "label": "Add 'Word & Non-Word' Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_section_column": {
            "type": "checkbox",
            "label": "Add Section Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "section_column_types_frame": {
            "type": "fieldset",
            "label": "Section Column Types",
            "style": "border-radius: 3px; border: 1px solid #ccc",
            "show_if": "options.output_format=='word_by_word' && options.add_section_column=='true'",
            "repeat": false,
            "fields": {
              "options.section_columns.add_paragraph_section_column": {
                "type": "checkbox",
                "label": "Paragraph",
                "val": "false",
                "isOn": "true",
                "isOff": "false",
                "breakLine": true
              },
              "options.section_columns.add_custom_section_column": {
                "type": "checkbox",
                "label": "Custom Section Delimiter",
                "val": "false",
                "isOn": "true",
                "isOff": "false"
              },
              "options.section_columns.custom_delimiter": {
                "type": "text",
                "label": "Delimiter(1 character)",
                "show_if": "options.section_columns.add_custom_section_column=='true'",
                "maxLength": 1,
                "required": true,
                "breakLine": true
              },
              "options.section_columns.add_brackets_punctuation_section_column": {
                "type": "checkbox",
                "label": "Brackets and Punctuation",
                "val": "false",
                "isOn": "true",
                "isOff": "false",
                "style": "margin-right: 15px"
              },
              "options.section_columns.brackets_punctuation_section_column_type": {
                "type": "select",
                "label": "Brackets Type",
                "show_if": "options.section_columns.add_brackets_punctuation_section_column=='true'",
                "options": {
                  "nesting_structure": {
                    "label": "Nesting Structure"
                  },
                  "inner_bracket": {
                    "label": "Inner Bracket"
                  },
                  "brackets_only": {
                    "label": "Brackets Only"
                  },
                  "show_all": {
                    "label": "Show All"
                  }
                },
                "val": "show_all",
                "required": true,
                "breakLine": true
              }
            }
          },
          "options.add_filename_column": {
            "type": "checkbox",
            "label": "Add Column for File Name",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "options.add_filepath_column": {
            "type": "checkbox",
            "label": "Add Column for File Path",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          }
        }
      },
      "options.is_cloud_dir": {
        "type": "hidden",
        "val": "true"
      },
      "if_dir_frame": {
        "type": "fieldset",
        "label": "Directory Import Options",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.output_format!='file_list' && options.is_cloud_dir=='true'",
        "repeat": false,
        "fields": {
          "options.unify_in_one_table": {
            "type": "checkbox",
            "label": "Unify in one table",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.suffix": {
            "type": "select",
            "label": "Output tables suffix",
            "show_if": "options.unify_in_one_table=='false'",
            "options": {
              "number": {
                "label": "Number"
              },
              "filename": {
                "label": "Filename"
              }
            },
            "val": "number",
            "required": true,
            "breakLine": true
          },
          "options.include_subdir": {
            "type": "checkbox",
            "label": "Include Subdirectories",
            "show_if": "options.output_format!='file_list' && options.is_cloud_dir=='true'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true,
            "style": "margin-top: 10px"
          }
        }
      },
      "options.file_list.include_subdir": {
        "type": "checkbox",
        "label": "Include Subdirectories",
        "show_if": "options.output_format=='file_list'",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true,
        "style": "margin-top: 10px"
      },
      "options.file_list.add_change_date_column": {
        "type": "checkbox",
        "label": "Add Change Date Column",
        "show_if": "options.output_format=='file_list'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  },
  "import_link_token_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.link_csv_file": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test/blob/main/example.csv",
        "show_if": "options.webservice=='github' && options.is_cloud_dir=='false' && options.output_format=='csv_table'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.link_text_file": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test/blob/main/example.txt(json, csv, etc)",
        "show_if": "options.webservice=='github' && options.is_cloud_dir=='false' && options.output_format!='csv_table' && options.output_format!='file_list'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.one_drive.file_path": {
        "type": "text",
        "label": "Enter path to file e.g. ZippyDoc/Subdir1/test.txt",
        "show_if": "options.webservice=='ms_one_drive' && options.output_format!='file_list' && options.is_cloud_dir=='false'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox.file_path": {
        "type": "text",
        "label": "Enter path to file e.g. ZippyDoc/Subdir1/test.txt",
        "show_if": "options.webservice=='dropbox' && options.output_format!='file_list' && options.is_cloud_dir=='false'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dir_path_filter": {
        "type": "fieldset",
        "label": "Import Path and File Filter",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.output_format=='file_list' || options.is_cloud_dir=='true'",
        "repeat": true,
        "fields": {
          "github__link_directory": {
            "type": "text",
            "label": "Enter link e.g. https://github.com/zippydoc/test",
            "show_if": "options.webservice=='github'",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "one_drive__dir_path": {
            "type": "text",
            "label": "Enter path to dir e.g. ZippyDoc/Subdir1",
            "show_if": "options.webservice=='ms_one_drive'",
            "width": "100%",
            "breakLine": true
          },
          "dropbox__dir_path": {
            "type": "text",
            "label": "Enter path to dir e.g. ZippyDoc/Subdir1",
            "show_if": "options.webservice=='dropbox'",
            "width": "100%",
            "breakLine": true
          },
          "google_drive__dir_path": {
            "type": "text",
            "label": "Enter path to dir",
            "show_if": "options.webservice=='google_drive'",
            "width": "100%",
            "breakLine": true
          },
          "dir_filter__filter_type": {
            "type": "select",
            "label": "Filter Type",
            "options": {
              "all": {
                "label": "All"
              },
              "contains": {
                "label": "Contains"
              },
              "starts_with": {
                "label": "Starts With"
              },
              "ends_with": {
                "label": "Ends With"
              },
              "regex": {
                "label": "Regular Expression"
              }
            },
            "val": "all",
            "required": true
          },
          "dir_filter__filter_string": {
            "type": "text",
            "label": "Filter",
            "show_if": "this.dir_filter__filter_type!='all'",
            "required": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.is_github_private": {
        "type": "checkbox",
        "label": "Github repository is private",
        "show_if": "options.webservice=='github'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "options.github_token": {
        "type": "text",
        "label": "Github personal access token",
        "show_if": "options.webservice=='github' && options.is_github_private=='true'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox.auth_code": {
        "type": "text",
        "label": "Dropbox Authorization Code",
        "show_if": "options.webservice=='dropbox'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.google_drive.access_token": {
        "type": "text",
        "label": "Google Drive Access Token",
        "show_if": "options.webservice=='google_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      }
    }
  }
}
,
"/RenameTableOptions.json/RenameTableOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "rename_columns": {
        "type": "checkbox",
        "label": "Rename Columns",
        "show_if": "false",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "columns": {
        "type": "fieldset",
        "label": "Select Columns",
        "repeat": true,
        "fields": {
          "field_name": {
            "type": "select",
            "label": "Select Column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "rename": {
            "show_if": "this.field_name != ''",
            "type": "text",
            "required": true,
            "minLength": 1,
            "maxLength": 255,
            "label": "Rename to"
          },
          "delete": {
            "show_if": "this.field_name != ''",
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        },
        "breakLine": true
      },
      "rename_rows": {
        "type": "checkbox",
        "label": "Rename Labels",
        "show_if": "false",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px"
      },
      "rows": {
        "type": "fieldset",
        "label": "Select Labels",
        "show_if": "$table_id.numOfLabel >= 1",
        "repeat": true,
        "fields": {
          "label_name": {
            "type": "select",
            "label": "Select Label",
            "table": "table_id",
            "bind": "LABELS",
            "required": true
          },
          "rename": {
            "show_if": "this.label_name != ''",
            "type": "text",
            "required": true,
            "minLength": 1,
            "maxLength": 255,
            "label": "Rename to"
          },
          "delete": {
            "show_if": "this.label_name != ''",
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        },
        "breakLine": true
      }
    }
  }
}
,
"/DCEnergyWorldDataOptions.json/DCEnergyWorldDataOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.group_by": {
        "type": "select",
        "label": "Group By",
        "required": true,
        "options": {
          "Region": {
            "label": "Region"
          },
          "Income Group": {
            "label": "Income Group"
          }
        },
        "val": "Region",
        "breakLine": true
      },
      "options.stat_var_name": {
        "type": "select",
        "label": "Statistics Data",
        "required": true,
        "options": {
          "Annual_Consumption_Electricity": {
            "label": "Annual Consumption of Electricity"
          },
          "Annual_Exports_Electricity": {
            "label": "Annual Exports of Electricity"
          },
          "Annual_Generation_Electricity": {
            "label": "Net generation, all fuels, all sectors, annual"
          },
          "Annual_Imports_Electricity": {
            "label": "Annual Imports of Electricity"
          },
          "Annual_Loss_Electricity": {
            "label": "Annual Loss of Electricity"
          },
          "Annual_Consumption_Electricity_Agriculture": {
            "label": "Annual Consumption for Agriculture"
          },
          "Annual_Consumption_Electricity_ChemicalPetrochemicalIndustry": {
            "label": "Annual Consumption for Chemical Petrochemical Industry"
          },
          "Annual_Consumption_Electricity_CommerceAndPublicServices": {
            "label": "Annual Consumption for Commerce And Public Services"
          },
          "Annual_Consumption_Electricity_ConstructionIndustry": {
            "label": "Annual Consumption for Construction Industry"
          },
          "Annual_Consumption_Electricity_FoodAndTobaccoIndustry": {
            "label": "Annual Consumption for Food And Tobacco Industry"
          },
          "Annual_Consumption_Electricity_Households": {
            "label": "Annual Consumption for Households"
          },
          "Annual_Consumption_Electricity_IronSteel": {
            "label": "Annual Consumption for Iron Steel"
          },
          "Annual_Consumption_Electricity_MachineryIndustry": {
            "label": "Annual Consumption for Machinery Industry"
          },
          "Annual_Consumption_Electricity_Manufacturing": {
            "label": "Annual Consumption for Manufacturing"
          },
          "Annual_Consumption_Electricity_MiningAndQuarryingIndustry": {
            "label": "Annual Consumption for Mining And Quarrying Industry"
          },
          "Annual_Consumption_Electricity_NonFerrousMetalsIndustry": {
            "label": "Annual Consumption for Non Ferrous Metals Industry"
          },
          "Annual_Consumption_Electricity_NonMetallicMineralsIndustry": {
            "label": "Annual Consumption for Non Metallic Minerals Industry"
          },
          "Annual_Consumption_Electricity_PaperPulpPrintIndustry": {
            "label": "Annual Consumption for Paper Pulp Print Industry"
          },
          "Annual_Consumption_Electricity_RailTransport": {
            "label": "Annual Consumption for Rail Transport"
          },
          "Annual_Consumption_Electricity_RoadTransport": {
            "label": "Annual Consumption for Road Transport"
          },
          "Annual_Consumption_Electricity_TextileAndLeatherIndustry": {
            "label": "Annual Consumption for Textile And Leather Industry"
          },
          "Annual_Consumption_Electricity_TransportEquipmentIndustry": {
            "label": "Annual Consumption for Transport Equipment Industry"
          },
          "Annual_Consumption_Electricity_TransportIndustry": {
            "label": "Annual Consumption for Transport Industry"
          },
          "Annual_Consumption_Electricity_OtherIndustry": {
            "label": "Annual Consumption for UN_Other Industry"
          },
          "Annual_Consumption_Electricity_OtherManufacturingIndustry": {
            "label": "Annual Consumption for UN_Other Manufacturing Industry"
          },
          "Annual_Consumption_Electricity_OtherSector": {
            "label": "Annual Consumption for UN_Other Sector"
          },
          "Annual_Consumption_Electricity_WoodAndWoodProductsIndustry": {
            "label": "Annual Consumption for Wood And Wood Products Industry"
          },
          "Annual_Consumption_Electricity_BriquettingPlants_EnergyIndustryOwnUse": {
            "label": "Annual Consumption for Briquetting Plants, Energy Industry Own Use"
          },
          "Annual_Consumption_Electricity_CoalMines_EnergyIndustryOwnUse": {
            "label": "Annual Consumption for Coal Mines, Energy Industry Own Use"
          },
          "Annual_Consumption_Electricity_CokeOvens_EnergyIndustryOwnUse": {
            "label": "Annual Consumption for Coke Ovens, Energy Industry Own Use"
          },
          "Annual_Consumption_Electricity_ElectricityGeneration_EnergyIndustryOwnUse": {
            "label": "Annual Consumption for Electricity Generation, Energy Industry Own Use"
          },
          "Annual_Consumption_Electricity_EnergyIndustry_EnergyIndustryOwnUse": {
            "label": "Annual Consumption for Energy Industry, Energy Industry Own Use"
          },
          "Annual_Consumption_Electricity_GasWorks_EnergyIndustryOwnUse": {
            "label": "Annual Consumption for Gas Works, Energy Industry Own Use"
          },
          "Annual_Consumption_Electricity_Industry_EnergyIndustryOwnUse": {
            "label": "Annual Consumption for Industry, Energy Industry Own Use"
          },
          "Annual_Consumption_Electricity_NuclearFuelProcessing_EnergyIndustryOwnUse": {
            "label": "Annual Consumption for Nuclear Fuel Processing, Energy Industry Own Use"
          },
          "Annual_Consumption_Electricity_OilGasExtraction_EnergyIndustryOwnUse": {
            "label": "Annual Consumption for Oil Gas Extraction, Energy Industry Own Use"
          },
          "Annual_Consumption_Electricity_OilRefineries_EnergyIndustryOwnUse": {
            "label": "Annual Consumption for Oil Refineries, Energy Industry Own Use"
          },
          "Annual_Consumption_Electricity_PumpStoragePlants_EnergyIndustryOwnUse": {
            "label": "Annual Consumption for Pump Storage Plants, Energy Industry Own Use"
          },
          "Annual_Generation_Electricity_BioGas_ThermalElectricity": {
            "label": "Annual Generation From Bio Gas, Thermal Electricity"
          },
          "Annual_Consumption_Energy_Agriculture_SolarThermal": {
            "label": "Annual Consumption of Agriculture, Solar Thermal"
          },
          "Annual_Consumption_Energy_BriquettingPlants_Heat_EnergyIndustryOwnUse": {
            "label": "Annual Consumption of Briquetting Plants, Heat, Energy Industry Own Use"
          },
          "Annual_Consumption_Energy_ChemicalPetrochemicalIndustry_Heat": {
            "label": "Annual Consumption of Chemical Petrochemical Industry, Heat"
          },
          "Annual_Consumption_Energy_CoalMines_Heat_EnergyIndustryOwnUse": {
            "label": "Annual Consumption of Coal Mines, Heat, Energy Industry Own Use"
          },
          "Annual_Consumption_Energy_CokeOvens_Heat_EnergyIndustryOwnUse": {
            "label": "Annual Consumption of Coke Ovens, Heat, Energy Industry Own Use"
          },
          "Annual_Consumption_Energy_CommerceAndPublicServices_Geothermal": {
            "label": "Annual Consumption of Commerce And Public Services, Geothermal"
          },
          "Annual_Consumption_Energy_CommerceAndPublicServices_Heat": {
            "label": "Annual Consumption of Commerce And Public Services, Heat"
          },
          "Annual_Consumption_Energy_CommerceAndPublicServices_SolarThermal": {
            "label": "Annual Consumption of Commerce And Public Services, Solar Thermal"
          },
          "Annual_Consumption_Energy_ElectricityGeneration_Heat_EnergyIndustryOwnUse": {
            "label": "Annual Consumption of Electricity Generation, Heat, Energy Industry Own Use"
          },
          "Annual_Consumption_Energy_EnergyIndustry_Heat_EnergyIndustryOwnUse": {
            "label": "Annual Consumption of Energy Industry, Heat, Energy Industry Own Use"
          },
          "Annual_Consumption_Energy_FoodAndTobaccoIndustry_Heat": {
            "label": "Annual Consumption of Food And Tobacco Industry, Heat"
          },
          "Annual_Consumption_Energy_GasWorks_Heat_EnergyIndustryOwnUse": {
            "label": "Annual Consumption of Gas Works, Heat, Energy Industry Own Use"
          },
          "Annual_Consumption_Energy_Households_Geothermal": {
            "label": "Annual Consumption of Households, Geothermal"
          },
          "Annual_Consumption_Energy_Households_Heat": {
            "label": "Annual Consumption of Households, Heat"
          },
          "Annual_Consumption_Energy_Households_SolarThermal": {
            "label": "Annual Consumption of Households, Solar Thermal"
          },
          "Annual_Consumption_Energy_IronSteel_Heat": {
            "label": "Annual Consumption of Iron Steel, Heat"
          },
          "Annual_Consumption_Energy_MachineryIndustry_Heat": {
            "label": "Annual Consumption of Machinery Industry, Heat"
          },
          "Annual_Consumption_Energy_MachineryIndustry_SolarThermal": {
            "label": "Annual Consumption of Machinery Industry, Solar Thermal"
          },
          "Annual_Consumption_Energy_Manufacturing_Heat": {
            "label": "Annual Consumption of Manufacturing, Heat"
          },
          "Annual_Consumption_Energy_Manufacturing_SolarThermal": {
            "label": "Annual Consumption of Manufacturing, Solar Thermal"
          },
          "Annual_Consumption_Energy_MiningAndQuarryingIndustry_Heat": {
            "label": "Annual Consumption of Mining And Quarrying Industry, Heat"
          },
          "Annual_Consumption_Energy_NonFerrousMetalsIndustry_Heat": {
            "label": "Annual Consumption of Non Ferrous Metals Industry, Heat"
          },
          "Annual_Consumption_Energy_NonFerrousMetalsIndustry_SolarThermal": {
            "label": "Annual Consumption of Non Ferrous Metals Industry, Solar Thermal"
          },
          "Annual Consumption of Non Ferrous Metals Industry, Solar Thermal": {
            "label": "Annual Consumption of Non Metallic Minerals Industry, Heat"
          },
          "Annual_Consumption_Energy_OilGasExtraction_Heat_EnergyIndustryOwnUse": {
            "label": "Annual Consumption of Oil Gas Extraction, Heat, Energy Industry Own Use"
          },
          "Annual_Consumption_Energy_OilRefineries_Heat_EnergyIndustryOwnUse": {
            "label": "Annual Consumption of Oil Refineries, Heat, Energy Industry Own Use"
          },
          "Annual_Consumption_Energy_OilRefineries_Refinery_FuelTransformation": {
            "label": "Annual Consumption of Oil Refineries, Refinery, Fuel Transformation"
          },
          "Annual_Consumption_Energy_PaperPulpPrintIndustry_Heat": {
            "label": "Annual Consumption of Paper Pulp Print Industry, Heat"
          },
          "Annual_Consumption_Energy_TextileAndLeatherIndustry_Heat": {
            "label": "Annual Consumption of Textile And Leather Industry, Heat"
          },
          "Annual_Consumption_Energy_TransportEquipmentIndustry_Heat\n": {
            "label": "Annual Consumption of Transport Equipment Industry, Heat"
          },
          "Annual_Consumption_Energy_TransportEquipmentIndustry_SolarThermal": {
            "label": "Annual Consumption of Transport Equipment Industry, Solar Thermal"
          },
          "Annual_Consumption_Energy_OtherIndustry_Heat": {
            "label": "Annual Consumption of UN_Other Industry, Heat"
          },
          "Annual_Consumption_Energy_OtherManufacturingIndustry_Heat": {
            "label": "Annual Consumption of UN_Other Manufacturing Industry, Heat"
          },
          "Annual_Consumption_Energy_OtherManufacturingIndustry_SolarThermal": {
            "label": "Annual Consumption of UN_Other Manufacturing Industry, Solar Thermal"
          },
          "Annual_Consumption_Energy_OtherSector_Geothermal": {
            "label": "Annual Consumption of UN_Other Sector, Geothermal"
          },
          "Annual_Consumption_Energy_OtherSector_Heat": {
            "label": "Annual Consumption of UN_Other Sector, Heat"
          },
          "Annual_Consumption_Energy_OtherSector_SolarThermal": {
            "label": "Annual Consumption of UN_Other Sector, Solar Thermal"
          },
          "Annual_Consumption_Energy_WoodAndWoodProductsIndustry_Heat": {
            "label": "Annual Consumption of Wood And Wood Products Industry, Heat"
          }
        },
        "val": "Annual_Consumption_Electricity"
      },
      "options.per_capita": {
        "type": "checkbox",
        "label": "Per capita",
        "show_if": "false",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.all_countries": {
        "type": "checkbox",
        "label": "All countries",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.output_as_chart": {
        "type": "checkbox",
        "label": "Output a Graph",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "options.graph_type": {
        "type": "select",
        "label": "Graph Type",
        "show_if": "options.output_as_chart=='true'",
        "required": true,
        "options": {
          "zoomable_sunburst": {
            "label": "Sunburst"
          },
          "treemap": {
            "label": "Treemap"
          }
        },
        "val": "zoomable_sunburst",
        "breakLine": true
      }
    }
  }
}
,
"/HolidayUsedSource.json/HolidayUsedSource.json": {
  "holiday_calendar_info_frame": {
    "type": "fieldset",
    "label": "Used Source Table",
    "repeat": false,
    "fields": {
      "holiday_calendar_table": {
        "type": "text",
        "label": "Holiday Calendar Table",
        "val": "Holiday Calendar",
        "disabled": true
      }
    }
  }
},
"/PlanningIfTableExist.json/PlanningIfTableExist.json": {
  "output.if_table_exist.type": {
    "type": "select",
    "label": "If existing",
    "show_if": "options.output_type=='table_output'",
    "val": "drop_if_exist",
    "options": {
      "drop_if_exist": {
        "label": "Create or Drop (if already existing)"
      },
      "error_if_exist": {
        "label": "Create New (throw error if existing)"
      },
      "error_if_not_exist": {
        "label": "Drop (throw error if not-existing)"
      },
      "append_all": {
        "label": "Append All"
      },
      "append_not_existing": {
        "label": "Append not existing"
      },
      "append_changes": {
        "label": "Append changes"
      }
    }
  },
  "output.if_table_exist.append_not_existing_cols": {
    "type": "select",
    "label": "Select Column(s)",
    "show_if": "output.if_table_exist.type=='append_not_existing'",
    "table": "table_id",
    "bind": "COLUMNS",
    "multiple": true,
    "required": true,
    "breakLine": true
  },
  "output.if_table_exist.append_changes__add_timestamp": {
    "type": "checkbox",
    "label": "Add Timestamp",
    "show_if": "output.if_table_exist.type=='append_changes'",
    "val": "false",
    "isOn": "true",
    "isOff": "false"
  },
  "output.if_table_exist.append_changes__timestamp_colname": {
    "type": "text",
    "label": "Timestamp column name",
    "show_if": "output.if_table_exist.type=='append_changes' && output.if_table_exist.append_changes__add_timestamp=='true'",
    "val": "Timestamp",
    "required": true,
    "style": "margin-left: 15px",
    "breakLine": true
  },
  "output.if_table_exist.append_changes__add_row": {
    "type": "checkbox",
    "label": "Add Row",
    "show_if": "output.if_table_exist.type=='append_changes'",
    "val": "false",
    "isOn": "true",
    "isOff": "false"
  },
  "output.if_table_exist.append_changes__row_colname": {
    "type": "text",
    "label": "Row column name",
    "show_if": "output.if_table_exist.type=='append_changes' && output.if_table_exist.append_changes__add_row=='true'",
    "val": "Row",
    "required": true,
    "style": "margin-left: 15px",
    "breakLine": true
  },
  "append_not_existing_info": {
    "type": "textarea",
    "label": "",
    "show_if": "output.if_table_exist.type=='append_not_existing'",
    "val": "Appends rows only if the value of the selected column is new in the existing table. It is assumed that the selected column is found in the output and existing table",
    "disabled": true,
    "style": "width: 100%"
  }
}
,
"/DCClimateWorldDataYears1.json/DCClimateWorldDataYears1.json": {
  "options.sel_year": {
    "type": "select",
    "label": "Select year",
    "show_if": "options.stat_var_name=='Amount_Emissions_CarbonDioxide_PerCapita' || options.stat_var_name=='Count_EarthquakeEvent' || options.stat_var_name=='Count_EarthquakeEvent_M3To4' || options.stat_var_name=='Count_EarthquakeEvent_M3Onwards' || options.stat_var_name=='Count_EarthquakeEvent_M4To5' || options.stat_var_name=='Count_EarthquakeEvent_M4Onwards' || options.stat_var_name=='Count_EarthquakeEvent_M5To6' || options.stat_var_name=='Count_EarthquakeEvent_M5Onwards' || options.stat_var_name=='Max_Temperature' || options.stat_var_name=='DifferenceAcrossModels_Max_Temperature' || options.stat_var_name=='Min_Temperature' || options.stat_var_name=='DifferenceAcrossModels_Min_Temperature' || options.stat_var_name=='PrecipitationRate' || options.stat_var_name=='DifferenceAcrossModels_PrecipitationRate' || options.stat_var_name=='DifferenceRelativeToBaseDate1990_Max_Temperature' || options.stat_var_name=='DifferenceRelativeToBaseDate1990_Min_Temperature' || options.stat_var_name=='DifferenceRelativeToBaseDate1990_PrecipitationRate'",
    "required": true,
    "options": {
      "1960": {
        "label": "1960"
      },
      "1961": {
        "label": "1961"
      },
      "1962": {
        "label": "1962"
      },
      "1963": {
        "label": "1963"
      },
      "1964": {
        "label": "1964"
      },
      "1965": {
        "label": "1965"
      },
      "1966": {
        "label": "1966"
      },
      "1967": {
        "label": "1967"
      },
      "1968": {
        "label": "1968"
      },
      "1969": {
        "label": "1969"
      },
      "1970": {
        "label": "1970"
      },
      "1971": {
        "label": "1971"
      },
      "1972": {
        "label": "1972"
      },
      "1973": {
        "label": "1973"
      },
      "1974": {
        "label": "1974"
      },
      "1975": {
        "label": "1975"
      },
      "1976": {
        "label": "1976"
      },
      "1977": {
        "label": "1977"
      },
      "1978": {
        "label": "1978"
      },
      "1979": {
        "label": "1979"
      },
      "1980": {
        "label": "1980"
      },
      "1981": {
        "label": "1981"
      },
      "1982": {
        "label": "1982"
      },
      "1983": {
        "label": "1983"
      },
      "1984": {
        "label": "1984"
      },
      "1985": {
        "label": "1985"
      },
      "1986": {
        "label": "1986"
      },
      "1987": {
        "label": "1987"
      },
      "1988": {
        "label": "1988"
      },
      "1989": {
        "label": "1989"
      },
      "1990": {
        "label": "1990"
      },
      "1991": {
        "label": "1991"
      },
      "1992": {
        "label": "1992"
      },
      "1993": {
        "label": "1993"
      },
      "1994": {
        "label": "1994"
      },
      "1995": {
        "label": "1995"
      },
      "1996": {
        "label": "1996"
      },
      "1997": {
        "label": "1997"
      },
      "1998": {
        "label": "1998"
      },
      "1999": {
        "label": "1999"
      },
      "2000": {
        "label": "2000"
      },
      "2001": {
        "label": "2001"
      },
      "2002": {
        "label": "2002"
      },
      "2003": {
        "label": "2003"
      },
      "2004": {
        "label": "2004"
      },
      "2005": {
        "label": "2005"
      },
      "2006": {
        "label": "2006"
      },
      "2007": {
        "label": "2007"
      },
      "2008": {
        "label": "2008"
      },
      "2009": {
        "label": "2009"
      },
      "2010": {
        "label": "2010"
      },
      "2011": {
        "label": "2011"
      },
      "2012": {
        "label": "2012"
      },
      "2013": {
        "label": "2013"
      },
      "2014": {
        "label": "2014"
      },
      "2015": {
        "label": "2015"
      },
      "2016": {
        "label": "2016"
      },
      "2017": {
        "label": "2017"
      },
      "2018": {
        "label": "2018"
      },
      "2019": {
        "label": "2019"
      },
      "2020": {
        "label": "2020"
      },
      "2021": {
        "label": "2021"
      }
    },
    "val": "2020",
    "breakLine": true
  }
},
"/TemplateOptions.json/TemplateOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.add_columns": {
        "type": "fieldset",
        "label": "Retrieve Columns",
        "repeat": true,
        "fields": {
          "first_new_column_name": {
            "type": "text",
            "label": "Column Name",
            "show_if" :  "$index == 0",
            "val": ""
          },
          "new_column_name": {
            "type": "text",
            "label": "Column Name",
            "show_if" :  "$index > 0",
            "val": ""
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      }
    }
  }
}
,
"/ImpactCurveOptions.json/ImpactCurveOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.type": {
        "type": "select",
        "label": "Type",
        "options": {
          "standard": {
            "label": "Generate Standard Impact Curve"
          },
          "custom": {
            "label": "Generate Custom Impact Curve"
          },
          "apply": {
            "label": "Apply Impact Curve"
          }
        },
        "val": "standard",
        "breakLine": true
      },
      "options.standard.start": {
        "type": "text",
        "label": "Initial Period",
        "show_if": "options.type=='standard' && options.standard.end_value_equals_initial_value=='no'",
        "val": "1",
        "required": true
      },
      "options.standard.maximum": {
        "type": "text",
        "label": "Maximum Period",
        "show_if": "options.type=='standard'",
        "val": "50",
        "required": true
      },
      "options.standard.end": {
        "type": "text",
        "label": "End Period",
        "show_if": "options.type=='standard'",
        "val": "100",
        "required": true,
        "breakLine": true
      },
      "options.standard.multiplier_at_maximum_impact_level": {
        "type": "text",
        "label": "Multiplier At Maximum Impact Level",
        "show_if": "options.type=='standard'",
        "width": "100%",
        "val": "2",
        "required": true,
        "breakLine": true
      },
      "options.standard.end_value_equals_initial_value": {
        "type": "checkbox",
        "label": "End Value Equals Initial Value",
        "show_if": "options.type=='standard'",
        "width": "100%",
        "val": "yes",
        "isOn": "yes",
        "isOff": "no",
        "breakLine": true
      },
      "options.standard.multiplier_end_value": {
        "type": "text",
        "label": "Multiplier End Value",
        "width": "100%",
        "show_if": "options.type=='standard' && options.standard.end_value_equals_initial_value=='no'",
        "val": "",
        "breakLine": true
      },
      "options.standard.maximum_plateau": {
        "type": "checkbox",
        "label": "Maximum Plateau",
        "show_if": "options.type=='standard'",
        "width": "100%",
        "val": "yes",
        "isOn": "yes",
        "isOff": "no",
        "breakLine": true
      },
      "options.standard.no_of_periods_prior_defined_maximum_point": {
        "type": "text",
        "label": "No of periods prior defined maximum point",
        "show_if": "options.type=='standard' && options.standard.maximum_plateau=='yes'",
        "val": "0",
        "style": "width: 250px"
      },
      "options.standard.no_of_periods_post_defined_maximum_point": {
        "type": "text",
        "label": "No of periods post defined maximum point",
        "show_if": "options.type=='standard' && options.standard.maximum_plateau=='yes'",
        "val": "0",
        "style": "width: 250px",
        "breakLine": true
      },
      "options.standard.left_slope": {
        "type": "select",
        "label": "Left Slope",
        "show_if": "options.type=='standard'",
        "options": {
          "vertical": {
            "label": "Vertical"
          },
          "linear": {
            "label": "Linear"
          },
          "standard_distribution": {
            "label": "Standard Distribution"
          }
        },
        "val": "standard_distribution"
      },
      "options.standard.use_auto_calculated_sigma_for_left_slope": {
        "type": "checkbox",
        "label": "Auto calculated left sigma",
        "show_if": "options.type=='standard' && options.standard.left_slope=='standard_distribution'",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "options.standard.left_slope_sigma": {
        "type": "text",
        "label": "Left Slope Sigma",
        "show_if": "options.type=='standard' && options.standard.left_slope=='standard_distribution' && options.standard.use_auto_calculated_sigma_for_left_slope=='false'",
        "val": ""
      },
      "options.standard.right_slope": {
        "type": "select",
        "label": "Right Slope",
        "show_if": "options.type=='standard'",
        "required": true,
        "options": {
          "vertical": {
            "label": "Vertical"
          },
          "linear": {
            "label": "Linear"
          },
          "standard_distribution": {
            "label": "Standard Distribution"
          }
        },
        "val": "standard_distribution"
      },
      "options.standard.use_auto_calculated_sigma_for_right_slope": {
        "type": "checkbox",
        "label": "Auto calculated right sigma",
        "show_if": "options.type=='standard' && options.standard.right_slope=='standard_distribution'",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "options.standard.right_slope_sigma": {
        "type": "text",
        "label": "Right Slope Sigma",
        "show_if": "options.type=='standard' && options.standard.right_slope=='standard_distribution' && options.standard.use_auto_calculated_sigma_for_right_slope=='false'",
        "val": "",
        "breakLine": true
      },
      "options.standard.event_name": {
        "type": "text",
        "label": "Event Name",
        "show_if": "options.type=='standard'",
        "val": "Event"
      },
      "options.custom.event_table_id": {
        "type": "select",
        "label": "Event Table",
        "show_if": "options.type=='custom'",
        "bind": "TABLES",
        "empty": "",
        "required": true,
        "breakLine": true
      },
      "options.custom.event_date_column": {
        "type": "select",
        "label": "Event Date Column",
        "show_if": "options.type=='custom'",
        "required": true,
        "table": "options.custom.event_table_id",
        "bind": "COLUMNS"
      },
      "options.custom.event_name_column": {
        "type": "select",
        "label": "Event Name Column",
        "show_if": "options.type=='custom'",
        "required": true,
        "table": "options.custom.event_table_id",
        "bind": "COLUMNS"
      },
      "options.custom.event_name": {
        "type": "text",
        "label": "Event Name",
        "show_if": "options.type=='custom'",
        "val": "Weekend",
        "required": true,
        "breakLine": true
      },
      "options.custom.base_period": {
        "type": "select",
        "label": "Base Period",
        "show_if": "options.type=='custom'",
        "required": true,
        "options": {
          "months": {
            "label": "Prior N Months"
          },
          "weeks": {
            "label": "Prior N Weeks"
          },
          "days": {
            "label": "Prior N Days"
          }
        },
        "val": "days"
      },
      "options.custom.base_period_n": {
        "type": "text",
        "label": "N",
        "show_if": "options.type=='custom'",
        "val": "5",
        "required": true,
        "breakLine": true
      },
      "options.custom.leading_impact_days": {
        "type": "text",
        "label": "Leading Impact Periods",
        "show_if": "options.type=='custom'",
        "val": "0",
        "required": true
      },
      "options.custom.trailing_impact_days": {
        "type": "text",
        "label": "Trailing Impact Periods",
        "show_if": "options.type=='custom'",
        "val": "0",
        "required": true,
        "breakLine": true
      },
      "options.custom.value_column": {
        "type": "select",
        "label": "Value Column",
        "show_if": "options.type=='custom'",
        "required": true,
        "table": "options.custom.event_table_id",
        "bind": "COLUMNS",
        "breakLine": true
      },
      "options.custom.average": {
        "type": "hidden",
        "val": "true"
      },
      "options.apply.event_name": {
        "type": "text",
        "label": "Event Name",
        "show_if": "options.type=='apply'",
        "val": "Weekend",
        "required": true,
        "breakLine": true
      },
      "apply_event_table_box": {
        "type": "fieldset",
        "label": "Select Event Table",
        "show_if": "options.type=='apply'",
        "repeat": false,
        "fields": {
          "options.apply.event_table_id": {
            "type": "select",
            "label": "Event Table",
            "bind": "TABLES",
            "empty": "",
            "required": true,
            "breakLine": true
          },
          "options.apply.event_table_event_date_column": {
            "type": "select",
            "label": "Event Date Column",
            "required": true,
            "table": "options.apply.event_table_id",
            "bind": "COLUMNS"
          },
          "options.apply.event_table_event_name_column": {
            "type": "select",
            "label": "Event Name Column",
            "required": true,
            "table": "options.apply.event_table_id",
            "bind": "COLUMNS"
          },
          "options.apply.event_table_value_column": {
            "type": "select",
            "label": "Value Column",
            "required": true,
            "table": "options.apply.event_table_id",
            "bind": "COLUMNS",
            "breakLine": true
          }
        }
      },
      "apply_impact_table_box": {
        "type": "fieldset",
        "label": "Select Impact Table",
        "show_if": "options.type=='apply'",
        "repeat": false,
        "fields": {
          "options.apply.impact_table_id": {
            "type": "select",
            "label": "Impact Table",
            "bind": "TABLES",
            "empty": "",
            "required": true,
            "breakLine": true
          },
          "options.apply.on_average": {
            "type": "hidden",
            "val": "true"
          },
          "options.apply.impact_table_event_date_column": {
            "type": "select",
            "label": "Event Date Column",
            "required": true,
            "table": "options.apply.impact_table_id",
            "bind": "COLUMNS"
          },
          "options.apply.impact_table_event_name_column": {
            "type": "select",
            "label": "Event Name Column",
            "required": true,
            "table": "options.apply.impact_table_id",
            "bind": "COLUMNS"
          },
          "options.apply.impact_table_impact_column": {
            "type": "select",
            "label": "Impact Column",
            "required": true,
            "table": "options.apply.impact_table_id",
            "bind": "COLUMNS",
            "breakLine": true
          }
        }
      }
    }
  }
}
,
"/JoinMultipleOptions.json/JoinMultipleOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "join_type": {
        "type": "select",
        "label": "Detect join column(s)",
        "options": {
          "step_by_step": {
            "label": "by common columns of two tables and join step by step"
          },
          "batch_join": {
            "label": "by common columns of all tables"
          }
        },
        "val": "step_by_step",
        "breakLine": true
      }
    }
  }
}
,
"/FormattingOutput.json/FormattingOutput.json": {
  "output": {
    "type": "fieldset",
    "label": "Define Output Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "create_new_table=='true'",
    "repeat": false,
    "fields": {
      "output.custom_text": {
        "type": "text",
        "label": "Output Table Name",
        "show_if": "output.custom_options=='false' || (output.custom_options=='true' && output.compose_table_name=='false')",
        "minLength": 1,
        "val": "",
        "width": "100%",
        "breakLine": true
      },
      "output.custom_options": {
        "type": "checkbox",
        "label": "Output Options",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "output.compose_table_name": {
        "type": "checkbox",
        "label": "Compose Table Name",
        "show_if": "output.custom_options=='true'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "compose_table_name_frame": {
        "type": "fieldset",
        "label": "Compose Output Table Name",
        "show_if": "output.custom_options=='true' && output.compose_table_name=='true'",
        "repeat": false,
        "fields": {
          "output.prefix_rule": {
            "type": "select",
            "label": "Prefix",
            "show_if": "output.compose_table_name=='true'",
            "val": "empty",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.prefix_text": {
            "type": "text",
            "label": "Prefix Text",
            "show_if": "output.compose_table_name=='true' && output.prefix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "output.core_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "show_if": "output.compose_table_name=='true' && output.prefix_rule!='empty'",
            "val": "_",
            "width": "50px"
          },
          "output.core_rule": {
            "type": "select",
            "label": "Table Name",
            "show_if": "output.compose_table_name=='true'",
            "val": "input_table_name",
            "options": {
              "input_table_name": {
                "label": "Input Table Name"
              },
              "script_name": {
                "label": "Task Name"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.core_text": {
            "type": "text",
            "label": "Main Table Name",
            "show_if": "output.compose_table_name=='true' && output.core_rule=='custom'",
            "required": true,
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "output.suffix_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "show_if": "output.compose_table_name=='true'",
            "val": "_",
            "width": "50px"
          },
          "output.suffix_rule": {
            "type": "select",
            "label": "Suffix",
            "show_if": "output.compose_table_name=='true'",
            "val": "script_name",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.suffix_text": {
            "type": "text",
            "label": "Suffix Text",
            "show_if": "output.compose_table_name=='true' && output.suffix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": "",
            "breakLine": true
          },
          "output.timezone": {
            "type": "select",
            "label": "Timezone",
            "show_if": "output.compose_table_name=='true' && (output.prefix_rule=='date_string_type1' || output.prefix_rule=='date_string_type2' || output.prefix_rule=='time_string' || output.prefix_rule=='datetime_string' || output.suffix_rule=='date_string_type1' || output.suffix_rule=='date_string_type2' || output.suffix_rule=='time_string' || output.suffix_rule=='datetime_string')",
            "val": "Europe/Berlin",
            "required": true,
            "options": {
              "America/Adak": {
                "label": "Adak, Gambier"
              },
              "Australia/Adelaide": {
                "label": "Adelaide, Broken_Hill, Darwin"
              },
              "America/Anchorage": {
                "label": "Anchorage, Juneau, Sitka"
              },
              "Pacific/Apia": {
                "label": "Apia, Asau, Mulifanua, Afega, Leulumoega"
              },
              "Pacific/Enderbury": {
                "label": "Apia, Fiji, Tongatapu"
              },
              "Antarctica/McMurdo": {
                "label": "Auckland, Casey, Davis"
              },
              "Pacific/Auckland": {
                "label": "Auckland, Wellington, Christchurch"
              },
              "Asia/Bangkok": {
                "label": "Bangkok, Jakarta, Novosibirsk"
              },
              "Europe/Berlin": {
                "label": "Berlin, Paris, Amsterdam"
              },
              "Australia/Perth": {
                "label": "Brunei, Singapore, Perth"
              },
              "Atlantic/Cape_Verde": {
                "label": "Cape_Verde,Praia, Mindelo, Santa Maria"
              },
              "America/Belize": {
                "label": "Costa_Rica, El_Salvador, Denver"
              },
              "Antarctica/Vostok": {
                "label": "Dhaka, Bishkek, Omsk"
              },
              "Europe/Astrakhan": {
                "label": "Dubai, Baku, Tbilisi"
              },
              "Australia/Eucla": {
                "label": "Eucla"
              },
              "Pacific/Honolulu": {
                "label": "Honolulu, Rarotonga, Tahiti"
              },
              "Asia/Kabul": {
                "label": "Kabul, Kandahār, Mazār-e Sharīf, Herāt, Jalālābād"
              },
              "Asia/Aqtau": {
                "label": "Karachi, Tashkent, Maldives"
              },
              "Asia/Kathmandu": {
                "label": "Kathmandu,Pokhara, Pātan, Biratnagar"
              },
              "Pacific/Kiritimati": {
                "label": "Kiritimati"
              },
              "Asia/Colombo": {
                "label": "Kolkata, Colombo,Jaffna, Negombo"
              },
              "Europe/Guernsey": {
                "label": "London. Dublin, Lisbon"
              },
              "Australia/Lord_Howe": {
                "label": "Lord_Howe"
              },
              "America/Creston": {
                "label": "Los_Angeles, Vancouver, Hermosillo"
              },
              "Pacific/Marquesas": {
                "label": "Marquesas,Taiohae"
              },
              "America/Cayman": {
                "label": "Mexico_City, Panama, Chicago"
              },
              "Pacific/Niue": {
                "label": "Midway, Niue, Pago_Pago"
              },
              "Europe/Mariehamn": {
                "label": "Moscow, Istanbul, Qatar"
              },
              "Asia/Kolkata": {
                "label": "Mumbai, Delhi, Bengaluru, Kolkata, Chennai"
              },
              "America/Miquelon": {
                "label": "Noronha, Nuuk, Miquelon"
              },
              "America/Danmarkshavn": {
                "label": "Reykjavik, Dakar, Casablanca"
              },
              "Pacific/Bougainville": {
                "label": "Sakhalin, Norfolk, Bougainville"
              },
              "America/Araguaina": {
                "label": "Sao_Paulo, Buenos_Aires, Montevideo"
              },
              "America/St_Johns": {
                "label": "St_Johns,Mount Pearl, Corner Brook"
              },
              "Asia/Tehran": {
                "label": "Tehran, Mashhad, Isfahan, Karaj, Tabriz"
              },
              "Asia/Tokyo": {
                "label": "Tokyo, Seoul, Jayapura"
              },
              "America/New_York": {
                "label": "Toronto, Santiago, New_York"
              },
              "Australia/Sydney": {
                "label": "Vladivostok, Sydney, Brisbane"
              },
              "Asia/Yangon": {
                "label": "Yangon, Cocos,Mandalay, Nay Pyi Taw, Mawlamyine"
              },
              "Indian/Cocos": {
                "label": "Yangon, Cocos,West Island"
              }
            },
            "breakLine": true
          }
        }
      }
    }
  }
},
"/PeriodicySelectOutputColumn.json/PeriodicySelectOutputColumn.json": {
  "output.select_output_columns": {
    "type": "checkbox",
    "label": "Select Output Columns",
    "show_if": "options.task_symbol=='periodicy_by_table' && output.custom_options=='true'",
    "val": "false",
    "isOn": "true",
    "isOff": "false"
  },
  "output_columns": {
    "type": "fieldset",
    "label": "Select OutputColumns",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "options.task_symbol=='periodicy_by_table' && output.custom_options=='true' && output.select_output_columns=='true'",
    "repeat": true,
    "fields": {
      "field_name": {
        "type": "select",
        "label": "Select Column",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "order": {
        "type": "select",
        "label": "Order",
        "options": {
          "-": {
            "label": "-"
          },
          "asc": {
            "label": "Asc"
          },
          "desc": {
            "label": "Desc"
          }
        },
        "val": "-"
      },
      "is_rename": {
        "type": "checkbox",
        "label": "Rename",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "rename": {
        "show_if": "this.is_rename == 'true'",
        "type": "text",
        "required": true,
        "minLength": 1,
        "maxLength": 255,
        "label": "New Column Name",
        "style": "margin-left: 10px"
      },
      "format__category": {
        "type": "select",
        "label": "Display Format",
        "required": true,
        "options": {
          "standard": {
            "label": "Standard"
          },
          "number": {
            "label": "Number"
          },
          "percentage": {
            "label": "Percentage"
          },
          "text": {
            "label": "Text"
          },
          "date": {
            "label": "Date"
          },
          "currency": {
            "label": "Currency"
          }
        },
        "val": "standard"
      },
      "format__rounding": {
        "type": "select",
        "label": "Decimal Places for display",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "required": true,
        "options": {
          "no_rounding": {
            "label": "No rounding"
          },
          "0": {
            "label": "0 digits"
          },
          "1": {
            "label": "1 digits"
          },
          "2": {
            "label": "2 digits"
          },
          "3": {
            "label": "3 digits"
          },
          "4": {
            "label": "4 digits"
          },
          "5": {
            "label": "5 digits"
          },
          "6": {
            "label": "6 digits"
          },
          "7": {
            "label": "7 digits"
          },
          "8": {
            "label": "8 digits"
          },
          "9": {
            "label": "9 digits"
          }
        },
        "val": "2"
      },
      "format__use_1000_separator": {
        "type": "checkbox",
        "label": "Use 1000 Separator(.)",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-right: 15px"
      },
      "format__currency_symbol": {
        "type": "select",
        "label": "Symbol",
        "show_if": "this.format__category=='currency'",
        "required": true,
        "options": {
          "dollar": {
            "label": "$"
          },
          "euro": {
            "label": "€"
          },
          "pound": {
            "label": "£"
          },
          "yen": {
            "label": "¥ (Yen, currency of Japan)"
          },
          "colon": {
            "label": "₡ (Colón, currency of Costa Rica)"
          },
          "naira": {
            "label": "₦ (Naira, currency of Nigeria)"
          },
          "rupee": {
            "label": "₨ (Rupee, currency of India)"
          },
          "rupie": {
            "label": "₹ (Rupee, currency of India)"
          },
          "won": {
            "label": "₩ (Won, currency in South Korea and North Korea)"
          },
          "hebrew": {
            "label": "₪ (Currency of Israel)"
          },
          "dong": {
            "label": "₫ (Currency of Vietnam)"
          },
          "kip": {
            "label": "₭ (Kip, currency of Laos)"
          },
          "mongolia": {
            "label": "₮ (Currency of Mongolia)"
          },
          "peso": {
            "label": "₱ (Peso, currency of the Philippines)"
          },
          "guarani": {
            "label": "₲ (Guaraní, currency of Paraguay)"
          },
          "hryvnia": {
            "label": "₴ (Hryvnia, currency of Ukraine)"
          },
          "tenge": {
            "label": "₸ (Tenge, currency of Kazakhstan)"
          },
          "lira": {
            "label": "₺ (Lira, currency of Turkey)"
          },
          "manat": {
            "label": "₼ (Manat, currency of Azerbaijan)"
          },
          "rubles": {
            "label": "₽ (Rubles, currency of Russia)"
          },
          "lari": {
            "label": "₾ (Lari, currency of Georgia)"
          },
          "bitcoin": {
            "label": "₿ (Bitcoin, crypto currency)"
          }
        },
        "val": "dollar"
      },
      "format__date_format": {
        "type": "select",
        "label": "Type",
        "show_if": "this.format__category=='date'",
        "required": true,
        "options": {
          "mm/dd/yyyy": {
            "label": "3/14/2012"
          },
          "D, M dd, Y": {
            "label": "Wednesday, March 14, 2012"
          },
          "yyyy-mm-dd": {
            "label": "2012-03-14"
          },
          "m.dd.yyyy": {
            "label": "3.14.2012"
          },
          "m.dd.yy": {
            "label": "3.14.12"
          },
          "dd.m.yyyy": {
            "label": "14.3.2012"
          },
          "dd.m.yy": {
            "label": "14.3.12"
          },
          "M dd, Y": {
            "label": "March 14, 2012"
          },
          "dd-mm-yyyy": {
            "label": "14-03-2012"
          },
          "mm-dd-yyyy": {
            "label": "03-14-2012"
          },
          "dd-mm-yy": {
            "label": "14-03-12"
          },
          "mm-dd-yy": {
            "label": "03-14-12"
          }
        },
        "val": "mm/dd/yyyy",
        "breakLine": true
      },
      "delete": {
        "type": "button",
        "label": "Delete",
        "function": "DELETE_ROW"
      }
    },
    "breakLine": true,
    "style": "margin-bottom: 20px"
  }
},
"/FlexmonsterInput.json/FlexmonsterInput.json": {
  "input": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "table_id": {
        "type": "select",
        "label": "Select Table",
        "bind": "TABLES",
        "empty": "",
        "required": true,
        "breakLine": true
      },
      "remove_input_table_after_processing": {
        "type": "hidden",
        "val": "false"
      },
      "is_word": {
        "type": "hidden",
        "val": "false"
      },
      "options.configure_manual": {
        "type": "checkbox",
        "label": "Configure manually",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
}
,
"/FindReplaceOptions.json/FindReplaceOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "incoming_value_to_replace.type": {
        "type": "select",
        "label": "Incoming Value",
        "options": {
          "user_specified_value": {
            "label": "Equals"
          },
          "begins_with": {
            "label": "Begins with"
          },
          "ends_with": {
            "label": "Ends with"
          },
          "empty": {
            "label": "Empty"
          },
          "regex": {
            "label": "Regular Expression"
          }
        },
        "val": "user_specified_value",
        "style": "min-width: 190px"
      },
      "incoming_value_to_replace.value": {
        "type": "text",
        "label": "Incoming Value To Replace",
        "required": true,
        "show_if": "incoming_value_to_replace.type=='user_specified_value' || incoming_value_to_replace.type=='begins_with' || incoming_value_to_replace.type=='ends_with'",
        "trim": "false",
        "val": "",
        "style": "min-width: 170px"
      },
      "incoming_value_to_replace.regex": {
        "type": "text",
        "label": "Regular Expression",
        "required": true,
        "show_if": "incoming_value_to_replace.type=='regex'",
        "val": "(.*),(.*),(.*)\\s(\\d{5})(-\\d{4})?",
        "style": "min-width: 200px"
      },
      "replace_table.table_id": {
        "type": "select",
        "label": "Replacement Table",
        "show_if": "incoming_value_to_replace.type=='replacement_table'",
        "bind": "TABLES",
        "required": true
      },
      "replace_table.find_column": {
        "type": "select",
        "label": "Select Find Column",
        "show_if": "incoming_value_to_replace.type=='replacement_table'",
        "table": "replace_table.table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "replace_table.replace_with_column": {
        "type": "select",
        "label": "Select Replace with Column",
        "show_if": "incoming_value_to_replace.type=='replacement_table'",
        "table": "replace_table.table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "incoming_value_to_replace.partial_match": {
        "type": "select",
        "label": "Partial Match",
        "show_if": "incoming_value_to_replace.type=='user_specified_value' || incoming_value_to_replace.type=='replacement_table'",
        "options": {
          "full_match": {
            "label": "Full match"
          },
          "full_and_partial_match": {
            "label": "Full and partial match"
          },
          "partial_match_only": {
            "label": "Partial match only"
          }
        },
        "val": "full_and_partial_match"
      },
      "replace_with.value_type": {
        "type": "select",
        "label": "Replace With",
        "show_if": "incoming_value_to_replace.type!='regex' && incoming_value_to_replace.type!='replacement_table'",
        "options": {
          "user_specified_value": {
            "label": "Custom Value"
          },
          "average": {
            "label": "Column Average"
          },
          "median": {
            "label": "Column Median"
          },
          "mode": {
            "label": "Column Mode"
          },
          "sum": {
            "label": "Column Sum"
          },
          "table": {
            "label": "Table Column"
          }
        },
        "val": "user_specified_value",
        "style": "min-width: 190px"
      },
      "replace_with.value": {
        "type": "text",
        "label": "Replace With Value",
        "show_if": "incoming_value_to_replace.type!='regex' && replace_with.value_type=='user_specified_value' && incoming_value_to_replace.type!='replacement_table'",
        "trim": "false",
        "val": ""
      },
      "replace_with.regex_value": {
        "type": "text",
        "label": "Replace With Value",
        "show_if": "incoming_value_to_replace.type=='regex' && incoming_value_to_replace.type!='replacement_table'",
        "val": "\\4: \\2, \\3"
      },
      "replace_with.table_id": {
        "type": "select",
        "label": "Select Table",
        "show_if": "incoming_value_to_replace.type!='regex' && replace_with.value_type=='table' && incoming_value_to_replace.type!='replacement_table'",
        "bind": "TABLES",
        "required": true
      },
      "replace_with.column": {
        "type": "select",
        "label": "Select Column",
        "show_if": "incoming_value_to_replace.type!='regex' && replace_with.value_type=='table' && incoming_value_to_replace.type!='replacement_table'",
        "table": "replace_with.table_id",
        "bind": "COLUMNS",
        "required": true,
        "breakLine": true
      },
      "replacement_table_notice": {
        "type": "text",
        "label": "",
        "show_if": "incoming_value_to_replace.type=='replacement_table'",
        "val": "Line-break will be ignored in replacement table",
        "disabled": true,
        "width": "100%"
      },
      "use_filter": {
        "type": "checkbox",
        "label": "Use Filter",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "filter_options_box": {
        "type": "fieldset",
        "label": "Filter Options",
        "show_if": "use_filter=='true'",
        "repeat": false,
        "fields": {
          "filter": {
            "type": "fieldset",
            "label": "Add Filter Conditions",
            "show_if": "use_filter=='true'",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if" :  "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if" :  "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table_id": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table_id",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group",
            "show_if": "apply_to_record=='false'",
            "repeat": false,
            "fields": {
              "apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "required": true,
                "width": "100%",
                "table": "table_id",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      },
      "use_replace_table_filter": {
        "type": "checkbox",
        "label": "Use Filter on \"Replace With\" Table",
        "show_if": "incoming_value_to_replace.type=='replacement_table' || (incoming_value_to_replace.type!='regex' && replace_with.value_type=='table')",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "replace_table_filter_option_box": {
        "type": "fieldset",
        "label": "\"Replace With\" Table Filter Options",
        "show_if": "use_replace_table_filter=='true' && (incoming_value_to_replace.type=='replacement_table' || (incoming_value_to_replace.type!='regex' && replace_with.value_type=='table'))",
        "repeat": false,
        "fields": {
          "replace_table_filter_option.filter": {
            "type": "fieldset",
            "label": "Add Filter Conditions on \"Replace With\" Table",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if" :  "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if" :  "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "replace_with.table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table_id": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table_id",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "replace_table_filter_option.apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record on \"Replace With\" Table",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "replace_table_filter_option_apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group on \"Replace With\" Table",
            "show_if": "replace_table_filter_option.apply_to_record=='false' && (incoming_value_to_replace.type!='replacement_table' && incoming_value_to_replace.type!='regex' && replace_with.value_type=='table')",
            "repeat": false,
            "fields": {
              "replace_table_filter_option.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "required": true,
                "width": "100%",
                "table": "replace_with.table_id",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          },
          "replacement_table_filter_option_apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group on \"Replace With\" Table",
            "show_if": "replace_table_filter_option.apply_to_record=='false' && incoming_value_to_replace.type=='replacement_table'",
            "repeat": false,
            "fields": {
              "replacement_table_filter_option.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "required": true,
                "width": "100%",
                "table": "replace_table.table_id",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      }
    }
  }
}
,
"/ImportFromDbOptions.json/ImportFromDbOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.from": {
        "type": "hidden",
        "val": "database"
      },
      "postgresql_db_credential_box": {
        "type": "fieldset",
        "label": "Database Connection Credentials",
        "repeat": false,
        "fields": {
          "options.dbms": {
            "type": "select",
            "label": "Select DBMS",
            "options": {
              "postgresql": {
                "label": "PostgreSQL"
              },
              "mysql": {
                "label": "MySQL"
              },
              "sql_server": {
                "label": "MS SQL Server"
              },
              "oracle": {
                "label": "Oracle"
              }
            },
            "val": "postgresql",
            "required": true,
            "breakLine": true
          },
          "options.host": {
            "type": "text",
            "label": "Host",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "options.user": {
            "type": "text",
            "label": "User",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "options.password": {
            "type": "password",
            "label": "Password",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "options.database": {
            "type": "text",
            "label": "Database",
            "required": true,
            "width": "100%",
            "breakLine": true
          }
        }
      },
      "options.schema_name_to_import": {
        "type": "text",
        "label": "Schema name that includes table to import",
        "show_if": "options.dbms=='postgresql' || options.dbms=='sql_server' || options.dbms=='oracle'",
        "required": true,
        "val": "public",
        "width": "100%",
        "breakLine": true
      },
      "options.table_name_to_import": {
        "type": "text",
        "label": "Table name to import",
        "required": true,
        "width": "100%",
        "breakLine": true
      }
    }
  }
}
,
"/WorldPopulationOptions.json/WorldPopulationOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.chart_type": {
        "type": "hidden",
        "val": "zoomable_sunburst"
      },
      "options.group_by": {
        "type": "select",
        "label": "Group By",
        "required": true,
        "options": {
          "Region": {
            "label": "Region"
          },
          "Income Group": {
            "label": "Income Group"
          }
        },
        "val": "Region"
      },
      "options.measure": {
        "type": "select",
        "label": "Measure",
        "required": true,
        "options": {
          "population_2020": {
            "label": "Population 2020"
          },
          "gdp_2020_in_usd": {
            "label": "GDP 2020 in USD"
          }
        },
        "val": "population_2020",
        "breakLine": true
      },
      "options.output_as_chart": {
        "type": "checkbox",
        "label": "Output a graph",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "options.graph_type": {
        "type": "select",
        "label": "Graph Type",
        "show_if": "options.output_as_chart=='true'",
        "required": true,
        "options": {
          "zoomable_sunburst": {
            "label": "Sunburst"
          },
          "tidy_tree": {
            "label": "Tree"
          },
          "treemap": {
            "label": "Treemap"
          }
        },
        "val": "zoomable_sunburst",
        "breakLine": true
      },
      "options.configure_input_table": {
        "type": "checkbox",
        "label": "Configure input table",
        "show_if": "options.output_as_chart=='true'",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      }
    }
  }
}
,
"/DCEmploymentWorldDataOptions.json/DCEmploymentWorldDataOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.group_by": {
        "type": "select",
        "label": "Group By",
        "required": true,
        "options": {
          "Region": {
            "label": "Region"
          },
          "Income Group": {
            "label": "Income Group"
          }
        },
        "val": "Region",
        "breakLine": true
      },
      "options.stat_var_name": {
        "type": "select",
        "label": "Statistics Data",
        "required": true,
        "options": {
          "UnemploymentRate_Person": {
            "label": "Unemployment Rate"
          },
          "Count_Person_InLaborForce": {
            "label": "In Labor Force Population"
          },
          "Count_Person_15To64Years_InLaborForce_AsFractionOf_Count_Person_15To64Years": {
            "label": "15 - 64 Years, in Labor Force Population Per Capita 15 To 64 Years"
          },
          "Count_Person_15To64Years_Female_InLaborForce_AsFractionOf_Count_Person_15To64Years_Female": {
            "label": "15 - 64 Years, in Labor Force, Female Population Per Capita 15 To 64 Years Female"
          },
          "Count_Person_15To64Years_Male_InLaborForce_AsFractionOf_Count_Person_15To64Years_Male": {
            "label": "15 - 64 Years, in Labor Force, Male Population Per Capita 15 To 64 Years Male"
          },
          "Count_Person_15OrMoreYears_InLaborForce_Female_AsFractionOf_Count_Person_InLaborForce": {
            "label": "15 Years or More, in Labor Force, Female Population Per Capita in Labor Force"
          }
        },
        "val": "UnemploymentRate_Person"
      },
      "options.per_capita": {
        "type": "checkbox",
        "label": "Per capita",
        "show_if": "false",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.all_countries": {
        "type": "checkbox",
        "label": "All countries",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.output_as_chart": {
        "type": "checkbox",
        "label": "Output a Graph",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "options.graph_type": {
        "type": "select",
        "label": "Graph Type",
        "show_if": "options.output_as_chart=='true'",
        "required": true,
        "options": {
          "zoomable_sunburst": {
            "label": "Sunburst"
          },
          "treemap": {
            "label": "Treemap"
          }
        },
        "val": "zoomable_sunburst",
        "breakLine": true
      }
    }
  }
}
,
"/RenameTableInput.json/RenameTableInput.json": {
  "rename_table": {
    "type": "text",
    "label": "Rename to",
    "minLength": 1,
    "val": "",
    "breakLine": true
  }
},
"/ExportToGDriveOptions.json/ExportToGDriveOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Select Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.to": {
        "type": "hidden",
        "val": "file"
      },
      "options.webservice": {
        "type": "hidden",
        "val": "google_drive"
      },
      "options.export_format": {
        "type": "select",
        "label": "Export Format",
        "options": {
          "csv_file": {
            "label": "Csv file(s)"
          },
          "word_by_word": {
            "label": "Word by Word"
          },
          "line_by_line": {
            "label": "Line by Line"
          }
        },
        "val": "csv_file",
        "required": true,
        "breakLine": true
      },
      "options.if_duplicated": {
        "type": "select",
        "label": "If existing",
        "show_if": "options.webservice=='github'",
        "val": "drop_if_exist",
        "options": {
          "drop_if_exist": {
            "label": "Create or Drop (if already existing)"
          },
          "error_if_exist": {
            "label": "Create New (throw error if existing)"
          },
          "error_if_not_exist": {
            "label": "Drop (throw error if not-existing)"
          },
          "append": {
            "label": "Append"
          }
        },
        "breakLine": true
      },
      "options.export_series": {
        "type": "checkbox",
        "label": "Export Series",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.file_name_column": {
        "type": "select",
        "label": "Select File Name Column",
        "show_if": "options.export_series=='true'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true,
        "breakLine": true
      },
      "options.set_file_path_column": {
        "type": "checkbox",
        "label": "Export to specified path",
        "show_if": "options.export_series=='true'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.file_path_column": {
        "type": "select",
        "label": "Select File Path Column",
        "show_if": "options.export_series=='true' && options.set_file_path_column=='true'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true,
        "breakLine": true
      }
    }
  },
  "export_link_token_frame": {
    "type": "fieldset",
    "label": "Export Link",
    "repeat": false,
    "fields": {
      "options.github_url": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test",
        "show_if": "options.webservice=='github'",
        "val": "",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.export_dir": {
        "type": "text",
        "label": "Enter dir e.g. /MyZippyDocFiles/SubDir/",
        "show_if": "options.webservice!='github'",
        "val": "/",
        "width": "100%",
        "breakLine": true
      },
      "options.github_token": {
        "type": "text",
        "label": "Specify the Github personal access token that has write permission:",
        "show_if": "options.webservice=='github'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.github_create_pr": {
        "type": "checkbox",
        "label": "Create pull request",
        "show_if": "options.webservice=='github'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.ms_one_drive_token": {
        "type": "text",
        "label": "Microsoft Graph API access token. You can get it here https://ms-oauth.herokuapp.com/",
        "show_if": "options.webservice=='ms_one_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.google_authorization_code": {
        "type": "text",
        "label": "Google OAuth Authorization Code with scope https://www.googleapis.com/auth/drive. You can get it here https://developers.google.com/oauthplayground/",
        "show_if": "options.webservice=='google_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox_authorization_code": {
        "type": "text",
        "label": "Dropbox Authorization Code. You can get it here https://www.dropbox.com/oauth2/authorize?client_id=9i7woztjp94jrkw&response_type=code",
        "show_if": "options.webservice=='dropbox'",
        "required": true,
        "width": "100%",
        "breakLine": true
      }
    }
  }
},
"/FindGroupOptions.json/FindGroupOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Find Group Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "group_column": {
        "type": "select",
        "label": "Select Group Column",
        "required": true,
        "table": "table_id",
        "bind": "COLUMNS",
        "multiple": false
      },
      "item_column": {
        "type": "select",
        "label": "Select Item Column",
        "required": true,
        "table": "table_id",
        "bind": "COLUMNS",
        "multiple": false,
        "breakLine": true
      },
      "min_group_count": {
        "type": "number",
        "label": "Min Group Count",
        "required": true,
        "val": 3
      },
      "min_group_size": {
        "type": "number",
        "label": "Min Group Size",
        "required": true,
        "val": 1,
        "breakLine": true
      },
      "ordered": {
        "type": "select",
        "label": "Ordered / Unordered",
        "required": true,
        "options": {
          "ordered": {
            "label": "Ordered"
          },
          "unordered": {
            "label": "Unordered"
          }
        },
        "val": "unordered"
      },
      "item_order": {
        "type": "select",
        "label": "Order",
        "required": true,
        "options": {
          "no": {
            "label": "-"
          },
          "ascending": {
            "label": "Ascending"
          },
          "descending": {
            "label": "Descending"
          }
        },
        "val": "no",
        "breakLine": true,
        "show_if": "ordered == 'unordered'"
      },
      "output_type": {
        "type": "select",
        "label": "Output Type",
        "required": true,
        "options": {
          "item_group_list": {
            "label": "List of found groups"
          },
          "item_group_column": {
            "label": "Allocate found groups"
          }
        },
        "val": "item_group_list",
        "breakLine": true
      }
    }
  }
}
,
"/D3BarChartOptions.json/D3BarChartOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.chart_type": {
        "type": "hidden",
        "val": "bar_chart"
      },
      "options.configure_manual": {
        "type": "hidden",
        "val": "true"
      },
      "options.x_axis_col": {
        "type": "select",
        "label": "X-axis column",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "options.value_col": {
        "type": "select",
        "label": "Value column",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      }
    }
  }
}
,
"/PlanningOutputSettingTickbox.json/PlanningOutputSettingTickbox.json": {
  "output.output_and_setting": {
    "type": "checkbox",
    "label": "Output and Settings",
    "show_if": "options.output_type=='table_output' || (options.output_type=='pdf_planning_package' && options.where_to_create=='only_export_to_cloud')",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  }
}
,
"/ExportOptions_backup.json/ExportOptions_backup.json": {
  "options": {
    "type": "fieldset",
    "label": "Select Options",
    "repeat": false,
    "fields": {
      "options.to": {
        "type": "select",
        "label": "Type",
        "options": {
          "database": {
            "label": "Export to database"
          },
          "file": {
            "label": "Export to file"
          },
          "mytask": {
            "label": "Export MyTask"
          }
        },
        "val": "database",
        "required": true
      },
      "options.export_series": {
        "type": "checkbox",
        "label": "Export Series",
        "show_if": "options.to=='file'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.file_name_column": {
        "type": "select",
        "label": "Select File Name Column",
        "show_if": "options.to=='file' && options.export_series=='true'",
        "table": "input_table",
        "bind": "COLUMNS",
        "required": true,
        "breakLine": true
      },
      "postgresql_db_credential_box": {
        "type": "fieldset",
        "label": "Database Connection Credentials",
        "show_if": "options.to=='database'",
        "repeat": false,
        "fields": {
          "options.dbms": {
            "type": "select",
            "label": "Select DBMS",
            "options": {
              "postgresql": {
                "label": "PostgreSQL"
              },
              "mysql": {
                "label": "MySQL"
              },
              "sql_server": {
                "label": "MS SQL Server"
              },
              "oracle": {
                "label": "Oracle"
              }
            },
            "val": "postgresql",
            "required": true,
            "breakLine": true
          },
          "options.postgresql_credential.user": {
            "type": "text",
            "label": "User",
            "show_if": "options.dbms=='postgresql'",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "options.postgresql_credential.password": {
            "type": "text",
            "label": "Password",
            "show_if": "options.dbms=='postgresql'",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "options.postgresql_credential.host": {
            "type": "text",
            "label": "Host",
            "show_if": "options.dbms=='postgresql'",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "options.postgresql_credential.database": {
            "type": "text",
            "label": "Database",
            "show_if": "options.dbms=='postgresql'",
            "required": true,
            "width": "100%",
            "breakLine": true
          }
        }
      },
      "options.schema_name_to_export": {
        "type": "text",
        "label": "Schema name to export into",
        "show_if": "options.to=='database' && options.dbms=='postgresql'",
        "required": true,
        "val": "public",
        "width": "100%",
        "breakLine": true
      },
      "options.webservice": {
        "type": "select",
        "label": "Select Webservice",
        "show_if": "options.to=='file' || options.to=='mytask'",
        "options": {
          "github": {
            "label": "Github"
          }
        },
        "val": "github",
        "required": true
      },
      "options.export_format": {
        "type": "select",
        "label": "Export Format",
        "show_if": "options.to=='file'",
        "options": {
          "csv_file": {
            "label": "Csv file(s)"
          },
          "word_by_word": {
            "label": "Word by Word"
          },
          "line_by_line": {
            "label": "Line by Line"
          }
        },
        "val": "csv_file",
        "required": true,
        "breakLine": true
      },
      "options.github_token": {
        "type": "text",
        "label": "Specify the github personal access token that has write permission:",
        "show_if": "options.to=='file' || options.to=='mytask'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.github_url": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test",
        "show_if": "options.to=='file' || options.to=='mytask'",
        "val": "https://github.com/zippydoc/public-tables",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.if_duplicated": {
        "type": "select",
        "label": "If duplicated",
        "val": "drop_if_exist",
        "options": {
          "drop_if_exist": {
            "label": "Create or Drop (if already existing)"
          },
          "error_if_exist": {
            "label": "Create New (throw error if existing)"
          },
          "error_if_not_exist": {
            "label": "Drop (throw error if not-existing)"
          },
          "append": {
            "label": "Append"
          }
        }
      },
      "options.export_task_name": {
        "type": "text",
        "label": "Input Task Name",
        "show_if": "options.to=='mytask'",
        "required": true,
        "val": "Flow6_Task1_AddColumns",
        "width": "100%",
        "breakLine": true
      }
    }
  }
},
"/AutofillInput.json/AutofillInput.json": {
  "input": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "tables": {
        "type": "fieldset",
        "label": "Select Lookup Table(s)",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "repeat": true,
        "fields": {
          "table_id": {
            "type": "select",
            "label": "Lookup Table",
            "bind": "TABLES",
            "required": true
          },
          "lookup_header_column": {
            "type": "select",
            "label": "Header Column",
            "table": "this.table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "lookup_value_column": {
            "type": "select",
            "label": "Value Column",
            "table": "this.table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "lookup_mapping_column": {
            "type": "select",
            "label": "Mapping Column",
            "table": "this.table_id",
            "bind": "COLUMNS"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.treatment": {
        "type": "select",
        "label": "Treatment of multiple occurances",
        "required": true,
        "options": {
          "sum": {
            "label": "Sum"
          },
          "min": {
            "label": "Min"
          },
          "max": {
            "label": "Max"
          },
          "shortest": {
            "label": "Shortest"
          },
          "longest": {
            "label": "Longest"
          },
          "first": {
            "label": "First"
          },
          "last": {
            "label": "Last"
          },
          "concatenate": {
            "label": "Concatenate"
          }
        },
        "val": "sum",
        "style": "min-width: 200px"
      },
      "options.treatment_delimiter": {
        "type": "text",
        "label": "Delimiter",
        "show_if": "options.treatment=='concatenate'",
        "required": true,
        "minLength": 1,
        "maxLength": 255,
        "val": ";",
        "breakLine": true
      }
    }
  }
}
,
"/DCEmploymentOptions.json/DCEmploymentOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.all_countries": {
        "type": "hidden",
        "val": "false"
      },
      "options.stat_vars": {
        "type": "fieldset",
        "label": "Statistics data category(s)",
        "repeat": true,
        "fields": {
          "stat_var_name": {
            "type": "select",
            "label": "Employment Data",
            "required": true,
            "options": {
              "UnemploymentRate_Person": {
                "label": "Unemployment Rate"
              },
              "Count_Person_InLaborForce": {
                "label": "In Labor Force Population"
              },
              "Count_Person_15To64Years_InLaborForce_AsFractionOf_Count_Person_15To64Years": {
                "label": "15 - 64 Years, in Labor Force Population Per Capita 15 To 64 Years"
              },
              "Count_Person_15To64Years_Female_InLaborForce_AsFractionOf_Count_Person_15To64Years_Female": {
                "label": "15 - 64 Years, in Labor Force, Female Population Per Capita 15 To 64 Years Female"
              },
              "Count_Person_15To64Years_Male_InLaborForce_AsFractionOf_Count_Person_15To64Years_Male": {
                "label": "15 - 64 Years, in Labor Force, Male Population Per Capita 15 To 64 Years Male"
              },
              "Count_Person_15OrMoreYears_InLaborForce_Female_AsFractionOf_Count_Person_InLaborForce": {
                "label": "15 Years or More, in Labor Force, Female Population Per Capita in Labor Force"
              }
            }
          },
          "per_capita": {
            "type": "checkbox",
            "label": "Per capita",
            "show_if": "false",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.output_as_chart": {
        "type": "checkbox",
        "label": "Output a Graph",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
}
,
"/UnionOptions.json/UnionOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.union_type": {
        "type": "select",
        "label": "Select Union Type",
        "val": "auto_config_by_name",
        "options": {
          "auto_config_by_name": {
            "label": "Auto Config By Name"
          },
          "auto_config_by_position": {
            "label": "Auto Config By Position"
          }
        }
      },
      "options.field_output_type": {
        "type": "select",
        "label": "Column Output Type",
        "show_if": "options.union_type=='auto_config_by_name' || options.union_type=='auto_config_by_position'",
        "val": "output_all_fields",
        "options": {
          "output_all_fields": {
            "label": "Output All Columns"
          },
          "output_common_fields": {
            "label": "Output Common Columns"
          }
        },
        "breakLine": true
      },
      "options.add_table_name_column": {
        "type": "checkbox",
        "label": "Add Table name column",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
}
,
"/PeriodicyByMenuOptions.json/PeriodicyByMenuOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Select Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.task_symbol": {
        "type": "hidden",
        "val": "periodicy_by_menu"
      },
      "options.custom.table": {
        "type": "fieldset",
        "label": "Planning Position",
        "repeat": true,
        "fields": {
          "item": {
            "type": "text",
            "label": "Item",
            "val": "",
            "required": true
          },
          "position": {
            "type": "text",
            "label": "Position",
            "val": "",
            "required": true,
            "breakLine": true
          },
          "amount": {
            "type": "number",
            "label": "Amount",
            "val": 0,
            "required": true
          },
          "initial_date": {
            "type": "date",
            "label": "Initial Date",
            "val": "",
            "required": true
          },
          "periodicy": {
            "type": "select",
            "label": "Periodicy",
            "required": true,
            "options": {
              "One-Off": {
                "label": "One-Off"
              },
              "Daily": {
                "label": "Daily"
              },
              "Weekly": {
                "label": "Weekly"
              },
              "Monthly": {
                "label": "Monthly"
              },
              "Quarterly": {
                "label": "Quarterly"
              },
              "Yearly": {
                "label": "Yearly"
              }
            },
            "val": "One-Off"
          },
          "growth": {
            "type": "number",
            "label": "Growth in %",
            "show_if": "this.periodicy!='One-Off'",
            "val": 0,
            "required": true
          },
          "growth_period": {
            "type": "select",
            "label": "Growth Period",
            "show_if": "this.periodicy!='One-Off'",
            "options": {
              "Weekly": {
                "label": "Weekly"
              },
              "Monthly": {
                "label": "Month on Month"
              },
              "Quarterly": {
                "label": "Quarter on Quarter"
              },
              "Yearly": {
                "label": "Year on Year"
              }
            },
            "val": "Weekly"
          },
          "growth_pattern": {
            "type": "select",
            "label": "Growth Pattern",
            "show_if": "this.periodicy!='One-Off'",
            "options": {
              "Linear": {
                "label": "Linear"
              },
              "Compounding": {
                "label": "Compounding"
              },
              "Jump-Fix": {
                "label": "Jump-Fix"
              }
            },
            "val": "Compounding"
          },
          "final_date": {
            "type": "date",
            "label": "Final Date",
            "show_if": "this.periodicy!='One-Off'",
            "val": ""
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.end_date": {
        "type": "date",
        "label": "End Date of Table",
        "val": "",
        "required": true,
        "style": "width: 300px"
      }
    }
  }
},
"/DCClimateOptions.json/DCClimateOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.all_countries": {
        "type": "hidden",
        "val": "false"
      },
      "options.stat_vars": {
        "type": "fieldset",
        "label": "Statistics data category(s)",
        "repeat": true,
        "fields": {
          "stat_var_name": {
            "type": "select",
            "label": "Climate Data",
            "required": true,
            "options": {
              "Amount_Emissions_CarbonDioxide_PerCapita": {
                "label": "CO2 Emissions Per Capita"
              },
              "Count_EarthquakeEvent": {
                "label": "Count of Earthquake Event"
              },
              "Count_EarthquakeEvent_M3To4": {
                "label": "Count of Earthquake Event of 3 - 4 Magnitude"
              },
              "Count_EarthquakeEvent_M3Onwards": {
                "label": "Count of Earthquake Event of 3 Magnitude or More"
              },
              "Count_EarthquakeEvent_M4To5": {
                "label": "Count of Earthquake Event of 4 - 5 Magnitude"
              },
              "Count_EarthquakeEvent_M4Onwards": {
                "label": "Count of Earthquake Event of 4 Magnitude or More"
              },
              "Count_EarthquakeEvent_M5To6": {
                "label": "Count of Earthquake Event of 5 - 6 Magnitude"
              },
              "Count_EarthquakeEvent_M5Onwards": {
                "label": "Count of Earthquake Event of 5 Magnitude or More"
              },
              "Max_Temperature": {
                "label": "Max Temperature"
              },
              "DifferenceAcrossModels_Max_Temperature": {
                "label": "Max Temperature (Difference Across Models)"
              },
              "Min_Temperature": {
                "label": "Min Temperature"
              },
              "DifferenceAcrossModels_Min_Temperature": {
                "label": "Min Temperature (Difference Across Models)"
              },
              "PrecipitationRate": {
                "label": "Precipitation Rate"
              },
              "DifferenceAcrossModels_PrecipitationRate": {
                "label": "Precipitation Rate (Difference Across Models)"
              },
              "Max_Temperature_RCP45": {
                "label": "Max Temperature Based on RCP 4.5"
              },
              "DifferenceAcrossModels_Max_Temperature_RCP45": {
                "label": "Max Temperature Based on RCP 4.5 (Difference Across Models)"
              },
              "Min_Temperature_RCP45": {
                "label": "Min Temperature Based on RCP 4.5"
              },
              "DifferenceAcrossModels_Min_Temperature_RCP45": {
                "label": "Min Temperature Based on RCP 4.5 (Difference Across Models)"
              },
              "PrecipitationRate_RCP45": {
                "label": "Precipitation Rate Based on RCP 4.5"
              },
              "DifferenceAcrossModels_PrecipitationRate_RCP45": {
                "label": "Precipitation Rate Based on RCP 4.5 (Difference Across Models)"
              },
              "DifferenceRelativeToBaseDate2006_Max_Temperature_RCP45": {
                "label": "Max Temperature Relative To 2006, RCP 4.5 (Difference Relative To Base Date)"
              },
              "DifferenceRelativeToBaseDate2006_Min_Temperature_RCP45": {
                "label": "Min Temperature Relative To 2006, RCP 4.5 (Difference Relative To Base Date)"
              },
              "DifferenceRelativeToBaseDate2006_PrecipitationRate_RCP45": {
                "label": "Precipitation Rate Relative To 2006, RCP 4.5 (Difference Relative To Base Date)"
              },
              "Max_Temperature_RCP85": {
                "label": "Max Temperature Based on RCP 8.5"
              },
              "DifferenceAcrossModels_Max_Temperature_RCP85": {
                "label": "Max Temperature Based on RCP 8.5 (Difference Across Models)"
              },
              "Min_Temperature_RCP85": {
                "label": "Min Temperature Based on RCP 8.5"
              },
              "DifferenceAcrossModels_Min_Temperature_RCP85": {
                "label": "Min Temperature Based on RCP 8.5 (Difference Across Models)"
              },
              "PrecipitationRate_RCP85": {
                "label": "Precipitation Rate Based on RCP 8.5"
              },
              "DifferenceAcrossModels_PrecipitationRate_RCP85": {
                "label": "Precipitation Rate Based on RCP 8.5 (Difference Across Models)"
              },
              "DifferenceRelativeToBaseDate2006_Max_Temperature_RCP85": {
                "label": "Max Temperature Relative To 2006, RCP 8.5 (Difference Relative To Base Date)"
              },
              "DifferenceRelativeToBaseDate2006_Min_Temperature_RCP85": {
                "label": "Min Temperature Relative To 2006, RCP 8.5 (Difference Relative To Base Date)"
              },
              "DifferenceRelativeToBaseDate2006_PrecipitationRate_RCP85": {
                "label": "Precipitation Rate Relative To 2006, RCP 8.5 (Difference Relative To Base Date)"
              },
              "DifferenceRelativeToBaseDate1990_Max_Temperature": {
                "label": "Max Temperature Relative To 1990 (Difference Relative To Base Date)"
              },
              "DifferenceRelativeToBaseDate1990_Min_Temperature": {
                "label": "Min Temperature Relative To 1990 (Difference Relative To Base Date)"
              },
              "DifferenceRelativeToBaseDate1990_PrecipitationRate": {
                "label": "Precipitation Rate Relative To 1990 (Difference Relative To Base Date)"
              }
            }
          },
          "per_capita": {
            "type": "checkbox",
            "label": "Per capita",
            "show_if": "false",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "help_1": {
            "type": "textarea",
            "label": "",
            "show_if": "this.stat_var_name=='Count_Person_ResidingLessThan5MetersAboveSeaLevel_AsFractionOf_Count_Person'",
            "val": "Percentage of the total population living in areas where the elevation is 5 meters or less. Center for International Earth Science Information Network (CIESIN)/Columbia University. 2013. Urban-Rural Population and Land Area Estimates Version 2. Palisades, NY: NASA Socioeconomic Data and Applications Center (SEDAC). http://sedac.ciesin.columbia.edu/data/set/lecz-urban-rural-population-land-area-estimates-v2.",
            "md_no_resize": false,
            "rows": 6,
            "disabled": true,
            "width": "100%"
          },
          "help_2": {
            "type": "text",
            "label": "",
            "show_if": "this.stat_var_name=='Max_Temperature_RCP45' || this.stat_var_name=='DifferenceAcrossModels_Max_Temperature_RCP45' || this.stat_var_name=='DifferenceRelativeToBaseDate2006_Max_Temperature_RCP45'",
            "val": "Maximum near-surface air temperature under RCP4.5 emissions scenario",
            "disabled": true,
            "width": "100%"
          },
          "help_3": {
            "type": "text",
            "label": "",
            "show_if": "this.stat_var_name=='Min_Temperature_RCP45' || this.stat_var_name=='DifferenceAcrossModels_Min_Temperature_RCP45' || this.stat_var_name=='DifferenceRelativeToBaseDate2006_Min_Temperature_RCP45'",
            "val": "Minimum near-surface air temperature under RCP4.5 emissions scenario",
            "disabled": true,
            "width": "100%"
          },
          "help_4": {
            "type": "text",
            "label": "",
            "show_if": "this.stat_var_name=='PrecipitationRate_RCP45' || this.stat_var_name=='DifferenceAcrossModels_PrecipitationRate_RCP45' || this.stat_var_name=='DifferenceRelativeToBaseDate2006_PrecipitationRate_RCP45'",
            "val": "Precipitation rate at surface projected under RCP4.5 emissions scenario",
            "disabled": true,
            "width": "100%"
          },
          "help_5": {
            "type": "text",
            "label": "",
            "show_if": "this.stat_var_name=='Max_Temperature_RCP85' || this.stat_var_name=='DifferenceAcrossModels_Max_Temperature_RCP85' || this.stat_var_name=='DifferenceRelativeToBaseDate2006_Max_Temperature_RCP85'",
            "val": "Maximum near-surface air temperature under RCP8.5 emissions scenario",
            "disabled": true,
            "width": "100%"
          },
          "help_6": {
            "type": "text",
            "label": "",
            "show_if": "this.stat_var_name=='Min_Temperature_RCP85' || this.stat_var_name=='DifferenceAcrossModels_Min_Temperature_RCP85' || this.stat_var_name=='DifferenceRelativeToBaseDate2006_Min_Temperature_RCP85'",
            "val": "Minimum near-surface air temperature under RCP8.5 emissions scenario",
            "disabled": true,
            "width": "100%"
          },
          "help_7": {
            "type": "text",
            "label": "",
            "show_if": "this.stat_var_name=='PrecipitationRate_RCP85' || this.stat_var_name=='DifferenceAcrossModels_PrecipitationRate_RCP85' || this.stat_var_name=='DifferenceRelativeToBaseDate2006_PrecipitationRate_RCP85'",
            "val": "Precipitation rate at surface projected under RCP8.5 emissions scenario",
            "disabled": true,
            "width": "100%"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.output_as_chart": {
        "type": "checkbox",
        "label": "Output a Graph",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
}
,
"/GetFormatOptions.json/GetFormatOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "for_multispan": {
        "type": "checkbox",
        "label": "All details for multispan headers/labels",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "output_type": {
        "type": "select",
        "label": "Output Type",
        "required": true,
        "options": {
          "format_information": {
            "label": "Format Information"
          },
          "apply_to_table": {
            "label": "Apply to Table"
          }
        },
        "val": "format_information"
      }
    }
  }
}
,
"/MultiColumnOptions.json/MultiColumnOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.task": {
        "type": "hidden",
        "val": "multi_column"
      },
      "options.add_columns": {
        "type": "fieldset",
        "label": "Add New Columns",
        "repeat": true,
        "fields": {
          "new_column_name": {
            "type": "text",
            "label": "New Column Name",
            "val": "",
            "breakLine": true
          },
          "multi_column_functions__function": {
            "type": "select",
            "label": "Function",
            "required": true,
            "options": {
              "sum": {
                "label": "Sum"
              },
              "average": {
                "label": "Average"
              },
              "median": {
                "label": "Median"
              },
              "max": {
                "label": "Max"
              },
              "min": {
                "label": "Min"
              },
              "standard_deviation": {
                "label": "Standard Deviation"
              },
              "product": {
                "label": "Product"
              },
              "quota": {
                "label": "Quota"
              },
              "absolute_growth": {
                "label": "Absolute Growth"
              },
              "relative_growth": {
                "label": "Relative Growth"
              },
              "compound_growth": {
                "label": "Compound Growth"
              },
              "static_value": {
                "label": "Static Value"
              },
              "numeric_formula": {
                "label": "Numeric Formula"
              },
              "text_formula": {
                "label": "Text Formula"
              }
            },
            "val": "sum"
          },
          "multi_column_functions__sel_columns": {
            "type": "select",
            "label": "Select Column(s)",
            "show_if": "this.multi_column_functions__function=='sum' || this.multi_column_functions__function=='average' || this.multi_column_functions__function=='median' || this.multi_column_functions__function=='max' || this.multi_column_functions__function=='min' || this.multi_column_functions__function=='standard_deviation' || this.multi_column_functions__function=='product'",
            "table": "table_id",
            "bind": "COLUMNS",
            "multiple": true,
            "breakLine": true
          },
          "multi_column_functions__column_a": {
            "type": "select",
            "label": "Select Column A",
            "show_if": "this.multi_column_functions__function=='quota' || this.multi_column_functions__function=='absolute_growth' || this.multi_column_functions__function=='relative_growth' || this.multi_column_functions__function=='compound_growth'",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "multi_column_functions__column_b": {
            "type": "select",
            "label": "Select Column B",
            "show_if": "this.multi_column_functions__function=='quota' || this.multi_column_functions__function=='absolute_growth' || this.multi_column_functions__function=='relative_growth' || this.multi_column_functions__function=='compound_growth'",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "multi_column_functions__n_value": {
            "type": "text",
            "label": "N (positive integer)",
            "show_if": "this.multi_column_functions__function=='compound_growth'",
            "val": "1",
            "required": true
          },
          "multi_column_functions__static_value__type": {
            "type": "select",
            "label": "Static Value Type",
            "show_if": "this.multi_column_functions__function=='static_value'",
            "required": true,
            "options": {
              "custom": {
                "label": "Custom"
              },
              "input_table_name": {
                "label": "Input Table Name"
              },
              "output_table_name": {
                "label": "Output Table Name"
              }
            },
            "val": "custom"
          },
          "static_value": {
            "type": "text",
            "label": "Input Value",
            "show_if": "this.multi_column_functions__function=='static_value' && this.multi_column_functions__static_value__type=='custom'",
            "val": "",
            "width": "100%"
          },
          "numeric_formula": {
            "type": "text",
            "label": "Input Formula, e.g. [Column1] + 2 * ([Row-1:Column3] - [Column1])",
            "show_if": "this.multi_column_functions__function=='numeric_formula'",
            "val": "",
            "width": "100%"
          },
          "text_formula": {
            "type": "text",
            "label": "Input Formula, e.g. [firstName] + ' ' + [lastName] + ' ' + [Row-1:Column3]",
            "show_if": "this.multi_column_functions__function=='text_formula'",
            "val": "",
            "width": "100%"
          },
          "use_multi_row": {
            "type": "checkbox",
            "label": "Multi-Row Options",
            "show_if": "this.multi_column_functions__function=='numeric_formula' || this.multi_column_functions__function=='text_formula'",
            "val": "false",
            "isOn": "true",
            "isOff": "false"
          },
          "if_row_not_exist": {
            "type": "select",
            "label": "If referred row not exist",
            "show_if": "this.use_multi_row=='true' && (this.multi_column_functions__function=='numeric_formula' || this.multi_column_functions__function=='text_formula')",
            "required": true,
            "options": {
              "empty": {
                "label": "Empty or 0"
              },
              "closest": {
                "label": "Closest Row Value"
              }
            },
            "val": "empty"
          },
          "refer_row_type": {
            "type": "select",
            "label": "Refer row type",
            "show_if": "this.multi_column_functions__function=='numeric_formula' && this.use_multi_row=='true'",
            "required": true,
            "options": {
              "non_cumulative": {
                "label": "non cumulative"
              },
              "cumulative": {
                "label": "cumulative"
              }
            },
            "val": "cumulative",
            "breakLine": true
          },
          "format__category": {
            "type": "select",
            "label": "Display Format",
            "required": true,
            "options": {
              "standard": {
                "label": "Standard"
              },
              "number": {
                "label": "Number"
              },
              "percentage": {
                "label": "Percentage"
              },
              "text": {
                "label": "Text"
              },
              "date": {
                "label": "Date"
              },
              "currency": {
                "label": "Currency"
              }
            },
            "val": "standard"
          },
          "format__rounding": {
            "type": "select",
            "label": "Decimal Places for display",
            "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
            "required": true,
            "options": {
              "no_rounding": {
                "label": "No rounding"
              },
              "0": {
                "label": "0 digits"
              },
              "1": {
                "label": "1 digits"
              },
              "2": {
                "label": "2 digits"
              },
              "3": {
                "label": "3 digits"
              },
              "4": {
                "label": "4 digits"
              },
              "5": {
                "label": "5 digits"
              },
              "6": {
                "label": "6 digits"
              },
              "7": {
                "label": "7 digits"
              },
              "8": {
                "label": "8 digits"
              },
              "9": {
                "label": "9 digits"
              }
            },
            "val": "2"
          },
          "format__use_1000_separator": {
            "type": "checkbox",
            "label": "Use 1000 Separator(.)",
            "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
            "val": "true",
            "isOn": "true",
            "isOff": "false"
          },
          "format__currency_symbol": {
            "type": "select",
            "label": "Symbol",
            "show_if": "this.format__category=='currency'",
            "required": true,
            "options": {
              "dollar": {
                "label": "$"
              },
              "euro": {
                "label": "€"
              },
              "pound": {
                "label": "£"
              },
              "yen": {
                "label": "¥ (Yen, currency of Japan)"
              },
              "colon": {
                "label": "₡ (Colón, currency of Costa Rica)"
              },
              "naira": {
                "label": "₦ (Naira, currency of Nigeria)"
              },
              "rupee": {
                "label": "₨ (Rupee, currency of India)"
              },
              "rupie": {
                "label": "₹ (Rupee, currency of India)"
              },
              "won": {
                "label": "₩ (Won, currency in South Korea and North Korea)"
              },
              "hebrew": {
                "label": "₪ (Currency of Israel)"
              },
              "dong": {
                "label": "₫ (Currency of Vietnam)"
              },
              "kip": {
                "label": "₭ (Kip, currency of Laos)"
              },
              "mongolia": {
                "label": "₮ (Currency of Mongolia)"
              },
              "peso": {
                "label": "₱ (Peso, currency of the Philippines)"
              },
              "guarani": {
                "label": "₲ (Guaraní, currency of Paraguay)"
              },
              "hryvnia": {
                "label": "₴ (Hryvnia, currency of Ukraine)"
              },
              "tenge": {
                "label": "₸ (Tenge, currency of Kazakhstan)"
              },
              "lira": {
                "label": "₺ (Lira, currency of Turkey)"
              },
              "manat": {
                "label": "₼ (Manat, currency of Azerbaijan)"
              },
              "rubles": {
                "label": "₽ (Rubles, currency of Russia)"
              },
              "lari": {
                "label": "₾ (Lari, currency of Georgia)"
              },
              "bitcoin": {
                "label": "₿ (Bitcoin, crypto currency)"
              }
            },
            "val": "dollar"
          },
          "format__date_format": {
            "type": "select",
            "label": "Type",
            "show_if": "this.format__category=='date'",
            "required": true,
            "options": {
              "mm/dd/yyyy": {
                "label": "3/14/2012"
              },
              "D, M dd, Y": {
                "label": "Wednesday, March 14, 2012"
              },
              "yyyy-mm-dd": {
                "label": "2012-03-14"
              },
              "m.dd.yyyy": {
                "label": "3.14.2012"
              },
              "m.dd.yy": {
                "label": "3.14.12"
              },
              "dd.m.yyyy": {
                "label": "14.3.2012"
              },
              "dd.m.yy": {
                "label": "14.3.12"
              },
              "M dd, Y": {
                "label": "March 14, 2012"
              },
              "dd-mm-yyyy": {
                "label": "14-03-2012"
              },
              "mm-dd-yyyy": {
                "label": "03-14-2012"
              },
              "dd-mm-yy": {
                "label": "14-03-12"
              },
              "mm-dd-yy": {
                "label": "03-14-12"
              }
            },
            "val": "mm/dd/yyyy",
            "breakLine": true
          },
          "group_counter__inc_dec_curly_bracket": {
            "type": "checkbox",
            "label": "Increase/Decrease with {}",
            "show_if": "this.task_type=='group_counter'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "group_counter__inc_dec_square_bracket": {
            "type": "checkbox",
            "label": "Increase/Decrease with []",
            "show_if": "this.task_type=='group_counter'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "group_counter__inc_dec_parenthesis": {
            "type": "checkbox",
            "label": "Increase/Decrease with ()",
            "show_if": "this.task_type=='group_counter'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "group_counter__custom": {
            "type": "checkbox",
            "label": "Customized Group Counter",
            "show_if": "this.task_type=='group_counter'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "group_counter__column": {
            "type": "select",
            "label": "Column",
            "show_if": "this.task_type=='group_counter' && this.group_counter__custom=='true'",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "group_counter__type": {
            "type": "select",
            "label": "When",
            "show_if": "this.task_type=='group_counter' && this.group_counter__custom=='true'",
            "required": true,
            "options": {
              "starts_with": {
                "label": "STARTS WITH"
              },
              "ends_with": {
                "label": "ENDS WITH"
              },
              "starts_with_regex": {
                "label": "STARTS WITH REGEX"
              },
              "ends_with_regex": {
                "label": "ENDS WITH REGEX"
              }
            },
            "val": "starts_with"
          },
          "group_counter__value": {
            "type": "text",
            "label": "Input Value",
            "show_if": "this.task_type=='group_counter' && this.group_counter__custom=='true'",
            "val": ".",
            "breakLine": true
          },
          "group_counter__label": {
            "type": "text",
            "label": "Input Label",
            "show_if": "this.task_type=='group_counter' && this.group_counter__custom=='true'",
            "val": "sentence",
            "breakLine": true
          },
          "group_counter__if_end_of_string_start_labeling_with_next_record": {
            "type": "checkbox",
            "label": "If End-Of-String start labeling with next record",
            "show_if": "this.task_type=='group_counter' && this.group_counter__custom=='true' && (this.group_counter__type=='starts_with' || this.group_counter__type=='starts_with_regex')",
            "val": "true",
            "isOn": "true",
            "isOff": "false"
          },
          "group_counter__if_begin_of_string_start_labeling_with_previous_record": {
            "type": "checkbox",
            "label": "If Begin-Of-String start labeling with previous record",
            "show_if": "this.task_type=='group_counter' && this.group_counter__custom=='true' && (this.group_counter__type=='ends_with' || this.group_counter__type=='ends_with_regex')",
            "val": "true",
            "isOn": "true",
            "isOff": "false"
          },
          "group_counter__always_include": {
            "type": "checkbox",
            "label": "Always include",
            "show_if": "this.task_type=='group_counter' && this.group_counter__custom=='true'",
            "val": "true",
            "isOn": "true",
            "isOff": "false"
          },
          "apply_to_group__enabled": {
            "type": "checkbox",
            "label": "Apply to Group",
            "show_if": "this.multi_column_functions__function!='static_value'",
            "val": "false",
            "isOn": "true",
            "isOff": "false"
          },
          "apply_to_group__group_columns": {
            "type": "select",
            "label": "Group Column(s)",
            "show_if": "this.apply_to_group__enabled == 'true' && this.multi_column_functions__function!='static_value'",
            "table": "table_id",
            "bind": "COLUMNS",
            "multiple": true,
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.use_filter": {
        "type": "checkbox",
        "label": "Use Filter",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "filter_box": {
        "type": "fieldset",
        "label": "Filter Options",
        "show_if": "options.use_filter=='true'",
        "repeat": false,
        "fields": {
          "options.filter": {
            "type": "fieldset",
            "label": "Add Filter Conditions",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if" :  "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if" :  "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group",
            "show_if": "options.apply_to_record=='false'",
            "repeat": false,
            "fields": {
              "options.apply_to_group_columns__all_but_selected": {
                "type": "checkbox",
                "label": "All but selected",
                "val": "false",
                "isOn": "true",
                "isOff": "false",
                "breakLine": true
              },
              "options.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "width": "100%",
                "table": "table_id",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      }
    }
  }
}
,
"/TestFrameRepeatOptions.json/TestFrameRepeatOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Repeat frame",
    "repeat": true,
    "fields": {
      "internal_frame1": {
        "type": "fieldset",
        "label": "Internal frame 1",
        "repeat": false,
        "fields": {
          "variable1": {
            "type": "select",
            "label": "Variable 1",
            "options": {
              "Revenues": {
                "label": "Revenues"
              },
              "Depretiation & Amortisation": {
                "label": "Depretiation & Amortisation"
              }
            },
            "val": "Revenues",
            "required": true
          }
        }
      },
      "internal_frame2": {
        "type": "fieldset",
        "label": "Internal frame 2",
        "repeat": false,
        "fields": {
          "variable2": {
            "type": "text",
            "label": "Variable 2",
            "val": "",
            "required": true
          }
        }
      },
      "delete": {
        "type": "button",
        "label": "Delete",
        "function": "DELETE_ROW"
      }
    }
  }
},
"/EmailFilterOptions.json/EmailFilterOptions.json": {
  "embed_table_frame": {
    "type": "fieldset",
    "label": "Embed Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "options.add_table=='true'",
    "repeat": false,
    "fields": {
      "options.embed_table_id": {
        "type": "select",
        "label": "Select Table",
        "bind": "TABLES",
        "empty": "",
        "required": true,
        "breakLine": true
      },
      "options.apply_filter": {
        "type": "checkbox",
        "label": "Apply Filter",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  },
  "filter_frame": {
    "type": "fieldset",
    "label": "Filter for Embed Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "options.add_table=='true' && options.apply_filter=='true'",
    "repeat": false,
    "fields": {
      "options.do_not_send_email_if_empty_table": {
        "type": "checkbox",
        "label": "Don't send e-mail if filter returns empty table",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.filter": {
        "type": "fieldset",
        "label": "Add Filter Conditions",
        "repeat": true,
        "fields": {
          "initial_op": {
            "type": "select",
            "label": "Select Logic Operator",
            "required": true,
            "show_if" :  "$index == 0",
            "options": {
              "if": {
                "label": "IF"
              },
              "if_not": {
                "label": "IF NOT"
              }
            },
            "val": "if"
          },
          "op": {
            "type": "select",
            "label": "Select Logic Operator",
            "required": true,
            "show_if" :  "$index > 0",
            "options": {
              "and": {
                "label": "AND"
              },
              "or": {
                "label": "OR"
              },
              "and_not": {
                "label": "AND NOT"
              },
              "or_not": {
                "label": "OR NOT"
              }
            },
            "val": "and"
          },
          "column": {
            "type": "select",
            "label": "Select Column",
            "table": "options.embed_table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "condition": {
            "type": "select",
            "label": "Select Operator",
            "required": true,
            "options": {
              "CONTAINS": {
                "label": "CONTAINS"
              },
              "CONTAINED IN STRING": {
                "label": "CONTAINED IN"
              },
              "STARTS WITH": {
                "label": "STARTS WITH"
              },
              "ENDS WITH": {
                "label": "ENDS WITH"
              },
              "=": {
                "label": "EQUAL"
              },
              ">": {
                "label": "GREATER THAN"
              },
              ">=": {
                "label": "GREATER OR EQUAL"
              },
              "<": {
                "label": "SMALLER THAN"
              },
              "<=": {
                "label": "SMALLER OR EQUAL"
              },
              "EMPTY": {
                "label": "IS EMPTY"
              },
              "BLANK": {
                "label": "IS BLANK"
              },
              "IS NULL": {
                "label": "IS NULL"
              },
              "IS TRUE": {
                "label": "IS TRUE"
              },
              "IS FALSE": {
                "label": "IS FALSE"
              },
              "REGEX MATCH": {
                "label": "REGEX MATCH"
              },
              "CONTAINED IN TABLE": {
                "label": "IN TABLE"
              },
              "IN REGEX TABLE": {
                "label": "IN REGEX TABLE"
              },
              "DATE": {
                "label": "DATE"
              }
            },
            "val": "CONTAINS"
          },
          "date_condition": {
            "type": "select",
            "label": "Select Date Operator",
            "required": true,
            "show_if": "this.condition == 'DATE'",
            "options": {
              "<": {
                "label": "PRIOR"
              },
              "<=": {
                "label": "PRIOR OR EQUAL"
              },
              "=": {
                "label": "EQUAL"
              },
              ">": {
                "label": "AFTER"
              },
              ">=": {
                "label": "AFTER OR EQUAL"
              }
            },
            "val": "="
          },
          "compare_with": {
            "type": "select",
            "label": "Compare with",
            "required": true,
            "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
            "options": {
              "custom_value": {
                "label": "Custom value"
              },
              "column_value": {
                "label": "Column value"
              }
            },
            "val": "custom_value"
          },
          "self_compare_column": {
            "type": "select",
            "label": "Select Compare Column",
            "table": "table_id",
            "bind": "COLUMNS",
            "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
            "required": true
          },
          "date_value": {
            "type": "date",
            "label": "Select Date",
            "show_if": "this.condition=='DATE'",
            "val": "",
            "required": true
          },
          "value": {
            "type": "text",
            "label": "Input Value",
            "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
            "val": "",
            "required": true
          },
          "case_sensitive": {
            "type": "select",
            "label": "Select Case Sensitive",
            "required": true,
            "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "options": {
              "yes": {
                "label": "Case Sensitive"
              },
              "no": {
                "label": "Case Insensitive"
              }
            },
            "val": "yes"
          },
          "compare_table_id": {
            "type": "select",
            "label": "Select Table",
            "bind": "TABLES",
            "empty": "",
            "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "required": true
          },
          "compare_column": {
            "type": "select",
            "label": "Select Column",
            "table": "this.compare_table_id",
            "bind": "COLUMNS",
            "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "required": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.apply_to_record": {
        "type": "checkbox",
        "label": "Apply to Record",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "apply_to_group_box": {
        "type": "fieldset",
        "label": "Apply to Group",
        "show_if": "options.apply_to_record=='false'",
        "repeat": false,
        "fields": {
          "options.apply_to_group_columns__all_but_selected": {
            "type": "checkbox",
            "label": "All but selected",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.apply_to_group_columns": {
            "type": "select",
            "label": "Select Group Column(s)",
            "width": "100%",
            "table": "options.embed_table_id",
            "multiple": true,
            "bind": "COLUMNS",
            "breakLine": true
          }
        }
      }
    }
  }
},
"/ImportDirFromGDriveOptions.json/ImportDirFromGDriveOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Select Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.from": {
        "type": "hidden",
        "val": "web"
      },
      "options.webservice": {
        "type": "hidden",
        "val": "google_drive"
      },
      "options.output_format": {
        "type": "select",
        "label": "Select Type",
        "options": {
          "csv_table": {
            "label": "CSV-Table"
          },
          "line_by_line": {
            "label": "Line by Line"
          },
          "word_by_word": {
            "label": "Text"
          },
          "file_list": {
            "label": "File List"
          }
        },
        "val": "csv_table",
        "required": true
      },
      "options.word_pattern_type": {
        "type": "select",
        "label": "Word Pattern",
        "show_if": "options.output_format=='word_by_word' && options.specify_word_pattern=='true'",
        "options": {
          "regex": {
            "label": "Regular Expression"
          }
        },
        "val": "regex",
        "required": true
      },
      "options.word_pattern_regex": {
        "type": "text",
        "label": "Regular Expression",
        "show_if": "options.output_format=='word_by_word' && options.specify_word_pattern=='true' && options.word_pattern_type=='regex'",
        "required": true,
        "val": "[a-z][1-9]",
        "breakLine": true
      },
      "options.column_setting": {
        "type": "checkbox",
        "label": "Column Settings",
        "show_if": "options.output_format!='file_list'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "column_setting_frame": {
        "type": "fieldset",
        "label": "Column Settings",
        "show_if": "options.output_format!='file_list' && options.column_setting=='true'",
        "repeat": false,
        "fields": {
          "options.add_row_column": {
            "type": "checkbox",
            "label": "Add Row Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_word_count_column": {
            "type": "checkbox",
            "label": "Add 'Word Count' Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_word_nonword_column": {
            "type": "checkbox",
            "label": "Add 'Word & Non-Word' Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_section_column": {
            "type": "checkbox",
            "label": "Add Section Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "section_column_types_frame": {
            "type": "fieldset",
            "label": "Section Column Types",
            "show_if": "options.output_format=='word_by_word' && options.add_section_column=='true'",
            "repeat": false,
            "fields": {
              "options.section_columns.add_paragraph_section_column": {
                "type": "checkbox",
                "label": "Paragraph",
                "val": "false",
                "isOn": "true",
                "isOff": "false",
                "breakLine": true
              },
              "options.section_columns.add_custom_section_column": {
                "type": "checkbox",
                "label": "Custom Section Delimiter",
                "val": "false",
                "isOn": "true",
                "isOff": "false"
              },
              "options.section_columns.custom_delimiter": {
                "type": "text",
                "label": "Delimiter(1 character)",
                "show_if": "options.section_columns.add_custom_section_column=='true'",
                "maxLength": 1,
                "required": true,
                "breakLine": true
              },
              "options.section_columns.add_brackets_punctuation_section_column": {
                "type": "checkbox",
                "label": "Brackets and Punctuation",
                "val": "false",
                "isOn": "true",
                "isOff": "false"
              },
              "options.section_columns.brackets_punctuation_section_column_type": {
                "type": "select",
                "label": "Brackets Type",
                "show_if": "options.section_columns.add_brackets_punctuation_section_column=='true'",
                "options": {
                  "nesting_structure": {
                    "label": "Nesting Structure"
                  },
                  "inner_bracket": {
                    "label": "Inner Bracket"
                  },
                  "brackets_only": {
                    "label": "Brackets Only"
                  },
                  "show_all": {
                    "label": "Show All"
                  }
                },
                "val": "show_all",
                "required": true,
                "breakLine": true
              }
            }
          },
          "options.add_filename_column": {
            "type": "checkbox",
            "label": "Add Column for File Name",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "options.add_filepath_column": {
            "type": "checkbox",
            "label": "Add Column for File Path",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          }
        }
      },
      "options.is_cloud_dir": {
        "type": "hidden",
        "val": "true"
      },
      "if_dir_frame": {
        "type": "fieldset",
        "label": "Directory Import Options",
        "show_if": "options.output_format!='file_list' && options.is_cloud_dir=='true'",
        "repeat": false,
        "fields": {
          "options.unify_in_one_table": {
            "type": "checkbox",
            "label": "Unify in one table",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.suffix": {
            "type": "select",
            "label": "Output tables suffix",
            "show_if": "options.unify_in_one_table=='false'",
            "options": {
              "number": {
                "label": "Number"
              },
              "filename": {
                "label": "Filename"
              }
            },
            "val": "number",
            "required": true,
            "breakLine": true
          },
          "options.include_subdir": {
            "type": "checkbox",
            "label": "Include Subdirectories",
            "show_if": "options.output_format!='file_list' && options.is_cloud_dir=='true'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true,
            "style": "margin-top: 10px"
          }
        }
      },
      "options.file_list.include_subdir": {
        "type": "checkbox",
        "label": "Include Subdirectories",
        "show_if": "options.output_format=='file_list'",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true,
        "style": "margin-top: 10px"
      },
      "options.file_list.add_change_date_column": {
        "type": "checkbox",
        "label": "Add Change Date Column",
        "show_if": "options.output_format=='file_list'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  },
  "import_link_token_frame": {
    "type": "fieldset",
    "label": "Import Link",
    "repeat": false,
    "fields": {
      "options.link_csv_file": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test/blob/main/example.csv",
        "show_if": "options.webservice=='github' && options.is_cloud_dir=='false' && options.output_format=='csv_table'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.link_text_file": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test/blob/main/example.txt(json, csv, etc)",
        "show_if": "options.webservice=='github' && options.is_cloud_dir=='false' && options.output_format!='csv_table' && options.output_format!='file_list'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.one_drive.file_path": {
        "type": "text",
        "label": "Enter path to file e.g. ZippyDoc/Subdir1/test.txt",
        "show_if": "options.webservice=='ms_one_drive' && options.output_format!='file_list' && options.is_cloud_dir=='false'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox.file_path": {
        "type": "text",
        "label": "Enter path to file e.g. ZippyDoc/Subdir1/test.txt",
        "show_if": "options.webservice=='dropbox' && options.output_format!='file_list' && options.is_cloud_dir=='false'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dir_path_filter": {
        "type": "fieldset",
        "label": "Import Path and File Filter",
        "show_if": "options.output_format=='file_list' || options.is_cloud_dir=='true'",
        "repeat": true,
        "fields": {
          "github__link_directory": {
            "type": "text",
            "label": "Enter link e.g. https://github.com/zippydoc/test",
            "show_if": "options.webservice=='github'",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "one_drive__dir_path": {
            "type": "text",
            "label": "Enter path to dir e.g. ZippyDoc/Subdir1",
            "show_if": "options.webservice=='ms_one_drive'",
            "width": "100%",
            "breakLine": true
          },
          "dropbox__dir_path": {
            "type": "text",
            "label": "Enter path to dir e.g. ZippyDoc/Subdir1",
            "show_if": "options.webservice=='dropbox'",
            "width": "100%",
            "breakLine": true
          },
          "google_drive__dir_path": {
            "type": "text",
            "label": "Enter path to dir",
            "show_if": "options.webservice=='google_drive'",
            "width": "100%",
            "breakLine": true
          },
          "dir_filter__filter_type": {
            "type": "select",
            "label": "Filter Type",
            "options": {
              "all": {
                "label": "All"
              },
              "contains": {
                "label": "Contains"
              },
              "starts_with": {
                "label": "Starts With"
              },
              "ends_with": {
                "label": "Ends With"
              },
              "regex": {
                "label": "Regular Expression"
              }
            },
            "val": "all",
            "required": true
          },
          "dir_filter__filter_string": {
            "type": "text",
            "label": "Filter",
            "show_if": "this.dir_filter__filter_type!='all'",
            "required": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.is_github_private": {
        "type": "checkbox",
        "label": "Github repository is private",
        "show_if": "options.webservice=='github'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "options.github_token": {
        "type": "text",
        "label": "Github personal access token",
        "show_if": "options.webservice=='github' && options.is_github_private=='true'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.one_drive.access_token": {
        "type": "text",
        "label": "One Drive Access Token",
        "show_if": "options.webservice=='ms_one_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox.auth_code": {
        "type": "text",
        "label": "Dropbox Authorization Code",
        "show_if": "options.webservice=='dropbox'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.google_drive.access_token": {
        "type": "text",
        "label": "Google Drive Access Token",
        "show_if": "options.webservice=='google_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      }
    }
  }
}
,
"/DCEnergyOptions.json/DCEnergyOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.all_countries": {
        "type": "hidden",
        "val": "false"
      },
      "options.stat_vars": {
        "type": "fieldset",
        "label": "Statistics data category(s)",
        "repeat": true,
        "fields": {
          "stat_var_name": {
            "type": "select",
            "label": "Energy Data",
            "required": true,
            "options": {
              "Annual_Consumption_Electricity": {
                "label": "Annual Consumption of Electricity"
              },
              "Annual_Exports_Electricity": {
                "label": "Annual Exports of Electricity"
              },
              "Annual_Generation_Electricity": {
                "label": "Net generation, all fuels, all sectors, annual"
              },
              "Annual_Imports_Electricity": {
                "label": "Annual Imports of Electricity"
              },
              "Annual_Loss_Electricity": {
                "label": "Annual Loss of Electricity"
              },
              "Annual_Consumption_Electricity_Agriculture": {
                "label": "Annual Consumption for Agriculture"
              },
              "Annual_Consumption_Electricity_ChemicalPetrochemicalIndustry": {
                "label": "Annual Consumption for Chemical Petrochemical Industry"
              },
              "Annual_Consumption_Electricity_CommerceAndPublicServices": {
                "label": "Annual Consumption for Commerce And Public Services"
              },
              "Annual_Consumption_Electricity_ConstructionIndustry": {
                "label": "Annual Consumption for Construction Industry"
              },
              "Annual_Consumption_Electricity_FoodAndTobaccoIndustry": {
                "label": "Annual Consumption for Food And Tobacco Industry"
              },
              "Annual_Consumption_Electricity_Households": {
                "label": "Annual Consumption for Households"
              },
              "Annual_Consumption_Electricity_IronSteel": {
                "label": "Annual Consumption for Iron Steel"
              },
              "Annual_Consumption_Electricity_MachineryIndustry": {
                "label": "Annual Consumption for Machinery Industry"
              },
              "Annual_Consumption_Electricity_Manufacturing": {
                "label": "Annual Consumption for Manufacturing"
              },
              "Annual_Consumption_Electricity_MiningAndQuarryingIndustry": {
                "label": "Annual Consumption for Mining And Quarrying Industry"
              },
              "Annual_Consumption_Electricity_NonFerrousMetalsIndustry": {
                "label": "Annual Consumption for Non Ferrous Metals Industry"
              },
              "Annual_Consumption_Electricity_NonMetallicMineralsIndustry": {
                "label": "Annual Consumption for Non Metallic Minerals Industry"
              },
              "Annual_Consumption_Electricity_PaperPulpPrintIndustry": {
                "label": "Annual Consumption for Paper Pulp Print Industry"
              },
              "Annual_Consumption_Electricity_RailTransport": {
                "label": "Annual Consumption for Rail Transport"
              },
              "Annual_Consumption_Electricity_RoadTransport": {
                "label": "Annual Consumption for Road Transport"
              },
              "Annual_Consumption_Electricity_TextileAndLeatherIndustry": {
                "label": "Annual Consumption for Textile And Leather Industry"
              },
              "Annual_Consumption_Electricity_TransportEquipmentIndustry": {
                "label": "Annual Consumption for Transport Equipment Industry"
              },
              "Annual_Consumption_Electricity_TransportIndustry": {
                "label": "Annual Consumption for Transport Industry"
              },
              "Annual_Consumption_Electricity_OtherIndustry": {
                "label": "Annual Consumption for UN_Other Industry"
              },
              "Annual_Consumption_Electricity_OtherManufacturingIndustry": {
                "label": "Annual Consumption for UN_Other Manufacturing Industry"
              },
              "Annual_Consumption_Electricity_OtherSector": {
                "label": "Annual Consumption for UN_Other Sector"
              },
              "Annual_Consumption_Electricity_WoodAndWoodProductsIndustry": {
                "label": "Annual Consumption for Wood And Wood Products Industry"
              },
              "Annual_Consumption_Electricity_BriquettingPlants_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Briquetting Plants, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_CoalMines_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Coal Mines, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_CokeOvens_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Coke Ovens, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_ElectricityGeneration_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Electricity Generation, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_EnergyIndustry_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Energy Industry, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_GasWorks_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Gas Works, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_Industry_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Industry, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_NuclearFuelProcessing_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Nuclear Fuel Processing, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_OilGasExtraction_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Oil Gas Extraction, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_OilRefineries_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Oil Refineries, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_PumpStoragePlants_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Pump Storage Plants, Energy Industry Own Use"
              },
              "Annual_Generation_Electricity_BioGas_ThermalElectricity": {
                "label": "Annual Generation From Bio Gas, Thermal Electricity"
              },
              "Annual_Consumption_Energy_Agriculture_SolarThermal": {
                "label": "Annual Consumption of Agriculture, Solar Thermal"
              },
              "Annual_Consumption_Energy_BriquettingPlants_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Briquetting Plants, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_ChemicalPetrochemicalIndustry_Heat": {
                "label": "Annual Consumption of Chemical Petrochemical Industry, Heat"
              },
              "Annual_Consumption_Energy_CoalMines_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Coal Mines, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_CokeOvens_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Coke Ovens, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_CommerceAndPublicServices_Geothermal": {
                "label": "Annual Consumption of Commerce And Public Services, Geothermal"
              },
              "Annual_Consumption_Energy_CommerceAndPublicServices_Heat": {
                "label": "Annual Consumption of Commerce And Public Services, Heat"
              },
              "Annual_Consumption_Energy_CommerceAndPublicServices_SolarThermal": {
                "label": "Annual Consumption of Commerce And Public Services, Solar Thermal"
              },
              "Annual_Consumption_Energy_ElectricityGeneration_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Electricity Generation, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_EnergyIndustry_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Energy Industry, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_FoodAndTobaccoIndustry_Heat": {
                "label": "Annual Consumption of Food And Tobacco Industry, Heat"
              },
              "Annual_Consumption_Energy_GasWorks_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Gas Works, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_Households_Geothermal": {
                "label": "Annual Consumption of Households, Geothermal"
              },
              "Annual_Consumption_Energy_Households_Heat": {
                "label": "Annual Consumption of Households, Heat"
              },
              "Annual_Consumption_Energy_Households_SolarThermal": {
                "label": "Annual Consumption of Households, Solar Thermal"
              },
              "Annual_Consumption_Energy_IronSteel_Heat": {
                "label": "Annual Consumption of Iron Steel, Heat"
              },
              "Annual_Consumption_Energy_MachineryIndustry_Heat": {
                "label": "Annual Consumption of Machinery Industry, Heat"
              },
              "Annual_Consumption_Energy_MachineryIndustry_SolarThermal": {
                "label": "Annual Consumption of Machinery Industry, Solar Thermal"
              },
              "Annual_Consumption_Energy_Manufacturing_Heat": {
                "label": "Annual Consumption of Manufacturing, Heat"
              },
              "Annual_Consumption_Energy_Manufacturing_SolarThermal": {
                "label": "Annual Consumption of Manufacturing, Solar Thermal"
              },
              "Annual_Consumption_Energy_MiningAndQuarryingIndustry_Heat": {
                "label": "Annual Consumption of Mining And Quarrying Industry, Heat"
              },
              "Annual_Consumption_Energy_NonFerrousMetalsIndustry_Heat": {
                "label": "Annual Consumption of Non Ferrous Metals Industry, Heat"
              },
              "Annual_Consumption_Energy_NonFerrousMetalsIndustry_SolarThermal": {
                "label": "Annual Consumption of Non Ferrous Metals Industry, Solar Thermal"
              },
              "Annual Consumption of Non Ferrous Metals Industry, Solar Thermal": {
                "label": "Annual Consumption of Non Metallic Minerals Industry, Heat"
              },
              "Annual_Consumption_Energy_OilGasExtraction_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Oil Gas Extraction, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_OilRefineries_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Oil Refineries, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_OilRefineries_Refinery_FuelTransformation": {
                "label": "Annual Consumption of Oil Refineries, Refinery, Fuel Transformation"
              },
              "Annual_Consumption_Energy_PaperPulpPrintIndustry_Heat": {
                "label": "Annual Consumption of Paper Pulp Print Industry, Heat"
              },
              "Annual_Consumption_Energy_TextileAndLeatherIndustry_Heat": {
                "label": "Annual Consumption of Textile And Leather Industry, Heat"
              },
              "Annual_Consumption_Energy_TransportEquipmentIndustry_Heat\n": {
                "label": "Annual Consumption of Transport Equipment Industry, Heat"
              },
              "Annual_Consumption_Energy_TransportEquipmentIndustry_SolarThermal": {
                "label": "Annual Consumption of Transport Equipment Industry, Solar Thermal"
              },
              "Annual_Consumption_Energy_OtherIndustry_Heat": {
                "label": "Annual Consumption of UN_Other Industry, Heat"
              },
              "Annual_Consumption_Energy_OtherManufacturingIndustry_Heat": {
                "label": "Annual Consumption of UN_Other Manufacturing Industry, Heat"
              },
              "Annual_Consumption_Energy_OtherManufacturingIndustry_SolarThermal": {
                "label": "Annual Consumption of UN_Other Manufacturing Industry, Solar Thermal"
              },
              "Annual_Consumption_Energy_OtherSector_Geothermal": {
                "label": "Annual Consumption of UN_Other Sector, Geothermal"
              },
              "Annual_Consumption_Energy_OtherSector_Heat": {
                "label": "Annual Consumption of UN_Other Sector, Heat"
              },
              "Annual_Consumption_Energy_OtherSector_SolarThermal": {
                "label": "Annual Consumption of UN_Other Sector, Solar Thermal"
              },
              "Annual_Consumption_Energy_WoodAndWoodProductsIndustry_Heat": {
                "label": "Annual Consumption of Wood And Wood Products Industry, Heat"
              }
            }
          },
          "per_capita": {
            "type": "checkbox",
            "label": "Per capita",
            "show_if": "false",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "help_Count_Person_ResidingLessThan5MetersAboveSeaLevel_AsFractionOf_Count_Person": {
            "type": "textarea",
            "label": "",
            "show_if": "this.stat_var_name=='Count_Person_ResidingLessThan5MetersAboveSeaLevel_AsFractionOf_Count_Person'",
            "val": "Percentage of the total population living in areas where the elevation is 5 meters or less. Center for International Earth Science Information Network (CIESIN)/Columbia University. 2013. Urban-Rural Population and Land Area Estimates Version 2. Palisades, NY: NASA Socioeconomic Data and Applications Center (SEDAC). http://sedac.ciesin.columbia.edu/data/set/lecz-urban-rural-population-land-area-estimates-v2.",
            "md_no_resize": false,
            "rows": 6,
            "disabled": true,
            "width": "100%"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.output_as_chart": {
        "type": "checkbox",
        "label": "Output a Graph",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
}
,
"/TransformOptions.json/TransformOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.type": {
        "type": "radio",
        "val": "transform_group",
        "show_if": "false",
        "values": {
          "transform_group": "Transform Group"
        },
        "breakLine": true
      },
      "options.group_label_direction": {
        "type": "select",
        "label": "Transform Direction",
        "required": true,
        "options": {
          "group_to_label": {
            "label": "Group to Label"
          },
          "label_to_group": {
            "label": "Label to Group"
          }
        },
        "val": "group_to_label"
      },
      "options.group_column": {
        "type": "select",
        "label": "Group Column",
        "show_if": "options.group_label_direction=='group_to_label'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "options.group_column_name": {
        "type": "text",
        "label": "Group Column Name",
        "show_if": "options.group_label_direction=='label_to_group'",
        "val": "Group",
        "required": true,
        "breakLine": true
      }
    }
  }
}
,
"/D3EnglishGrammarOptions.json/D3EnglishGrammarOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.task_symbol": {
        "type": "hidden",
        "val": "english_grammar"
      },
      "options.output_as_chart": {
        "type": "checkbox",
        "label": "Output a graph",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.chart_type": {
        "type": "select",
        "label": "Tree Type",
        "show_if": "options.output_as_chart=='true'",
        "required": true,
        "options": {
          "collapsible_tree": {
            "label": "Collapsible Tree"
          },
          "tidy_tree": {
            "label": "Tidy Tree"
          }
        },
        "val": "collapsible_tree",
        "breakLine": true
      }
    }
  }
}
,
"/ChatGPTSelectTables.json/ChatGPTSelectTables.json": {
  "input": {
    "type": "fieldset",
    "label": "Select Input Table",
    "show_if": "options.is_feed_input_table=='true'",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "configure_input_tables": {
        "type": "select",
        "label": "Select Source",
        "options": {
          "zippydoc_table": {
            "label": "Flow Table"
          },
          "search_tables": {
            "label": "Search Tables"
          }
        },
        "val": "zippydoc_table"
      },
      "search_tables__types": {
        "type": "select",
        "label": "Select Source",
        "show_if": "configure_input_tables=='search_tables'",
        "options": {
          "owned_tables": {
            "label": "Owned tables"
          },
          "shared_tables": {
            "label": "Shared tables"
          },
          "published_tables": {
            "label": "Published tables"
          }
        },
        "multiple": true,
        "val": ["owned_tables"]
      },
      "tables": {
        "type": "fieldset",
        "label": "Select Tables",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "configure_input_tables=='zippydoc_table'",
        "repeat": true,
        "fields": {
          "table_id": {
            "type": "select",
            "label": "Select Table",
            "bind": "TABLES"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "input_table_condition": {
        "type": "fieldset",
        "label": "Search Tables",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "configure_input_tables=='search_tables'",
        "repeat": true,
        "fields": {
          "initial_op": {
            "type": "select",
            "label": "Logic Operator",
            "required": true,
            "show_if" :  "$index == 0",
            "options": {
              "if": {
                "label": "IF"
              },
              "if_not": {
                "label": "IF NOT"
              }
            },
            "val": "if"
          },
          "op": {
            "type": "select",
            "label": "Logic Operator",
            "required": true,
            "show_if" :  "$index > 0",
            "options": {
              "and": {
                "label": "AND"
              },
              "or": {
                "label": "OR"
              },
              "and_not": {
                "label": "AND NOT"
              },
              "or_not": {
                "label": "OR NOT"
              }
            },
            "val": "and"
          },
          "type": {
            "type": "select",
            "label": "Type",
            "required": true,
            "options": {
              "Table Name": {
                "label": "Table Name"
              },
              "Tags": {
                "label": "Tags"
              }
            },
            "val": "Table Name"
          },
          "condition": {
            "type": "select",
            "label": "Operator",
            "required": true,
            "options": {
              "CONTAINS": {
                "label": "CONTAINS"
              },
              "CONTAINED IN STRING": {
                "label": "CONTAINED IN"
              },
              "STARTS WITH": {
                "label": "STARTS WITH"
              },
              "ENDS WITH": {
                "label": "ENDS WITH"
              },
              "=": {
                "label": "EQUAL"
              },
              "REGEX MATCH": {
                "label": "REGEX MATCH"
              }
            },
            "val": "CONTAINS"
          },
          "value": {
            "type": "text",
            "label": "Input Value",
            "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "val": "",
            "required": true
          },
          "case_sensitive": {
            "type": "select",
            "label": "Case Sensitive",
            "required": true,
            "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "options": {
              "yes": {
                "label": "Case Sensitive"
              },
              "no": {
                "label": "Case Insensitive"
              }
            },
            "val": "yes"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      }
    }
  }
},
"/ImportFileFromDropboxOptions.json/ImportFileFromDropboxOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Select Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.from": {
        "type": "hidden",
        "val": "web"
      },
      "options.webservice": {
        "type": "hidden",
        "val": "dropbox"
      },
      "options.output_format": {
        "type": "select",
        "label": "Select Type",
        "options": {
          "csv_table": {
            "label": "CSV-Table"
          },
          "line_by_line": {
            "label": "Line by Line"
          },
          "word_by_word": {
            "label": "Text"
          }
        },
        "val": "csv_table",
        "required": true
      },
      "options.word_pattern_type": {
        "type": "select",
        "label": "Word Pattern",
        "show_if": "options.output_format=='word_by_word' && options.specify_word_pattern=='true'",
        "options": {
          "regex": {
            "label": "Regular Expression"
          }
        },
        "val": "regex",
        "required": true
      },
      "options.word_pattern_regex": {
        "type": "text",
        "label": "Regular Expression",
        "show_if": "options.output_format=='word_by_word' && options.specify_word_pattern=='true' && options.word_pattern_type=='regex'",
        "required": true,
        "val": "[a-z][1-9]",
        "breakLine": true
      },
      "options.column_setting": {
        "type": "checkbox",
        "label": "Column Settings",
        "show_if": "options.output_format!='file_list'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "column_setting_frame": {
        "type": "fieldset",
        "label": "Column Settings",
        "show_if": "options.output_format!='file_list' && options.column_setting=='true'",
        "repeat": false,
        "fields": {
          "options.add_row_column": {
            "type": "checkbox",
            "label": "Add Row Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_word_count_column": {
            "type": "checkbox",
            "label": "Add 'Word Count' Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_word_nonword_column": {
            "type": "checkbox",
            "label": "Add 'Word & Non-Word' Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_section_column": {
            "type": "checkbox",
            "label": "Add Section Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "section_column_types_frame": {
            "type": "fieldset",
            "label": "Section Column Types",
            "show_if": "options.output_format=='word_by_word' && options.add_section_column=='true'",
            "repeat": false,
            "fields": {
              "options.section_columns.add_paragraph_section_column": {
                "type": "checkbox",
                "label": "Paragraph",
                "val": "false",
                "isOn": "true",
                "isOff": "false",
                "breakLine": true
              },
              "options.section_columns.add_custom_section_column": {
                "type": "checkbox",
                "label": "Custom Section Delimiter",
                "val": "false",
                "isOn": "true",
                "isOff": "false"
              },
              "options.section_columns.custom_delimiter": {
                "type": "text",
                "label": "Delimiter(1 character)",
                "show_if": "options.section_columns.add_custom_section_column=='true'",
                "maxLength": 1,
                "required": true,
                "breakLine": true
              },
              "options.section_columns.add_brackets_punctuation_section_column": {
                "type": "checkbox",
                "label": "Brackets and Punctuation",
                "val": "false",
                "isOn": "true",
                "isOff": "false"
              },
              "options.section_columns.brackets_punctuation_section_column_type": {
                "type": "select",
                "label": "Brackets Type",
                "show_if": "options.section_columns.add_brackets_punctuation_section_column=='true'",
                "options": {
                  "nesting_structure": {
                    "label": "Nesting Structure"
                  },
                  "inner_bracket": {
                    "label": "Inner Bracket"
                  },
                  "brackets_only": {
                    "label": "Brackets Only"
                  },
                  "show_all": {
                    "label": "Show All"
                  }
                },
                "val": "show_all",
                "required": true,
                "breakLine": true
              }
            }
          },
          "options.add_filename_column": {
            "type": "checkbox",
            "label": "Add Column for File Name",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "options.add_filepath_column": {
            "type": "checkbox",
            "label": "Add Column for File Path",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          }
        }
      },
      "options.is_cloud_dir": {
        "type": "hidden",
        "val": "false"
      },
      "if_dir_frame": {
        "type": "fieldset",
        "label": "Directory Import Options",
        "show_if": "options.output_format!='file_list' && options.is_cloud_dir=='true'",
        "repeat": false,
        "fields": {
          "options.unify_in_one_table": {
            "type": "checkbox",
            "label": "Unify in one table",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.suffix": {
            "type": "select",
            "label": "Output tables suffix",
            "show_if": "options.unify_in_one_table=='false'",
            "options": {
              "number": {
                "label": "Number"
              },
              "filename": {
                "label": "Filename"
              }
            },
            "val": "number",
            "required": true,
            "breakLine": true
          },
          "options.include_subdir": {
            "type": "checkbox",
            "label": "Include Subdirectories",
            "show_if": "options.output_format!='file_list' && options.is_cloud_dir=='true'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true,
            "style": "margin-top: 10px"
          }
        }
      },
      "options.file_list.include_subdir": {
        "type": "checkbox",
        "label": "Include Subdirectories",
        "show_if": "options.output_format=='file_list'",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true,
        "style": "margin-top: 10px"
      },
      "options.file_list.add_change_date_column": {
        "type": "checkbox",
        "label": "Add Change Date Column",
        "show_if": "options.output_format=='file_list'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  },
  "import_link_token_frame": {
    "type": "fieldset",
    "label": "Import Link",
    "repeat": false,
    "fields": {
      "options.link_csv_file": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test/blob/main/example.csv",
        "show_if": "options.webservice=='github' && options.is_cloud_dir=='false' && options.output_format=='csv_table'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.link_text_file": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test/blob/main/example.txt(json, csv, etc)",
        "show_if": "options.webservice=='github' && options.is_cloud_dir=='false' && options.output_format!='csv_table' && options.output_format!='file_list'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.one_drive.file_path": {
        "type": "text",
        "label": "Enter path to file e.g. ZippyDoc/Subdir1/test.txt",
        "show_if": "options.webservice=='ms_one_drive' && options.output_format!='file_list' && options.is_cloud_dir=='false'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox.file_path": {
        "type": "text",
        "label": "Enter path to file e.g. ZippyDoc/Subdir1/test.txt",
        "show_if": "options.webservice=='dropbox' && options.output_format!='file_list' && options.is_cloud_dir=='false'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dir_path_filter": {
        "type": "fieldset",
        "label": "Import Path and File Filter",
        "show_if": "options.output_format=='file_list' || options.is_cloud_dir=='true'",
        "repeat": true,
        "fields": {
          "github__link_directory": {
            "type": "text",
            "label": "Enter link e.g. https://github.com/zippydoc/test",
            "show_if": "options.webservice=='github'",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "one_drive__dir_path": {
            "type": "text",
            "label": "Enter path to dir e.g. ZippyDoc/Subdir1",
            "show_if": "options.webservice=='ms_one_drive'",
            "width": "100%",
            "breakLine": true
          },
          "dropbox__dir_path": {
            "type": "text",
            "label": "Enter path to dir e.g. ZippyDoc/Subdir1",
            "show_if": "options.webservice=='dropbox'",
            "width": "100%",
            "breakLine": true
          },
          "google_drive__dir_path": {
            "type": "text",
            "label": "Enter path to dir",
            "show_if": "options.webservice=='google_drive'",
            "width": "100%",
            "breakLine": true
          },
          "dir_filter__filter_type": {
            "type": "select",
            "label": "Filter Type",
            "options": {
              "all": {
                "label": "All"
              },
              "contains": {
                "label": "Contains"
              },
              "starts_with": {
                "label": "Starts With"
              },
              "ends_with": {
                "label": "Ends With"
              },
              "regex": {
                "label": "Regular Expression"
              }
            },
            "val": "all",
            "required": true
          },
          "dir_filter__filter_string": {
            "type": "text",
            "label": "Filter",
            "show_if": "this.dir_filter__filter_type!='all'",
            "required": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.is_github_private": {
        "type": "checkbox",
        "label": "Github repository is private",
        "show_if": "options.webservice=='github'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "options.github_token": {
        "type": "text",
        "label": "Github personal access token",
        "show_if": "options.webservice=='github' && options.is_github_private=='true'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.one_drive.access_token": {
        "type": "text",
        "label": "One Drive Access Token",
        "show_if": "options.webservice=='ms_one_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox.auth_code": {
        "type": "text",
        "label": "Dropbox Authorization Code",
        "show_if": "options.webservice=='dropbox'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.google_drive.access_token": {
        "type": "text",
        "label": "Google Drive Access Token",
        "show_if": "options.webservice=='google_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      }
    }
  }
}
,
"/ScheduleOptions.json/ScheduleOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": true,
    "fields": {
      "input_task": {
        "type": "select",
        "label": "Select Task",
        "bind": "TASKS",
        "empty": "",
        "required": true
      },
      "waiting_time": {
        "type": "number",
        "label": "Waiting time (sec)",
        "val": 0,
        "required": true
      },
      "delete": {
        "type": "button",
        "label": "Delete",
        "function": "DELETE_ROW"
      }
    }
  }
}
,
"/D3SunburstOptions.json/D3SunburstOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "show_if": "options.configure_manual=='true'",
    "repeat": false,
    "fields": {
      "options.chart_type": {
        "type": "hidden",
        "val": "zoomable_sunburst"
      },
      "options.group_cols": {
        "type": "fieldset",
        "label": "Select Group Column(s) in Order",
        "repeat": true,
        "fields": {
          "group_col": {
            "type": "select",
            "label": "Group column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.value_col": {
        "type": "select",
        "label": "Select Value Column",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      }
    }
  }
}
,
"/ImportFileFromOneDriveOptions.json/ImportFileFromOneDriveOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.from": {
        "type": "hidden",
        "val": "web"
      },
      "options.webservice": {
        "type": "hidden",
        "val": "ms_one_drive"
      },
      "options.output_format": {
        "type": "select",
        "label": "Select Type",
        "options": {
          "csv_table": {
            "label": "CSV-Table"
          },
          "line_by_line": {
            "label": "Line by Line"
          },
          "word_by_word": {
            "label": "Text"
          },
          "JSON": {
            "label": "JSON"
          }
        },
        "val": "csv_table",
        "required": true
      },
      "options.semicolon_separated": {
        "type": "checkbox",
        "label": "Semicolon separated",
        "show_if": "options.webservice=='ms_one_drive' && options.output_format=='csv_table'",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "options.word_pattern_type": {
        "type": "select",
        "label": "Word Pattern",
        "show_if": "options.output_format=='word_by_word' && options.specify_word_pattern=='true'",
        "options": {
          "regex": {
            "label": "Regular Expression"
          }
        },
        "val": "regex",
        "required": true
      },
      "options.word_pattern_regex": {
        "type": "text",
        "label": "Regular Expression",
        "show_if": "options.output_format=='word_by_word' && options.specify_word_pattern=='true' && options.word_pattern_type=='regex'",
        "required": true,
        "val": "[a-z][1-9]",
        "breakLine": true
      },
      "options.column_setting": {
        "type": "checkbox",
        "label": "Column Settings",
        "show_if": "options.output_format!='file_list'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "column_setting_frame": {
        "type": "fieldset",
        "label": "Column Settings",
        "show_if": "options.output_format!='file_list' && options.column_setting=='true'",
        "repeat": false,
        "fields": {
          "options.add_row_column": {
            "type": "checkbox",
            "label": "Add Row Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_word_count_column": {
            "type": "checkbox",
            "label": "Add 'Word Count' Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_word_nonword_column": {
            "type": "checkbox",
            "label": "Add 'Word & Non-Word' Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_section_column": {
            "type": "checkbox",
            "label": "Add Section Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "section_column_types_frame": {
            "type": "fieldset",
            "label": "Section Column Types",
            "show_if": "options.output_format=='word_by_word' && options.add_section_column=='true'",
            "repeat": false,
            "fields": {
              "options.section_columns.add_paragraph_section_column": {
                "type": "checkbox",
                "label": "Paragraph",
                "val": "false",
                "isOn": "true",
                "isOff": "false",
                "breakLine": true
              },
              "options.section_columns.add_custom_section_column": {
                "type": "checkbox",
                "label": "Custom Section Delimiter",
                "val": "false",
                "isOn": "true",
                "isOff": "false"
              },
              "options.section_columns.custom_delimiter": {
                "type": "text",
                "label": "Delimiter(1 character)",
                "show_if": "options.section_columns.add_custom_section_column=='true'",
                "maxLength": 1,
                "required": true,
                "breakLine": true
              },
              "options.section_columns.add_brackets_punctuation_section_column": {
                "type": "checkbox",
                "label": "Brackets and Punctuation",
                "val": "false",
                "isOn": "true",
                "isOff": "false"
              },
              "options.section_columns.brackets_punctuation_section_column_type": {
                "type": "select",
                "label": "Brackets Type",
                "show_if": "options.section_columns.add_brackets_punctuation_section_column=='true'",
                "options": {
                  "nesting_structure": {
                    "label": "Nesting Structure"
                  },
                  "inner_bracket": {
                    "label": "Inner Bracket"
                  },
                  "brackets_only": {
                    "label": "Brackets Only"
                  },
                  "show_all": {
                    "label": "Show All"
                  }
                },
                "val": "show_all",
                "required": true,
                "breakLine": true
              }
            }
          },
          "options.add_filename_column": {
            "type": "checkbox",
            "label": "Add Column for File Name",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "options.add_filepath_column": {
            "type": "checkbox",
            "label": "Add Column for File Path",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          }
        }
      },
      "options.is_cloud_dir": {
        "type": "hidden",
        "val": "false"
      },
      "if_dir_frame": {
        "type": "fieldset",
        "label": "Directory Import Options",
        "show_if": "options.output_format!='file_list' && options.is_cloud_dir=='true'",
        "repeat": false,
        "fields": {
          "options.unify_in_one_table": {
            "type": "checkbox",
            "label": "Unify in one table",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.suffix": {
            "type": "select",
            "label": "Output tables suffix",
            "show_if": "options.unify_in_one_table=='false'",
            "options": {
              "number": {
                "label": "Number"
              },
              "filename": {
                "label": "Filename"
              }
            },
            "val": "number",
            "required": true,
            "breakLine": true
          },
          "options.include_subdir": {
            "type": "checkbox",
            "label": "Include Subdirectories",
            "show_if": "options.output_format!='file_list' && options.is_cloud_dir=='true'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true,
            "style": "margin-top: 10px"
          }
        }
      },
      "options.file_list.include_subdir": {
        "type": "checkbox",
        "label": "Include Subdirectories",
        "show_if": "options.output_format=='file_list'",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true,
        "style": "margin-top: 10px"
      },
      "options.file_list.add_change_date_column": {
        "type": "checkbox",
        "label": "Add Change Date Column",
        "show_if": "options.output_format=='file_list'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  },
  "import_link_token_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px",
    "repeat": false,
    "fields": {
      "options.link_csv_file": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test/blob/main/example.csv",
        "show_if": "options.webservice=='github' && options.is_cloud_dir=='false' && options.output_format=='csv_table'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.link_text_file": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test/blob/main/example.txt(json, csv, etc)",
        "show_if": "options.webservice=='github' && options.is_cloud_dir=='false' && options.output_format!='csv_table' && options.output_format!='file_list'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.one_drive.file_path": {
        "type": "text",
        "label": "Enter path to file e.g. ZippyDoc/Subdir1/test.txt",
        "show_if": "options.webservice=='ms_one_drive' && options.output_format!='file_list' && options.is_cloud_dir=='false'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox.file_path": {
        "type": "text",
        "label": "Enter path to file e.g. ZippyDoc/Subdir1/test.txt",
        "show_if": "options.webservice=='dropbox' && options.output_format!='file_list' && options.is_cloud_dir=='false'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dir_path_filter": {
        "type": "fieldset",
        "label": "Import Path and File Filter",
        "show_if": "options.output_format=='file_list' || options.is_cloud_dir=='true'",
        "repeat": true,
        "fields": {
          "github__link_directory": {
            "type": "text",
            "label": "Enter link e.g. https://github.com/zippydoc/test",
            "show_if": "options.webservice=='github'",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "one_drive__dir_path": {
            "type": "text",
            "label": "Enter path to dir e.g. ZippyDoc/Subdir1",
            "show_if": "options.webservice=='ms_one_drive'",
            "width": "100%",
            "breakLine": true
          },
          "dropbox__dir_path": {
            "type": "text",
            "label": "Enter path to dir e.g. ZippyDoc/Subdir1",
            "show_if": "options.webservice=='dropbox'",
            "width": "100%",
            "breakLine": true
          },
          "google_drive__dir_path": {
            "type": "text",
            "label": "Enter path to dir",
            "show_if": "options.webservice=='google_drive'",
            "width": "100%",
            "breakLine": true
          },
          "dir_filter__filter_type": {
            "type": "select",
            "label": "Filter Type",
            "options": {
              "all": {
                "label": "All"
              },
              "contains": {
                "label": "Contains"
              },
              "starts_with": {
                "label": "Starts With"
              },
              "ends_with": {
                "label": "Ends With"
              },
              "regex": {
                "label": "Regular Expression"
              }
            },
            "val": "all",
            "required": true
          },
          "dir_filter__filter_string": {
            "type": "text",
            "label": "Filter",
            "show_if": "this.dir_filter__filter_type!='all'",
            "required": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.is_github_private": {
        "type": "checkbox",
        "label": "Github repository is private",
        "show_if": "options.webservice=='github'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "options.github_token": {
        "type": "text",
        "label": "Github personal access token",
        "show_if": "options.webservice=='github' && options.is_github_private=='true'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox.auth_code": {
        "type": "text",
        "label": "Dropbox Authorization Code",
        "show_if": "options.webservice=='dropbox'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.google_drive.access_token": {
        "type": "text",
        "label": "Google Drive Access Token",
        "show_if": "options.webservice=='google_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      }
    }
  }
}
,
"/AddRowOptions.json/AddRowOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.position": {
        "type": "select",
        "label": "Select Position",
        "show_if": "$table_id.numOfLabel >= 1",
        "required": true,
        "options": {
          "add_rows_at_table_end": {
            "label": "Add row on bottom"
          },
          "add_row_on_top": {
            "label": "Add row on top"
          },
          "add_rows_above_selected_row": {
            "label": "Add row above selection"
          },
          "add_rows_below_selected_row": {
            "label": "Add row below selection"
          },
          "add_row_after_each_group": {
            "label": "Add row after each group"
          }
        },
        "val": "add_rows_at_table_end",
        "breakLine": true
      },
      "options.group_column": {
        "type": "select",
        "label": "Group Column",
        "show_if": "$table_id.numOfLabel < 1 && options.position=='add_row_after_each_group'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true,
        "breakLine": true
      },
      "options.use_filter": {
        "type": "select",
        "label": "Select Type",
        "show_if": "false",
        "required": true,
        "options": {
          "false": {
            "label": "Add one row for each table row"
          },
          "true": {
            "label": "Add one row for each specified row"
          }
        },
        "val": "false",
        "breakLine": true,
        "style": "margin-top: 10px"
      },
      "filter_box": {
        "type": "fieldset",
        "label": "Filter Options",
        "show_if": "options.use_filter=='true' && $table_id.numOfLabel < 1",
        "repeat": false,
        "fields": {
          "options.filter": {
            "type": "fieldset",
            "label": "Add Filter Conditions",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group",
            "show_if": "options.apply_to_record=='false'",
            "repeat": false,
            "fields": {
              "options.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "required": true,
                "width": "100%",
                "table": "table_id",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      },
      "options.add_rows": {
        "type": "fieldset",
        "label": "New Row Option",
        "repeat": true,
        "fields": {
          "new_row_name": {
            "type": "text",
            "label": "New Row Name",
            "show_if": "$table_id.numOfLabel >= 1",
            "val": ""
          },
          "function_type": {
            "type": "select",
            "label": "Task Type",
            "show_if": "false",
            "required": true,
            "options": {
              "multi_column_functions": {
                "label": "Multi-Column"
              },
              "multi_row_functions": {
                "label": "Multi-Row"
              }
            },
            "val": "multi_row_functions"
          },
          "multi_row_functions__function": {
            "type": "select",
            "label": "Select Functions",
            "show_if": "$table_id.numOfLabel >= 1",
            "required": true,
            "options": {
              "sum": {
                "label": "Sum"
              },
              "average": {
                "label": "Average"
              },
              "median": {
                "label": "Median"
              },
              "standard_deviation": {
                "label": "Standard Deviation"
              },
              "variance": {
                "label": "Variance"
              },
              "product": {
                "label": "Product"
              },
              "quota": {
                "label": "Quota"
              }
            },
            "val": "sum"
          },
          "multi_row_functions__function_use_filter": {
            "type": "select",
            "label": "Select Functions",
            "show_if": "$table_id.numOfLabel < 1",
            "required": true,
            "options": {
              "sum": {
                "label": "Sum"
              },
              "average": {
                "label": "Average"
              },
              "median": {
                "label": "Median"
              },
              "standard_deviation": {
                "label": "Standard Deviation"
              },
              "variance": {
                "label": "Variance"
              },
              "product": {
                "label": "Product"
              }
            },
            "val": "sum"
          },
          "multi_row_functions__sel_labels": {
            "type": "select",
            "label": "Select Rows(s)",
            "show_if": "$table_id.numOfLabel >= 1 && this.multi_row_functions__function!='quota'",
            "required": true,
            "table": "table_id",
            "multiple": true,
            "bind": "LABELS"
          },
          "multi_row_functions__sel_rows": {
            "type": "select",
            "label": "Select Rows",
            "show_if": "false",
            "required": true,
            "options": {
              "row-1": {
                "label": "Row-1"
              },
              "row-2": {
                "label": "Row-2"
              },
              "row-3": {
                "label": "Row-3"
              },
              "row-4": {
                "label": "Row-4"
              },
              "row-5": {
                "label": "Row-5"
              },
              "row-6": {
                "label": "Row-6"
              },
              "row-7": {
                "label": "Row-7"
              },
              "row-8": {
                "label": "Row-8"
              },
              "row-9": {
                "label": "Row-9"
              },
              "row-10": {
                "label": "Row-10"
              },
              "row+1": {
                "label": "Row+1"
              },
              "row+2": {
                "label": "Row+2"
              },
              "row+3": {
                "label": "Row+3"
              },
              "row+4": {
                "label": "Row+4"
              },
              "row+5": {
                "label": "Row+5"
              },
              "row+6": {
                "label": "Row+6"
              },
              "row+7": {
                "label": "Row+7"
              },
              "row+8": {
                "label": "Row+8"
              },
              "row+9": {
                "label": "Row+9"
              },
              "row+10": {
                "label": "Row+10"
              }
            },
            "multiple": true,
            "val": "row-1"
          },
          "multi_row_functions__sel_label_a": {
            "type": "select",
            "label": "Select Label A",
            "show_if": "$table_id.numOfLabel >= 1 && this.multi_row_functions__function=='quota'",
            "required": true,
            "table": "table_id",
            "bind": "LABELS"
          },
          "multi_row_functions__sel_label_b": {
            "type": "select",
            "label": "Select Label B",
            "show_if": "$table_id.numOfLabel >= 1 && this.multi_row_functions__function=='quota'",
            "required": true,
            "table": "table_id",
            "bind": "LABELS",
            "breakLine": true
          },
          "position": {
            "type": "select",
            "label": "Position",
            "show_if": "$table_id.numOfLabel >= 1",
            "required": true,
            "options": {
              "bottom": {
                "label": "BOTTOM"
              },
              "top": {
                "label": "TOP"
              },
              "above": {
                "label": "ABOVE"
              },
              "below": {
                "label": "BELOW"
              }
            },
            "val": "bottom"
          },
          "positioning_row": {
            "type": "select",
            "label": "Positioning Row",
            "show_if": "$table_id.numOfLabel >= 1 && (this.position=='above' || this.position=='below')",
            "required": true,
            "table": "table_id",
            "bind": "LABELS"
          },
          "format__category": {
            "type": "select",
            "label": "Display Format",
            "show_if": "$table_id.numOfLabel >= 1",
            "required": true,
            "options": {
              "standard": {
                "label": "Standard"
              },
              "number": {
                "label": "Number"
              },
              "percentage": {
                "label": "Percentage"
              },
              "text": {
                "label": "Text"
              },
              "date": {
                "label": "Date"
              },
              "currency": {
                "label": "Currency"
              }
            },
            "val": "standard"
          },
          "format__rounding": {
            "type": "select",
            "label": "Decimal Places for display",
            "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
            "required": true,
            "options": {
              "no_rounding": {
                "label": "No rounding"
              },
              "0": {
                "label": "0 digits"
              },
              "1": {
                "label": "1 digits"
              },
              "2": {
                "label": "2 digits"
              },
              "3": {
                "label": "3 digits"
              },
              "4": {
                "label": "4 digits"
              },
              "5": {
                "label": "5 digits"
              },
              "6": {
                "label": "6 digits"
              },
              "7": {
                "label": "7 digits"
              },
              "8": {
                "label": "8 digits"
              },
              "9": {
                "label": "9 digits"
              }
            },
            "val": "no_rounding"
          },
          "format__use_1000_separator": {
            "type": "checkbox",
            "label": "Use 1000 Separator(.)",
            "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
            "val": "false",
            "isOn": "true",
            "isOff": "false"
          },
          "format__currency_symbol": {
            "type": "select",
            "label": "Symbol",
            "show_if": "this.format__category=='currency'",
            "required": true,
            "options": {
              "dollar": {
                "label": "$"
              },
              "euro": {
                "label": "€"
              },
              "pound": {
                "label": "£"
              },
              "yen": {
                "label": "¥ (Yen, currency of Japan)"
              },
              "colon": {
                "label": "₡ (Colón, currency of Costa Rica)"
              },
              "naira": {
                "label": "₦ (Naira, currency of Nigeria)"
              },
              "rupee": {
                "label": "₨ (Rupee, currency of India)"
              },
              "rupie": {
                "label": "₹ (Rupee, currency of India)"
              },
              "won": {
                "label": "₩ (Won, currency in South Korea and North Korea)"
              },
              "hebrew": {
                "label": "₪ (Currency of Israel)"
              },
              "dong": {
                "label": "₫ (Currency of Vietnam)"
              },
              "kip": {
                "label": "₭ (Kip, currency of Laos)"
              },
              "mongolia": {
                "label": "₮ (Currency of Mongolia)"
              },
              "peso": {
                "label": "₱ (Peso, currency of the Philippines)"
              },
              "guarani": {
                "label": "₲ (Guaraní, currency of Paraguay)"
              },
              "hryvnia": {
                "label": "₴ (Hryvnia, currency of Ukraine)"
              },
              "tenge": {
                "label": "₸ (Tenge, currency of Kazakhstan)"
              },
              "lira": {
                "label": "₺ (Lira, currency of Turkey)"
              },
              "manat": {
                "label": "₼ (Manat, currency of Azerbaijan)"
              },
              "rubles": {
                "label": "₽ (Rubles, currency of Russia)"
              },
              "lari": {
                "label": "₾ (Lari, currency of Georgia)"
              },
              "bitcoin": {
                "label": "₿ (Bitcoin, crypto currency)"
              }
            },
            "val": "dollar"
          },
          "format__date_format": {
            "type": "select",
            "label": "Type",
            "show_if": "this.format__category=='date'",
            "required": true,
            "options": {
              "mm/dd/yyyy": {
                "label": "3/14/2012"
              },
              "D, M dd, Y": {
                "label": "Wednesday, March 14, 2012"
              },
              "yyyy-mm-dd": {
                "label": "2012-03-14"
              },
              "m.dd.yyyy": {
                "label": "3.14.2012"
              },
              "m.dd.yy": {
                "label": "3.14.12"
              },
              "dd.m.yyyy": {
                "label": "14.3.2012"
              },
              "dd.m.yy": {
                "label": "14.3.12"
              },
              "M dd, Y": {
                "label": "March 14, 2012"
              },
              "dd-mm-yyyy": {
                "label": "14-03-2012"
              },
              "mm-dd-yyyy": {
                "label": "03-14-2012"
              },
              "dd-mm-yy": {
                "label": "14-03-12"
              },
              "mm-dd-yy": {
                "label": "03-14-12"
              }
            },
            "val": "mm/dd/yyyy"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.add_new_row": {
        "type": "checkbox",
        "label": "Add Label",
        "show_if": "$table_id.numOfLabel < 1",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "options.new_row_label": {
        "type": "text",
        "label": "Label Name",
        "show_if": "$table_id.numOfLabel < 1 && options.add_new_row == 'true'",
        "val": ""
      },
      "options.new_sel_column": {
        "type": "select",
        "label": "Select Column",
        "show_if": "$table_id.numOfLabel < 1 && options.add_new_row == 'true'",
        "required": true,
        "table": "table_id",
        "multiple": false,
        "bind": "COLUMNS",
        "breakLine": true
      },
      "options.insert_on_top": {
        "type": "checkbox",
        "label": "Insert on Top",
        "show_if": "$table_id.numOfLabel < 1",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      }
    }
  }
}
,
"/DCCOVID19Options.json/DCCOVID19Options.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.all_countries": {
        "type": "hidden",
        "val": "false"
      },
      "options.stat_vars": {
        "type": "fieldset",
        "label": "Statistics data category(s)",
        "repeat": true,
        "fields": {
          "stat_var_name": {
            "type": "select",
            "label": "Category",
            "required": true,
            "options": {
              "CumulativeCount_Vaccine_COVID_19_Administered": {
                "label": "Cumulative Count of COVID_19, Vaccine Administered"
              },
              "IncrementalCount_Vaccine_COVID_19_Administered": {
                "label": "Incremental Count of COVID_19, Vaccine Administered"
              },
              "CumulativeCount_MedicalTest_ConditionCOVID_19": {
                "label": "Cumulative Count of COVID_19"
              },
              "IncrementalCount_MedicalTest_ConditionCOVID_19": {
                "label": "Incremental Count of COVID_19"
              },
              "CumulativeCount_MedicalTest_COVID_19_PCR": {
                "label": "Cumulative Count of COVID_19, COVID-19 PCRTest"
              },
              "IncrementalCount_MedicalTest_COVID_19_PCR": {
                "label": "Incremental Count of COVID_19, COVID-19 PCRTest"
              },
              "CumulativeCount_MedicalConditionIncident_COVID_19_ConfirmedCase": {
                "label": "Cumulative Count of Confirmed Case"
              },
              "IncrementalCount_MedicalConditionIncident_COVID_19_ConfirmedCase": {
                "label": "Incremental Count of Confirmed Case"
              },
              "CumulativeCount_MedicalConditionIncident_COVID_19_PatientDeceased": {
                "label": "Cumulative Count of Patient Deceased"
              },
              "IncrementalCount_MedicalConditionIncident_COVID_19_PatientDeceased": {
                "label": "Incremental Count of Patient Deceased"
              },
              "Count_MedicalConditionIncident_COVID_19_PatientHospitalized": {
                "label": "Count of Patient Hospitalized"
              },
              "Count_MedicalConditionIncident_COVID_19_PatientInICU": {
                "label": "Count of Patient in ICU"
              },
              "dc/n9rqwq8d3lcx3": {
                "label": "Covid 19 Mobility Trend of Grocery Store & Pharmacy"
              },
              "dc/0ny9m7k0lzmn5": {
                "label": "Covid 19 Mobility Trend of Local Business"
              },
              "dc/p49ghylpwz93f": {
                "label": "Covid 19 Mobility Trend of Park"
              },
              "dc/7fmnve6yyc508": {
                "label": "Covid 19 Mobility Trend of Residence"
              },
              "dc/qdbhwwr88yhl7": {
                "label": "Covid 19 Mobility Trend of Transport Hub"
              },
              "dc/tbbjnf9bk96yh": {
                "label": "Covid 19 Mobility Trend of Workplace"
              }
            }
          },
          "per_capita": {
            "type": "checkbox",
            "label": "Per capita",
            "show_if": "false",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.output_as_chart": {
        "type": "checkbox",
        "label": "Output a Graph",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
}
,
"/CopyOptions.json/CopyOptions.json": {
  "apply_to_table": {
    "type": "checkbox",
    "label": "Copy Table",
    "val": "true",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  },
  "selection": {
    "type": "fieldset",
    "label": "Select Columns/Rows",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "show_if": "apply_to_table == 'false'",
    "fields": {
    }
  }
}
,
"/PeriodicyByTableOptions.json/PeriodicyByTableOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Select Periodicy Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.task_symbol": {
        "type": "hidden",
        "val": "periodicy_by_table"
      },
      "options.standard_table": {
        "type": "checkbox",
        "label": "Standard Periodicy Table",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "options.initial_date": {
        "type": "select",
        "label": "Initial Date",
        "show_if": "options.standard_table=='false'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "options.period": {
        "type": "select",
        "label": "Periodicy (e.g. Monthly, Quarterly)",
        "show_if": "options.standard_table=='false'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "options.final_date": {
        "type": "select",
        "label": "Final Date",
        "show_if": "options.standard_table=='false'",
        "table": "table_id",
        "bind": "COLUMNS",
        "breakLine": true
      },
      "options.volume": {
        "type": "select",
        "label": "Amount",
        "show_if": "options.standard_table=='false'",
        "table": "table_id",
        "bind": "COLUMNS"
      },
      "options.growth": {
        "type": "select",
        "label": "Growth",
        "show_if": "options.standard_table=='false'",
        "table": "table_id",
        "bind": "COLUMNS"
      },
      "options.growth_period": {
        "type": "select",
        "label": "Growth Period",
        "show_if": "options.standard_table=='false'",
        "options": {
          "selected_period": {
            "label": "Equal to Periodicy"
          },
          "week_on_week": {
            "label": "Week on Week"
          },
          "month_on_month": {
            "label": "Month on Month"
          },
          "quarter_on_quarter": {
            "label": "Quarter on Quarter"
          },
          "year_on_year": {
            "label": "Year on Year"
          },
          "column": {
            "label": "Select Column"
          }
        },
        "val": "selected_period"
      },
      "options.growth_period_column": {
        "type": "select",
        "label": "Growth Period Column",
        "show_if": "options.standard_table=='false' && options.growth_period=='column'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true,
        "breakLine": true
      },
      "options.use_growth_pattern_column": {
        "type": "checkbox",
        "label": "Use Growth Pattern",
        "show_if": "options.standard_table=='false'",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "options.growth_pattern_column": {
        "type": "select",
        "label": "Growth Pattern",
        "show_if": "options.standard_table=='false' && options.use_growth_pattern_column=='true'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true,
        "breakLine": true
      },
      "options.end_date": {
        "type": "date",
        "label": "End Date of Table",
        "val": "",
        "required": true,
        "style": "width: 300px"
      }
    }
  }
},
"/D3SunburstTableInfoSettingsBackup.json/D3SunburstTableInfoSettingsBackup.json": {
  "options.popup_or_table": {
    "type": "select",
    "label": "Type",
    "required": true,
    "options": {
      "popup": {
        "label": "Pop-Up"
      },
      "embedded": {
        "label": "Embedded"
      }
    },
    "val": "popup",
    "breakLine": true
  },
  "output.set_table_info": {
    "type": "checkbox",
    "label": "Set Display Type",
    "show_if": "options.popup_or_table=='embedded'",
    "val": "false",
    "isOn": "true",
    "isOff": "false"
  },
  "output.table_info": {
    "type": "select",
    "label": "Output Type",
    "show_if": "options.popup_or_table=='embedded' && output.set_table_info=='true'",
    "options": {
      "simple_table": {
        "label": "Table"
      },
      "D3": {
        "label": "D3"
      },
      "Flexmonster": {
        "label": "Flexmonster"
      },
      "PDF": {
        "label": "PDF"
      }
    },
    "val": "D3",
    "required": true,
    "breakLine": true
  }
},
"/ChatGPTOptions.json/ChatGPTOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.is_feed_input_table": {
        "type": "checkbox",
        "label": "Feed Input table",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.is_chat_statements_table": {
        "type": "checkbox",
        "label": "Chat Statements Table",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.chats": {
        "type": "fieldset",
        "label": "Input Chats",
        "show_if": "options.is_chat_statements_table=='false'",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "repeat": true,
        "fields": {
          "item": {
            "type": "textarea",
            "label": "Chat",
            "rows": 2,
            "val": "",
            "placeholder": "What is the longest value in the first column?",
            "width": "100%"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.chat_table.table_id": {
        "type": "select",
        "label": "Select Chat Input Table",
        "show_if": "options.is_chat_statements_table=='true'",
        "required": true,
        "bind": "TABLES"
      },
      "options.chat_table.chat_col": {
        "type": "select",
        "label": "Select column of Chat",
        "show_if": "options.is_chat_statements_table=='true'",
        "required": true,
        "table": "options.chat_table.table_id",
        "bind": "COLUMNS",
        "style": "min-width: 200px",
        "breakLine": true
      },
      "options.is_table_output": {
        "type": "checkbox",
        "label": "Is table output",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.is_custom_output_table_columns": {
        "type": "checkbox",
        "label": "Customize output table columns tile",
        "show_if": "options.is_table_output=='true'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.custom_output_table_columns": {
        "type": "fieldset",
        "label": "Add output yable columns tile",
        "show_if": "options.is_table_output=='true' && options.is_custom_output_table_columns=='true'",
        "repeat": true,
        "fields": {
          "column_title": {
            "type": "text",
            "label": "Column Title",
            "required": true,
            "val": "",
            "width": "100%"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.how_to_output_table": {
        "type": "select",
        "label": "How to output table",
        "required": true,
        "options": {
          "create_new_table": {
            "label": "Create new output table"
          },
          "update_input_table": {
            "label": "Directly update input table"
          }
        },
        "val": "create_new_table",
        "breakLine": true
      },
      "options.use_own_openai_key": {
        "type": "checkbox",
        "label": "Use my own OpenAI API Key",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.openai_key": {
        "type": "text",
        "label": "OpenAI API Key",
        "show_if": "options.use_own_openai_key == 'true'",
        "required": true,
        "val": "",
        "width": "100%",
        "breakLine": true
      }
    }
  }
}
,
"/ImportDirFromGithubOptions.json/ImportDirFromGithubOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.from": {
        "type": "hidden",
        "val": "web"
      },
      "options.webservice": {
        "type": "hidden",
        "val": "github"
      },
      "options.output_format": {
        "type": "select",
        "label": "Select Type",
        "options": {
          "csv_table": {
            "label": "CSV-Table"
          },
          "line_by_line": {
            "label": "Line by Line"
          },
          "word_by_word": {
            "label": "Text"
          },
          "JSON": {
            "label": "JSON"
          },
          "file_list": {
            "label": "File List"
          }
        },
        "val": "csv_table",
        "required": true
      },
      "options.word_pattern_type": {
        "type": "select",
        "label": "Word Pattern",
        "show_if": "options.output_format=='word_by_word' && options.specify_word_pattern=='true'",
        "options": {
          "regex": {
            "label": "Regular Expression"
          }
        },
        "val": "regex",
        "required": true
      },
      "options.word_pattern_regex": {
        "type": "text",
        "label": "Regular Expression",
        "show_if": "options.output_format=='word_by_word' && options.specify_word_pattern=='true' && options.word_pattern_type=='regex'",
        "required": true,
        "val": "[a-z][1-9]",
        "breakLine": true
      },
      "options.column_setting": {
        "type": "checkbox",
        "label": "Column Settings",
        "show_if": "options.output_format!='file_list'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "column_setting_frame": {
        "type": "fieldset",
        "label": "Column Settings",
        "show_if": "options.output_format!='file_list' && options.column_setting=='true'",
        "repeat": false,
        "fields": {
          "options.add_row_column": {
            "type": "checkbox",
            "label": "Add Row Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_word_count_column": {
            "type": "checkbox",
            "label": "Add 'Word Count' Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_word_nonword_column": {
            "type": "checkbox",
            "label": "Add 'Word & Non-Word' Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_section_column": {
            "type": "checkbox",
            "label": "Add Section Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "section_column_types_frame": {
            "type": "fieldset",
            "label": "Section Column Types",
            "show_if": "options.output_format=='word_by_word' && options.add_section_column=='true'",
            "repeat": false,
            "fields": {
              "options.section_columns.add_paragraph_section_column": {
                "type": "checkbox",
                "label": "Paragraph",
                "val": "false",
                "isOn": "true",
                "isOff": "false",
                "breakLine": true
              },
              "options.section_columns.add_custom_section_column": {
                "type": "checkbox",
                "label": "Custom Section Delimiter",
                "val": "false",
                "isOn": "true",
                "isOff": "false"
              },
              "options.section_columns.custom_delimiter": {
                "type": "text",
                "label": "Delimiter(1 character)",
                "show_if": "options.section_columns.add_custom_section_column=='true'",
                "maxLength": 1,
                "required": true,
                "breakLine": true
              },
              "options.section_columns.add_brackets_punctuation_section_column": {
                "type": "checkbox",
                "label": "Brackets and Punctuation",
                "val": "false",
                "isOn": "true",
                "isOff": "false"
              },
              "options.section_columns.brackets_punctuation_section_column_type": {
                "type": "select",
                "label": "Brackets Type",
                "show_if": "options.section_columns.add_brackets_punctuation_section_column=='true'",
                "options": {
                  "nesting_structure": {
                    "label": "Nesting Structure"
                  },
                  "inner_bracket": {
                    "label": "Inner Bracket"
                  },
                  "brackets_only": {
                    "label": "Brackets Only"
                  },
                  "show_all": {
                    "label": "Show All"
                  }
                },
                "val": "show_all",
                "required": true,
                "breakLine": true
              }
            }
          },
          "options.add_filename_column": {
            "type": "checkbox",
            "label": "Add Column for File Name",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "options.add_filepath_column": {
            "type": "checkbox",
            "label": "Add Column for File Path",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          }
        }
      },
      "options.is_cloud_dir": {
        "type": "hidden",
        "val": "true"
      },
      "if_dir_frame": {
        "type": "fieldset",
        "label": "Directory Import Options",
        "show_if": "options.output_format!='file_list' && options.is_cloud_dir=='true'",
        "repeat": false,
        "fields": {
          "options.unify_in_one_table": {
            "type": "checkbox",
            "label": "Unify in one table",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.suffix": {
            "type": "select",
            "label": "Output tables suffix",
            "show_if": "options.unify_in_one_table=='false'",
            "options": {
              "number": {
                "label": "Number"
              },
              "filename": {
                "label": "Filename"
              }
            },
            "val": "number",
            "required": true,
            "breakLine": true
          },
          "options.include_subdir": {
            "type": "checkbox",
            "label": "Include Subdirectories",
            "show_if": "options.output_format!='file_list' && options.is_cloud_dir=='true'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true,
            "style": "margin-top: 10px"
          }
        }
      },
      "options.file_list.include_subdir": {
        "type": "checkbox",
        "label": "Include Subdirectories",
        "show_if": "options.output_format=='file_list'",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true,
        "style": "margin-top: 10px"
      },
      "options.file_list.add_change_date_column": {
        "type": "checkbox",
        "label": "Add Change Date Column",
        "show_if": "options.output_format=='file_list'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  },
  "import_link_token_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px",
    "repeat": false,
    "fields": {
      "options.link_csv_file": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test/blob/main/example.csv",
        "show_if": "options.webservice=='github' && options.is_cloud_dir=='false' && options.output_format=='csv_table'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.link_text_file": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test/blob/main/example.txt(json, csv, etc)",
        "show_if": "options.webservice=='github' && options.is_cloud_dir=='false' && options.output_format!='csv_table' && options.output_format!='file_list'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.one_drive.file_path": {
        "type": "text",
        "label": "Enter path to file e.g. ZippyDoc/Subdir1/test.txt",
        "show_if": "options.webservice=='ms_one_drive' && options.output_format!='file_list' && options.is_cloud_dir=='false'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox.file_path": {
        "type": "text",
        "label": "Enter path to file e.g. ZippyDoc/Subdir1/test.txt",
        "show_if": "options.webservice=='dropbox' && options.output_format!='file_list' && options.is_cloud_dir=='false'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dir_path_filter": {
        "type": "fieldset",
        "label": "Import Path and File Filter",
        "show_if": "options.output_format=='file_list' || options.is_cloud_dir=='true'",
        "repeat": true,
        "fields": {
          "github__link_directory": {
            "type": "text",
            "label": "Enter link e.g. https://github.com/zippydoc/test",
            "show_if": "options.webservice=='github'",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "one_drive__dir_path": {
            "type": "text",
            "label": "Enter path to dir e.g. ZippyDoc/Subdir1",
            "show_if": "options.webservice=='ms_one_drive'",
            "width": "100%",
            "breakLine": true
          },
          "dropbox__dir_path": {
            "type": "text",
            "label": "Enter path to dir e.g. ZippyDoc/Subdir1",
            "show_if": "options.webservice=='dropbox'",
            "width": "100%",
            "breakLine": true
          },
          "google_drive__dir_path": {
            "type": "text",
            "label": "Enter path to dir",
            "show_if": "options.webservice=='google_drive'",
            "width": "100%",
            "breakLine": true
          },
          "dir_filter__filter_type": {
            "type": "select",
            "label": "Filter Type",
            "options": {
              "all": {
                "label": "All"
              },
              "contains": {
                "label": "Contains"
              },
              "starts_with": {
                "label": "Starts With"
              },
              "ends_with": {
                "label": "Ends With"
              },
              "regex": {
                "label": "Regular Expression"
              }
            },
            "val": "all",
            "required": true
          },
          "dir_filter__filter_string": {
            "type": "text",
            "label": "Filter",
            "show_if": "this.dir_filter__filter_type!='all'",
            "required": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.is_github_private": {
        "type": "checkbox",
        "label": "Github repository is private",
        "show_if": "options.webservice=='github'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "options.github_token": {
        "type": "text",
        "label": "Github personal access token",
        "show_if": "options.webservice=='github' && options.is_github_private=='true'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.one_drive.access_token": {
        "type": "text",
        "label": "One Drive Access Token",
        "show_if": "options.webservice=='ms_one_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox.auth_code": {
        "type": "text",
        "label": "Dropbox Authorization Code",
        "show_if": "options.webservice=='dropbox'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.google_drive.access_token": {
        "type": "text",
        "label": "Google Drive Access Token",
        "show_if": "options.webservice=='google_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      }
    }
  }
}
,
"/AppendInput.json/AppendInput.json": {
  "input": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "target_table.table_id": {
        "type": "select",
        "label": "Left Table",
        "bind": "TABLES"
      },
      "target_table.remove_input_table_after_processing": {
        "type": "hidden",
        "val": "false"
      },
      "target_table.is_word": {
        "type": "hidden",
        "val": "false"
      },
      "source_table.table_id": {
        "type": "select",
        "label": "Right Table",
        "bind": "TABLES",
        "breakLine": true
      },
      "source_table.remove_input_table_after_processing": {
        "type": "hidden",
        "val": "false"
      },
      "source_table.is_word": {
        "type": "hidden",
        "val": "false"
      }
    }
  }
}
,
"/WebAccessOptions.json/WebAccessOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.type": {
        "type": "radio",
        "label": "",
        "required": true,
        "values": {
          "embed_code": "Generate Embed-Code",
          "api_key": "Generate API-KEY"
        },
        "val": "embed_code",
        "breakLine": true
      },
      "options.embed_code.framework": {
        "type": "select",
        "label": "Select Frontend Framework",
        "required": true,
        "show_if": "options.type=='embed_code'",
        "options": {
          "jquery": {
            "label": "jQuery"
          },
          "react": {
            "label": "React (Coming soon...)"
          },
          "vue": {
            "label": "Vue (Coming soon...)"
          },
          "angular": {
            "label": "Angular (Coming soon...)"
          }
        },
        "val": "jquery",
        "style": "width: 200px"
      },
      "options.embed_code.use_datatable": {
        "type": "checkbox",
        "label": "Use Theme",
        "show_if": "options.type=='embed_code'",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
},
"/RunFlowOptions.json/RunFlowOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.is_output_tables_of_selected_flow": {
        "type": "checkbox",
        "label": "Output Table(s) of Selected Flow",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.output_tables_of_selected_flow": {
        "type": "fieldset",
        "label": "Output table(s) of selected Flow",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.is_output_tables_of_selected_flow=='true'",
        "repeat": true,
        "fields": {
          "position": {
            "type": "select",
            "label": "Bottom Up Table Position",
            "required": true,
            "options": {
              "1": {
                "label": "Position 1"
              },
              "2": {
                "label": "Position 2"
              },
              "3": {
                "label": "Position 3"
              },
              "4": {
                "label": "Position 4"
              },
              "5": {
                "label": "Position 5"
              },
              "6": {
                "label": "Position 6"
              },
              "7": {
                "label": "Position 7"
              },
              "8": {
                "label": "Position 8"
              },
              "9": {
                "label": "Position 9"
              },
              "10": {
                "label": "Position 10"
              }
            },
            "val": "1",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.manual_config": {
        "type": "hidden",
        "val": "false"
      },
      "options.input_tables_map": {
        "type": "fieldset",
        "label": "Input Tables Mapping",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "replace_first_table_of_selected_flow=='true' && options.manual_config=='true'",
        "repeat": true,
        "fields": {
          "caller_input_table": {
            "type": "select",
            "label": "Caller Input Table",
            "bind": "TABLES",
            "empty": "",
            "required": true
          },
          "callee_input_table": {
            "type": "select",
            "label": "Callee Input Table",
            "bind": "TABLES",
            "empty": "",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "note1": {
        "type": "textarea",
        "label": "",
        "show_if": "options.manual_config=='true'",
        "val": "Ensure, that the relevant column name(s) of the target table(s) flow table(s) match",
        "disabled": true,
        "width": "100%"
      },
      "options.output_tables_map": {
        "type": "fieldset",
        "label": "Output Tables Mapping",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.manual_config=='true'",
        "repeat": true,
        "fields": {
          "caller_output_table": {
            "type": "select",
            "label": "Caller Output Table",
            "bind": "TABLES",
            "empty": "",
            "required": true
          },
          "callee_output_table": {
            "type": "select",
            "label": "Callee Output Table",
            "bind": "TABLES",
            "empty": "",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      }
    }
  }
}
,
"/FlexmonsterScatterOptions.json/FlexmonsterScatterOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "show_if": "options.configure_manual=='true'",
    "repeat": false,
    "fields": {
      "options.type": {
        "type": "hidden",
        "val": "scatter_chart"
      },
      "options.chart_type": {
        "type": "hidden",
        "val": "scatter"
      },
      "options.add_column_cols": {
        "type": "checkbox",
        "label": "by Category",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.column_cols": {
        "type": "fieldset",
        "label": "Category column(s)",
        "show_if": "options.add_column_cols=='true'",
        "repeat": true,
        "fields": {
          "column_col": {
            "type": "select",
            "label": "Category column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "is_date": {
            "type": "checkbox",
            "label": "Is Date",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.row_cols": {
        "type": "fieldset",
        "label": "Series column(s)",
        "repeat": true,
        "fields": {
          "row_col": {
            "type": "select",
            "label": "Series column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "is_date": {
            "type": "checkbox",
            "label": "Is Date",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.measure_cols": {
        "type": "fieldset",
        "label": "Value column(s)",
        "repeat": true,
        "fields": {
          "measure_col": {
            "type": "select",
            "label": "Value Column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "aggregation": {
            "type": "select",
            "label": "Aggregation Function",
            "options": {
              "sum": {
                "label": "Sum"
              },
              "count": {
                "label": "Count"
              },
              "distinctcount": {
                "label": "Distinct Count"
              },
              "average": {
                "label": "Average"
              },
              "median": {
                "label": "Median"
              },
              "product": {
                "label": "Product"
              },
              "min": {
                "label": "Min"
              },
              "max": {
                "label": "Max"
              },
              "stdevp": {
                "label": "Population Standard Deviation"
              },
              "stdevs": {
                "label": "Sample Standard Deviation"
              },
              "percent": {
                "label": "Percent"
              }
            },
            "val": "sum",
            "required": true,
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      }
    }
  }
}
,
"/DCScatterPlotOptions.json/DCScatterPlotOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.all_countries": {
        "type": "hidden",
        "val": "false"
      },
      "first_stat_var_frame": {
        "type": "fieldset",
        "label": "Pick 1st statistical variable",
        "repeat": false,
        "fields": {
          "options.first_stat_var__category": {
            "type": "select",
            "label": "Category",
            "required": true,
            "options": {
              "climate": {
                "label": "Climate"
              },
              "covid19": {
                "label": "COVID-19"
              },
              "crime": {
                "label": "Crime"
              },
              "demographics": {
                "label": "Demographics"
              },
              "economic": {
                "label": "Economic"
              },
              "education": {
                "label": "Education"
              },
              "employment": {
                "label": "Employment"
              },
              "energy": {
                "label": "Energy"
              },
              "health": {
                "label": "Health"
              }
            },
            "val": "climate"
          },
          "options.first_stat_var__climate__stat_var_name": {
            "type": "select",
            "label": "Statistical variable",
            "show_if": "options.first_stat_var__category=='climate'",
            "required": true,
            "options": {
              "Amount_Emissions_CarbonDioxide_PerCapita": {
                "label": "CO2 Emissions Per Capita"
              },
              "Count_EarthquakeEvent": {
                "label": "Count of Earthquake Event"
              },
              "Count_EarthquakeEvent_M3To4": {
                "label": "Count of Earthquake Event of 3 - 4 Magnitude"
              },
              "Count_EarthquakeEvent_M3Onwards": {
                "label": "Count of Earthquake Event of 3 Magnitude or More"
              },
              "Count_EarthquakeEvent_M4To5": {
                "label": "Count of Earthquake Event of 4 - 5 Magnitude"
              },
              "Count_EarthquakeEvent_M4Onwards": {
                "label": "Count of Earthquake Event of 4 Magnitude or More"
              },
              "Count_EarthquakeEvent_M5To6": {
                "label": "Count of Earthquake Event of 5 - 6 Magnitude"
              },
              "Count_EarthquakeEvent_M5Onwards": {
                "label": "Count of Earthquake Event of 5 Magnitude or More"
              }
            },
            "val": "Amount_Emissions_CarbonDioxide_PerCapita"
          },
          "options.first_stat_var__crime__stat_var_name": {
            "type": "select",
            "label": "Statistical variable",
            "show_if": "options.first_stat_var__category=='crime'",
            "required": true,
            "options": {
              "Count_CriminalActivities_MurderAndNonNegligentManslaughter_AsFractionOf_Count_Person": {
                "label": "Count of Murder And Non Negligent Manslaughter Per Capita"
              },
              "Count_CriminalActivities_MurderAndNonNegligentManslaughter_Female_AsFractionOf_Count_Person_Female": {
                "label": "Count of Female Murder And Non Negligent Manslaughter Per Female Capita"
              },
              "Count_CriminalActivities_MurderAndNonNegligentManslaughter_Male_AsFractionOf_Count_Person_Male": {
                "label": "Count of Male Murder And Non Negligent Manslaughter Per Male Capita"
              }
            },
            "val": "Count_CriminalActivities_MurderAndNonNegligentManslaughter_AsFractionOf_Count_Person"
          },
          "options.first_stat_var__demographics__stat_var_name": {
            "type": "select",
            "label": "Statistical variable",
            "show_if": "options.first_stat_var__category=='demographics'",
            "required": true,
            "options": {
              "Count_Person": {
                "label": "Population"
              },
              "GrowthRate_Count_Person": {
                "label": "Population Growth Rate"
              },
              "Count_Person_PerArea": {
                "label": "Population Density"
              },
              "Count_Person_IsInternetUser_PerCapita": {
                "label": "Percent of Internet Users"
              },
              "Count_Person_ResidingLessThan5MetersAboveSeaLevel_AsFractionOf_Count_Person": {
                "label": "Percent of Population Living in Areas Below 5 Meters Elevation"
              },
              "Count_Person_Rural": {
                "label": "Rural Population"
              },
              "Count_Person_Urban": {
                "label": "Urban Population"
              }
            },
            "val": "Count_Person"
          },
          "options.first_stat_var__economic__stat_var_name": {
            "type": "select",
            "label": "Statistical variable",
            "show_if": "options.first_stat_var__category=='economic'",
            "required": true,
            "options": {
              "Amount_EconomicActivity_GrossDomesticProduction_Nominal": {
                "label": "GDP"
              },
              "GrowthRate_Amount_EconomicActivity_GrossDomesticProduction": {
                "label": "Growth Rate of GDP"
              },
              "Amount_EconomicActivity_GrossNationalIncome_PurchasingPowerParity": {
                "label": "GNI (Purchasing Power Parity)"
              },
              "Count_Product_MobileCellularSubscription_AsFractionOf_Count_Person": {
                "label": "Mobile Subscriptions Per Capita"
              },
              "Amount_Debt_Government": {
                "label": "Debt With Government"
              },
              "Amount_Debt_Government_AsAFractionOfGrossDomesticProduction": {
                "label": "Debt With Government as Fraction of GDP"
              },
              "GiniIndex_EconomicActivity": {
                "label": "Gini Index of Economic Activity"
              },
              "Amount_EconomicActivity_ExpenditureActivity_MilitaryExpenditure_Government": {
                "label": "Military Expenditure, Government"
              },
              "Amount_EconomicActivity_ExpenditureActivity_MilitaryExpenditure_Government_AsFractionOf_Amount_EconomicActivity_GrossDomesticProduction_Nominal": {
                "label": "Military Expenditure, Government as Fraction of Economic Activity Gross Domestic Production Nominal"
              },
              "Amount_EconomicActivity_ExpenditureActivity_EducationExpenditure_Government_AsFractionOf_Amount_EconomicActivity_ExpenditureActivity_Government": {
                "label": "Education Expenditure, Government as Fraction of Economic Activity Expenditure Activity Government"
              },
              "Amount_EconomicActivity_ExpenditureActivity_EducationExpenditure_Government_AsFractionOf_Amount_EconomicActivity_GrossDomesticProduction_Nominal": {
                "label": "Education Expenditure, Government as Fraction of Economic Activity Gross Domestic Production Nominal"
              },
              "Amount_EconomicActivity_ExpenditureActivity_HealthcareExpenditure_AsFractionOf_Count_Person": {
                "label": "Healthcare Expenditure Per Capita"
              },
              "Amount_EconomicActivity_ExpenditureActivity_TertiaryEducationExpenditure_Government_AsFractionOf_Amount_EconomicActivity_ExpenditureActivity_EducationExpenditure_Government": {
                "label": "Tertiary Education Expenditure, Government as Fraction of Economic Activity Expenditure Activity Education Expenditure Government"
              },
              "Amount_EconomicActivity_GrossValueAdded_RealValue": {
                "label": "Gross Value Added (Real Value)"
              },
              "Amount_EconomicActivity_GrossValueAdded_ISICAgricultureHuntingForestryFishing_RealValue": {
                "label": "Gross Value Added, Agriculture, Hunting, Forestry, Fishing (Real Value)"
              },
              "Amount_EconomicActivity_GrossValueAdded_ISICConstruction_RealValue": {
                "label": "Gross Value Added, Construction (Real Value)"
              },
              "Amount_EconomicActivity_GrossValueAdded_ISICManufacturing_RealValue": {
                "label": "Gross Value Added, Manufacturing (Real Value)"
              },
              "Amount_EconomicActivity_GrossValueAdded_ISICMiningManufacturingUtilities_RealValue": {
                "label": "Gross Value Added, Mining, Manufacturing, Utilities (Real Value)"
              },
              "Amount_EconomicActivity_GrossValueAdded_ISICTransportStorageCommunications_RealValue": {
                "label": "Gross Value Added, Transport, Storage And Communications (Real Value)"
              },
              "Amount_EconomicActivity_GrossValueAdded_ISICWholesaleRetailTradeRestaurantsHotels_RealValue": {
                "label": "Gross Value Added, Wholesale, Retail Trade, Restaurants And Hotels (Real Value)"
              },
              "Amount_Remittance_OutwardRemittance": {
                "label": "Outward Remittance"
              },
              "Amount_Remittance_InwardRemittance": {
                "label": "Inward Remittance"
              },
              "Amount_Remittance_InwardRemittance_AsFractionOf_Amount_EconomicActivity_GrossDomesticProduction_Nominal": {
                "label": "Inward Remittance as Fraction of Economic Activity GDP"
              },
              "Amount_Stock": {
                "label": "Stock"
              },
              "Amount_Stock_AsFractionOf_Amount_EconomicActivity_GrossDomesticProduction_Nominal": {
                "label": "Stock as Fraction of Economic Activity GDP"
              }
            },
            "val": "Amount_EconomicActivity_GrossDomesticProduction_Nominal"
          },
          "options.first_stat_var__education__stat_var_name": {
            "type": "select",
            "label": "Statistical variable",
            "show_if": "options.first_stat_var__category=='education'",
            "required": true,
            "options": {
              "Count_Person_25OrMoreYears_BachelorsDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears": {
                "label": "Bachelors Degree or Higher Population Per Capita 25 or More Years"
              },
              "Count_Person_25OrMoreYears_Female_BachelorsDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears_Female": {
                "label": "Bachelors Degree or Higher, Female Population Per Capita 25 or More Years Female"
              },
              "Count_Person_25OrMoreYears_Male_BachelorsDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears_Male": {
                "label": "Bachelors Degree or Higher, Male Population Per Capita 25 or More Years Male"
              },
              "Count_Person_25OrMoreYears_DoctorateDegree_AsFractionOf_Count_Person_25OrMoreYears": {
                "label": "Doctorate Degree Population Per Capita 25 or More Years"
              },
              "Count_Person_25OrMoreYears_Female_DoctorateDegree_AsFractionOf_Count_Person_25OrMoreYears_Female": {
                "label": "Doctorate Degree, Female Population Per Capita 25 or More Years Female"
              },
              "Count_Person_25OrMoreYears_Male_DoctorateDegree_AsFractionOf_Count_Person_25OrMoreYears_Male": {
                "label": "Doctorate Degree, Male Population Per Capita 25 or More Years Male"
              },
              "Count_Person_25OrMoreYears_MastersDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears": {
                "label": "Masters Degree or Higher Population Per Capita 25 or More Years"
              },
              "Count_Person_25OrMoreYears_Female_MastersDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears_Female": {
                "label": "Masters Degree or Higher, Female Population Per Capita 25 or More Years Female"
              },
              "Count_Person_25OrMoreYears_Male_MastersDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears_Male": {
                "label": "Masters Degree or Higher, Male Population Per Capita 25 or More Years Male"
              },
              "Count_Person_25OrMoreYears_TertiaryEducation_AsFractionOf_Count_Person_25OrMoreYears": {
                "label": "Tertiary Education Population Per Capita 25 or More Years"
              },
              "Count_Person_25OrMoreYears_Female_TertiaryEducation_AsFractionOf_Count_Person_25OrMoreYears_Female": {
                "label": "Tertiary Education, Female Population Per Capita 25 or More Years Female"
              },
              "Count_Person_25OrMoreYears_Male_TertiaryEducation_AsFractionOf_Count_Person_25OrMoreYears_Male": {
                "label": "Tertiary Education, Male Population Per Capita 25 or More Years Male"
              }
            },
            "val": "Count_Person_25OrMoreYears_BachelorsDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears"
          },
          "options.first_stat_var__employment__stat_var_name": {
            "type": "select",
            "label": "Statistical variable",
            "show_if": "options.first_stat_var__category=='employment'",
            "required": true,
            "options": {
              "UnemploymentRate_Person": {
                "label": "Unemployment Rate"
              },
              "Count_Person_InLaborForce": {
                "label": "In Labor Force Population"
              },
              "Count_Person_15To64Years_InLaborForce_AsFractionOf_Count_Person_15To64Years": {
                "label": "15 - 64 Years, in Labor Force Population Per Capita 15 To 64 Years"
              },
              "Count_Person_15To64Years_Female_InLaborForce_AsFractionOf_Count_Person_15To64Years_Female": {
                "label": "15 - 64 Years, in Labor Force, Female Population Per Capita 15 To 64 Years Female"
              },
              "Count_Person_15To64Years_Male_InLaborForce_AsFractionOf_Count_Person_15To64Years_Male": {
                "label": "15 - 64 Years, in Labor Force, Male Population Per Capita 15 To 64 Years Male"
              },
              "Count_Person_15OrMoreYears_InLaborForce_Female_AsFractionOf_Count_Person_InLaborForce": {
                "label": "15 Years or More, in Labor Force, Female Population Per Capita in Labor Force"
              }
            },
            "val": "UnemploymentRate_Person"
          },
          "options.first_stat_var__energy__stat_var_name": {
            "type": "select",
            "label": "Statistical variable",
            "show_if": "options.first_stat_var__category=='energy'",
            "required": true,
            "options": {
              "Annual_Consumption_Electricity": {
                "label": "Annual Consumption of Electricity"
              },
              "Annual_Exports_Electricity": {
                "label": "Annual Exports of Electricity"
              },
              "Annual_Generation_Electricity": {
                "label": "Net generation, all fuels, all sectors, annual"
              },
              "Annual_Imports_Electricity": {
                "label": "Annual Imports of Electricity"
              },
              "Annual_Loss_Electricity": {
                "label": "Annual Loss of Electricity"
              },
              "Annual_Consumption_Electricity_Agriculture": {
                "label": "Annual Consumption for Agriculture"
              },
              "Annual_Consumption_Electricity_ChemicalPetrochemicalIndustry": {
                "label": "Annual Consumption for Chemical Petrochemical Industry"
              },
              "Annual_Consumption_Electricity_CommerceAndPublicServices": {
                "label": "Annual Consumption for Commerce And Public Services"
              },
              "Annual_Consumption_Electricity_ConstructionIndustry": {
                "label": "Annual Consumption for Construction Industry"
              },
              "Annual_Consumption_Electricity_FoodAndTobaccoIndustry": {
                "label": "Annual Consumption for Food And Tobacco Industry"
              },
              "Annual_Consumption_Electricity_Households": {
                "label": "Annual Consumption for Households"
              },
              "Annual_Consumption_Electricity_IronSteel": {
                "label": "Annual Consumption for Iron Steel"
              },
              "Annual_Consumption_Electricity_MachineryIndustry": {
                "label": "Annual Consumption for Machinery Industry"
              },
              "Annual_Consumption_Electricity_Manufacturing": {
                "label": "Annual Consumption for Manufacturing"
              },
              "Annual_Consumption_Electricity_MiningAndQuarryingIndustry": {
                "label": "Annual Consumption for Mining And Quarrying Industry"
              },
              "Annual_Consumption_Electricity_NonFerrousMetalsIndustry": {
                "label": "Annual Consumption for Non Ferrous Metals Industry"
              },
              "Annual_Consumption_Electricity_NonMetallicMineralsIndustry": {
                "label": "Annual Consumption for Non Metallic Minerals Industry"
              },
              "Annual_Consumption_Electricity_PaperPulpPrintIndustry": {
                "label": "Annual Consumption for Paper Pulp Print Industry"
              },
              "Annual_Consumption_Electricity_RailTransport": {
                "label": "Annual Consumption for Rail Transport"
              },
              "Annual_Consumption_Electricity_RoadTransport": {
                "label": "Annual Consumption for Road Transport"
              },
              "Annual_Consumption_Electricity_TextileAndLeatherIndustry": {
                "label": "Annual Consumption for Textile And Leather Industry"
              },
              "Annual_Consumption_Electricity_TransportEquipmentIndustry": {
                "label": "Annual Consumption for Transport Equipment Industry"
              },
              "Annual_Consumption_Electricity_TransportIndustry": {
                "label": "Annual Consumption for Transport Industry"
              },
              "Annual_Consumption_Electricity_OtherIndustry": {
                "label": "Annual Consumption for UN_Other Industry"
              },
              "Annual_Consumption_Electricity_OtherManufacturingIndustry": {
                "label": "Annual Consumption for UN_Other Manufacturing Industry"
              },
              "Annual_Consumption_Electricity_OtherSector": {
                "label": "Annual Consumption for UN_Other Sector"
              },
              "Annual_Consumption_Electricity_WoodAndWoodProductsIndustry": {
                "label": "Annual Consumption for Wood And Wood Products Industry"
              },
              "Annual_Consumption_Electricity_BriquettingPlants_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Briquetting Plants, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_CoalMines_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Coal Mines, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_CokeOvens_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Coke Ovens, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_ElectricityGeneration_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Electricity Generation, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_EnergyIndustry_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Energy Industry, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_GasWorks_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Gas Works, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_Industry_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Industry, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_NuclearFuelProcessing_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Nuclear Fuel Processing, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_OilGasExtraction_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Oil Gas Extraction, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_OilRefineries_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Oil Refineries, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_PumpStoragePlants_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Pump Storage Plants, Energy Industry Own Use"
              },
              "Annual_Generation_Electricity_BioGas_ThermalElectricity": {
                "label": "Annual Generation From Bio Gas, Thermal Electricity"
              },
              "Annual_Consumption_Energy_Agriculture_SolarThermal": {
                "label": "Annual Consumption of Agriculture, Solar Thermal"
              },
              "Annual_Consumption_Energy_BriquettingPlants_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Briquetting Plants, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_ChemicalPetrochemicalIndustry_Heat": {
                "label": "Annual Consumption of Chemical Petrochemical Industry, Heat"
              },
              "Annual_Consumption_Energy_CoalMines_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Coal Mines, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_CokeOvens_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Coke Ovens, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_CommerceAndPublicServices_Geothermal": {
                "label": "Annual Consumption of Commerce And Public Services, Geothermal"
              },
              "Annual_Consumption_Energy_CommerceAndPublicServices_Heat": {
                "label": "Annual Consumption of Commerce And Public Services, Heat"
              },
              "Annual_Consumption_Energy_CommerceAndPublicServices_SolarThermal": {
                "label": "Annual Consumption of Commerce And Public Services, Solar Thermal"
              },
              "Annual_Consumption_Energy_ElectricityGeneration_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Electricity Generation, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_EnergyIndustry_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Energy Industry, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_FoodAndTobaccoIndustry_Heat": {
                "label": "Annual Consumption of Food And Tobacco Industry, Heat"
              },
              "Annual_Consumption_Energy_GasWorks_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Gas Works, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_Households_Geothermal": {
                "label": "Annual Consumption of Households, Geothermal"
              },
              "Annual_Consumption_Energy_Households_Heat": {
                "label": "Annual Consumption of Households, Heat"
              },
              "Annual_Consumption_Energy_Households_SolarThermal": {
                "label": "Annual Consumption of Households, Solar Thermal"
              },
              "Annual_Consumption_Energy_IronSteel_Heat": {
                "label": "Annual Consumption of Iron Steel, Heat"
              },
              "Annual_Consumption_Energy_MachineryIndustry_Heat": {
                "label": "Annual Consumption of Machinery Industry, Heat"
              },
              "Annual_Consumption_Energy_MachineryIndustry_SolarThermal": {
                "label": "Annual Consumption of Machinery Industry, Solar Thermal"
              },
              "Annual_Consumption_Energy_Manufacturing_Heat": {
                "label": "Annual Consumption of Manufacturing, Heat"
              },
              "Annual_Consumption_Energy_Manufacturing_SolarThermal": {
                "label": "Annual Consumption of Manufacturing, Solar Thermal"
              },
              "Annual_Consumption_Energy_MiningAndQuarryingIndustry_Heat": {
                "label": "Annual Consumption of Mining And Quarrying Industry, Heat"
              },
              "Annual_Consumption_Energy_NonFerrousMetalsIndustry_Heat": {
                "label": "Annual Consumption of Non Ferrous Metals Industry, Heat"
              },
              "Annual_Consumption_Energy_NonFerrousMetalsIndustry_SolarThermal": {
                "label": "Annual Consumption of Non Ferrous Metals Industry, Solar Thermal"
              },
              "Annual Consumption of Non Ferrous Metals Industry, Solar Thermal": {
                "label": "Annual Consumption of Non Metallic Minerals Industry, Heat"
              },
              "Annual_Consumption_Energy_OilGasExtraction_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Oil Gas Extraction, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_OilRefineries_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Oil Refineries, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_OilRefineries_Refinery_FuelTransformation": {
                "label": "Annual Consumption of Oil Refineries, Refinery, Fuel Transformation"
              },
              "Annual_Consumption_Energy_PaperPulpPrintIndustry_Heat": {
                "label": "Annual Consumption of Paper Pulp Print Industry, Heat"
              },
              "Annual_Consumption_Energy_TextileAndLeatherIndustry_Heat": {
                "label": "Annual Consumption of Textile And Leather Industry, Heat"
              },
              "Annual_Consumption_Energy_TransportEquipmentIndustry_Heat\n": {
                "label": "Annual Consumption of Transport Equipment Industry, Heat"
              },
              "Annual_Consumption_Energy_TransportEquipmentIndustry_SolarThermal": {
                "label": "Annual Consumption of Transport Equipment Industry, Solar Thermal"
              },
              "Annual_Consumption_Energy_OtherIndustry_Heat": {
                "label": "Annual Consumption of UN_Other Industry, Heat"
              },
              "Annual_Consumption_Energy_OtherManufacturingIndustry_Heat": {
                "label": "Annual Consumption of UN_Other Manufacturing Industry, Heat"
              },
              "Annual_Consumption_Energy_OtherManufacturingIndustry_SolarThermal": {
                "label": "Annual Consumption of UN_Other Manufacturing Industry, Solar Thermal"
              },
              "Annual_Consumption_Energy_OtherSector_Geothermal": {
                "label": "Annual Consumption of UN_Other Sector, Geothermal"
              },
              "Annual_Consumption_Energy_OtherSector_Heat": {
                "label": "Annual Consumption of UN_Other Sector, Heat"
              },
              "Annual_Consumption_Energy_OtherSector_SolarThermal": {
                "label": "Annual Consumption of UN_Other Sector, Solar Thermal"
              },
              "Annual_Consumption_Energy_WoodAndWoodProductsIndustry_Heat": {
                "label": "Annual Consumption of Wood And Wood Products Industry, Heat"
              }
            },
            "val": "Annual_Consumption_Electricity"
          },
          "options.first_stat_var__health__stat_var_name": {
            "type": "select",
            "label": "Statistical variable",
            "show_if": "options.first_stat_var__category=='health'",
            "required": true,
            "options": {
              "FertilityRate_Person_Female": {
                "label": "Fertility Rate"
              },
              "LifeExpectancy_Person": {
                "label": "Life Expectancy"
              },
              "Count_BirthEvent_LiveBirth_AsFractionOf_Count_Person": {
                "label": "Number of live births occurring during the year, Per Capita"
              },
              "Count_Person_20To79Years_Diabetes_AsFractionOf_Count_Person_20To79Years": {
                "label": "Percentage of people ages 20-79 who have type 1 or type 2 diabetes"
              },
              "Count_Death": {
                "label": "Count of Mortality Event"
              },
              "Count_Person_15OrMoreYears_Smoking_AsFractionOf_Count_Person_15OrMoreYears": {
                "label": "15 Years or More, Smoking Population Per Capita 15 or More Years"
              },
              "Count_Person_Upto4Years_Overweight_AsFractionOf_Count_Person_Upto4Years": {
                "label": "4 Years or Less, Overweight Population Per Capita Upto 4 Years"
              }
            },
            "val": "FertilityRate_Person_Female"
          }
        }
      },
      "second_stat_var_frame": {
        "type": "fieldset",
        "label": "Pick 2nd statistical variable",
        "repeat": false,
        "fields": {
          "options.second_stat_var__category": {
            "type": "select",
            "label": "Category",
            "required": true,
            "options": {
              "climate": {
                "label": "Climate"
              },
              "covid19": {
                "label": "COVID-19"
              },
              "crime": {
                "label": "Crime"
              },
              "demographics": {
                "label": "Demographics"
              },
              "economic": {
                "label": "Economic"
              },
              "education": {
                "label": "Education"
              },
              "employment": {
                "label": "Employment"
              },
              "energy": {
                "label": "Energy"
              },
              "health": {
                "label": "Health"
              }
            },
            "val": "demographics"
          },
          "options.second_stat_var__climate__stat_var_name": {
            "type": "select",
            "label": "Statistical variable",
            "show_if": "options.second_stat_var__category=='climate'",
            "required": true,
            "options": {
              "Amount_Emissions_CarbonDioxide_PerCapita": {
                "label": "CO2 Emissions Per Capita"
              },
              "Count_EarthquakeEvent": {
                "label": "Count of Earthquake Event"
              },
              "Count_EarthquakeEvent_M3To4": {
                "label": "Count of Earthquake Event of 3 - 4 Magnitude"
              },
              "Count_EarthquakeEvent_M3Onwards": {
                "label": "Count of Earthquake Event of 3 Magnitude or More"
              },
              "Count_EarthquakeEvent_M4To5": {
                "label": "Count of Earthquake Event of 4 - 5 Magnitude"
              },
              "Count_EarthquakeEvent_M4Onwards": {
                "label": "Count of Earthquake Event of 4 Magnitude or More"
              },
              "Count_EarthquakeEvent_M5To6": {
                "label": "Count of Earthquake Event of 5 - 6 Magnitude"
              },
              "Count_EarthquakeEvent_M5Onwards": {
                "label": "Count of Earthquake Event of 5 Magnitude or More"
              }
            },
            "val": "Amount_Emissions_CarbonDioxide_PerCapita"
          },
          "options.second_stat_var__crime__stat_var_name": {
            "type": "select",
            "label": "Statistical variable",
            "show_if": "options.second_stat_var__category=='crime'",
            "required": true,
            "options": {
              "Count_CriminalActivities_MurderAndNonNegligentManslaughter_AsFractionOf_Count_Person": {
                "label": "Count of Murder And Non Negligent Manslaughter Per Capita"
              },
              "Count_CriminalActivities_MurderAndNonNegligentManslaughter_Female_AsFractionOf_Count_Person_Female": {
                "label": "Count of Female Murder And Non Negligent Manslaughter Per Female Capita"
              },
              "Count_CriminalActivities_MurderAndNonNegligentManslaughter_Male_AsFractionOf_Count_Person_Male": {
                "label": "Count of Male Murder And Non Negligent Manslaughter Per Male Capita"
              }
            },
            "val": "Count_CriminalActivities_MurderAndNonNegligentManslaughter_AsFractionOf_Count_Person"
          },
          "options.second_stat_var__demographics__stat_var_name": {
            "type": "select",
            "label": "Statistical variable",
            "show_if": "options.second_stat_var__category=='demographics'",
            "required": true,
            "options": {
              "Count_Person": {
                "label": "Population"
              },
              "GrowthRate_Count_Person": {
                "label": "Population Growth Rate"
              },
              "Count_Person_PerArea": {
                "label": "Population Density"
              },
              "Count_Person_IsInternetUser_PerCapita": {
                "label": "Percent of Internet Users"
              },
              "Count_Person_ResidingLessThan5MetersAboveSeaLevel_AsFractionOf_Count_Person": {
                "label": "Percent of Population Living in Areas Below 5 Meters Elevation"
              },
              "Count_Person_Rural": {
                "label": "Rural Population"
              },
              "Count_Person_Urban": {
                "label": "Urban Population"
              }
            },
            "val": "Count_Person"
          },
          "options.second_stat_var__economic__stat_var_name": {
            "type": "select",
            "label": "Statistical variable",
            "show_if": "options.second_stat_var__category=='economic'",
            "required": true,
            "options": {
              "Amount_EconomicActivity_GrossDomesticProduction_Nominal": {
                "label": "GDP"
              },
              "GrowthRate_Amount_EconomicActivity_GrossDomesticProduction": {
                "label": "Growth Rate of GDP"
              },
              "Amount_EconomicActivity_GrossNationalIncome_PurchasingPowerParity": {
                "label": "GNI (Purchasing Power Parity)"
              },
              "Count_Product_MobileCellularSubscription_AsFractionOf_Count_Person": {
                "label": "Mobile Subscriptions Per Capita"
              },
              "Amount_Debt_Government": {
                "label": "Debt With Government"
              },
              "Amount_Debt_Government_AsAFractionOfGrossDomesticProduction": {
                "label": "Debt With Government as Fraction of GDP"
              },
              "GiniIndex_EconomicActivity": {
                "label": "Gini Index of Economic Activity"
              },
              "Amount_EconomicActivity_ExpenditureActivity_MilitaryExpenditure_Government": {
                "label": "Military Expenditure, Government"
              },
              "Amount_EconomicActivity_ExpenditureActivity_MilitaryExpenditure_Government_AsFractionOf_Amount_EconomicActivity_GrossDomesticProduction_Nominal": {
                "label": "Military Expenditure, Government as Fraction of Economic Activity Gross Domestic Production Nominal"
              },
              "Amount_EconomicActivity_ExpenditureActivity_EducationExpenditure_Government_AsFractionOf_Amount_EconomicActivity_ExpenditureActivity_Government": {
                "label": "Education Expenditure, Government as Fraction of Economic Activity Expenditure Activity Government"
              },
              "Amount_EconomicActivity_ExpenditureActivity_EducationExpenditure_Government_AsFractionOf_Amount_EconomicActivity_GrossDomesticProduction_Nominal": {
                "label": "Education Expenditure, Government as Fraction of Economic Activity Gross Domestic Production Nominal"
              },
              "Amount_EconomicActivity_ExpenditureActivity_HealthcareExpenditure_AsFractionOf_Count_Person": {
                "label": "Healthcare Expenditure Per Capita"
              },
              "Amount_EconomicActivity_ExpenditureActivity_TertiaryEducationExpenditure_Government_AsFractionOf_Amount_EconomicActivity_ExpenditureActivity_EducationExpenditure_Government": {
                "label": "Tertiary Education Expenditure, Government as Fraction of Economic Activity Expenditure Activity Education Expenditure Government"
              },
              "Amount_EconomicActivity_GrossValueAdded_RealValue": {
                "label": "Gross Value Added (Real Value)"
              },
              "Amount_EconomicActivity_GrossValueAdded_ISICAgricultureHuntingForestryFishing_RealValue": {
                "label": "Gross Value Added, Agriculture, Hunting, Forestry, Fishing (Real Value)"
              },
              "Amount_EconomicActivity_GrossValueAdded_ISICConstruction_RealValue": {
                "label": "Gross Value Added, Construction (Real Value)"
              },
              "Amount_EconomicActivity_GrossValueAdded_ISICManufacturing_RealValue": {
                "label": "Gross Value Added, Manufacturing (Real Value)"
              },
              "Amount_EconomicActivity_GrossValueAdded_ISICMiningManufacturingUtilities_RealValue": {
                "label": "Gross Value Added, Mining, Manufacturing, Utilities (Real Value)"
              },
              "Amount_EconomicActivity_GrossValueAdded_ISICTransportStorageCommunications_RealValue": {
                "label": "Gross Value Added, Transport, Storage And Communications (Real Value)"
              },
              "Amount_EconomicActivity_GrossValueAdded_ISICWholesaleRetailTradeRestaurantsHotels_RealValue": {
                "label": "Gross Value Added, Wholesale, Retail Trade, Restaurants And Hotels (Real Value)"
              },
              "Amount_Remittance_OutwardRemittance": {
                "label": "Outward Remittance"
              },
              "Amount_Remittance_InwardRemittance": {
                "label": "Inward Remittance"
              },
              "Amount_Remittance_InwardRemittance_AsFractionOf_Amount_EconomicActivity_GrossDomesticProduction_Nominal": {
                "label": "Inward Remittance as Fraction of Economic Activity GDP"
              },
              "Amount_Stock": {
                "label": "Stock"
              },
              "Amount_Stock_AsFractionOf_Amount_EconomicActivity_GrossDomesticProduction_Nominal": {
                "label": "Stock as Fraction of Economic Activity GDP"
              }
            },
            "val": "Amount_EconomicActivity_GrossDomesticProduction_Nominal"
          },
          "options.second_stat_var__education__stat_var_name": {
            "type": "select",
            "label": "Statistical variable",
            "show_if": "options.second_stat_var__category=='education'",
            "required": true,
            "options": {
              "Count_Person_25OrMoreYears_BachelorsDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears": {
                "label": "Bachelors Degree or Higher Population Per Capita 25 or More Years"
              },
              "Count_Person_25OrMoreYears_Female_BachelorsDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears_Female": {
                "label": "Bachelors Degree or Higher, Female Population Per Capita 25 or More Years Female"
              },
              "Count_Person_25OrMoreYears_Male_BachelorsDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears_Male": {
                "label": "Bachelors Degree or Higher, Male Population Per Capita 25 or More Years Male"
              },
              "Count_Person_25OrMoreYears_DoctorateDegree_AsFractionOf_Count_Person_25OrMoreYears": {
                "label": "Doctorate Degree Population Per Capita 25 or More Years"
              },
              "Count_Person_25OrMoreYears_Female_DoctorateDegree_AsFractionOf_Count_Person_25OrMoreYears_Female": {
                "label": "Doctorate Degree, Female Population Per Capita 25 or More Years Female"
              },
              "Count_Person_25OrMoreYears_Male_DoctorateDegree_AsFractionOf_Count_Person_25OrMoreYears_Male": {
                "label": "Doctorate Degree, Male Population Per Capita 25 or More Years Male"
              },
              "Count_Person_25OrMoreYears_MastersDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears": {
                "label": "Masters Degree or Higher Population Per Capita 25 or More Years"
              },
              "Count_Person_25OrMoreYears_Female_MastersDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears_Female": {
                "label": "Masters Degree or Higher, Female Population Per Capita 25 or More Years Female"
              },
              "Count_Person_25OrMoreYears_Male_MastersDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears_Male": {
                "label": "Masters Degree or Higher, Male Population Per Capita 25 or More Years Male"
              },
              "Count_Person_25OrMoreYears_TertiaryEducation_AsFractionOf_Count_Person_25OrMoreYears": {
                "label": "Tertiary Education Population Per Capita 25 or More Years"
              },
              "Count_Person_25OrMoreYears_Female_TertiaryEducation_AsFractionOf_Count_Person_25OrMoreYears_Female": {
                "label": "Tertiary Education, Female Population Per Capita 25 or More Years Female"
              },
              "Count_Person_25OrMoreYears_Male_TertiaryEducation_AsFractionOf_Count_Person_25OrMoreYears_Male": {
                "label": "Tertiary Education, Male Population Per Capita 25 or More Years Male"
              }
            },
            "val": "Count_Person_25OrMoreYears_BachelorsDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears"
          },
          "options.second_stat_var__employment__stat_var_name": {
            "type": "select",
            "label": "Statistical variable",
            "show_if": "options.second_stat_var__category=='employment'",
            "required": true,
            "options": {
              "UnemploymentRate_Person": {
                "label": "Unemployment Rate"
              },
              "Count_Person_InLaborForce": {
                "label": "In Labor Force Population"
              },
              "Count_Person_15To64Years_InLaborForce_AsFractionOf_Count_Person_15To64Years": {
                "label": "15 - 64 Years, in Labor Force Population Per Capita 15 To 64 Years"
              },
              "Count_Person_15To64Years_Female_InLaborForce_AsFractionOf_Count_Person_15To64Years_Female": {
                "label": "15 - 64 Years, in Labor Force, Female Population Per Capita 15 To 64 Years Female"
              },
              "Count_Person_15To64Years_Male_InLaborForce_AsFractionOf_Count_Person_15To64Years_Male": {
                "label": "15 - 64 Years, in Labor Force, Male Population Per Capita 15 To 64 Years Male"
              },
              "Count_Person_15OrMoreYears_InLaborForce_Female_AsFractionOf_Count_Person_InLaborForce": {
                "label": "15 Years or More, in Labor Force, Female Population Per Capita in Labor Force"
              }
            },
            "val": "UnemploymentRate_Person"
          },
          "options.second_stat_var__energy__stat_var_name": {
            "type": "select",
            "label": "Statistical variable",
            "show_if": "options.second_stat_var__category=='energy'",
            "required": true,
            "options": {
              "Annual_Consumption_Electricity": {
                "label": "Annual Consumption of Electricity"
              },
              "Annual_Exports_Electricity": {
                "label": "Annual Exports of Electricity"
              },
              "Annual_Generation_Electricity": {
                "label": "Net generation, all fuels, all sectors, annual"
              },
              "Annual_Imports_Electricity": {
                "label": "Annual Imports of Electricity"
              },
              "Annual_Loss_Electricity": {
                "label": "Annual Loss of Electricity"
              },
              "Annual_Consumption_Electricity_Agriculture": {
                "label": "Annual Consumption for Agriculture"
              },
              "Annual_Consumption_Electricity_ChemicalPetrochemicalIndustry": {
                "label": "Annual Consumption for Chemical Petrochemical Industry"
              },
              "Annual_Consumption_Electricity_CommerceAndPublicServices": {
                "label": "Annual Consumption for Commerce And Public Services"
              },
              "Annual_Consumption_Electricity_ConstructionIndustry": {
                "label": "Annual Consumption for Construction Industry"
              },
              "Annual_Consumption_Electricity_FoodAndTobaccoIndustry": {
                "label": "Annual Consumption for Food And Tobacco Industry"
              },
              "Annual_Consumption_Electricity_Households": {
                "label": "Annual Consumption for Households"
              },
              "Annual_Consumption_Electricity_IronSteel": {
                "label": "Annual Consumption for Iron Steel"
              },
              "Annual_Consumption_Electricity_MachineryIndustry": {
                "label": "Annual Consumption for Machinery Industry"
              },
              "Annual_Consumption_Electricity_Manufacturing": {
                "label": "Annual Consumption for Manufacturing"
              },
              "Annual_Consumption_Electricity_MiningAndQuarryingIndustry": {
                "label": "Annual Consumption for Mining And Quarrying Industry"
              },
              "Annual_Consumption_Electricity_NonFerrousMetalsIndustry": {
                "label": "Annual Consumption for Non Ferrous Metals Industry"
              },
              "Annual_Consumption_Electricity_NonMetallicMineralsIndustry": {
                "label": "Annual Consumption for Non Metallic Minerals Industry"
              },
              "Annual_Consumption_Electricity_PaperPulpPrintIndustry": {
                "label": "Annual Consumption for Paper Pulp Print Industry"
              },
              "Annual_Consumption_Electricity_RailTransport": {
                "label": "Annual Consumption for Rail Transport"
              },
              "Annual_Consumption_Electricity_RoadTransport": {
                "label": "Annual Consumption for Road Transport"
              },
              "Annual_Consumption_Electricity_TextileAndLeatherIndustry": {
                "label": "Annual Consumption for Textile And Leather Industry"
              },
              "Annual_Consumption_Electricity_TransportEquipmentIndustry": {
                "label": "Annual Consumption for Transport Equipment Industry"
              },
              "Annual_Consumption_Electricity_TransportIndustry": {
                "label": "Annual Consumption for Transport Industry"
              },
              "Annual_Consumption_Electricity_OtherIndustry": {
                "label": "Annual Consumption for UN_Other Industry"
              },
              "Annual_Consumption_Electricity_OtherManufacturingIndustry": {
                "label": "Annual Consumption for UN_Other Manufacturing Industry"
              },
              "Annual_Consumption_Electricity_OtherSector": {
                "label": "Annual Consumption for UN_Other Sector"
              },
              "Annual_Consumption_Electricity_WoodAndWoodProductsIndustry": {
                "label": "Annual Consumption for Wood And Wood Products Industry"
              },
              "Annual_Consumption_Electricity_BriquettingPlants_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Briquetting Plants, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_CoalMines_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Coal Mines, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_CokeOvens_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Coke Ovens, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_ElectricityGeneration_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Electricity Generation, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_EnergyIndustry_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Energy Industry, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_GasWorks_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Gas Works, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_Industry_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Industry, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_NuclearFuelProcessing_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Nuclear Fuel Processing, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_OilGasExtraction_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Oil Gas Extraction, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_OilRefineries_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Oil Refineries, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_PumpStoragePlants_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Pump Storage Plants, Energy Industry Own Use"
              },
              "Annual_Generation_Electricity_BioGas_ThermalElectricity": {
                "label": "Annual Generation From Bio Gas, Thermal Electricity"
              },
              "Annual_Consumption_Energy_Agriculture_SolarThermal": {
                "label": "Annual Consumption of Agriculture, Solar Thermal"
              },
              "Annual_Consumption_Energy_BriquettingPlants_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Briquetting Plants, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_ChemicalPetrochemicalIndustry_Heat": {
                "label": "Annual Consumption of Chemical Petrochemical Industry, Heat"
              },
              "Annual_Consumption_Energy_CoalMines_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Coal Mines, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_CokeOvens_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Coke Ovens, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_CommerceAndPublicServices_Geothermal": {
                "label": "Annual Consumption of Commerce And Public Services, Geothermal"
              },
              "Annual_Consumption_Energy_CommerceAndPublicServices_Heat": {
                "label": "Annual Consumption of Commerce And Public Services, Heat"
              },
              "Annual_Consumption_Energy_CommerceAndPublicServices_SolarThermal": {
                "label": "Annual Consumption of Commerce And Public Services, Solar Thermal"
              },
              "Annual_Consumption_Energy_ElectricityGeneration_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Electricity Generation, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_EnergyIndustry_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Energy Industry, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_FoodAndTobaccoIndustry_Heat": {
                "label": "Annual Consumption of Food And Tobacco Industry, Heat"
              },
              "Annual_Consumption_Energy_GasWorks_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Gas Works, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_Households_Geothermal": {
                "label": "Annual Consumption of Households, Geothermal"
              },
              "Annual_Consumption_Energy_Households_Heat": {
                "label": "Annual Consumption of Households, Heat"
              },
              "Annual_Consumption_Energy_Households_SolarThermal": {
                "label": "Annual Consumption of Households, Solar Thermal"
              },
              "Annual_Consumption_Energy_IronSteel_Heat": {
                "label": "Annual Consumption of Iron Steel, Heat"
              },
              "Annual_Consumption_Energy_MachineryIndustry_Heat": {
                "label": "Annual Consumption of Machinery Industry, Heat"
              },
              "Annual_Consumption_Energy_MachineryIndustry_SolarThermal": {
                "label": "Annual Consumption of Machinery Industry, Solar Thermal"
              },
              "Annual_Consumption_Energy_Manufacturing_Heat": {
                "label": "Annual Consumption of Manufacturing, Heat"
              },
              "Annual_Consumption_Energy_Manufacturing_SolarThermal": {
                "label": "Annual Consumption of Manufacturing, Solar Thermal"
              },
              "Annual_Consumption_Energy_MiningAndQuarryingIndustry_Heat": {
                "label": "Annual Consumption of Mining And Quarrying Industry, Heat"
              },
              "Annual_Consumption_Energy_NonFerrousMetalsIndustry_Heat": {
                "label": "Annual Consumption of Non Ferrous Metals Industry, Heat"
              },
              "Annual_Consumption_Energy_NonFerrousMetalsIndustry_SolarThermal": {
                "label": "Annual Consumption of Non Ferrous Metals Industry, Solar Thermal"
              },
              "Annual Consumption of Non Ferrous Metals Industry, Solar Thermal": {
                "label": "Annual Consumption of Non Metallic Minerals Industry, Heat"
              },
              "Annual_Consumption_Energy_OilGasExtraction_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Oil Gas Extraction, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_OilRefineries_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Oil Refineries, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_OilRefineries_Refinery_FuelTransformation": {
                "label": "Annual Consumption of Oil Refineries, Refinery, Fuel Transformation"
              },
              "Annual_Consumption_Energy_PaperPulpPrintIndustry_Heat": {
                "label": "Annual Consumption of Paper Pulp Print Industry, Heat"
              },
              "Annual_Consumption_Energy_TextileAndLeatherIndustry_Heat": {
                "label": "Annual Consumption of Textile And Leather Industry, Heat"
              },
              "Annual_Consumption_Energy_TransportEquipmentIndustry_Heat\n": {
                "label": "Annual Consumption of Transport Equipment Industry, Heat"
              },
              "Annual_Consumption_Energy_TransportEquipmentIndustry_SolarThermal": {
                "label": "Annual Consumption of Transport Equipment Industry, Solar Thermal"
              },
              "Annual_Consumption_Energy_OtherIndustry_Heat": {
                "label": "Annual Consumption of UN_Other Industry, Heat"
              },
              "Annual_Consumption_Energy_OtherManufacturingIndustry_Heat": {
                "label": "Annual Consumption of UN_Other Manufacturing Industry, Heat"
              },
              "Annual_Consumption_Energy_OtherManufacturingIndustry_SolarThermal": {
                "label": "Annual Consumption of UN_Other Manufacturing Industry, Solar Thermal"
              },
              "Annual_Consumption_Energy_OtherSector_Geothermal": {
                "label": "Annual Consumption of UN_Other Sector, Geothermal"
              },
              "Annual_Consumption_Energy_OtherSector_Heat": {
                "label": "Annual Consumption of UN_Other Sector, Heat"
              },
              "Annual_Consumption_Energy_OtherSector_SolarThermal": {
                "label": "Annual Consumption of UN_Other Sector, Solar Thermal"
              },
              "Annual_Consumption_Energy_WoodAndWoodProductsIndustry_Heat": {
                "label": "Annual Consumption of Wood And Wood Products Industry, Heat"
              }
            },
            "val": "Annual_Consumption_Electricity"
          },
          "options.second_stat_var__health__stat_var_name": {
            "type": "select",
            "label": "Statistical variable",
            "show_if": "options.second_stat_var__category=='health'",
            "required": true,
            "options": {
              "FertilityRate_Person_Female": {
                "label": "Fertility Rate"
              },
              "LifeExpectancy_Person": {
                "label": "Life Expectancy"
              },
              "Count_BirthEvent_LiveBirth_AsFractionOf_Count_Person": {
                "label": "Number of live births occurring during the year, Per Capita"
              },
              "Count_Person_20To79Years_Diabetes_AsFractionOf_Count_Person_20To79Years": {
                "label": "Percentage of people ages 20-79 who have type 1 or type 2 diabetes"
              },
              "Count_Death": {
                "label": "Count of Mortality Event"
              },
              "Count_Person_15OrMoreYears_Smoking_AsFractionOf_Count_Person_15OrMoreYears": {
                "label": "15 Years or More, Smoking Population Per Capita 15 or More Years"
              },
              "Count_Person_Upto4Years_Overweight_AsFractionOf_Count_Person_Upto4Years": {
                "label": "4 Years or Less, Overweight Population Per Capita Upto 4 Years"
              }
            },
            "val": "FertilityRate_Person_Female"
          }
        }
      },
      "options.output_as_chart": {
        "type": "checkbox",
        "label": "Output a Graph",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
}
,
"/PayStripeOptions.json/PayStripeOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.provider": {
        "type": "hidden",
        "val": "stripe"
      },
      "options.type": {
        "type": "select",
        "label": "Payment Type",
        "options": {
          "charge": {
            "label": "Charge"
          },
          "transfer": {
            "label": "Transfer"
          }
        },
        "val": "charge",
        "required": true
      },
      "options.charge_type": {
        "type": "select",
        "label": "Charge Type",
        "show_if": "options.provider=='stripe' && options.type=='charge'",
        "options": {
          "charge_without_invoice": {
            "label": "Immediate charge without sending invoice"
          },
          "send_invoice": {
            "label": "Only send invoice"
          },
          "send_invoice_immediate_charge": {
            "label": "Send invoice and Immediate charge"
          }
        },
        "val": "send_invoice_immediate_charge",
        "required": true
      },
      "options.stripe.secret_key": {
        "type": "password",
        "label": "Stripe Secret Key",
        "show_if": "options.provider=='stripe'",
        "required": true,
        "val": "",
        "width": "100%",
        "breakLine": true
      }
    }
  }
},
"/FlexmonsterColumnLineOptions.json/FlexmonsterColumnLineOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "show_if": "options.configure_manual=='true'",
    "repeat": false,
    "fields": {
      "options.type": {
        "type": "hidden",
        "val": "column_line_chart"
      },
      "options.chart_type": {
        "type": "hidden",
        "val": "column_line"
      },
      "options.add_column_cols": {
        "type": "checkbox",
        "label": "by Category",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.column_cols": {
        "type": "fieldset",
        "label": "Category column(s)",
        "show_if": "options.add_column_cols=='true'",
        "repeat": true,
        "fields": {
          "column_col": {
            "type": "select",
            "label": "Category column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "is_date": {
            "type": "checkbox",
            "label": "Is Date",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.row_cols": {
        "type": "fieldset",
        "label": "Series column(s)",
        "repeat": true,
        "fields": {
          "row_col": {
            "type": "select",
            "label": "Series column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "is_date": {
            "type": "checkbox",
            "label": "Is Date",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "measure_cols_frame": {
        "type": "fieldset",
        "label": "Value column(s)",
        "repeat": false,
        "fields": {
          "options.column_chart_measure_col": {
            "type": "select",
            "label": "Value Column of Column Chart",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "options.column_chart_aggregation": {
            "type": "select",
            "label": "Aggregation of Column Chart",
            "options": {
              "sum": {
                "label": "Sum"
              },
              "count": {
                "label": "Count"
              },
              "distinctcount": {
                "label": "Distinct Count"
              },
              "average": {
                "label": "Average"
              },
              "median": {
                "label": "Median"
              },
              "product": {
                "label": "Product"
              },
              "min": {
                "label": "Min"
              },
              "max": {
                "label": "Max"
              },
              "stdevp": {
                "label": "Population Standard Deviation"
              },
              "stdevs": {
                "label": "Sample Standard Deviation"
              },
              "percent": {
                "label": "Percent"
              }
            },
            "val": "sum",
            "required": true,
            "breakLine": true
          },
          "options.line_chart_measure_col": {
            "type": "select",
            "label": "Value Column of Line Chart",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "options.line_chart_aggregation": {
            "type": "select",
            "label": "Aggregation of Line Chart",
            "options": {
              "sum": {
                "label": "Sum"
              },
              "count": {
                "label": "Count"
              },
              "distinctcount": {
                "label": "Distinct Count"
              },
              "average": {
                "label": "Average"
              },
              "median": {
                "label": "Median"
              },
              "product": {
                "label": "Product"
              },
              "min": {
                "label": "Min"
              },
              "max": {
                "label": "Max"
              },
              "stdevp": {
                "label": "Population Standard Deviation"
              },
              "stdevs": {
                "label": "Sample Standard Deviation"
              },
              "percent": {
                "label": "Percent"
              }
            },
            "val": "sum",
            "required": true,
            "breakLine": true
          }
        }
      }
    }
  }
}
,
"/DCDemographicsWorldDataOptions.json/DCDemographicsWorldDataOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.group_by": {
        "type": "select",
        "label": "Group By",
        "required": true,
        "options": {
          "Region": {
            "label": "Region"
          },
          "Income Group": {
            "label": "Income Group"
          }
        },
        "val": "Region"
      },
      "options.stat_var_name": {
        "type": "select",
        "label": "Statistics Data",
        "required": true,
        "options": {
          "Count_Person": {
            "label": "Population"
          },
          "GrowthRate_Count_Person": {
            "label": "Population Growth Rate"
          },
          "Count_Person_PerArea": {
            "label": "Population Density"
          },
          "Count_Person_IsInternetUser_PerCapita": {
            "label": "Percent of Internet Users"
          },
          "Count_Person_ResidingLessThan5MetersAboveSeaLevel_AsFractionOf_Count_Person": {
            "label": "Percent of Population Living in Areas Below 5 Meters Elevation"
          },
          "Count_Person_Rural": {
            "label": "Rural Population"
          },
          "Count_Person_Urban": {
            "label": "Urban Population"
          }
        },
        "val": "Count_Person"
      },
      "options.per_capita": {
        "type": "checkbox",
        "label": "Per capita",
        "show_if": "false",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.all_countries": {
        "type": "checkbox",
        "label": "All countries",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.output_as_chart": {
        "type": "checkbox",
        "label": "Output a Graph",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "options.graph_type": {
        "type": "select",
        "label": "Graph Type",
        "show_if": "options.output_as_chart=='true'",
        "required": true,
        "options": {
          "zoomable_sunburst": {
            "label": "Sunburst"
          },
          "tidy_tree": {
            "label": "Tree"
          },
          "treemap": {
            "label": "Treemap"
          }
        },
        "val": "zoomable_sunburst",
        "breakLine": true
      }
    }
  }
}
,
"/UpdateTaskInput.json/UpdateTaskInput.json": {
  "select_task_frame": {
    "type": "fieldset",
    "label": "Select Task",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "input_task": {
        "type": "select",
        "label": "Select Task",
        "bind": "TASKS",
        "empty": "",
        "required": true,
        "breakLine": true
      },
      "table_id": {
        "type": "select",
        "label": "Select JSON Table",
        "bind": "TABLES",
        "empty": "",
        "required": true,
        "breakLine": true
      }
    }
  }
}
,
"/DCHealthWorldDataOptions.json/DCHealthWorldDataOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.group_by": {
        "type": "select",
        "label": "Group By",
        "required": true,
        "options": {
          "Region": {
            "label": "Region"
          },
          "Income Group": {
            "label": "Income Group"
          }
        },
        "val": "Region",
        "breakLine": true
      },
      "options.stat_var_name": {
        "type": "select",
        "label": "Statistics Data",
        "required": true,
        "options": {
          "FertilityRate_Person_Female": {
            "label": "Fertility Rate"
          },
          "LifeExpectancy_Person": {
            "label": "Life Expectancy"
          },
          "Count_BirthEvent_LiveBirth_AsFractionOf_Count_Person": {
            "label": "Number of live births occurring during the year, Per Capita"
          },
          "Count_Person_20To79Years_Diabetes_AsFractionOf_Count_Person_20To79Years": {
            "label": "Percentage of people ages 20-79 who have type 1 or type 2 diabetes"
          },
          "Count_Death": {
            "label": "Count of Mortality Event"
          },
          "Count_Person_15OrMoreYears_Smoking_AsFractionOf_Count_Person_15OrMoreYears": {
            "label": "15 Years or More, Smoking Population Per Capita 15 or More Years"
          },
          "Count_Person_Upto4Years_Overweight_AsFractionOf_Count_Person_Upto4Years": {
            "label": "4 Years or Less, Overweight Population Per Capita Upto 4 Years"
          }
        },
        "val": "FertilityRate_Person_Female"
      },
      "options.per_capita": {
        "type": "checkbox",
        "label": "Per capita",
        "show_if": "false",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.all_countries": {
        "type": "checkbox",
        "label": "All countries",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.output_as_chart": {
        "type": "checkbox",
        "label": "Output a Graph",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "options.graph_type": {
        "type": "select",
        "label": "Graph Type",
        "show_if": "options.output_as_chart=='true'",
        "required": true,
        "options": {
          "zoomable_sunburst": {
            "label": "Sunburst"
          },
          "treemap": {
            "label": "Treemap"
          }
        },
        "val": "zoomable_sunburst",
        "breakLine": true
      }
    }
  }
}
,
"/D3TreemapOptions.json/D3TreemapOptions.json": {
  "options_box": {
    "type": "fieldset",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "label": "",
    "show_if": "options.configure_manual=='true'",
    "repeat": false,
    "fields": {
      "options.chart_type": {
        "type": "hidden",
        "val": "treemap"
      },
      "options.group_cols": {
        "type": "fieldset",
        "label": "Select Group Column(s) in Order",
        "repeat": true,
        "fields": {
          "group_col": {
            "type": "select",
            "label": "Group column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.value_col": {
        "type": "select",
        "label": "Select Value Column",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      }
    }
  }
}
,
"/HolidayInput.json/HolidayInput.json": {
  "input": {
    "type": "fieldset",
    "label": "Select Input Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "input_table": {
        "type": "select",
        "label": "Select Table",
        "show_if": "options.is_generate_holiday_table=='add_column'",
        "bind": "TABLES",
        "empty": "",
        "required": true
      },
      "remove_input_table_after_processing": {
        "type": "hidden",
        "val": "false"
      },
      "is_word": {
        "type": "hidden",
        "val": "false"
      },
      "holiday_calendar_table": {
        "type": "select",
        "label": "Select Holiday Calendar Table",
        "bind": "TABLES",
        "empty": "",
        "required": true
      }
    }
  }
},
"/DataCommonsOptions.json/DataCommonsOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.category": {
        "type": "select",
        "label": "Data Category",
        "required": true,
        "options": {
          "health": {
            "label": "Health"
          },
          "demographics": {
            "label": "Demographics"
          },
          "economic": {
            "label": "Economic"
          }
        },
        "val": "health"
      },
      "options.health__stat_var": {
        "type": "select",
        "label": "Statistics Data",
        "show_if": "options.category=='health'",
        "required": true,
        "options": {
          "CumulativeCount_Vaccine_COVID_19_Administered": {
            "label": "Cumulative Count of COVID_19, Vaccine Administered"
          },
          "IncrementalCount_Vaccine_COVID_19_Administered": {
            "label": "Incremental Count of COVID_19, Vaccine Administered"
          },
          "Count_BirthEvent_LiveBirth_AsFractionOf_Count_Person": {
            "label": "Count_BirthEvent_LiveBirth_AsFractionOf_Count_Person"
          }
        },
        "val": "CumulativeCount_Vaccine_COVID_19_Administered"
      },
      "options.demographics__stat_var": {
        "type": "select",
        "label": "Statistics Data",
        "show_if": "options.category=='demographics'",
        "required": true,
        "options": {
          "Count_Person": {
            "label": "Population"
          },
          "GrowthRate_Count_Person": {
            "label": "Population Growth Rate"
          },
          "Count_Person_PerArea": {
            "label": "Population Density"
          }
        },
        "val": "Count_Person"
      },
      "options.economic__stat_var": {
        "type": "select",
        "label": "Statistics Data",
        "show_if": "options.category=='economic'",
        "required": true,
        "options": {
          "Amount_EconomicActivity_GrossDomesticProduction_Nominal": {
            "label": "Amount of Gross Domestic Production (Nominal)"
          },
          "Amount_EconomicActivity_GrossDomesticProduction_Nominal_PerCapita": {
            "label": "Amount of Gross Domestic Production Per Capita (Nominal)"
          },
          "GrowthRate_Amount_EconomicActivity_GrossDomesticProduction": {
            "label": "Growth Rate Amount of Gross Domestic Production"
          },
          "Amount_EconomicActivity_GrossNationalIncome_PurchasingPowerParity": {
            "label": "Amount of Gross National Income (Purchasing Power Parity)"
          },
          "Amount_EconomicActivity_GrossNationalIncome_PurchasingPowerParity_PerCapita": {
            "label": "Amount of Gross National Income as Fraction of Per Capita (Purchasing Power Parity)"
          },
          "Count_Product_MobileCellularSubscription_AsFractionOf_Count_Person": {
            "label": "Mobile Subscriptions Per Capita"
          }
        },
        "val": "Amount_EconomicActivity_GrossDomesticProduction_Nominal",
        "breakLine": true
      },
      "options.country": {
        "type": "select",
        "label": "Country",
        "required": true,
        "options": {
          "ALB": {
            "label": "Albania"
          },
          "AUT": {
            "label": "Austria"
          },
          "BEL": {
            "label": "Belgium"
          },
          "BLR": {
            "label": "Belarus"
          },
          "BGR": {
            "label": "Bulgaria"
          },
          "CAN": {
            "label": "Canada"
          },
          "CHN": {
            "label": "China"
          },
          "HRV": {
            "label": "Croatia"
          },
          "DNK": {
            "label": "Denmark"
          },
          "EST": {
            "label": "Estonia"
          },
          "FIN": {
            "label": "Finland"
          },
          "FRA": {
            "label": "France"
          },
          "DEU": {
            "label": "Germany"
          },
          "GRC": {
            "label": "Greece"
          },
          "HUN": {
            "label": "Hungary"
          },
          "ISL": {
            "label": "Iceland"
          },
          "IRL": {
            "label": "Ireland"
          },
          "ITA": {
            "label": "Italy"
          },
          "JPN": {
            "label": "Japan"
          },
          "LVA": {
            "label": "Latvia"
          },
          "LTU": {
            "label": "Lithuania"
          },
          "LUX": {
            "label": "Luxembourg"
          },
          "MLT": {
            "label": "Malta"
          },
          "MNE": {
            "label": "Montenegro"
          },
          "MDA": {
            "label": "Moldova"
          },
          "NLD": {
            "label": "Netherlands"
          },
          "MKD": {
            "label": "North Macedonia"
          },
          "NOR": {
            "label": "Norway"
          },
          "POL": {
            "label": "Poland"
          },
          "PRT": {
            "label": "Portugal"
          },
          "ROU": {
            "label": "Romania"
          },
          "RUS": {
            "label": "Russia"
          },
          "SRB": {
            "label": "Serbia"
          },
          "SVK": {
            "label": "Slovakia"
          },
          "SVN": {
            "label": "Slovenia"
          },
          "ESP": {
            "label": "Spain"
          },
          "SWE": {
            "label": "Sweden"
          },
          "CHE": {
            "label": "Switzerland"
          },
          "UKR": {
            "label": "Ukraine"
          },
          "GBR": {
            "label": "United Kingdom"
          },
          "USA": {
            "label": "United States"
          }
        },
        "val": ["DEU"],
        "multiple": true,
        "breakLine": true
      },
      "options.output_as_chart": {
        "type": "checkbox",
        "label": "Output a Graph",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
}
,
"/SelectOptions.json/SelectOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "type": {
        "type": "select",
        "label": "Select Type",
        "val": "first_n",
        "options": {
          "first_n": {
            "label": "First N"
          },
          "last_n": {
            "label": "Last N"
          },
          "custom_selection": {
            "label": "Custom Selection"
          },
          "skip_first_n": {
            "label": "Skip First N"
          },
          "skip_last_n": {
            "label": "Skip Last N"
          },
          "first_n_percent": {
            "label": "First N%"
          },
          "last_n_percent": {
            "label": "Last N%"
          },
          "random_n_records": {
            "label": "Random N"
          },
          "random_n_percent": {
            "label": "Random N%"
          },
          "random_choice_1_n": {
            "label": "Random Choice 1:N"
          },
          "every_nth_record": {
            "label": "Every Nth Record"
          }
        },
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "n": {
        "type": "text",
        "label": "Input N",
        "show_if": "type!='custom_selection'",
        "val": "1",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "ranges": {
        "type": "text",
        "label": "Input Ranges",
        "show_if": "type=='custom_selection'",
        "val": "-2; 4-6; 9; 12+",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "set_offset": {
        "type": "checkbox",
        "label": "Offset",
        "show_if": "type=='every_nth_record'",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "offset": {
        "type": "text",
        "label": "Offset",
        "show_if": "type=='every_nth_record' && set_offset=='true'",
        "val": "1",
        "required": true,
        "breakLine": true
      },
      "group_by_column": {
        "type": "checkbox",
        "label": "Group by column",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "columns_to_group_box": {
        "type": "fieldset",
        "label": "Group Column",
        "show_if": "group_by_column=='true'",
        "repeat": false,
        "fields": {
          "columns_to_group": {
            "type": "select",
            "label": "Select Group Columns",
            "required": true,
            "width": "100%",
            "table": "table_id",
            "multiple": true,
            "bind": "COLUMNS",
            "breakLine": true
          }
        }
      }
    }
  }
}
,
"/ExportToOneDriveOptions.json/ExportToOneDriveOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.to": {
        "type": "hidden",
        "val": "file"
      },
      "options.webservice": {
        "type": "hidden",
        "val": "ms_one_drive"
      },
      "options.export_format": {
        "type": "select",
        "label": "Export Format",
        "options": {
          "csv_file": {
            "label": "Csv file(s)"
          },
          "word_by_word": {
            "label": "Word by Word"
          },
          "line_by_line": {
            "label": "Line by Line"
          },
          "JSON": {
            "label": "JSON"
          }
        },
        "val": "csv_file",
        "required": true
      },
      "options.semicolon_separated": {
        "type": "checkbox",
        "label": "Semicolon separated",
        "show_if": "options.webservice=='ms_one_drive' && options.export_format=='csv_file'",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "options.if_duplicated": {
        "type": "select",
        "label": "If existing",
        "show_if": "options.webservice=='github'",
        "val": "drop_if_exist",
        "options": {
          "drop_if_exist": {
            "label": "Create or Drop (if already existing)"
          },
          "error_if_exist": {
            "label": "Create New (throw error if existing)"
          },
          "error_if_not_exist": {
            "label": "Drop (throw error if not-existing)"
          },
          "append": {
            "label": "Append"
          }
        },
        "breakLine": true
      },
      "options.export_series": {
        "type": "checkbox",
        "label": "Export Series",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.file_name_column": {
        "type": "select",
        "label": "Select File Name Column",
        "show_if": "options.export_series=='true'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true,
        "breakLine": true
      },
      "options.set_file_path_column": {
        "type": "checkbox",
        "label": "Export to specified path",
        "show_if": "options.export_series=='true'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.file_path_column": {
        "type": "select",
        "label": "Select File Path Column",
        "show_if": "options.export_series=='true' && options.set_file_path_column=='true'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true,
        "breakLine": true
      }
    }
  },
  "export_link_token_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px",
    "repeat": false,
    "fields": {
      "options.github_url": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test",
        "show_if": "options.webservice=='github'",
        "val": "",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.export_dir": {
        "type": "text",
        "label": "Enter dir e.g. /MyZippyDocFiles/SubDir/",
        "show_if": "options.webservice!='github'",
        "val": "/",
        "width": "100%",
        "breakLine": true
      },
      "options.github_token": {
        "type": "text",
        "label": "Specify the Github personal access token that has write permission:",
        "show_if": "options.webservice=='github'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.github_create_pr": {
        "type": "checkbox",
        "label": "Create pull request",
        "show_if": "options.webservice=='github'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.google_authorization_code": {
        "type": "text",
        "label": "Google OAuth Authorization Code with scope https://www.googleapis.com/auth/drive. You can get it here https://developers.google.com/oauthplayground/",
        "show_if": "options.webservice=='google_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox_authorization_code": {
        "type": "text",
        "label": "Dropbox Authorization Code. You can get it here https://www.dropbox.com/oauth2/authorize?client_id=9i7woztjp94jrkw&response_type=code",
        "show_if": "options.webservice=='dropbox'",
        "required": true,
        "width": "100%",
        "breakLine": true
      }
    }
  }
}
,
"/FlexmonsterStackedOptions.json/FlexmonsterStackedOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "show_if": "options.configure_manual=='true'",
    "repeat": false,
    "fields": {
      "options.type": {
        "type": "hidden",
        "val": "stacked_chart"
      },
      "options.chart_type": {
        "type": "hidden",
        "val": "stacked_column"
      },
      "options.add_column_cols": {
        "type": "checkbox",
        "label": "by Category",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.column_cols": {
        "type": "fieldset",
        "label": "Category column(s)",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.add_column_cols=='true'",
        "repeat": true,
        "fields": {
          "column_col": {
            "type": "select",
            "label": "Category column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "is_date": {
            "type": "checkbox",
            "label": "Is Date",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.row_cols": {
        "type": "fieldset",
        "label": "Series column(s)",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "repeat": true,
        "fields": {
          "row_col": {
            "type": "select",
            "label": "Series column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "is_date": {
            "type": "checkbox",
            "label": "Is Date",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.measure_cols": {
        "type": "fieldset",
        "label": "Value column(s)",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "repeat": true,
        "fields": {
          "measure_col": {
            "type": "select",
            "label": "Value Column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "aggregation": {
            "type": "select",
            "label": "Aggregation Function",
            "options": {
              "sum": {
                "label": "Sum"
              },
              "count": {
                "label": "Count"
              },
              "distinctcount": {
                "label": "Distinct Count"
              },
              "average": {
                "label": "Average"
              },
              "median": {
                "label": "Median"
              },
              "product": {
                "label": "Product"
              },
              "min": {
                "label": "Min"
              },
              "max": {
                "label": "Max"
              },
              "stdevp": {
                "label": "Population Standard Deviation"
              },
              "stdevs": {
                "label": "Sample Standard Deviation"
              },
              "percent": {
                "label": "Percent"
              }
            },
            "val": "sum",
            "required": true,
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      }
    }
  }
}
,
"/FindReplaceByTableInput.json/FindReplaceByTableInput.json": {
  "use_filter": {
    "type": "checkbox",
    "label": "Use Filter",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  },
  "filter_options_box": {
    "type": "fieldset",
    "label": "Filter Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "use_filter=='true'",
    "repeat": false,
    "fields": {
      "filter": {
        "type": "fieldset",
        "label": "Add Filter Conditions",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "use_filter=='true'",
        "repeat": true,
        "fields": {
          "initial_op": {
            "type": "select",
            "label": "Select Logic Operator",
            "required": true,
            "show_if" :  "$index == 0",
            "options": {
              "if": {
                "label": "IF"
              },
              "if_not": {
                "label": "IF NOT"
              }
            },
            "val": "if"
          },
          "op": {
            "type": "select",
            "label": "Select Logic Operator",
            "required": true,
            "show_if" :  "$index > 0",
            "options": {
              "and": {
                "label": "AND"
              },
              "or": {
                "label": "OR"
              },
              "and_not": {
                "label": "AND NOT"
              },
              "or_not": {
                "label": "OR NOT"
              }
            },
            "val": "and"
          },
          "column": {
            "type": "select",
            "label": "Select Column",
            "show_if": "search_tables=='false'",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "search_tables__column_text": {
            "type": "text",
            "label": "Input Column Name",
            "show_if": "search_tables=='true' && search_tables__select_columns_by=='by_name_text'",
            "val": "",
            "required": true
          },
          "search_tables__column_order": {
            "type": "select",
            "label": "Select Column",
            "required": true,
            "show_if" :  "search_tables=='true' && search_tables__select_columns_by=='by_order'",
            "options": {
              "col1": {
                "label": "Column 1"
              },
              "col2": {
                "label": "Column 2"
              },
              "col3": {
                "label": "Column 3"
              },
              "col4": {
                "label": "Column 4"
              },
              "col5": {
                "label": "Column 5"
              },
              "col6": {
                "label": "Column 6"
              },
              "col7": {
                "label": "Column 7"
              },
              "col8": {
                "label": "Column 8"
              },
              "col9": {
                "label": "Column 9"
              },
              "col10": {
                "label": "Column 10"
              },
              "col11": {
                "label": "Column 11"
              },
              "col12": {
                "label": "Column 12"
              },
              "col13": {
                "label": "Column 13"
              },
              "col14": {
                "label": "Column 14"
              },
              "col15": {
                "label": "Column 15"
              },
              "col16": {
                "label": "Column 16"
              },
              "col17": {
                "label": "Column 17"
              },
              "col18": {
                "label": "Column 18"
              },
              "col19": {
                "label": "Column 19"
              },
              "col20": {
                "label": "Column 20"
              }
            },
            "val": ""
          },
          "condition": {
            "type": "select",
            "label": "Select Operator",
            "required": true,
            "options": {
              "CONTAINS": {
                "label": "CONTAINS"
              },
              "CONTAINED IN STRING": {
                "label": "CONTAINED IN"
              },
              "STARTS WITH": {
                "label": "STARTS WITH"
              },
              "ENDS WITH": {
                "label": "ENDS WITH"
              },
              "=": {
                "label": "EQUAL"
              },
              ">": {
                "label": "GREATER THAN"
              },
              ">=": {
                "label": "GREATER OR EQUAL"
              },
              "<": {
                "label": "SMALLER THAN"
              },
              "<=": {
                "label": "SMALLER OR EQUAL"
              },
              "EMPTY": {
                "label": "IS EMPTY"
              },
              "BLANK": {
                "label": "IS BLANK"
              },
              "IS NULL": {
                "label": "IS NULL"
              },
              "IS TRUE": {
                "label": "IS TRUE"
              },
              "IS FALSE": {
                "label": "IS FALSE"
              },
              "REGEX MATCH": {
                "label": "REGEX MATCH"
              },
              "CONTAINED IN TABLE": {
                "label": "IN TABLE"
              },
              "IN REGEX TABLE": {
                "label": "IN REGEX TABLE"
              },
              "DATE": {
                "label": "DATE"
              }
            },
            "val": "CONTAINS"
          },
          "date_condition": {
            "type": "select",
            "label": "Select Date Operator",
            "required": true,
            "show_if": "this.condition == 'DATE'",
            "options": {
              "<": {
                "label": "PRIOR"
              },
              "<=": {
                "label": "PRIOR OR EQUAL"
              },
              "=": {
                "label": "EQUAL"
              },
              ">": {
                "label": "AFTER"
              },
              ">=": {
                "label": "AFTER OR EQUAL"
              }
            },
            "val": "="
          },
          "compare_with": {
            "type": "select",
            "label": "Compare with",
            "required": true,
            "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
            "options": {
              "custom_value": {
                "label": "Custom value"
              },
              "column_value": {
                "label": "Column value"
              }
            },
            "val": "custom_value"
          },
          "self_compare_column": {
            "type": "select",
            "label": "Select Compare Column",
            "table": "table_id",
            "bind": "COLUMNS",
            "show_if": "search_tables=='false' && this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
            "required": true
          },
          "search_tables__self_compare_column_text": {
            "type": "text",
            "label": "Input Compare Column Name",
            "show_if": "search_tables=='true' && search_tables__select_columns_by=='by_name_text' && this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
            "val": "",
            "required": true
          },
          "search_tables__self_compare_column_order": {
            "type": "select",
            "label": "Select Compare Column",
            "required": true,
            "show_if" :  "search_tables=='true' && search_tables__select_columns_by=='by_order' && this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
            "options": {
              "col1": {
                "label": "Column 1"
              },
              "col2": {
                "label": "Column 2"
              },
              "col3": {
                "label": "Column 3"
              },
              "col4": {
                "label": "Column 4"
              },
              "col5": {
                "label": "Column 5"
              },
              "col6": {
                "label": "Column 6"
              },
              "col7": {
                "label": "Column 7"
              },
              "col8": {
                "label": "Column 8"
              },
              "col9": {
                "label": "Column 9"
              },
              "col10": {
                "label": "Column 10"
              },
              "col11": {
                "label": "Column 11"
              },
              "col12": {
                "label": "Column 12"
              },
              "col13": {
                "label": "Column 13"
              },
              "col14": {
                "label": "Column 14"
              },
              "col15": {
                "label": "Column 15"
              },
              "col16": {
                "label": "Column 16"
              },
              "col17": {
                "label": "Column 17"
              },
              "col18": {
                "label": "Column 18"
              },
              "col19": {
                "label": "Column 19"
              },
              "col20": {
                "label": "Column 20"
              }
            },
            "val": ""
          },
          "date_value": {
            "type": "date",
            "label": "Select Date",
            "show_if": "this.condition=='DATE'",
            "val": "",
            "required": true
          },
          "value": {
            "type": "text",
            "label": "Input Value",
            "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
            "val": "",
            "required": true
          },
          "case_sensitive": {
            "type": "select",
            "label": "Select Case Sensitive",
            "required": true,
            "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "options": {
              "yes": {
                "label": "Case Sensitive"
              },
              "no": {
                "label": "Case Insensitive"
              }
            },
            "val": "yes"
          },
          "compare_table_id": {
            "type": "select",
            "label": "Select Table",
            "bind": "TABLES",
            "empty": "",
            "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "required": true
          },
          "compare_column": {
            "type": "select",
            "label": "Select Compare Column",
            "table": "this.compare_table_id",
            "bind": "COLUMNS",
            "show_if": "search_tables=='false' && (this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE')",
            "required": true
          },
          "search_tables__compare_column_text": {
            "type": "text",
            "label": "Input Compare Column Name",
            "show_if": "search_tables=='true' && search_tables__select_columns_by=='by_name_text' && (this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE')",
            "val": "",
            "required": true
          },
          "search_tables__compare_column_order": {
            "type": "select",
            "label": "Select Compare Column",
            "required": true,
            "show_if" :  "search_tables=='true' && search_tables__select_columns_by=='by_order' && (this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE')",
            "options": {
              "col1": {
                "label": "Column 1"
              },
              "col2": {
                "label": "Column 2"
              },
              "col3": {
                "label": "Column 3"
              },
              "col4": {
                "label": "Column 4"
              },
              "col5": {
                "label": "Column 5"
              },
              "col6": {
                "label": "Column 6"
              },
              "col7": {
                "label": "Column 7"
              },
              "col8": {
                "label": "Column 8"
              },
              "col9": {
                "label": "Column 9"
              },
              "col10": {
                "label": "Column 10"
              },
              "col11": {
                "label": "Column 11"
              },
              "col12": {
                "label": "Column 12"
              },
              "col13": {
                "label": "Column 13"
              },
              "col14": {
                "label": "Column 14"
              },
              "col15": {
                "label": "Column 15"
              },
              "col16": {
                "label": "Column 16"
              },
              "col17": {
                "label": "Column 17"
              },
              "col18": {
                "label": "Column 18"
              },
              "col19": {
                "label": "Column 19"
              },
              "col20": {
                "label": "Column 20"
              }
            },
            "val": ""
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "apply_to_record": {
        "type": "checkbox",
        "label": "Apply to Record",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "apply_to_group_box": {
        "type": "fieldset",
        "label": "Apply to Group",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "apply_to_record=='false'",
        "repeat": false,
        "fields": {
          "apply_to_group_columns__all_but_selected": {
            "type": "checkbox",
            "label": "All but selected",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "apply_to_group_columns": {
            "type": "select",
            "label": "Select Group Column(s)",
            "show_if": "search_tables=='false'",
            "required": true,
            "width": "100%",
            "table": "table_id",
            "multiple": true,
            "bind": "COLUMNS"
          },
          "search_tables__apply_to_group_columns_text": {
            "type": "text",
            "label": "Group Column(s) separated by `;`",
            "show_if": "search_tables=='true' && search_tables__select_columns_by=='by_name_text'",
            "val": "",
            "placeholder": "Column1; Column2; ColumnN",
            "required": true,
            "style": "width: 100%"
          },
          "search_tables__apply_to_group_columns_order": {
            "type": "select",
            "label": "Group Column(s)",
            "required": true,
            "show_if" :  "search_tables=='true' && search_tables__select_columns_by=='by_order'",
            "options": {
              "col1": {
                "label": "Column 1"
              },
              "col2": {
                "label": "Column 2"
              },
              "col3": {
                "label": "Column 3"
              },
              "col4": {
                "label": "Column 4"
              },
              "col5": {
                "label": "Column 5"
              },
              "col6": {
                "label": "Column 6"
              },
              "col7": {
                "label": "Column 7"
              },
              "col8": {
                "label": "Column 8"
              },
              "col9": {
                "label": "Column 9"
              },
              "col10": {
                "label": "Column 10"
              },
              "col11": {
                "label": "Column 11"
              },
              "col12": {
                "label": "Column 12"
              },
              "col13": {
                "label": "Column 13"
              },
              "col14": {
                "label": "Column 14"
              },
              "col15": {
                "label": "Column 15"
              },
              "col16": {
                "label": "Column 16"
              },
              "col17": {
                "label": "Column 17"
              },
              "col18": {
                "label": "Column 18"
              },
              "col19": {
                "label": "Column 19"
              },
              "col20": {
                "label": "Column 20"
              }
            },
            "multiple": true,
            "val": []
          }
        }
      }
    }
  }
}
,
"/DataCommonsOutput.json/DataCommonsOutput.json": {
  "output": {
    "type": "fieldset",
    "label": "Define Output Table",
    "show_if": "options.output_as_chart=='false'",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "output.custom_text": {
        "type": "text",
        "label": "Output Table Name",
        "show_if": "output.custom_options=='false' || (output.custom_options=='true' && output.compose_table_name=='false')",
        "minLength": 1,
        "val": "",
        "width": "100%",
        "breakLine": true
      },
      "output.custom_options": {
        "type": "checkbox",
        "label": "Output Options",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "output.compose_table_name": {
        "type": "checkbox",
        "label": "Compose Table Name",
        "show_if": "output.custom_options=='true'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "compose_table_name_frame": {
        "type": "fieldset",
        "label": "Compose Output Table Name",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "output.custom_options=='true' && output.compose_table_name=='true'",
        "repeat": false,
        "fields": {
          "output.prefix_rule": {
            "type": "select",
            "label": "Prefix",
            "show_if": "output.compose_table_name=='true'",
            "val": "empty",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.prefix_text": {
            "type": "text",
            "label": "Prefix Text",
            "show_if": "output.compose_table_name=='true' && output.prefix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "output.core_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "show_if": "output.compose_table_name=='true' && output.prefix_rule!='empty'",
            "val": "_",
            "width": "50px"
          },
          "output.core_rule": {
            "type": "select",
            "label": "Table Name",
            "show_if": "output.compose_table_name=='true'",
            "val": "input_table_name",
            "options": {
              "input_table_name": {
                "label": "Input Table Name"
              },
              "script_name": {
                "label": "Task Name"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.core_text": {
            "type": "text",
            "label": "Main Table Name",
            "show_if": "output.compose_table_name=='true' && output.core_rule=='custom'",
            "required": true,
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "output.suffix_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "show_if": "output.compose_table_name=='true'",
            "val": "_",
            "width": "50px"
          },
          "output.suffix_rule": {
            "type": "select",
            "label": "Suffix",
            "show_if": "output.compose_table_name=='true'",
            "val": "script_name",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.suffix_text": {
            "type": "text",
            "label": "Suffix Text",
            "show_if": "output.compose_table_name=='true' && output.suffix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": "",
            "breakLine": true
          },
          "output.timezone": {
            "type": "select",
            "label": "Timezone",
            "show_if": "output.compose_table_name=='true' && (output.prefix_rule=='date_string_type1' || output.prefix_rule=='date_string_type2' || output.prefix_rule=='time_string' || output.prefix_rule=='datetime_string' || output.suffix_rule=='date_string_type1' || output.suffix_rule=='date_string_type2' || output.suffix_rule=='time_string' || output.suffix_rule=='datetime_string')",
            "val": "Europe/Berlin",
            "required": true,
            "options": {
              "America/Adak": {
                "label": "Adak, Gambier"
              },
              "Australia/Adelaide": {
                "label": "Adelaide, Broken Hill, Darwin"
              },
              "America/Anchorage": {
                "label": "Anchorage, Juneau, Sitka"
              },
              "Pacific/Apia": {
                "label": "Apia, Asau, Mulifanua, Afega, Leulumoega"
              },
              "Pacific/Enderbury": {
                "label": "Apia, Fiji, Tongatapu"
              },
              "Antarctica/McMurdo": {
                "label": "Auckland, Casey, Davis"
              },
              "Pacific/Auckland": {
                "label": "Auckland, Wellington, Christchurch"
              },
              "Asia/Bangkok": {
                "label": "Bangkok, Jakarta, Novosibirsk"
              },
              "Europe/Berlin": {
                "label": "Berlin, Paris, Amsterdam"
              },
              "Australia/Perth": {
                "label": "Brunei, Singapore, Perth"
              },
              "Atlantic/Cape_Verde": {
                "label": "Cape Verde,Praia, Mindelo, Santa Maria"
              },
              "America/Belize": {
                "label": "Costa Rica, El Salvador, Denver"
              },
              "Antarctica/Vostok": {
                "label": "Dhaka, Bishkek, Omsk"
              },
              "Europe/Astrakhan": {
                "label": "Dubai, Baku, Tbilisi"
              },
              "Australia/Eucla": {
                "label": "Eucla"
              },
              "Pacific/Honolulu": {
                "label": "Honolulu, Rarotonga, Tahiti"
              },
              "Asia/Kabul": {
                "label": "Kabul, Kandahār, Mazār-e Sharīf, Herāt, Jalālābād"
              },
              "Asia/Aqtau": {
                "label": "Karachi, Tashkent, Maldives"
              },
              "Asia/Kathmandu": {
                "label": "Kathmandu, Pokhara, Pātan, Biratnagar"
              },
              "Pacific/Kiritimati": {
                "label": "Kiritimati"
              },
              "Asia/Colombo": {
                "label": "Kolkata, Colombo, Jaffna, Negombo"
              },
              "Europe/Guernsey": {
                "label": "London, Dublin, Lisbon"
              },
              "Australia/Lord_Howe": {
                "label": "Lord Howe"
              },
              "America/Creston": {
                "label": "Los Angeles, Vancouver, Hermosillo"
              },
              "Pacific/Marquesas": {
                "label": "Marquesas, Taiohae"
              },
              "America/Cayman": {
                "label": "Mexico City, Panama, Chicago"
              },
              "Pacific/Niue": {
                "label": "Midway, Niue, Pago Pago"
              },
              "Europe/Mariehamn": {
                "label": "Moscow, Istanbul, Qatar"
              },
              "Asia/Kolkata": {
                "label": "Mumbai, Delhi, Bengaluru, Kolkata, Chennai"
              },
              "America/Miquelon": {
                "label": "Noronha, Nuuk, Miquelon"
              },
              "America/Danmarkshavn": {
                "label": "Reykjavik, Dakar, Casablanca"
              },
              "Pacific/Bougainville": {
                "label": "Sakhalin, Norfolk, Bougainville"
              },
              "America/Araguaina": {
                "label": "Sao Paulo, Buenos Aires, Montevideo"
              },
              "America/St_Johns": {
                "label": "St. Johns, Mount Pearl, Corner Brook"
              },
              "Asia/Tehran": {
                "label": "Tehran, Mashhad, Isfahan, Karaj, Tabriz"
              },
              "Asia/Tokyo": {
                "label": "Tokyo, Seoul, Jayapura"
              },
              "America/New_York": {
                "label": "Toronto, Santiago, New York"
              },
              "Australia/Sydney": {
                "label": "Vladivostok, Sydney, Brisbane"
              },
              "Asia/Yangon": {
                "label": "Yangon, Cocos, Mandalay, Nay Pyi Taw, Mawlamyine"
              },
              "Indian/Cocos": {
                "label": "Yangon, Cocos, West Island"
              }
            },
            "breakLine": true
          }
        }
      }
    }
  }
},
"/ColumnToLabelOptions.json/ColumnToLabelOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "transpose_type": {
        "type": "hidden",
        "val": "column_name_to_label"
      },
      "mirror_matrix.convert_header_to_label": {
        "type": "checkbox",
        "label": "Convert header to label",
        "show_if": "transpose_type=='mirror_matrix'",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "column_name_to_label__columns_to_label_frame": {
        "type": "fieldset",
        "label": "Select columns to convert into Labels",
        "show_if": "transpose_type=='column_name_to_label'",
        "repeat": false,
        "fields": {
          "column_name_to_label.columns_to_label": {
            "type": "select",
            "style": "width: 50%; float: left",
            "label": "Select columns",
            "table": "table_id",
            "multiple": true,
            "bind": "COLUMNS"
          },
           "column_name_to_label.reverse_col_selection": {
            "type": "checkbox",
            "label": "All but selected",
            "style": "width: 40%; float: right",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          }
        }
      },
      "column_name_to_label.label_column_name": {
        "type": "text",
        "label": "Column Name of Label Column",
        "show_if": "transpose_type=='column_name_to_label'",
        "required": true,
        "val": "Label",
        "width": "100%",
        "breakLine": true
      },
      "column_name_to_label.value_column_name": {
        "type": "text",
        "label": "Column Name of Value Column",
        "show_if": "transpose_type=='column_name_to_label'",
        "required": true,
        "val": "Value",
        "width": "100%",
        "breakLine": true
      },
      "column_name_to_label.is_one_label": {
        "type": "checkbox",
        "label": "One label column",
        "show_if": "transpose_type=='column_name_to_label'",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "crosstab.group_data_by_these_values": {
        "type": "select",
        "label": "Group data by these values",
        "show_if": "transpose_type=='crosstab'",
        "table": "table_id",
        "multiple": true,
        "bind": "COLUMNS",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "crosstab.change_column_headers": {
        "type": "select",
        "label": "Change Column Header",
        "show_if": "transpose_type=='crosstab'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "crosstab.values_for_new_columns": {
        "type": "select",
        "label": "Values For New Columns",
        "show_if": "transpose_type=='crosstab'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "crosstab.method_for_aggregating_values": {
        "type": "select",
        "label": "Method for Aggregating Values",
        "show_if": "transpose_type=='crosstab'",
        "options": {
          "Concatenate": {
            "label": "Concatenate"
          },
          "First": {
            "label": "First"
          },
          "Last": {
            "label": "Last"
          },
          "Sum": {
            "label": "Sum"
          },
          "Average": {
            "label": "Average"
          },
          "Count": {
            "label": "Count"
          },
          "User Defined": {
            "label": "User Defined"
          }
        },
        "val": "Concatenate",
        "required": true
      },
      "crosstab.user_defined_str": {
        "type": "text",
        "label": "User Defined Value",
        "show_if": "transpose_type=='crosstab' && crosstab.method_for_aggregating_values=='User Defined'",
        "val": "x",
        "trim": "false",
        "breakLine": true
      },
      "crosstab.separator": {
        "type": "text",
        "label": "Separator",
        "show_if": "transpose_type=='crosstab' && method_for_aggregating_values=='Concatenate'",
        "val": ",",
        "trim": "false",
        "required": true,
        "breakLine": true
      }
    }
  }
}
,
"/ExportToDropboxOptions.json/ExportToDropboxOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Select Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.to": {
        "type": "hidden",
        "val": "file"
      },
      "options.webservice": {
        "type": "hidden",
        "val": "dropbox"
      },
      "options.export_format": {
        "type": "select",
        "label": "Export Format",
        "options": {
          "csv_file": {
            "label": "Csv file(s)"
          },
          "word_by_word": {
            "label": "Word by Word"
          },
          "line_by_line": {
            "label": "Line by Line"
          }
        },
        "val": "csv_file",
        "required": true,
        "breakLine": true
      },
      "options.if_duplicated": {
        "type": "select",
        "label": "If existing",
        "show_if": "options.webservice=='github'",
        "val": "drop_if_exist",
        "options": {
          "drop_if_exist": {
            "label": "Create or Drop (if already existing)"
          },
          "error_if_exist": {
            "label": "Create New (throw error if existing)"
          },
          "error_if_not_exist": {
            "label": "Drop (throw error if not-existing)"
          },
          "append": {
            "label": "Append"
          }
        },
        "breakLine": true
      },
      "options.export_series": {
        "type": "checkbox",
        "label": "Export Series",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.file_name_column": {
        "type": "select",
        "label": "Select File Name Column",
        "show_if": "options.export_series=='true'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true,
        "breakLine": true
      },
      "options.set_file_path_column": {
        "type": "checkbox",
        "label": "Export to specified path",
        "show_if": "options.export_series=='true'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.file_path_column": {
        "type": "select",
        "label": "Select File Path Column",
        "show_if": "options.export_series=='true' && options.set_file_path_column=='true'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true,
        "breakLine": true
      }
    }
  },
  "export_link_token_frame": {
    "type": "fieldset",
    "label": "Export Link",
    "repeat": false,
    "fields": {
      "options.github_url": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test",
        "show_if": "options.webservice=='github'",
        "val": "",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.export_dir": {
        "type": "text",
        "label": "Enter dir e.g. /MyZippyDocFiles/SubDir/",
        "show_if": "options.webservice!='github'",
        "val": "/",
        "width": "100%",
        "breakLine": true
      },
      "options.github_token": {
        "type": "text",
        "label": "Specify the Github personal access token that has write permission:",
        "show_if": "options.webservice=='github'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.github_create_pr": {
        "type": "checkbox",
        "label": "Create pull request",
        "show_if": "options.webservice=='github'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.ms_one_drive_token": {
        "type": "text",
        "label": "Microsoft Graph API access token. You can get it here https://ms-oauth.herokuapp.com/",
        "show_if": "options.webservice=='ms_one_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.google_authorization_code": {
        "type": "text",
        "label": "Google OAuth Authorization Code with scope https://www.googleapis.com/auth/drive. You can get it here https://developers.google.com/oauthplayground/",
        "show_if": "options.webservice=='google_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox_authorization_code": {
        "type": "text",
        "label": "Dropbox Authorization Code. You can get it here https://www.dropbox.com/oauth2/authorize?client_id=9i7woztjp94jrkw&response_type=code",
        "show_if": "options.webservice=='dropbox'",
        "required": true,
        "width": "100%",
        "breakLine": true
      }
    }
  }
},
"/RunFlowInput.json/RunFlowInput.json": {
  "input": {
    "type": "fieldset",
    "label": "Select Flow",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "flow_id": {
        "type": "select",
        "label": "Select Flow",
        "show_if": "select_flow_by_flow_id=='false'",
        "bind": "FLOWS",
        "empty": "",
        "required": true,
        "style": "margin-right: 15px"
      },
      "select_flow_by_flow_id": {
        "type": "checkbox",
        "label": "Select Flow by FlowID",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-right: 15px"
      },
      "flow_id_manual": {
        "type": "text",
        "label": "Input Flow ID",
        "show_if": "select_flow_by_flow_id=='true'",
        "val": "",
        "required": true,
        "breakLine": true
      },
      "run_own_input_tables": {
        "type": "checkbox",
        "label": "Run Selected Flow with own Input Table(s)",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-right: 20px"
      },
      "own_input_tables": {
        "type": "fieldset",
        "label": "Own Input table(s)",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.manual_config=='false' && run_own_input_tables=='true'",
        "repeat": true,
        "fields": {
          "table_id": {
            "type": "select",
            "label": "Select Input Table",
            "bind": "TABLES",
            "empty": ""
          },
          "position": {
            "type": "select",
            "label": "Top Down Table Position",
            "required": true,
            "options": {
              "1": {
                "label": "Position 1"
              },
              "2": {
                "label": "Position 2"
              },
              "3": {
                "label": "Position 3"
              },
              "4": {
                "label": "Position 4"
              },
              "5": {
                "label": "Position 5"
              },
              "6": {
                "label": "Position 6"
              },
              "7": {
                "label": "Position 7"
              },
              "8": {
                "label": "Position 8"
              },
              "9": {
                "label": "Position 9"
              },
              "10": {
                "label": "Position 10"
              }
            },
            "val": "1",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      }
    }
  }
}
,
"/CombinationOptions.json/CombinationOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.group_column": {
        "type": "select",
        "label": "Group Column",
        "required": true,
        "table": "table_id",
        "bind": "COLUMNS"
      },
      "options.search_tables__group_column_text": {
        "type": "text",
        "label": "Input Column Name",
        "show_if": "search_tables=='true' && search_tables__select_columns_by=='by_name_text'",
        "val": "",
        "required": true
      },
      "options.search_tables__group_column_order": {
        "type": "select",
        "label": "Select Column",
        "required": true,
        "show_if" :  "search_tables=='true' && search_tables__select_columns_by=='by_order'",
        "options": {
          "col1": {
            "label": "Column 1"
          },
          "col2": {
            "label": "Column 2"
          },
          "col3": {
            "label": "Column 3"
          },
          "col4": {
            "label": "Column 4"
          },
          "col5": {
            "label": "Column 5"
          },
          "col6": {
            "label": "Column 6"
          },
          "col7": {
            "label": "Column 7"
          },
          "col8": {
            "label": "Column 8"
          },
          "col9": {
            "label": "Column 9"
          },
          "col10": {
            "label": "Column 10"
          },
          "col11": {
            "label": "Column 11"
          },
          "col12": {
            "label": "Column 12"
          },
          "col13": {
            "label": "Column 13"
          },
          "col14": {
            "label": "Column 14"
          },
          "col15": {
            "label": "Column 15"
          },
          "col16": {
            "label": "Column 16"
          },
          "col17": {
            "label": "Column 17"
          },
          "col18": {
            "label": "Column 18"
          },
          "col19": {
            "label": "Column 19"
          },
          "col20": {
            "label": "Column 20"
          }
        },
        "val": "",
        "breakLine": true
      }
    }
  }
},
"/pdf-repro/CoverLetter.json/CoverLetter.json": {
  "cover_letter_placeholder_frame": {
    "type": "fieldset",
    "label": "Configure 'Cover Letter' PDF",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "options.template_id=='id_bd7c7b52449752d78436f5aaa893abd36e96b7a9'",
    "repeat": false,
    "fields": {
      "sender_detail_frame": {
        "type": "fieldset",
        "label": "Sender Details",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.configure_by_table=='false'",
        "repeat": false,
        "fields": {
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.sender_detail.configure_by_table": {
            "type": "checkbox",
            "label": "Configure by table",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.sender_detail.configure_by_table_help": {
            "type": "text",
            "label": "",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.sender_detail.configure_by_table=='true'",
            "val": "Table Structure ( Field Name | Field Value )",
            "disabled": true,
            "width": "100%"
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.sender_detail.table_id": {
            "type": "select",
            "label": "Select Table",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.sender_detail.configure_by_table=='true'",
            "bind": "TABLES",
            "empty": "",
            "required": true,
            "breakLine": true
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.sender_name": {
            "type": "text",
            "label": "Sender Name",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "My Company ltd.",
            "val": ""
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.sender_department": {
            "type": "text",
            "label": "Sender Department",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "Purchase department",
            "val": ""
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.sender_street": {
            "type": "text",
            "label": "Sender Street",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "Main street 21",
            "val": ""
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.sender_zip_code": {
            "type": "text",
            "label": "Sender Zip Code",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "80000",
            "val": ""
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.sender_city": {
            "type": "text",
            "label": "Sender City",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "München",
            "val": "",
            "breakLine": true
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.sender_registry_number": {
            "type": "text",
            "label": "Sender Registry Number",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "HRB 334543",
            "val": ""
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.sender_registry_court": {
            "type": "text",
            "label": "Sender Registry Court",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "Frankfurt am Main",
            "val": ""
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.sender_representatives": {
            "type": "text",
            "label": "Sender Representatives",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "Dr. Joe Johnson",
            "val": ""
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.sender_representative_type": {
            "type": "text",
            "label": "Sender Representative Type",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "Geschäftsführer",
            "val": "",
            "breakLine": true
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.sender_bank": {
            "type": "text",
            "label": "Sender Bank",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "Deutsche Bank_",
            "val": ""
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.sender_bank_iban": {
            "type": "text",
            "label": "Sender Bank IBAN",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "XXX",
            "val": ""
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.sender_bank_bic": {
            "type": "text",
            "label": "Sender Bank BIC",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "XXX",
            "val": ""
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.sender_bank_account_no": {
            "type": "text",
            "label": "Sender Bank Account No",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "XXX",
            "val": ""
          }
        }
      },
      "recipient_detail_frame": {
        "type": "fieldset",
        "label": "Recipient Details",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.configure_by_table=='false'",
        "repeat": false,
        "fields": {
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.recipient_detail.configure_by_table": {
            "type": "checkbox",
            "label": "Configure by table",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.recipient_detail.configure_by_table_help": {
            "type": "text",
            "label": "",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.recipient_detail.configure_by_table=='true'",
            "val": "Table Structure ( Field Name | Field Value )",
            "disabled": true,
            "width": "100%"
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.recipient_detail.table_id": {
            "type": "select",
            "label": "Select Table",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.recipient_detail.configure_by_table=='true'",
            "bind": "TABLES",
            "empty": "",
            "required": true,
            "breakLine": true
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.recipient_number": {
            "type": "text",
            "label": "Recipient Number",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.recipient_detail.configure_by_table=='false'",
            "placeholder": "54321",
            "val": ""
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.recipient_name": {
            "type": "text",
            "label": "Recipient Name",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.recipient_detail.configure_by_table=='false'",
            "placeholder": "My company ltd.",
            "val": ""
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.recipient_department": {
            "type": "text",
            "label": "Recipient Department",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.recipient_detail.configure_by_table=='false'",
            "placeholder": "purchase department",
            "val": ""
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.recipient_street": {
            "type": "text",
            "label": "Recipient Street",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.recipient_detail.configure_by_table=='false'",
            "placeholder": "Main street 21",
            "val": ""
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.recipient_zip_code": {
            "type": "text",
            "label": "Recipient Zip Code",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.recipient_detail.configure_by_table=='false'",
            "placeholder": "80000",
            "val": ""
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.recipient_city": {
            "type": "text",
            "label": "Recipient City",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.recipient_detail.configure_by_table=='false'",
            "placeholder": "München",
            "val": ""
          }
        }
      },
      "logo_frame": {
        "type": "fieldset",
        "label": "Logo",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "repeat": false,
        "fields": {
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.sender_logo": {
            "type": "text",
            "label": "Logo(Base64 Encoded Data of JPEG)",
            "placeholder": "data:image/jpeg;base64, /9j/4AAQSkZJRgABAQEA",
            "val": "",
            "width": "100%"
          },
          "help_text_id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_logo": {
            "type": "text",
            "label": "",
            "val": "For conversion you may use e.g. https://onlinejpgtools.com/convert-jpg-to-base64",
            "disabled": true,
            "width": "100%",
            "breakLine": true
          },

          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.sender_claim": {
            "type": "text",
            "label": "Sender Claim",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.extra.configure_by_table=='false'",
            "placeholder": "my claim",
            "val": ""
          }
        }
      },
      "extra_frame": {
        "type": "fieldset",
        "label": "Extra Info",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.configure_by_table=='false'",
        "repeat": false,
        "fields": {
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.extra.configure_by_table": {
            "type": "checkbox",
            "label": "Configure by table",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.extra.configure_by_table_help": {
            "type": "text",
            "label": "",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.extra.configure_by_table=='true'",
            "val": "Table Structure ( Field Name | Field Value )",
            "disabled": true,
            "width": "100%"
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.extra.table_id": {
            "type": "select",
            "label": "Select Table",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.extra.configure_by_table=='true'",
            "bind": "TABLES",
            "empty": "",
            "required": true,
            "breakLine": true
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.letter_date": {
            "type": "text",
            "label": "Letter Date",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.extra.configure_by_table=='false'",
            "placeholder": "29.06.2021",
            "val": ""
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.reference": {
            "type": "text",
            "label": "Reference",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.extra.configure_by_table=='false'",
            "placeholder": "eK2-762-24/vfs",
            "val": "",
            "breakLine": true
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.subject": {
            "type": "text",
            "label": "Subject",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.extra.configure_by_table=='false'",
            "placeholder": "Mein Betreff",
            "val": "",
            "breakLine": true
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.footer": {
            "type": "text",
            "label": "Footer",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.extra.configure_by_table=='false'",
            "placeholder": "Vielen Dank!",
            "val": ""
          }
        }
      },
      "paragraph_list_frame": {
        "type": "fieldset",
        "label": "Paragraphs",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.configure_by_table=='false'",
        "repeat": false,
        "fields": {
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.paragraph_list.configure_by_table": {
            "type": "checkbox",
            "label": "Configure by table",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.paragraph_list.configure_by_table_help": {
            "type": "text",
            "label": "",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.paragraph_list.configure_by_table=='true'",
            "val": "Table Structure ( Field Name | Field Value )",
            "disabled": true,
            "width": "100%"
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.paragraph_list.table_id": {
            "type": "select",
            "label": "Select Table",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.paragraph_list.configure_by_table=='true'",
            "bind": "TABLES",
            "empty": "",
            "required": true,
            "breakLine": true
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.paragraph": {
            "type": "fieldset",
            "label": "Paragraph List",
            "style": "border-radius: 3px; border: 1px solid #ccc",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.paragraph_list.configure_by_table=='false'",
            "repeat": true,
            "fields": {
              "text": {
                "type": "textarea",
                "label": "text",
                "rows": 5,
                "val": "",
                "placeholder": "text",
                "width": "100%"
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          }
        }
      }
    }
  }
},
"/pdf-repro/AppointmentOrRemoval.json/AppointmentOrRemoval.json": {
  "appointment_or_removal_placeholder_frame": {
    "type": "fieldset",
    "label": "Configure 'Appointment or Removal' PDF",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "options.template_id=='id_17b533f4f9c5d2960ba67455a81ef22918106d1e' && options.configure_by_table=='false'",
    "repeat": false,
    "fields": {
      "extra_frame": {
        "type": "fieldset",
        "label": "Basic Info",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "repeat": false,
        "fields": {
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.extra.configure_by_table": {
            "type": "checkbox",
            "label": "Configure by table",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.extra.configure_by_table_help": {
            "type": "text",
            "label": "",
            "show_if": "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.extra.configure_by_table=='true'",
            "val": "Table Structure ( Field Name | Field Value )",
            "disabled": true,
            "width": "100%"
          },
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.extra.table_id": {
            "type": "select",
            "label": "Select Table",
            "show_if": "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.extra.configure_by_table=='true'",
            "bind": "TABLES",
            "empty": "",
            "required": true,
            "breakLine": true
          },
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e.effective_date": {
            "type": "text",
            "label": "Effective Date",
            "show_if": "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.extra.configure_by_table=='false'",
            "placeholder": "31.12.2021",
            "val": ""
          },
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e.resolution_date": {
            "type": "text",
            "label": "Resolution Date",
            "show_if": "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.extra.configure_by_table=='false'",
            "placeholder": "31.12.2020",
            "val": ""
          },
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e.forms_and_terms": {
            "type": "text",
            "label": "Forms and Terms",
            "show_if": "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.extra.configure_by_table=='false'",
            "placeholder": "Unter Einhaltung",
            "val": ""
          },
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e.votes_agreed": {
            "type": "text",
            "label": "Votes Agreed",
            "show_if": "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.extra.configure_by_table=='false'",
            "placeholder": "100%",
            "val": ""
          },
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e.votes_present": {
            "type": "text",
            "label": "Votes Present",
            "show_if": "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.extra.configure_by_table=='false'",
            "placeholder": "aller Stimmen",
            "val": ""
          }
        }
      },
      "company_detail_frame": {
        "type": "fieldset",
        "label": "Company Details",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "repeat": false,
        "fields": {
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.company_detail.configure_by_table": {
            "type": "checkbox",
            "label": "Configure by table",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.company_detail.configure_by_table_help": {
            "type": "text",
            "label": "",
            "show_if": "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.company_detail.configure_by_table=='true'",
            "val": "Table Structure ( Field Name | Field Value )",
            "disabled": true,
            "width": "100%"
          },
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.company_detail.table_id": {
            "type": "select",
            "label": "Select Table",
            "show_if": "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.company_detail.configure_by_table=='true'",
            "bind": "TABLES",
            "empty": "",
            "required": true,
            "breakLine": true
          },
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e.company_name": {
            "type": "text",
            "label": "Company Name",
            "show_if": "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.company_detail.configure_by_table=='false'",
            "placeholder": "MyCompany  Ltd.",
            "val": ""
          },
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e.company_street": {
            "type": "text",
            "label": "Company Street",
            "show_if": "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.company_detail.configure_by_table=='false'",
            "placeholder": "Foster Street 33",
            "val": ""
          },
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e.company_zip_code": {
            "type": "text",
            "label": "Company Zip Code",
            "show_if": "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.company_detail.configure_by_table=='false'",
            "placeholder": "33434",
            "val": ""
          },
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e.company_city": {
            "type": "text",
            "label": "Company City",
            "show_if": "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.company_detail.configure_by_table=='false'",
            "placeholder": "New York",
            "val": ""
          },
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e.company_registry_number": {
            "type": "text",
            "label": "Company Registry Number",
            "show_if": "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.company_detail.configure_by_table=='false'",
            "placeholder": "HRB 334543",
            "val": ""
          },
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e.company_registry_court": {
            "type": "text",
            "label": "Company Registry Court",
            "show_if": "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.company_detail.configure_by_table=='false'",
            "placeholder": "Frankfurt am Main",
            "val": ""
          }
        }
      },
      "shareholder_list_frame": {
        "type": "fieldset",
        "label": "Shareholder List",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "repeat": false,
        "fields": {
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.shareholder_list.configure_by_table": {
            "type": "checkbox",
            "label": "Configure by table",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.shareholder_list.configure_by_table_help": {
            "type": "text",
            "label": "",
            "show_if": "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.shareholder_list.configure_by_table=='true'",
            "val": "Table Structure ( Field Name | Field Value )",
            "disabled": true,
            "width": "100%"
          },
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.shareholder_list.table_id": {
            "type": "select",
            "label": "Select Table",
            "show_if": "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.shareholder_list.configure_by_table=='true'",
            "bind": "TABLES",
            "empty": "",
            "required": true,
            "breakLine": true
          },
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e.shareholder_list": {
            "type": "fieldset",
            "label": "Shareholder List",
            "style": "border-radius: 3px; border: 1px solid #ccc",
            "show_if": "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.shareholder_list.configure_by_table=='false'",
            "repeat": true,
            "fields": {
              "signature_place": {
                "type": "text",
                "label": "Signature Place",
                "val": "",
                "placeholder": "Frankfurt am Main"
              },
              "snippet_the": {
                "type": "text",
                "label": "Snippet the",
                "val": "",
                "placeholder": ", den"
              },
              "signature_date": {
                "type": "text",
                "label": "Signature Date",
                "val": "",
                "placeholder": "13.04.2021"
              },
              "signatory_line": {
                "type": "text",
                "label": "Signatory Line",
                "val": "",
                "placeholder": "__________________________"
              },
              "signatory_name": {
                "type": "text",
                "label": "Signatory Name",
                "val": "",
                "placeholder": "Peter Foster"
              },
              "signatory_representing": {
                "type": "text",
                "label": "Signatory Representing",
                "val": "",
                "placeholder": "Managing Director Of  Party__4"
              },
              "signatory_title": {
                "type": "text",
                "label": "Signatory Title",
                "val": "",
                "placeholder": "Managing Director"
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          }
        }
      },
      "topic_list_frame": {
        "type": "fieldset",
        "label": "Topics",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "repeat": false,
        "fields": {
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.topic_list.configure_by_table": {
            "type": "checkbox",
            "label": "Configure by table",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.topic_list.configure_by_table_help": {
            "type": "text",
            "label": "",
            "show_if": "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.topic_list.configure_by_table=='true'",
            "val": "Table Structure ( Field Name | Field Value )",
            "disabled": true,
            "width": "100%"
          },
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.topic_list.table_id": {
            "type": "select",
            "label": "Select Table",
            "show_if": "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.topic_list.configure_by_table=='true'",
            "bind": "TABLES",
            "empty": "",
            "required": true,
            "breakLine": true
          },
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e.topic_list": {
            "type": "fieldset",
            "label": "Topic List",
            "style": "border-radius: 3px; border: 1px solid #ccc",
            "show_if": "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.topic_list.configure_by_table=='false'",
            "repeat": true,
            "fields": {
              "topic_header_1": {
                "type": "text",
                "label": "Topic Header 1",
                "val": "",
                "placeholder": "Zum Geschäftsführer wird bestellt:",
                "width": "100%",
				"breakLine": true
              },
              "topic_header_2": {
                "type": "text",
                "label": "Topic Header 2",
                "val": "",
                "placeholder": "",
                "width": "100%",
				"breakLine": true
              },
              "appointee_name": {
                "type": "text",
                "label": "Appointee Name",
                "val": "",
                "placeholder": "Peter Foster"
              },
              "appointee_street": {
                "type": "text",
                "label": "Appointee Street",
                "val": "",
                "placeholder": "Foster Street 33"
              },
              "appointee_zip_code": {
                "type": "text",
                "label": "Appointee Zip Code",
                "val": "",
                "placeholder": "33434"
              },
              "appointee_city": {
                "type": "text",
                "label": "Appointee City",
                "val": "",
                "placeholder": "New York"
              },
              "appointee_country": {
                "type": "text",
                "label": "Appointee Country",
                "val": "",
                "placeholder": "USA"
              },
              "appointee_date_of_birth": {
                "type": "text",
                "label": "Appointee Date of Birth",
                "val": "",
                "placeholder": "23.3.2000"
              },
              "snippet_living_at": {
                "type": "text",
                "label": "Snippet Living At",
                "val": "",
                "placeholder": "Wohnhaft in",
				"breakLine": true
              },
              "topic_footer_1": {
                "type": "text",
                "label": "Topic Footer 1",
                "val": "",
                "placeholder": "Der Geschäftsführer vertritt die Gesellschaft stets einzeln.",
                "width": "100%",
				"breakLine": true
              },
              "topic_footer_2": {
                "type": "text",
                "label": "Topic Footer 2",
                "val": "",
                "placeholder": "Er ist von den Beschränkungen des §181 befreit",
                "width": "100%",
				"breakLine": true
              },
              "topic_footer_3": {
                "type": "text",
                "label": "Topic Footer 3",
                "val": "",
                "placeholder": "",
                "width": "100%"
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          }
        }
      }
    }
  }
},
"/pdf-repro/PdfReProOptions2GDrive.json/PdfReProOptions2GDrive.json": {
  "cloud_config_frame": {
    "type": "fieldset",
    "label": "Config Cloud Directory to export to",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "options.type=='create' && (options.where_to_create=='only_export_to_cloud' || options.where_to_create=='both_export_to_cloud_and_open_in_browser')",
    "repeat": false,
    "fields": {
      "options.webservice": {
        "type": "hidden",
        "val": "google_drive"
      },
      "options.export_dir": {
        "type": "text",
        "label": "Enter dir e.g. /MyZippyDocFiles/SubDir/",
        "show_if": "options.webservice!='github'",
        "val": "",
        "width": "100%",
        "breakLine": true
      },
      "options.google_authorization_code": {
        "type": "text",
        "label": "Google OAuth Authorization Code with scope https://www.googleapis.com/auth/drive. You can get it here https://developers.google.com/oauthplayground/",
        "show_if": "options.webservice=='google_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      }
    }
  }
},
"/pdf-repro/PdfReProOptions2.json/PdfReProOptions2.json": {
  "cloud_config_frame": {
    "type": "fieldset",
    "label": "Config Cloud Directory to export to",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "options.type=='create' && (options.where_to_create=='only_export_to_cloud' || options.where_to_create=='both_export_to_cloud_and_open_in_browser')",
    "repeat": false,
    "fields": {
      "options.webservice": {
        "type": "select",
        "label": "Select Webservice",
        "options": {
          "ms_one_drive": {
            "label": "Microsoft One Drive"
          },
          "dropbox": {
            "label": "Dropbox"
          },
          "google_drive": {
            "label": "Google Drive"
          }
        },
        "val": "ms_one_drive",
        "required": true,
        "breakLine": true
      },
      "options.github_url": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test",
        "show_if": "options.webservice=='github'",
        "val": "",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.export_dir": {
        "type": "text",
        "label": "Enter dir e.g. /MyZippyDocFiles/SubDir/",
        "show_if": "options.webservice!='github'",
        "val": "",
        "width": "100%",
        "breakLine": true
      },
      "options.github_token": {
        "type": "text",
        "label": "Specify the Github personal access token that has write permission:",
        "show_if": "options.webservice=='github'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.google_authorization_code": {
        "type": "text",
        "label": "Google OAuth Authorization Code with scope https://www.googleapis.com/auth/drive. You can get it here https://developers.google.com/oauthplayground/",
        "show_if": "options.webservice=='google_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox_authorization_code": {
        "type": "text",
        "label": "Dropbox Authorization Code. You can get it here https://www.dropbox.com/oauth2/authorize?client_id=9i7woztjp94jrkw&response_type=code",
        "show_if": "options.webservice=='dropbox'",
        "required": true,
        "width": "100%",
        "breakLine": true
      }
    }
  }
},
"/pdf-repro/PdfReProOptions2OneDrive.json/PdfReProOptions2OneDrive.json": {
  "cloud_config_frame": {
    "type": "fieldset",
    "label": "Config Cloud Directory to export to",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "options.type=='create' && (options.where_to_create=='only_export_to_cloud' || options.where_to_create=='both_export_to_cloud_and_open_in_browser')",
    "repeat": false,
    "fields": {
      "options.webservice": {
        "type": "hidden",
        "val": "ms_one_drive"
      },
      "options.export_dir": {
        "type": "text",
        "label": "Enter dir e.g. /MyZippyDocFiles/SubDir/",
        "show_if": "options.webservice!='github'",
        "val": "",
        "width": "100%",
        "breakLine": true
      }
    }
  }
},
"/pdf-repro/PdfReProOptions2Dropbox.json/PdfReProOptions2Dropbox.json": {
  "cloud_config_frame": {
    "type": "fieldset",
    "label": "Config Cloud Directory to export to",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "options.type=='create' && (options.where_to_create=='only_export_to_cloud' || options.where_to_create=='both_export_to_cloud_and_open_in_browser')",
    "repeat": false,
    "fields": {
      "options.webservice": {
        "type": "hidden",
        "val": "dropbox"
      },
      "options.export_dir": {
        "type": "text",
        "label": "Enter dir e.g. /MyZippyDocFiles/SubDir/",
        "show_if": "options.webservice!='github'",
        "val": "",
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox_authorization_code": {
        "type": "text",
        "label": "Dropbox Authorization Code. You can get it here https://www.dropbox.com/oauth2/authorize?client_id=9i7woztjp94jrkw&response_type=code",
        "show_if": "options.webservice=='dropbox'",
        "required": true,
        "width": "100%",
        "breakLine": true
      }
    }
  }
},
"/pdf-repro/PdfReProOptions1.json/PdfReProOptions1.json": {
  "options_box": {
    "type": "fieldset",
    "label": "Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.script_name": {
        "type": "hidden",
        "val": "PdfRePro"
      },
      "options.type": {
        "type": "hidden",
        "val": "create"
      },
      "options.template_id": {
        "type": "select",
        "label": "Document Type",
        "options": {
          "id_bd7c7b52449752d78436f5aaa893abd36e96b7a9": {
            "label": "Cover Letter"
          },
          "id_17b533f4f9c5d2960ba67455a81ef22918106d1e": {
            "label": "Appointment or Removal"
          }
        },
        "val": "id_bd7c7b52449752d78436f5aaa893abd36e96b7a9",
        "required": true
      },
      "options.lang": {
        "type": "select",
        "label": "Document Language",
        "show_if": "options.type=='create'",
        "options": {
          "standard": {
            "label": "Standard Language"
          },
          "lt": {
            "label": "Lithuanian"
          },
          "it": {
            "label": "Italian"
          },
          "hu": {
            "label": "Hungarian"
          },
          "fr": {
            "label": "French"
          },
          "fi": {
            "label": "Finnish"
          },
          "bg": {
            "label": "Bulgarian"
          },
          "ca": {
            "label": "Canadian"
          },
          "cs": {
            "label": "Czech"
          },
          "de": {
            "label": "German"
          },
          "en": {
            "label": "English"
          },
          "es": {
            "label": "Spanish"
          }
        },
        "val": "en",
        "required": true,
        "breakLine": true
      },
      "options.where_to_create": {
        "type": "select",
        "label": "Where to create",
        "options": {
          "only_open_in_browser": {
            "label": "Only open PDF in browser"
          },
          "only_export_to_cloud": {
            "label": "Only export to cloud"
          },
          "both_export_to_cloud_and_open_in_browser": {
            "label": "Both export to cloud and open pdf in browser"
          }
        },
        "val": "only_open_in_browser",
        "required": true,
        "breakLine": true
      },
      "options.configure_by_table": {
        "type": "checkbox",
        "label": "Configure by table",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.configure_by_table_help": {
        "type": "text",
        "label": "",
        "show_if": "options.configure_by_table=='true'",
        "val": "Table Structure ( Document | List Name | List Item | Field Name | Field Value )",
        "disabled": true,
        "width": "100%"
      },
      "options.table_id": {
        "type": "select",
        "label": "Select Table",
        "show_if": "options.configure_by_table=='true'",
        "bind": "TABLES",
        "empty": "",
        "required": true,
        "breakLine": true
      }
    }
  }
}
,
"/pdf-repro/Invoice.json/Invoice.json": {
  "invoice_placeholder_frame": {
    "type": "fieldset",
    "label": "Configure 'Invoice' PDF",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "options.template_id=='id_b7b0e4380196a9c60a5d236578bddb16306a51bd'",
    "repeat": false,
    "fields": {
      "sender_detail_frame": {
        "type": "fieldset",
        "label": "Sender Details",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.configure_by_table=='false'",
        "repeat": false,
        "fields": {
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.configure_by_table": {
            "type": "checkbox",
            "label": "Configure by table",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.table_style": {
            "type": "select",
            "label": "Table Style",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.configure_by_table=='true'",
            "options": {
              "field_name_as_header": {
                "label": "Field Name as Header"
              },
              "row_by_row_field_name": {
                "label": "Row by Row Field Name"
              }
            },
            "val": "field_name_as_header",
            "required": true,
            "breakLine": true
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.configure_by_table_help": {
            "type": "textarea",
            "label": "",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.configure_by_table=='true' && options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.table_style=='field_name_as_header'",
            "val": "Table Structure ( ID | Customer Number | Customer Name | Customer Department | Customer Street | Customer Zip Code | Customer City )",
            "md_no_resize": false,
            "rows": 2,
            "disabled": true,
            "width": "100%"
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.configure_by_table_help2": {
            "type": "text",
            "label": "",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.configure_by_table=='true' && options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.table_style=='row_by_row_field_name'",
            "val": "Table Structure ( Field Name | Field Value )",
            "disabled": true,
            "width": "100%"
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.table_id": {
            "type": "select",
            "label": "Select Table",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.configure_by_table=='true'",
            "bind": "TABLES",
            "empty": "",
            "required": true,
            "breakLine": true
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.selected_col": {
            "type": "select",
            "label": "Select ID Column",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.configure_by_table=='true' && options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.table_style=='field_name_as_header'",
            "required": true,
            "table": "options.invoice_summary.input_table",
            "bind": "COLUMNS"
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.selected_rows": {
            "type": "select",
            "label": "Select Row Number(s)",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.configure_by_table=='true' && options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.table_style=='field_name_as_header'",
            "multiple": true,
            "unique_values_only": true,
            "table": "options.invoice_summary.input_table",
            "column_list": "options.invoice_summary.selected_col",
            "bind": "RECORDS",
            "required": true,
            "breakLine": true
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.sender_name": {
            "type": "text",
            "label": "Sender Name",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "My Company ltd.",
            "val": ""
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.sender_department": {
            "type": "text",
            "label": "Sender Department",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "Purchase department",
            "val": ""
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.sender_street": {
            "type": "text",
            "label": "Sender Street",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "Main street 21",
            "val": ""
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.sender_zip_code": {
            "type": "text",
            "label": "Sender Zip Code",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "80000",
            "val": ""
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.sender_city": {
            "type": "text",
            "label": "Sender City",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "München",
            "val": "",
            "breakLine": true
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.sender_registry_number": {
            "type": "text",
            "label": "Sender Registry Number",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "HRB 334543",
            "val": ""
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.sender_registry_court": {
            "type": "text",
            "label": "Sender Registry Court",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "Frankfurt am Main",
            "val": ""
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.sender_representatives": {
            "type": "text",
            "label": "Sender Representatives",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "Dr. Joe Johnson",
            "val": ""
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.sender_representative_type": {
            "type": "text",
            "label": "Sender Representative Type",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "Geschäftsführer",
            "val": "",
            "breakLine": true
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.sender_bank": {
            "type": "text",
            "label": "Sender Bank",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "Deutsche Bank",
            "val": ""
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.sender_bank_iban": {
            "type": "text",
            "label": "Sender Bank IBAN",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "XXX",
            "val": ""
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.sender_bank_bic": {
            "type": "text",
            "label": "Sender Bank BIC",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "XXX",
            "val": ""
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.sender_bank_account_no": {
            "type": "text",
            "label": "Sender Bank Account No",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "XXX",
            "val": ""
          }
        }
      },
      "customer_detail_frame": {
        "type": "fieldset",
        "label": "Customer Details",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.configure_by_table=='false'",
        "repeat": false,
        "fields": {
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.customer_detail.configure_by_table": {
            "type": "checkbox",
            "label": "Configure by table",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.table_style": {
            "type": "select",
            "label": "Table Style",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.customer_detail.configure_by_table=='true'",
            "options": {
              "field_name_as_header": {
                "label": "Field Name as Header"
              },
              "row_by_row_field_name": {
                "label": "Row by Row Field Name"
              }
            },
            "val": "field_name_as_header",
            "required": true,
            "breakLine": true
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.customer_detail.configure_by_table_help": {
            "type": "textarea",
            "label": "",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.customer_detail.configure_by_table=='true' && options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.customer_detail.table_style=='field_name_as_header'",
            "val": "Table Structure ( ID | Customer Number | Customer Name | Customer Department | Customer Street | Customer Zip Code | Customer City )",
            "md_no_resize": false,
            "rows": 2,
            "disabled": true,
            "width": "100%"
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.customer_detail.configure_by_table_help2": {
            "type": "text",
            "label": "",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.customer_detail.configure_by_table=='true' && options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.customer_detail.table_style=='row_by_row_field_name'",
            "val": "Table Structure ( Field Name | Field Value )",
            "disabled": true,
            "width": "100%"
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.customer_detail.table_id": {
            "type": "select",
            "label": "Select Table",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.customer_detail.configure_by_table=='true'",
            "bind": "TABLES",
            "empty": "",
            "required": true,
            "breakLine": true
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.customer_number": {
            "type": "text",
            "label": "Customer Number",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.customer_detail.configure_by_table=='false'",
            "placeholder": "54321",
            "val": ""
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.customer_name": {
            "type": "text",
            "label": "Customer Name",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.customer_detail.configure_by_table=='false'",
            "placeholder": "My company ltd.",
            "val": ""
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.customer_department": {
            "type": "text",
            "label": "Customer Department",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.customer_detail.configure_by_table=='false'",
            "placeholder": "purchase department",
            "val": ""
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.customer_street": {
            "type": "text",
            "label": "Customer Street",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.customer_detail.configure_by_table=='false'",
            "placeholder": "Main street 21",
            "val": ""
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.customer_zip_code": {
            "type": "text",
            "label": "Customer Zip Code",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.customer_detail.configure_by_table=='false'",
            "placeholder": "80000",
            "val": ""
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.customer_city": {
            "type": "text",
            "label": "Customer City",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.customer_detail.configure_by_table=='false'",
            "placeholder": "München",
            "val": ""
          }
        }
      },
      "invoice_head_frame": {
        "type": "fieldset",
        "label": "Invoice Head",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.configure_by_table=='false'",
        "repeat": false,
        "fields": {
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.invoice_head.configure_by_table": {
            "type": "checkbox",
            "label": "Configure by table",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.invoice_head.configure_by_table_help": {
            "type": "text",
            "label": "",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.invoice_head.configure_by_table=='true'",
            "val": "Table Structure ( Field Name | Field Value )",
            "disabled": true,
            "width": "100%"
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.invoice_head.table_id": {
            "type": "select",
            "label": "Select Table",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.invoice_head.configure_by_table=='true'",
            "bind": "TABLES",
            "empty": "",
            "required": true,
            "breakLine": true
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.invoice_date": {
            "type": "text",
            "label": "Invoice Date",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.invoice_head.configure_by_table=='false'",
            "placeholder": "29.06.2021",
            "val": ""
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.invoice_number": {
            "type": "text",
            "label": "Invoice Number",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.invoice_head.configure_by_table=='false'",
            "placeholder": "4711091",
            "val": ""
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.reference": {
            "type": "text",
            "label": "Reference",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.invoice_head.configure_by_table=='false'",
            "placeholder": "eK2-762-24/vfs",
            "val": ""
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.order_date": {
            "type": "text",
            "label": "Order Date",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.invoice_head.configure_by_table=='false'",
            "placeholder": "29.06.2021",
            "val": "",
            "breakLine": true
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.subject": {
            "type": "text",
            "label": "Subject",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.invoice_head.configure_by_table=='false'",
            "placeholder": "rechnung zm auftrag XY",
            "val": "",
            "breakLine": true
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.footer": {
            "type": "text",
            "label": "Footer",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.invoice_head.configure_by_table=='false'",
            "placeholder": "vielen dank für ihre Bestellung!",
            "val": ""
          }
        }
      },
      "invoice_summary_frame": {
        "type": "fieldset",
        "label": "Invoice Summary",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.configure_by_table=='false'",
        "repeat": false,
        "fields": {
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.invoice_summary.configure_by_table": {
            "type": "checkbox",
            "label": "Configure by table",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.invoice_summary.configure_by_table_help": {
            "type": "text",
            "label": "",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.invoice_summary.configure_by_table=='true'",
            "val": "Table Structure ( Field Name | Field Value )",
            "disabled": true,
            "width": "100%"
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.invoice_summary.table_id": {
            "type": "select",
            "label": "Select Table",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.invoice_summary.configure_by_table=='true'",
            "bind": "TABLES",
            "empty": "",
            "required": true,
            "breakLine": true
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.total_amount": {
            "type": "text",
            "label": "Total Amount",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.invoice_summary.configure_by_table=='false'",
            "placeholder": "102.04",
            "val": ""
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.vat_amount": {
            "type": "text",
            "label": "Vat Amount",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.invoice_summary.configure_by_table=='false'",
            "placeholder": "2.04",
            "val": ""
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.net_amount": {
            "type": "text",
            "label": "Net Amount",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.invoice_summary.configure_by_table=='false'",
            "placeholder": "100",
            "val": ""
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.payable_until": {
            "type": "text",
            "label": "Payable Until",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.invoice_summary.configure_by_table=='false'",
            "placeholder": "31.12.2021",
            "val": ""
          }
        }
      },
      "extra_frame": {
        "type": "fieldset",
        "label": "Logo",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "repeat": false,
        "fields": {
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.logo": {
            "type": "text",
            "label": "Logo(Base64 Encoded Data of JPEG)",
            "placeholder": "data:image/jpeg;base64, /9j/4AAQSkZJRgABAQEA",
            "val": "",
            "width": "100%"
          },
          "help_text_id_b7b0e4380196a9c60a5d236578bddb16306a51bd_logo": {
            "type": "text",
            "label": "",
            "val": "For conversion you may use e.g. https://onlinejpgtools.com/convert-jpg-to-base64",
            "disabled": true,
            "width": "100%"
          }
        }
      },
      "positions_list_frame": {
        "type": "fieldset",
        "label": "Invoice Items",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.configure_by_table=='false'",
        "repeat": false,
        "fields": {
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.positions_list.configure_by_table": {
            "type": "checkbox",
            "label": "Configure by table",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.positions_list.configure_by_table_help": {
            "type": "text",
            "label": "",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.positions_list.configure_by_table=='true'",
            "val": "Table Structure ( List Item | Field Name | Field Value )",
            "disabled": true,
            "width": "100%"
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.positions_list.table_id": {
            "type": "select",
            "label": "Select Table",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.positions_list.configure_by_table=='true'",
            "bind": "TABLES",
            "empty": "",
            "required": true,
            "breakLine": true
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.positions": {
            "type": "fieldset",
            "label": "Positions List",
            "style": "border-radius: 3px; border: 1px solid #ccc",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.positions_list.configure_by_table=='false'",
            "repeat": true,
            "fields": {
              "article_number": {
                "type": "text",
                "label": "Article Number",
                "val": "",
                "placeholder": "KM01"
              },
              "article_description": {
                "type": "text",
                "label": "Article Description",
                "val": "",
                "placeholder": "Kaffeemaschine super deluxe 100"
              },
              "quantity": {
                "type": "text",
                "label": "Quantity",
                "val": "",
                "placeholder": "1"
              },
              "package_type": {
                "type": "text",
                "label": "Package Type",
                "val": "",
                "placeholder": "stck."
              },
              "per_item_price": {
                "type": "text",
                "label": "Per Item Price",
                "val": "",
                "placeholder": "799.99"
              },
              "total_price": {
                "type": "text",
                "label": "Total Price",
                "val": "",
                "placeholder": "799.99"
              },
              "vat_amount": {
                "type": "text",
                "label": "Vat Amount",
                "val": "",
                "placeholder": "99.99"
              },
              "net_amount": {
                "type": "text",
                "label": "Net Amount",
                "val": "",
                "placeholder": "700"
              },
              "vat_percentage": {
                "type": "text",
                "label": "Vat Percentage",
                "val": "",
                "placeholder": "19%"
              },
              "footer_text": {
                "type": "text",
                "label": "Footer Text",
                "val": "",
                "placeholder": "für bis zu 10 Mitarbeiter geeignet bei maximal 14 litern pro person und arbeitstag. Herztabletten liegen bei."
              },
              "discount": {
                "type": "text",
                "label": "Discount",
                "val": "",
                "placeholder": "0%"
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          }
        }
      }
    }
  }
},
"/pdf-repro/BalanceSheetOptions.json/BalanceSheetOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.lang": {
        "type": "select",
        "label": "Document Language",
        "options": {
          "standard": {
            "label": "Standard Language"
          },
          "lt": {
            "label": "Lithuanian"
          },
          "it": {
            "label": "Italian"
          },
          "hu": {
            "label": "Hungarian"
          },
          "fr": {
            "label": "French"
          },
          "fi": {
            "label": "Finnish"
          },
          "bg": {
            "label": "Bulgarian"
          },
          "ca": {
            "label": "Canadian"
          },
          "cs": {
            "label": "Czech"
          },
          "de": {
            "label": "German"
          },
          "en": {
            "label": "English"
          },
          "es": {
            "label": "Spanish"
          }
        },
        "val": "en",
        "required": true
      },
      "options.gaap_style": {
        "type": "select",
        "label": "GAAP Style",
        "options": {
          "us_gaap_style": {
            "label": "US-GAAP style"
          },
          "german_gaap_style": {
            "label": "German-GAAP style"
          }
        },
        "val": "us_gaap_style",
        "required": true,
        "breakLine": true
      },
      "options.where_to_create": {
        "type": "select",
        "label": "Where to create",
        "options": {
          "only_open_in_browser": {
            "label": "Only open PDF in browser"
          },
          "only_export_to_cloud": {
            "label": "Only export to cloud"
          },
          "both_export_to_cloud_and_open_in_browser": {
            "label": "Both export to cloud and open pdf in browser"
          }
        },
        "val": "only_open_in_browser",
        "required": true,
        "breakLine": true
      }
    }
  },
  "placeholder_frame": {
    "type": "fieldset",
    "label": "Configure 'Balance Sheet' PDF",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "data.company_name": {
        "type": "text",
        "label": "Company Name",
        "placeholder": "My Company ltd.",
        "val": ""
      },
      "data.balance_sheet_date": {
        "type": "text",
        "label": "Balance Sheet Date",
        "placeholder": "December 31, 2020",
        "val": ""
      },
      "data.notes_1": {
        "type": "text",
        "label": "Notes 1",
        "placeholder": "These are a view notes-1",
        "val": "",
        "width": "100%"
      },
      "data.notes_2": {
        "type": "text",
        "label": "Notes 2",
        "placeholder": "These are a view notes-2",
        "val": "",
        "width": "100%"
      },
      "data.notes_3": {
        "type": "text",
        "label": "Notes 3",
        "placeholder": "These are a view notes-3",
        "val": "",
        "width": "100%"
      },
      "data.currency": {
        "type": "text",
        "label": "Currency",
        "placeholder": "€ million",
        "val": ""
      },
      "data.logo": {
        "type": "text",
        "label": "Logo(Base64 Encoded Data of JPEG)",
        "placeholder": "data:image/jpeg;base64, /9j/4AAQSkZJRgABAQEA",
        "val": "",
        "width": "100%"
      },
      "help_text_logo": {
        "type": "text",
        "label": "",
        "val": "For conversion you may use e.g. https://onlinejpgtools.com/convert-jpg-to-base64",
        "disabled": true,
        "width": "100%"
      },
      "options.table_id": {
        "type": "select",
        "label": "Select Table",
        "bind": "TABLES",
        "empty": "",
        "required": true
      },
      "options.configure_by_table_help": {
        "type": "text",
        "label": "",
        "val": "Table Structure ( Category | Position | Value )",
        "disabled": true,
        "width": "100%"
      },
      "options.configure_by_table_help2": {
        "type": "textarea",
        "label": "",
        "val": "Category Value ( Current Asset | Current Liabilities | Property and Equipment | Long-term Liabilities | Other Assets | Shareholder's Equity )",
        "disabled": true,
        "md_no_resize": false,
        "rows": 3,
        "width": "100%"
      }
    }
  },
  "cloud_config_frame": {
    "type": "fieldset",
    "label": "Config Cloud Directory to export to",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "options.where_to_create=='only_export_to_cloud' || options.where_to_create=='both_export_to_cloud_and_open_in_browser'",
    "repeat": false,
    "fields": {
      "options.webservice": {
        "type": "select",
        "label": "Select Webservice",
        "options": {
          "ms_one_drive": {
            "label": "Microsoft One Drive"
          },
          "dropbox": {
            "label": "Dropbox"
          },
          "google_drive": {
            "label": "Google Drive"
          }
        },
        "val": "ms_one_drive",
        "required": true,
        "breakLine": true
      },
      "options.github_url": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test",
        "show_if": "options.webservice=='github'",
        "val": "",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.export_dir": {
        "type": "text",
        "label": "Enter dir e.g. /MyZippyDocFiles/SubDir/",
        "show_if": "options.webservice!='github'",
        "val": "",
        "width": "100%",
        "breakLine": true
      },
      "options.github_token": {
        "type": "text",
        "label": "Specify the Github personal access token that has write permission:",
        "show_if": "options.webservice=='github'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.google_authorization_code": {
        "type": "text",
        "label": "Google OAuth Authorization Code with scope https://www.googleapis.com/auth/drive. You can get it here https://developers.google.com/oauthplayground/",
        "show_if": "options.webservice=='google_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox_authorization_code": {
        "type": "text",
        "label": "Dropbox Authorization Code. You can get it here https://www.dropbox.com/oauth2/authorize?client_id=9i7woztjp94jrkw&response_type=code",
        "show_if": "options.webservice=='dropbox'",
        "required": true,
        "width": "100%",
        "breakLine": true
      }
    }
  }
},
,
"/planning/BalanceSheetImpact.json/BalanceSheetImpact.json": {
  "balance_sheet_impact_table__base": [
    {
      "position": ["Revenues; *", "Interest; *"],
      "impact_date": "On Date",
      "balance_sheet_category": "Shareholders Equity",
      "balance_sheet_position": "Profit current Year",
      "change_sign": "False",
      "balance_sheet_counter_category": "Current Assets",
      "balance_sheet_counter_position": "Accounts Payable",
      "counter_position_change_sign": "False"
    },
    {
      "position": ["Revenues; *", "Interest; *"],
      "impact_date": "On Payment Date",
      "balance_sheet_category": "Current Assets",
      "balance_sheet_position": "Accounts Payable",
      "change_sign": "False",
      "balance_sheet_counter_category": "Current Assets",
      "balance_sheet_counter_position": "Accounts Payable",
      "counter_position_change_sign": "False"
    },
    {
      "position": ["Cost of Goods Sold; *", "Marketing Expenses; *", "Operating Expenses; *", "Sales Expenses; *", "General and Administration Expenses; *", "Personnel Expenses; *", "Interest; *", "Tax; *", "Extraordinary Items; *"],
      "impact_date": "On Date",
      "balance_sheet_category": "Shareholders Equity",
      "balance_sheet_position": "Accounts Payable",
      "change_sign": "False",
      "balance_sheet_counter_category": "Current Assets",
      "balance_sheet_counter_position": "Accounts Payable",
      "counter_position_change_sign": "False"
    },
    {
      "position": ["Cost of Goods Sold; *", "Marketing Expenses; *", "Operating Expenses; *", "Sales Expenses; *", "General and Administration Expenses; *", "Personnel Expenses; *", "Interest; *", "Tax; *", "Extraordinary Items; *"],
      "impact_date": "On Payment Date",
      "balance_sheet_category": "Current Assets",
      "balance_sheet_position": "Accounts Payable",
      "change_sign": "False",
      "balance_sheet_counter_category": "Current Assets",
      "balance_sheet_counter_position": "Accounts Payable",
      "counter_position_change_sign": "False"
    },
    {
      "position": ["Capital Expenditure; Land", "Capital Expenditure; Building", "Capital Expenditure; Expansion Capex", "Capital Expenditure; Vehicles"],
      "impact_date": "On Date",
      "balance_sheet_category": "Shareholders Equity",
      "balance_sheet_position": "Accounts Payable",
      "change_sign": "False",
      "balance_sheet_counter_category": "Longterm Assets",
      "balance_sheet_counter_position": "Accounts Payable",
      "counter_position_change_sign": "False"
    },
    {
      "position": ["Capital Expenditure; Land", "Capital Expenditure; Building", "Capital Expenditure; Expansion Capex", "Capital Expenditure; Vehicles"],
      "impact_date": "On Payment Date",
      "balance_sheet_category": "Current Assets",
      "balance_sheet_position": "Accounts Payable",
      "change_sign": "False",
      "balance_sheet_counter_category": "Longterm Assets",
      "balance_sheet_counter_position": "Accounts Payable",
      "counter_position_change_sign": "False"
    }
    {
      "position": ["Capital Expenditure; Equipment", "Capital Expenditure; Maintenance Capex", "Capital Expenditure; Other Capital Expenditure"],
      "impact_date": "On Date",
      "balance_sheet_category": "Shareholders Equity",
      "balance_sheet_position": "Accounts Payable",
      "change_sign": "False",
      "balance_sheet_counter_category": "Current Assets",
      "balance_sheet_counter_position": "Accounts Payable",
      "counter_position_change_sign": "False"
    },
    {
      "position": ["Capital Expenditure; Equipment", "Capital Expenditure; Maintenance Capex", "Capital Expenditure; Other Capital Expenditure"],
      "impact_date": "On Payment Date",
      "balance_sheet_category": "Current Assets",
      "balance_sheet_position": "Accounts Payable",
      "change_sign": "False",
      "balance_sheet_counter_category": "Current Assets",
      "balance_sheet_counter_position": "Accounts Payable",
      "counter_position_change_sign": "False"
    }
  ]
}
,
"/planning/StandardCalculatedRows.json/StandardCalculatedRows.json": {
  "Gross Profit": {
    "new_position": "Gross Profit",
    "calculation": "addition",
    "addition_positions": ["Revenues", "Cost of Goods Sold"]
  },
  "EBT": {
    "new_position": "EBT",
    "calculation": "addition",
    "addition_positions": ["Revenues","Cost of Goods Sold","Sales Expenses","Marketing Expenses","Operating Expenses","General and Administration Expenses","Personnel Expenses","Depreciation","Amortization","Interest","Extraordinary Items"]
  },
  "EBIT": {
    "new_position": "EBIT",
    "calculation": "addition",
    "addition_positions": ["Revenues","Cost of Goods Sold","Sales Expenses","Marketing Expenses","Operating Expenses","General and Administration Expenses","Personnel Expenses","Depreciation","Amortization"]
  },
  "EBITDA": {
    "new_position": "EBITDA",
    "calculation": "addition",
    "addition_positions": ["Revenues","Cost of Goods Sold","Sales Expenses","Marketing Expenses","Operating Expenses","General and Administration Expenses","Personnel Expenses"]
  },
  "Gross Profit Margin": {
    "new_position": "Gross Profit Margin",
    "calculation": "quota",
    "quota_positions": ["Revenues","Cost of Goods Sold"],
    "denominator_position": "Revenues"
  },
  "EBT Margin": {
    "new_position": "EBT Margin",
    "calculation": "quota",
    "quota_positions": ["Revenues","Cost of Goods Sold","Sales Expenses","Marketing Expenses","Operating Expenses","General and Administration Expenses","Personnel Expenses","Depreciation","Amortization","Interest","Extraordinary Items"],
    "denominator_position": "Revenues"
  },
  "EBIT Margin": {
    "new_position": "EBIT Margin",
    "calculation": "quota",
    "quota_positions": ["Revenues","Cost of Goods Sold","Sales Expenses","Marketing Expenses","Operating Expenses","General and Administration Expenses","Personnel Expenses","Depreciation","Amortization"],
    "denominator_position": "Revenues"
  },
  "EBITDA Margin": {
    "new_position": "EBITDA Margin",
    "calculation": "quota",
    "quota_positions": ["Revenues","Cost of Goods Sold","Sales Expenses","Marketing Expenses","Operating Expenses","General and Administration Expenses","Personnel Expenses"],
    "denominator_position": "Revenues"
  }
}
,
"/planning/CalculatedRows.json/CalculatedRows.json": {
  "calculated_rows__base": [
    {
      "calculation": "addition",
      "new_position": "Gross Profit",
      "addition_positions": ["Revenues","Cost of Goods Sold"],
      "format": ["Formatted","Line above","Line below","Double line above","Double line below"]
    },
    {
      "calculation": "addition",
      "new_position": "EBT",
      "addition_positions": ["Revenues","Cost of Goods Sold","Sales Expenses","Marketing Expenses","Operating Expenses","General and Administration Expenses","Personnel Expenses","Depreciation","Amortization","Interest","Extraordinary Items"],
      "format": []
    },
    {
      "calculation": "addition",
      "new_position": "EBIT",
      "addition_positions": ["Revenues","Cost of Goods Sold","Sales Expenses","Marketing Expenses","Operating Expenses","General and Administration Expenses","Personnel Expenses","Depreciation","Amortization"],
      "format": []
    },
    {
      "calculation": "addition",
      "new_position": "EBITDA",
      "addition_positions": ["Revenues","Cost of Goods Sold","Sales Expenses","Marketing Expenses","Operating Expenses","General and Administration Expenses","Personnel Expenses"],
      "format": []
    },
    {
      "calculation": "quota",
      "new_position": "Gross Profit Margin",
      "quota_positions": ["Revenues","Cost of Goods Sold"],
      "denominator_position": "Revenues",
      "format": []
    },
    {
      "calculation": "quota",
      "new_position": "EBT Margin",
      "quota_positions": ["Revenues","Cost of Goods Sold","Sales Expenses","Marketing Expenses","Operating Expenses","General and Administration Expenses","Personnel Expenses","Depreciation","Amortization","Interest","Extraordinary Items"],
      "denominator_position": "Revenues",
      "format": []
    },
    {
      "calculation": "quota",
      "new_position": "EBIT Margin",
      "quota_positions": ["Revenues","Cost of Goods Sold","Sales Expenses","Marketing Expenses","Operating Expenses","General and Administration Expenses","Personnel Expenses","Depreciation","Amortization"],
      "denominator_position": "Revenues",
      "format": []
    },
    {
      "calculation": "quota",
      "new_position": "EBITDA Margin",
      "quota_positions": ["Revenues","Cost of Goods Sold","Sales Expenses","Marketing Expenses","Operating Expenses","General and Administration Expenses","Personnel Expenses"],
      "denominator_position": "Revenues",
      "format": []
    }
  ]
}
,
"/pdf_invoice/CustomLabelCzech.json/CustomLabelCzech.json": {
  "custom_labels_frame_cs": {
    "type": "fieldset",
    "label": "Custom Label",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "custom_labels=='true' && (lang=='standard' || lang=='cs')",
    "repeat": false,
    "fields": {
      "label_data.cs.invoice_title": {
        "type": "text",
        "label": "Invoice Title",
        "placeholder": "Invoice Title",
        "val": "Invoice"
      },
      "label_data.cs.invoice_date_title": {
        "type": "text",
        "label": "Invoice Date Title",
        "placeholder": "Invoice Date Title",
        "val": "Date:"
      },
      "label_data.cs.invoice_no_title": {
        "type": "text",
        "label": "Invoice No Title",
        "placeholder": "Invoice No Title",
        "val": "Invoice No.:"
      },
      "label_data.cs.customer_no_title": {
        "type": "text",
        "label": "Customer No Title",
        "placeholder": "Customer No Title",
        "val": "Customer No.:"
      },
      "label_data.cs.reference_no_title": {
        "type": "text",
        "label": "Reference No Title",
        "placeholder": "Reference No Title",
        "val": "Reference No.:"
      },
      "label_data.cs.your_order_date_title": {
        "type": "text",
        "label": "Your Order Date Title",
        "placeholder": "Your Order Date Title",
        "val": "Date:"
      },
      "label_data.cs.subject_title": {
        "type": "text",
        "label": "Subject Title",
        "placeholder": "Subject Title",
        "val": "Subject"
      },
      "label_data.cs.value_added_tax_title": {
        "type": "text",
        "label": "Value Added Tax Title",
        "placeholder": "Value Added Tax Title",
        "val": "Value Added Tax"
      },
      "label_data.cs.total_excluding_vat_title": {
        "type": "text",
        "label": "Total excluding Vat Title",
        "placeholder": "Total excluding Vat Title",
        "val": "Total excluding VAT"
      },
      "label_data.cs.total_value_added_tax_title": {
        "type": "text",
        "label": "Total Value Added Tax Title",
        "placeholder": "Total Value Added Tax Title",
        "val": "Value Added Tax"
      },
      "label_data.cs.total_including_vat_title": {
        "type": "text",
        "label": "Total including Vat Title",
        "placeholder": "Total including Vat Title",
        "val": "Total including VAT"
      },
      "label_data.cs.pay_until_title": {
        "type": "text",
        "label": "Pay until Title",
        "placeholder": "Pay until Title",
        "val": "Pay this invoice until"
      },
      "label_data.cs.register_no_title": {
        "type": "text",
        "label": "Register No Title",
        "placeholder": "Register No Title",
        "val": "Register No.:"
      },
      "label_data.cs.register_court_title": {
        "type": "text",
        "label": "Register Court Title",
        "placeholder": "Register Court Title",
        "val": "Register Court:"
      },
      "label_data.cs.iban_title": {
        "type": "text",
        "label": "IBAN Title",
        "placeholder": "IBAN Title",
        "val": "IBAN:"
      },
      "label_data.cs.bic_title": {
        "type": "text",
        "label": "BIC Title",
        "placeholder": "BIC Title",
        "val": "BIC:"
      },
      "label_data.cs.vat_number_title": {
        "type": "text",
        "label": "VAT Number Title",
        "placeholder": "VAT Number Title",
        "val": "VAT Number:"
      },
      "label_data.cs.article_number_title": {
        "type": "text",
        "label": "Article No Title",
        "placeholder": "Article No Title",
        "val": "Article No."
      },
      "label_data.cs.article_description_title": {
        "type": "text",
        "label": "Description Title",
        "placeholder": "Description Title",
        "val": "Description"
      },
      "label_data.cs.article_quantity_title": {
        "type": "text",
        "label": "Quantity Title",
        "placeholder": "Quantity Title",
        "val": "Quantity"
      },
      "label_data.cs.article_unit_title": {
        "type": "text",
        "label": "Article Unit Title",
        "placeholder": "Article Unit Title",
        "val": "Unit"
      },
      "label_data.cs.article_per_item_title": {
        "type": "text",
        "label": "per Item Title",
        "placeholder": "per Item Title",
        "val": "per Item"
      },
      "label_data.cs.article_net_of_vat_title": {
        "type": "text",
        "label": "Net of VAT Title",
        "placeholder": "Net of VAT Title",
        "val": "Net of VAT"
      },
      "label_data.cs.article_total_title": {
        "type": "text",
        "label": "Article Total Title",
        "placeholder": "Article Total Title",
        "val": "Total"
      }
    }
  }
}
,
"/pdf_invoice/InvoiceOptions.json/InvoiceOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "template_id": {
        "type": "select",
        "label": "Template",
        "options": {
          "b7b0e4380196a9c60a5d236578bddb16306a51bd": {
            "label": "Design 1"
          },
          "4b004eab1ea9ea0302a8cdfc421662e33023b84d": {
            "label": "Design 2"
          },
          "3cbf8eb633434f919914f7b9d904a55e65e4b461": {
            "label": "Design 3"
          },
          "f6ccf2a405e1fb2df4d44a9df5449ef75e9db178": {
            "label": "Design 4"
          }
        },
        "val": "b7b0e4380196a9c60a5d236578bddb16306a51bd",
        "required": true,
        "breakLine": true
      },
      "lang":{
        "type": "hidden",
        "val": "en"
      },
      "where_to_create": {
        "type": "select",
        "label": "Where to create",
        "options": {
          "only_open_in_browser": {
            "label": "Only open PDF in browser"
          },
          "only_export_to_cloud": {
            "label": "Only export to cloud"
          },
          "both_export_to_cloud_and_open_in_browser": {
            "label": "Both export to cloud and open pdf in browser"
          }
        },
        "val": "only_open_in_browser",
        "required": true,
        "breakLine": true
      },
      "configure_by_table": {
        "type": "checkbox",
        "label": "Configure by table",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "configure_by_table_help": {
        "type": "text",
        "label": "",
        "show_if": "configure_by_table=='true'",
        "val": "Table Structure ( Document | List Item | Field Name | Field Value )",
        "disabled": true,
        "width": "100%"
      },
      "table_id": {
        "type": "select",
        "label": "Select Table",
        "show_if": "configure_by_table=='true'",
        "bind": "TABLES",
        "empty": "",
        "required": true,
        "breakLine": true
      }
    }
  },
  "export_link_frame": {
    "type": "fieldset",
    "label": "Export path in MS One Drive",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "where_to_create=='only_export_to_cloud' || where_to_create=='both_export_to_cloud_and_open_in_browser'",
    "repeat": false,
    "fields": {
      "export_dir": {
        "type": "text",
        "label": "Enter dir e.g. /MyZippyDocFiles/SubDir/",
        "val": "/",
        "width": "100%",
        "breakLine": true
      }
    }
  },
  "invoice_placeholder_frame": {
    "type": "fieldset",
    "label": "Configure 'Invoice' PDF",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "sender_detail_frame": {
        "type": "fieldset",
        "label": "Sender Details",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "configure_by_table=='false'",
        "repeat": false,
        "fields": {
          "sender_detail.configure_by_table": {
            "type": "checkbox",
            "label": "Configure by table",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "sender_detail.table_style": {
            "type": "select",
            "label": "Table Style",
            "show_if": "sender_detail.configure_by_table=='true'",
            "options": {
              "field_name_as_header": {
                "label": "Field Name as Header"
              },
              "row_by_row_field_name": {
                "label": "Row by Row Field Name"
              }
            },
            "val": "field_name_as_header",
            "required": true,
            "breakLine": true
          },
          "sender_detail.configure_by_table_help": {
            "type": "textarea",
            "label": "",
            "show_if": "sender_detail.configure_by_table=='true' && sender_detail.table_style=='field_name_as_header'",
            "val": "Table Structure ( Sender Name | Sender Department | Sender Street | Sender Zip Code | Sender City | Sender Registry Number | Sender Registry Court | Sender Representatives | Sender Representative Type | Sender Bank | Sender Bank IBAN | Sender Bank BIC | Sender Bank Account No | Sender VAT No )",
            "md_no_resize": false,
            "rows": 4,
            "disabled": true,
            "width": "100%"
          },
          "sender_detail.configure_by_table_help2": {
            "type": "text",
            "label": "",
            "show_if": "sender_detail.configure_by_table=='true' && sender_detail.table_style=='row_by_row_field_name'",
            "val": "Table Structure ( Field Name | Field Value )",
            "disabled": true,
            "width": "100%"
          },
          "sender_detail.table_id": {
            "type": "select",
            "label": "Select Table",
            "show_if": "sender_detail.configure_by_table=='true'",
            "bind": "TABLES",
            "empty": "",
            "required": true
          },
          "sender_detail.selected_col": {
            "type": "select",
            "label": "Select Column",
            "show_if": "sender_detail.configure_by_table=='true' && sender_detail.table_style=='field_name_as_header'",
            "required": true,
            "table": "sender_detail.table_id",
            "bind": "COLUMNS"
          },
          "sender_detail.selected_rows": {
            "type": "select",
            "label": "Select Row Number",
            "show_if": "sender_detail.configure_by_table=='true' && sender_detail.table_style=='field_name_as_header'",
            "multiple": false,
            "unique_values_only": true,
            "table": "sender_detail.table_id",
            "column_list": "sender_detail.selected_col",
            "bind": "RECORDS",
            "required": true,
            "breakLine": true
          },
          "data.sender_name": {
            "type": "text",
            "label": "Sender Name",
            "show_if": "sender_detail.configure_by_table=='false'",
            "placeholder": "My Company ltd.",
            "val": ""
          },
          "data.sender_department": {
            "type": "text",
            "label": "Sender Department",
            "show_if": "sender_detail.configure_by_table=='false'",
            "placeholder": "Purchase department",
            "val": ""
          },
          "data.sender_street": {
            "type": "text",
            "label": "Sender Street",
            "show_if": "sender_detail.configure_by_table=='false'",
            "placeholder": "Main street 21",
            "val": ""
          },
          "data.sender_zip_code": {
            "type": "text",
            "label": "Sender Zip Code",
            "show_if": "sender_detail.configure_by_table=='false'",
            "placeholder": "80000",
            "val": ""
          },
          "data.sender_city": {
            "type": "text",
            "label": "Sender City",
            "show_if": "sender_detail.configure_by_table=='false'",
            "placeholder": "München",
            "val": "",
            "breakLine": true
          },
          "data.sender_registry_number": {
            "type": "text",
            "label": "Sender Registry Number",
            "show_if": "sender_detail.configure_by_table=='false'",
            "placeholder": "HRB 334543",
            "val": ""
          },
          "data.sender_registry_court": {
            "type": "text",
            "label": "Sender Registry Court",
            "show_if": "sender_detail.configure_by_table=='false'",
            "placeholder": "Frankfurt am Main",
            "val": ""
          },
          "data.sender_representatives": {
            "type": "text",
            "label": "Sender Representatives",
            "show_if": "sender_detail.configure_by_table=='false'",
            "placeholder": "Dr. Joe Johnson",
            "val": ""
          },
          "data.sender_representative_type": {
            "type": "text",
            "label": "Sender Representative Type",
            "show_if": "sender_detail.configure_by_table=='false'",
            "placeholder": "Geschäftsführer",
            "val": "",
            "breakLine": true
          },
          "data.sender_bank": {
            "type": "text",
            "label": "Sender Bank",
            "show_if": "sender_detail.configure_by_table=='false'",
            "placeholder": "Deutsche Bank",
            "val": ""
          },
          "data.sender_bank_iban": {
            "type": "text",
            "label": "Sender Bank IBAN",
            "show_if": "sender_detail.configure_by_table=='false'",
            "placeholder": "XXX",
            "val": ""
          },
          "data.sender_bank_bic": {
            "type": "text",
            "label": "Sender Bank BIC",
            "show_if": "sender_detail.configure_by_table=='false'",
            "placeholder": "XXX",
            "val": ""
          },
          "data.sender_bank_account_no": {
            "type": "text",
            "label": "Sender Bank Account No",
            "show_if": "sender_detail.configure_by_table=='false'",
            "placeholder": "XXX",
            "val": ""
          },
          "data.sender_vat_no": {
            "type": "text",
            "label": "Sender VAT No",
            "show_if": "sender_detail.configure_by_table=='false'",
            "placeholder": "XXX",
            "val": ""
          }
        }
      },
      "extra_frame": {
        "type": "fieldset",
        "label": "Logo",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "repeat": false,
        "fields": {
          "data.logo": {
            "type": "text",
            "label": "Logo(Base64 Encoded Data of JPEG)",
            "placeholder": "data:image/jpeg;base64, /9j/4AAQSkZJRgABAQEA",
            "val": "",
            "width": "100%"
          },
          "help_text_logo": {
            "type": "text",
            "label": "",
            "val": "For conversion you may use e.g. https://onlinejpgtools.com/convert-jpg-to-base64",
            "disabled": true,
            "width": "100%"
          }
        }
      },
      "customer_detail_frame": {
        "type": "fieldset",
        "label": "Customer Details",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "configure_by_table=='false'",
        "repeat": false,
        "fields": {
          "customer_detail.configure_by_table": {
            "type": "checkbox",
            "label": "Configure by table",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "customer_detail.table_style": {
            "type": "select",
            "label": "Table Style",
            "show_if": "customer_detail.configure_by_table=='true'",
            "options": {
              "field_name_as_header": {
                "label": "Field Name as Header"
              },
              "row_by_row_field_name": {
                "label": "Row by Row Field Name"
              }
            },
            "val": "field_name_as_header",
            "required": true,
            "breakLine": true
          },
          "customer_detail.configure_by_table_help": {
            "type": "textarea",
            "label": "",
            "show_if": "customer_detail.configure_by_table=='true' && customer_detail.table_style=='field_name_as_header'",
            "val": "Table Structure ( Customer Number | Customer Name | Customer Department | Customer Street | Customer Zip Code | Customer City )",
            "md_no_resize": false,
            "rows": 2,
            "disabled": true,
            "width": "100%"
          },
          "customer_detail.configure_by_table_help2": {
            "type": "text",
            "label": "",
            "show_if": "customer_detail.configure_by_table=='true' && customer_detail.table_style=='row_by_row_field_name'",
            "val": "Table Structure ( Field Name | Field Value )",
            "disabled": true,
            "width": "100%"
          },
          "customer_detail.table_id": {
            "type": "select",
            "label": "Select Table",
            "show_if": "customer_detail.configure_by_table=='true'",
            "bind": "TABLES",
            "empty": "",
            "required": true
          },
          "customer_detail.selected_col": {
            "type": "select",
            "label": "Select Column",
            "show_if": "customer_detail.configure_by_table=='true' && customer_detail.table_style=='field_name_as_header'",
            "required": true,
            "table": "customer_detail.table_id",
            "bind": "COLUMNS"
          },
          "customer_detail.selected_rows": {
            "type": "select",
            "label": "Select Row Number",
            "show_if": "customer_detail.configure_by_table=='true' && customer_detail.table_style=='field_name_as_header'",
            "multiple": false,
            "unique_values_only": true,
            "table": "customer_detail.table_id",
            "column_list": "customer_detail.selected_col",
            "bind": "RECORDS",
            "required": true,
            "breakLine": true
          },
          "data.customer_number": {
            "type": "text",
            "label": "Customer Number",
            "show_if": "customer_detail.configure_by_table=='false'",
            "placeholder": "54321",
            "val": ""
          },
          "data.customer_name": {
            "type": "text",
            "label": "Customer Name",
            "show_if": "customer_detail.configure_by_table=='false'",
            "placeholder": "My company ltd.",
            "val": ""
          },
          "data.customer_department": {
            "type": "text",
            "label": "Customer Department",
            "show_if": "customer_detail.configure_by_table=='false'",
            "placeholder": "purchase department",
            "val": ""
          },
          "data.customer_street": {
            "type": "text",
            "label": "Customer Street",
            "show_if": "customer_detail.configure_by_table=='false'",
            "placeholder": "Main street 21",
            "val": ""
          },
          "data.customer_zip_code": {
            "type": "text",
            "label": "Customer Zip Code",
            "show_if": "customer_detail.configure_by_table=='false'",
            "placeholder": "80000",
            "val": ""
          },
          "data.customer_city": {
            "type": "text",
            "label": "Customer City",
            "show_if": "customer_detail.configure_by_table=='false'",
            "placeholder": "München",
            "val": ""
          }
        }
      },
      "invoice_spec_frame": {
        "type": "fieldset",
        "label": "Invoice Specifications",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "configure_by_table=='false'",
        "repeat": false,
        "fields": {
          "invoice_spec.configure_by_table": {
            "type": "checkbox",
            "label": "Configure by table",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "invoice_spec.table_style": {
            "type": "select",
            "label": "Table Style",
            "show_if": "invoice_spec.configure_by_table=='true'",
            "options": {
              "field_name_as_header": {
                "label": "Field Name as Header"
              },
              "row_by_row_field_name": {
                "label": "Row by Row Field Name"
              }
            },
            "val": "field_name_as_header",
            "required": true,
            "breakLine": true
          },
          "invoice_spec.configure_by_table_help": {
            "type": "textarea",
            "label": "",
            "show_if": "invoice_spec.configure_by_table=='true' && invoice_spec.table_style=='field_name_as_header'",
            "val": "Table Structure ( Invoice Date | Invoice Number | Reference | Order Date | Subject | Invoice Text | Payment Text | Invoice Footer | Payable Until | Article Number | Article Description | Quantity | Package Type | Per Item Price | Vat Percentage)",
            "md_no_resize": false,
            "rows": 4,
            "disabled": true,
            "width": "100%"
          },
          "invoice_spec.configure_by_table_help2": {
            "type": "text",
            "label": "",
            "show_if": "invoice_spec.configure_by_table=='true' && invoice_spec.table_style=='row_by_row_field_name'",
            "val": "Table Structure ( Document | List Item | Field Name | Field Value )",
            "disabled": true,
            "width": "100%"
          },
          "invoice_spec.table_id": {
            "type": "select",
            "label": "Select Table",
            "show_if": "invoice_spec.configure_by_table=='true'",
            "bind": "TABLES",
            "empty": "",
            "required": true
          },
          "invoice_spec.select_invoice_number": {
            "type": "checkbox",
            "label": "Select Invoice Number",
            "show_if": "invoice_spec.configure_by_table=='true' && invoice_spec.table_style=='field_name_as_header'",
            "val": "false",
            "isOn": "true",
            "isOff": "false"
          },
          "invoice_spec.selected_col": {
            "type": "select",
            "label": "Select Column",
            "show_if": "invoice_spec.configure_by_table=='true' && invoice_spec.table_style=='field_name_as_header' && invoice_spec.select_invoice_number=='true'",
            "required": true,
            "table": "invoice_spec.table_id",
            "bind": "COLUMNS"
          },
          "invoice_spec.selected_rows": {
            "type": "select",
            "label": "Select Invoice Number",
            "show_if": "invoice_spec.configure_by_table=='true' && invoice_spec.table_style=='field_name_as_header' && invoice_spec.select_invoice_number=='true'",
            "multiple": true,
            "unique_values_only": true,
            "table": "invoice_spec.table_id",
            "column_list": "invoice_spec.selected_col",
            "bind": "RECORDS",
            "required": true,
            "breakLine": true
          },
          "invoice_head_frame": {
            "type": "fieldset",
            "label": "Invoice Head",
            "style": "border-radius: 3px; border: 1px solid #ccc",
            "show_if": "invoice_spec.configure_by_table=='false'",
            "repeat": false,
            "fields": {
              "data.invoice_date": {
                "type": "text",
                "label": "Invoice Date",
                "placeholder": "29.06.2021",
                "val": ""
              },
              "data.invoice_number": {
                "type": "text",
                "label": "Invoice Number",
                "placeholder": "4711091",
                "val": ""
              },
              "data.reference": {
                "type": "text",
                "label": "Reference",
                "placeholder": "eK2-762-24/vfs",
                "val": ""
              },
              "data.order_date": {
                "type": "text",
                "label": "Order Date",
                "placeholder": "29.06.2021",
                "val": "",
                "breakLine": true
              },
              "data.subject": {
                "type": "text",
                "label": "Subject",
                "placeholder": "rechnung zm auftrag XY",
                "val": "",
                "breakLine": true
              },
              "data.invoice_text": {
                "type": "text",
                "label": "Invoice Text",
                "placeholder": "Rechnung zu ihrem Auftrag",
                "val": "",
                "width": "100%",
                "breakLine": true
              },
              "data.payment_text": {
                "type": "text",
                "label": "Payment Text",
                "placeholder": "Diese Rechnung wurde bereits",
                "val": "",
                "width": "100%",
                "breakLine": true
              },
              "data.footer": {
                "type": "text",
                "label": "Invoice Footer",
                "placeholder": "vielen dank für ihre Bestellung!",
                "val": "",
                "width": "100%"
              },
              "data.payable_until": {
                "type": "text",
                "label": "Payable Until",
                "placeholder": "31.12.2021",
                "val": ""
              }
            }
          },
          "positions_list_frame": {
            "type": "fieldset",
            "label": "Invoice Items",
            "style": "border-radius: 3px; border: 1px solid #ccc",
            "show_if": "invoice_spec.configure_by_table=='false'",
            "repeat": false,
            "fields": {
              "positions_list.auto_calc": {
                "type": "checkbox",
                "label": "Automatic Calculation",
                "val": "true",
                "isOn": "true",
                "isOff": "false",
                "breakLine": true
              },
              "data.positions": {
                "type": "fieldset",
                "label": "Positions List",
                "style": "border-radius: 3px; border: 1px solid #ccc",
                "show_if": "invoice_spec.configure_by_table=='false'",
                "repeat": true,
                "fields": {
                  "article_number": {
                    "type": "text",
                    "label": "Article Number",
                    "val": "",
                    "placeholder": "KM01"
                  },
                  "article_description": {
                    "type": "text",
                    "label": "Article Description",
                    "val": "",
                    "placeholder": "Kaffeemaschine super deluxe 100"
                  },
                  "quantity": {
                    "type": "text",
                    "label": "Quantity",
                    "val": "",
                    "placeholder": "1"
                  },
                  "package_type": {
                    "type": "text",
                    "label": "Package Type",
                    "val": "",
                    "placeholder": "stck."
                  },
                  "per_item_price": {
                    "type": "text",
                    "label": "Per Item Price",
                    "val": "",
                    "placeholder": "799.99"
                  },
                  "total_price": {
                    "type": "text",
                    "label": "Total Price",
                    "show_if": "positions_list.auto_calc=='false'",
                    "val": "",
                    "placeholder": "799.99"
                  },
                  "vat_amount": {
                    "type": "text",
                    "label": "Vat Amount",
                    "show_if": "positions_list.auto_calc=='false'",
                    "val": "",
                    "placeholder": "99.99"
                  },
                  "net_amount": {
                    "type": "text",
                    "label": "Net Amount",
                    "show_if": "positions_list.auto_calc=='false'",
                    "val": "",
                    "placeholder": "700"
                  },
                  "vat_percentage": {
                    "type": "text",
                    "label": "Vat Percentage",
                    "val": "",
                    "placeholder": "19%"
                  },
                  "delete": {
                    "type": "button",
                    "label": "Delete",
                    "function": "DELETE_ROW"
                  }
                }
              }
            }
          },
          "invoice_summary_frame": {
            "type": "fieldset",
            "label": "Invoice Summary",
            "style": "border-radius: 3px; border: 1px solid #ccc",
            "show_if": "invoice_spec.configure_by_table=='false'",
            "repeat": false,
            "fields": {
              "invoice_summary.auto_calc": {
                "type": "checkbox",
                "label": "Automatic Calculation",
                "val": "true",
                "isOn": "true",
                "isOff": "false",
                "breakLine": true
              },
              "data.total_amount": {
                "type": "text",
                "label": "Total Amount",
                "show_if": "invoice_summary.auto_calc=='false'",
                "placeholder": "102.04",
                "val": ""
              },
              "data.vat_amount": {
                "type": "text",
                "label": "Vat Amount",
                "show_if": "invoice_summary.auto_calc=='false'",
                "placeholder": "2.04",
                "val": ""
              },
              "data.net_amount": {
                "type": "text",
                "label": "Net Amount",
                "show_if": "invoice_summary.auto_calc=='false'",
                "placeholder": "100",
                "val": "",
                "breakLine": true
              },
              "create_invoice_log_table": {
                "type": "checkbox",
                "label": "Create Invoice Log Table",
                "val": "false",
                "isOn": "true",
                "isOff": "false"
              },
              "invoice_log_table_name": {
                "type": "text",
                "label": "Invoice Log Table Name",
                "show_if": "create_invoice_log_table=='true'",
                "val": "Invoice Log Table",
                "style": "margin-left: 15px",
                "breakLine": true
              }
            }
          }
        }
      },
      "price_format_frame": {
        "type": "fieldset",
        "label": "Price Format",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "configure_by_table=='true'",
        "repeat": false,
        "fields": {
          "price_format.category": {
            "type": "hidden",
            "val": "currency"
          },
          "price_format.decimal_places": {
            "type": "select",
            "label": "Decimal Places",
            "required": true,
            "options": {
              "0": {
                "label": "0 digits"
              },
              "1": {
                "label": "1 digits"
              },
              "2": {
                "label": "2 digits"
              },
              "3": {
                "label": "3 digits"
              },
              "4": {
                "label": "4 digits"
              },
              "5": {
                "label": "5 digits"
              },
              "6": {
                "label": "6 digits"
              },
              "7": {
                "label": "7 digits"
              },
              "8": {
                "label": "8 digits"
              },
              "9": {
                "label": "9 digits"
              }
            },
            "val": "2"
          },
          "price_format.use_1000_separator": {
            "type": "checkbox",
            "label": "Use 1000 Separator(,)",
            "val": "true",
            "isOn": "true",
            "isOff": "false"
          },
          "price_format.currency_symbol": {
            "type": "select",
            "label": "Symbol",
            "required": true,
            "options": {
              "dollar": {
                "label": "$"
              },
              "euro": {
                "label": "€"
              },
              "pound": {
                "label": "£"
              }
            },
            "val": "dollar"
          }
        }
      },
      "custom_labels": {
        "type": "checkbox",
        "label": "Customise Labels",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      }
    }
  },
  "cloud_config_frame": {
    "type": "fieldset",
    "label": "Config Cloud Directory to export to",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "type=='create' && (where_to_create=='only_export_to_cloud' || where_to_create=='both_export_to_cloud_and_open_in_browser')",
    "repeat": false,
    "fields": {
      "webservice": {
        "type": "select",
        "label": "Select Webservice",
        "options": {
          "ms_one_drive": {
            "label": "Microsoft One Drive"
          },
          "dropbox": {
            "label": "Dropbox"
          },
          "google_drive": {
            "label": "Google Drive"
          }
        },
        "val": "ms_one_drive",
        "required": true,
        "breakLine": true
      },
      "github_url": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test",
        "show_if": "webservice=='github'",
        "val": "",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "export_dir": {
        "type": "text",
        "label": "Enter dir e.g. /MyZippyDocFiles/SubDir/",
        "show_if": "webservice!='github'",
        "val": "",
        "width": "100%",
        "breakLine": true
      },
      "github_token": {
        "type": "text",
        "label": "Specify the Github personal access token that has write permission:",
        "show_if": "webservice=='github'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "google_authorization_code": {
        "type": "text",
        "label": "Google OAuth Authorization Code with scope https://www.googleapis.com/auth/drive. You can get it here https://developers.google.com/oauthplayground/",
        "show_if": "webservice=='google_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "dropbox_authorization_code": {
        "type": "text",
        "label": "Dropbox Authorization Code. You can get it here https://www.dropbox.com/oauth2/authorize?client_id=9i7woztjp94jrkw&response_type=code",
        "show_if": "webservice=='dropbox'",
        "required": true,
        "width": "100%",
        "breakLine": true
      }
    }
  }
}
,
"/pdf_invoice/CustomLabelItalian.json/CustomLabelItalian.json": {
  "custom_labels_frame_it": {
    "type": "fieldset",
    "label": "Custom Label",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "custom_labels=='true' && (lang=='standard' || lang=='it')",
    "repeat": false,
    "fields": {
      "label_data.it.invoice_title": {
        "type": "text",
        "label": "Invoice Title",
        "placeholder": "Invoice Title",
        "val": "Invoice"
      },
      "label_data.it.invoice_date_title": {
        "type": "text",
        "label": "Invoice Date Title",
        "placeholder": "Invoice Date Title",
        "val": "Date:"
      },
      "label_data.it.invoice_no_title": {
        "type": "text",
        "label": "Invoice No Title",
        "placeholder": "Invoice No Title",
        "val": "Invoice No.:"
      },
      "label_data.it.customer_no_title": {
        "type": "text",
        "label": "Customer No Title",
        "placeholder": "Customer No Title",
        "val": "Customer No.:"
      },
      "label_data.it.reference_no_title": {
        "type": "text",
        "label": "Reference No Title",
        "placeholder": "Reference No Title",
        "val": "Reference No.:"
      },
      "label_data.it.your_order_date_title": {
        "type": "text",
        "label": "Your Order Date Title",
        "placeholder": "Your Order Date Title",
        "val": "Date:"
      },
      "label_data.it.subject_title": {
        "type": "text",
        "label": "Subject Title",
        "placeholder": "Subject Title",
        "val": "Subject"
      },
      "label_data.it.value_added_tax_title": {
        "type": "text",
        "label": "Value Added Tax Title",
        "placeholder": "Value Added Tax Title",
        "val": "Value Added Tax"
      },
      "label_data.it.total_excluding_vat_title": {
        "type": "text",
        "label": "Total excluding Vat Title",
        "placeholder": "Total excluding Vat Title",
        "val": "Total excluding VAT"
      },
      "label_data.it.total_value_added_tax_title": {
        "type": "text",
        "label": "Total Value Added Tax Title",
        "placeholder": "Total Value Added Tax Title",
        "val": "Value Added Tax"
      },
      "label_data.it.total_including_vat_title": {
        "type": "text",
        "label": "Total including Vat Title",
        "placeholder": "Total including Vat Title",
        "val": "Total including VAT"
      },
      "label_data.it.pay_until_title": {
        "type": "text",
        "label": "Pay until Title",
        "placeholder": "Pay until Title",
        "val": "Pay this invoice until"
      },
      "label_data.it.register_no_title": {
        "type": "text",
        "label": "Register No Title",
        "placeholder": "Register No Title",
        "val": "Register No.:"
      },
      "label_data.it.register_court_title": {
        "type": "text",
        "label": "Register Court Title",
        "placeholder": "Register Court Title",
        "val": "Register Court:"
      },
      "label_data.it.iban_title": {
        "type": "text",
        "label": "IBAN Title",
        "placeholder": "IBAN Title",
        "val": "IBAN:"
      },
      "label_data.it.bic_title": {
        "type": "text",
        "label": "BIC Title",
        "placeholder": "BIC Title",
        "val": "BIC:"
      },
      "label_data.it.vat_number_title": {
        "type": "text",
        "label": "VAT Number Title",
        "placeholder": "VAT Number Title",
        "val": "VAT Number:"
      },
      "label_data.it.article_number_title": {
        "type": "text",
        "label": "Article No Title",
        "placeholder": "Article No Title",
        "val": "Article No."
      },
      "label_data.it.article_description_title": {
        "type": "text",
        "label": "Description Title",
        "placeholder": "Description Title",
        "val": "Description"
      },
      "label_data.it.article_quantity_title": {
        "type": "text",
        "label": "Quantity Title",
        "placeholder": "Quantity Title",
        "val": "Quantity"
      },
      "label_data.it.article_unit_title": {
        "type": "text",
        "label": "Article Unit Title",
        "placeholder": "Article Unit Title",
        "val": "Unit"
      },
      "label_data.it.article_per_item_title": {
        "type": "text",
        "label": "per Item Title",
        "placeholder": "per Item Title",
        "val": "per Item"
      },
      "label_data.it.article_net_of_vat_title": {
        "type": "text",
        "label": "Net of VAT Title",
        "placeholder": "Net of VAT Title",
        "val": "Net of VAT"
      },
      "label_data.it.article_total_title": {
        "type": "text",
        "label": "Article Total Title",
        "placeholder": "Article Total Title",
        "val": "Total"
      }
    }
  }
}
,
"/pdf_invoice/CustomLabelFinnish.json/CustomLabelFinnish.json": {
  "custom_labels_frame_fi": {
    "type": "fieldset",
    "label": "Custom Label",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "custom_labels=='true' && (lang=='standard' || lang=='fi')",
    "repeat": false,
    "fields": {
      "label_data.fi.invoice_title": {
        "type": "text",
        "label": "Invoice Title",
        "placeholder": "Invoice Title",
        "val": "Invoice"
      },
      "label_data.fi.invoice_date_title": {
        "type": "text",
        "label": "Invoice Date Title",
        "placeholder": "Invoice Date Title",
        "val": "Date:"
      },
      "label_data.fi.invoice_no_title": {
        "type": "text",
        "label": "Invoice No Title",
        "placeholder": "Invoice No Title",
        "val": "Invoice No.:"
      },
      "label_data.fi.customer_no_title": {
        "type": "text",
        "label": "Customer No Title",
        "placeholder": "Customer No Title",
        "val": "Customer No.:"
      },
      "label_data.fi.reference_no_title": {
        "type": "text",
        "label": "Reference No Title",
        "placeholder": "Reference No Title",
        "val": "Reference No.:"
      },
      "label_data.fi.your_order_date_title": {
        "type": "text",
        "label": "Your Order Date Title",
        "placeholder": "Your Order Date Title",
        "val": "Date:"
      },
      "label_data.fi.subject_title": {
        "type": "text",
        "label": "Subject Title",
        "placeholder": "Subject Title",
        "val": "Subject"
      },
      "label_data.fi.value_added_tax_title": {
        "type": "text",
        "label": "Value Added Tax Title",
        "placeholder": "Value Added Tax Title",
        "val": "Value Added Tax"
      },
      "label_data.fi.total_excluding_vat_title": {
        "type": "text",
        "label": "Total excluding Vat Title",
        "placeholder": "Total excluding Vat Title",
        "val": "Total excluding VAT"
      },
      "label_data.fi.total_value_added_tax_title": {
        "type": "text",
        "label": "Total Value Added Tax Title",
        "placeholder": "Total Value Added Tax Title",
        "val": "Value Added Tax"
      },
      "label_data.fi.total_including_vat_title": {
        "type": "text",
        "label": "Total including Vat Title",
        "placeholder": "Total including Vat Title",
        "val": "Total including VAT"
      },
      "label_data.fi.pay_until_title": {
        "type": "text",
        "label": "Pay until Title",
        "placeholder": "Pay until Title",
        "val": "Pay this invoice until"
      },
      "label_data.fi.register_no_title": {
        "type": "text",
        "label": "Register No Title",
        "placeholder": "Register No Title",
        "val": "Register No.:"
      },
      "label_data.fi.register_court_title": {
        "type": "text",
        "label": "Register Court Title",
        "placeholder": "Register Court Title",
        "val": "Register Court:"
      },
      "label_data.fi.iban_title": {
        "type": "text",
        "label": "IBAN Title",
        "placeholder": "IBAN Title",
        "val": "IBAN:"
      },
      "label_data.fi.bic_title": {
        "type": "text",
        "label": "BIC Title",
        "placeholder": "BIC Title",
        "val": "BIC:"
      },
      "label_data.fi.vat_number_title": {
        "type": "text",
        "label": "VAT Number Title",
        "placeholder": "VAT Number Title",
        "val": "VAT Number:"
      },
      "label_data.fi.article_number_title": {
        "type": "text",
        "label": "Article No Title",
        "placeholder": "Article No Title",
        "val": "Article No."
      },
      "label_data.fi.article_description_title": {
        "type": "text",
        "label": "Description Title",
        "placeholder": "Description Title",
        "val": "Description"
      },
      "label_data.fi.article_quantity_title": {
        "type": "text",
        "label": "Quantity Title",
        "placeholder": "Quantity Title",
        "val": "Quantity"
      },
      "label_data.fi.article_unit_title": {
        "type": "text",
        "label": "Article Unit Title",
        "placeholder": "Article Unit Title",
        "val": "Unit"
      },
      "label_data.fi.article_per_item_title": {
        "type": "text",
        "label": "per Item Title",
        "placeholder": "per Item Title",
        "val": "per Item"
      },
      "label_data.fi.article_net_of_vat_title": {
        "type": "text",
        "label": "Net of VAT Title",
        "placeholder": "Net of VAT Title",
        "val": "Net of VAT"
      },
      "label_data.fi.article_total_title": {
        "type": "text",
        "label": "Article Total Title",
        "placeholder": "Article Total Title",
        "val": "Total"
      }
    }
  }
}
,
"/pdf_invoice/CustomLabelLithuanian.json/CustomLabelLithuanian.json": {
  "custom_labels_frame_lt": {
    "type": "fieldset",
    "label": "Custom Label",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "custom_labels=='true' && (lang=='standard' || lang=='lt')",
    "repeat": false,
    "fields": {
      "label_data.lt.invoice_title": {
        "type": "text",
        "label": "Invoice Title",
        "placeholder": "Invoice Title",
        "val": "Invoice"
      },
      "label_data.lt.invoice_date_title": {
        "type": "text",
        "label": "Invoice Date Title",
        "placeholder": "Invoice Date Title",
        "val": "Date:"
      },
      "label_data.lt.invoice_no_title": {
        "type": "text",
        "label": "Invoice No Title",
        "placeholder": "Invoice No Title",
        "val": "Invoice No.:"
      },
      "label_data.lt.customer_no_title": {
        "type": "text",
        "label": "Customer No Title",
        "placeholder": "Customer No Title",
        "val": "Customer No.:"
      },
      "label_data.lt.reference_no_title": {
        "type": "text",
        "label": "Reference No Title",
        "placeholder": "Reference No Title",
        "val": "Reference No.:"
      },
      "label_data.lt.your_order_date_title": {
        "type": "text",
        "label": "Your Order Date Title",
        "placeholder": "Your Order Date Title",
        "val": "Date:"
      },
      "label_data.lt.subject_title": {
        "type": "text",
        "label": "Subject Title",
        "placeholder": "Subject Title",
        "val": "Subject"
      },
      "label_data.lt.value_added_tax_title": {
        "type": "text",
        "label": "Value Added Tax Title",
        "placeholder": "Value Added Tax Title",
        "val": "Value Added Tax"
      },
      "label_data.lt.total_excluding_vat_title": {
        "type": "text",
        "label": "Total excluding Vat Title",
        "placeholder": "Total excluding Vat Title",
        "val": "Total excluding VAT"
      },
      "label_data.lt.total_value_added_tax_title": {
        "type": "text",
        "label": "Total Value Added Tax Title",
        "placeholder": "Total Value Added Tax Title",
        "val": "Value Added Tax"
      },
      "label_data.lt.total_including_vat_title": {
        "type": "text",
        "label": "Total including Vat Title",
        "placeholder": "Total including Vat Title",
        "val": "Total including VAT"
      },
      "label_data.lt.pay_until_title": {
        "type": "text",
        "label": "Pay until Title",
        "placeholder": "Pay until Title",
        "val": "Pay this invoice until"
      },
      "label_data.lt.register_no_title": {
        "type": "text",
        "label": "Register No Title",
        "placeholder": "Register No Title",
        "val": "Register No.:"
      },
      "label_data.lt.register_court_title": {
        "type": "text",
        "label": "Register Court Title",
        "placeholder": "Register Court Title",
        "val": "Register Court:"
      },
      "label_data.lt.iban_title": {
        "type": "text",
        "label": "IBAN Title",
        "placeholder": "IBAN Title",
        "val": "IBAN:"
      },
      "label_data.lt.bic_title": {
        "type": "text",
        "label": "BIC Title",
        "placeholder": "BIC Title",
        "val": "BIC:"
      },
      "label_data.lt.vat_number_title": {
        "type": "text",
        "label": "VAT Number Title",
        "placeholder": "VAT Number Title",
        "val": "VAT Number:"
      },
      "label_data.lt.article_number_title": {
        "type": "text",
        "label": "Article No Title",
        "placeholder": "Article No Title",
        "val": "Article No."
      },
      "label_data.lt.article_description_title": {
        "type": "text",
        "label": "Description Title",
        "placeholder": "Description Title",
        "val": "Description"
      },
      "label_data.lt.article_quantity_title": {
        "type": "text",
        "label": "Quantity Title",
        "placeholder": "Quantity Title",
        "val": "Quantity"
      },
      "label_data.lt.article_unit_title": {
        "type": "text",
        "label": "Article Unit Title",
        "placeholder": "Article Unit Title",
        "val": "Unit"
      },
      "label_data.lt.article_per_item_title": {
        "type": "text",
        "label": "per Item Title",
        "placeholder": "per Item Title",
        "val": "per Item"
      },
      "label_data.lt.article_net_of_vat_title": {
        "type": "text",
        "label": "Net of VAT Title",
        "placeholder": "Net of VAT Title",
        "val": "Net of VAT"
      },
      "label_data.lt.article_total_title": {
        "type": "text",
        "label": "Article Total Title",
        "placeholder": "Article Total Title",
        "val": "Total"
      }
    }
  }
}
,
"/pdf_invoice/CustomLabelFrench.json/CustomLabelFrench.json": {
  "custom_labels_frame_fr": {
    "type": "fieldset",
    "label": "Custom Label",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "custom_labels=='true' && (lang=='standard' || lang=='fr')",
    "repeat": false,
    "fields": {
      "label_data.fr.invoice_title": {
        "type": "text",
        "label": "Invoice Title",
        "placeholder": "Invoice Title",
        "val": "Invoice"
      },
      "label_data.fr.invoice_date_title": {
        "type": "text",
        "label": "Invoice Date Title",
        "placeholder": "Invoice Date Title",
        "val": "Date:"
      },
      "label_data.fr.invoice_no_title": {
        "type": "text",
        "label": "Invoice No Title",
        "placeholder": "Invoice No Title",
        "val": "Invoice No.:"
      },
      "label_data.fr.customer_no_title": {
        "type": "text",
        "label": "Customer No Title",
        "placeholder": "Customer No Title",
        "val": "Customer No.:"
      },
      "label_data.fr.reference_no_title": {
        "type": "text",
        "label": "Reference No Title",
        "placeholder": "Reference No Title",
        "val": "Reference No.:"
      },
      "label_data.fr.your_order_date_title": {
        "type": "text",
        "label": "Your Order Date Title",
        "placeholder": "Your Order Date Title",
        "val": "Date:"
      },
      "label_data.fr.subject_title": {
        "type": "text",
        "label": "Subject Title",
        "placeholder": "Subject Title",
        "val": "Subject"
      },
      "label_data.fr.value_added_tax_title": {
        "type": "text",
        "label": "Value Added Tax Title",
        "placeholder": "Value Added Tax Title",
        "val": "Value Added Tax"
      },
      "label_data.fr.total_excluding_vat_title": {
        "type": "text",
        "label": "Total excluding Vat Title",
        "placeholder": "Total excluding Vat Title",
        "val": "Total excluding VAT"
      },
      "label_data.fr.total_value_added_tax_title": {
        "type": "text",
        "label": "Total Value Added Tax Title",
        "placeholder": "Total Value Added Tax Title",
        "val": "Value Added Tax"
      },
      "label_data.fr.total_including_vat_title": {
        "type": "text",
        "label": "Total including Vat Title",
        "placeholder": "Total including Vat Title",
        "val": "Total including VAT"
      },
      "label_data.fr.pay_until_title": {
        "type": "text",
        "label": "Pay until Title",
        "placeholder": "Pay until Title",
        "val": "Pay this invoice until"
      },
      "label_data.fr.register_no_title": {
        "type": "text",
        "label": "Register No Title",
        "placeholder": "Register No Title",
        "val": "Register No.:"
      },
      "label_data.fr.register_court_title": {
        "type": "text",
        "label": "Register Court Title",
        "placeholder": "Register Court Title",
        "val": "Register Court:"
      },
      "label_data.fr.iban_title": {
        "type": "text",
        "label": "IBAN Title",
        "placeholder": "IBAN Title",
        "val": "IBAN:"
      },
      "label_data.fr.bic_title": {
        "type": "text",
        "label": "BIC Title",
        "placeholder": "BIC Title",
        "val": "BIC:"
      },
      "label_data.fr.vat_number_title": {
        "type": "text",
        "label": "VAT Number Title",
        "placeholder": "VAT Number Title",
        "val": "VAT Number:"
      },
      "label_data.fr.article_number_title": {
        "type": "text",
        "label": "Article No Title",
        "placeholder": "Article No Title",
        "val": "Article No."
      },
      "label_data.fr.article_description_title": {
        "type": "text",
        "label": "Description Title",
        "placeholder": "Description Title",
        "val": "Description"
      },
      "label_data.fr.article_quantity_title": {
        "type": "text",
        "label": "Quantity Title",
        "placeholder": "Quantity Title",
        "val": "Quantity"
      },
      "label_data.fr.article_unit_title": {
        "type": "text",
        "label": "Article Unit Title",
        "placeholder": "Article Unit Title",
        "val": "Unit"
      },
      "label_data.fr.article_per_item_title": {
        "type": "text",
        "label": "per Item Title",
        "placeholder": "per Item Title",
        "val": "per Item"
      },
      "label_data.fr.article_net_of_vat_title": {
        "type": "text",
        "label": "Net of VAT Title",
        "placeholder": "Net of VAT Title",
        "val": "Net of VAT"
      },
      "label_data.fr.article_total_title": {
        "type": "text",
        "label": "Article Total Title",
        "placeholder": "Article Total Title",
        "val": "Total"
      }
    }
  }
}
,
"/pdf_invoice/CustomLabelEnglish.json/CustomLabelEnglish.json": {
  "custom_labels_frame_en": {
    "type": "fieldset",
    "label": "Custom Label",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "custom_labels=='true' && (lang=='standard' || lang=='en')",
    "repeat": false,
    "fields": {
      "label_data.en.invoice_title": {
        "type": "text",
        "label": "Invoice Title",
        "placeholder": "Invoice Title",
        "val": "Invoice"
      },
      "label_data.en.invoice_date_title": {
        "type": "text",
        "label": "Invoice Date Title",
        "placeholder": "Invoice Date Title",
        "val": "Date:"
      },
      "label_data.en.invoice_no_title": {
        "type": "text",
        "label": "Invoice No Title",
        "placeholder": "Invoice No Title",
        "val": "Invoice No.:"
      },
      "label_data.en.customer_no_title": {
        "type": "text",
        "label": "Customer No Title",
        "placeholder": "Customer No Title",
        "val": "Customer No.:"
      },
      "label_data.en.reference_no_title": {
        "type": "text",
        "label": "Reference No Title",
        "placeholder": "Reference No Title",
        "val": "Reference No.:"
      },
      "label_data.en.your_order_date_title": {
        "type": "text",
        "label": "Your Order Date Title",
        "placeholder": "Your Order Date Title",
        "val": "Date:"
      },
      "label_data.en.subject_title": {
        "type": "text",
        "label": "Subject Title",
        "placeholder": "Subject Title",
        "val": "Subject"
      },
      "label_data.en.value_added_tax_title": {
        "type": "text",
        "label": "Value Added Tax Title",
        "placeholder": "Value Added Tax Title",
        "val": "Value Added Tax"
      },
      "label_data.en.total_excluding_vat_title": {
        "type": "text",
        "label": "Total excluding Vat Title",
        "placeholder": "Total excluding Vat Title",
        "val": "Total excluding VAT"
      },
      "label_data.en.total_value_added_tax_title": {
        "type": "text",
        "label": "Total Value Added Tax Title",
        "placeholder": "Total Value Added Tax Title",
        "val": "Value Added Tax"
      },
      "label_data.en.total_including_vat_title": {
        "type": "text",
        "label": "Total including Vat Title",
        "placeholder": "Total including Vat Title",
        "val": "Total including VAT"
      },
      "label_data.en.pay_until_title": {
        "type": "text",
        "label": "Pay until Title",
        "placeholder": "Pay until Title",
        "val": "Pay this invoice until"
      },
      "label_data.en.register_no_title": {
        "type": "text",
        "label": "Register No Title",
        "placeholder": "Register No Title",
        "val": "Register No.:"
      },
      "label_data.en.register_court_title": {
        "type": "text",
        "label": "Register Court Title",
        "placeholder": "Register Court Title",
        "val": "Register Court:"
      },
      "label_data.en.iban_title": {
        "type": "text",
        "label": "IBAN Title",
        "placeholder": "IBAN Title",
        "val": "IBAN:"
      },
      "label_data.en.bic_title": {
        "type": "text",
        "label": "BIC Title",
        "placeholder": "BIC Title",
        "val": "BIC:"
      },
      "label_data.en.vat_number_title": {
        "type": "text",
        "label": "VAT Number Title",
        "placeholder": "VAT Number Title",
        "val": "VAT Number:"
      },
      "label_data.en.article_number_title": {
        "type": "text",
        "label": "Article No Title",
        "placeholder": "Article No Title",
        "val": "Article No."
      },
      "label_data.en.article_description_title": {
        "type": "text",
        "label": "Description Title",
        "placeholder": "Description Title",
        "val": "Description"
      },
      "label_data.en.article_quantity_title": {
        "type": "text",
        "label": "Quantity Title",
        "placeholder": "Quantity Title",
        "val": "Quantity"
      },
      "label_data.en.article_unit_title": {
        "type": "text",
        "label": "Article Unit Title",
        "placeholder": "Article Unit Title",
        "val": "Unit"
      },
      "label_data.en.article_per_item_title": {
        "type": "text",
        "label": "per Item Title",
        "placeholder": "per Item Title",
        "val": "per Item"
      },
      "label_data.en.article_net_of_vat_title": {
        "type": "text",
        "label": "Net of VAT Title",
        "placeholder": "Net of VAT Title",
        "val": "Net of VAT"
      },
      "label_data.en.article_total_title": {
        "type": "text",
        "label": "Article Total Title",
        "placeholder": "Article Total Title",
        "val": "Total"
      }
    }
  }
}
,
"/pdf_invoice/CustomLabelBulgarian.json/CustomLabelBulgarian.json": {
  "custom_labels_frame_bg": {
    "type": "fieldset",
    "label": "Custom Label",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "custom_labels=='true' && (lang=='standard' || lang=='bg')",
    "repeat": false,
    "fields": {
      "label_data.bg.invoice_title": {
        "type": "text",
        "label": "Invoice Title",
        "placeholder": "Invoice Title",
        "val": "Invoice"
      },
      "label_data.bg.invoice_date_title": {
        "type": "text",
        "label": "Invoice Date Title",
        "placeholder": "Invoice Date Title",
        "val": "Date:"
      },
      "label_data.bg.invoice_no_title": {
        "type": "text",
        "label": "Invoice No Title",
        "placeholder": "Invoice No Title",
        "val": "Invoice No.:"
      },
      "label_data.bg.customer_no_title": {
        "type": "text",
        "label": "Customer No Title",
        "placeholder": "Customer No Title",
        "val": "Customer No.:"
      },
      "label_data.bg.reference_no_title": {
        "type": "text",
        "label": "Reference No Title",
        "placeholder": "Reference No Title",
        "val": "Reference No.:"
      },
      "label_data.bg.your_order_date_title": {
        "type": "text",
        "label": "Your Order Date Title",
        "placeholder": "Your Order Date Title",
        "val": "Date:"
      },
      "label_data.bg.subject_title": {
        "type": "text",
        "label": "Subject Title",
        "placeholder": "Subject Title",
        "val": "Subject"
      },
      "label_data.bg.value_added_tax_title": {
        "type": "text",
        "label": "Value Added Tax Title",
        "placeholder": "Value Added Tax Title",
        "val": "Value Added Tax"
      },
      "label_data.bg.total_excluding_vat_title": {
        "type": "text",
        "label": "Total excluding Vat Title",
        "placeholder": "Total excluding Vat Title",
        "val": "Total excluding VAT"
      },
      "label_data.bg.total_value_added_tax_title": {
        "type": "text",
        "label": "Total Value Added Tax Title",
        "placeholder": "Total Value Added Tax Title",
        "val": "Value Added Tax"
      },
      "label_data.bg.total_including_vat_title": {
        "type": "text",
        "label": "Total including Vat Title",
        "placeholder": "Total including Vat Title",
        "val": "Total including VAT"
      },
      "label_data.bg.pay_until_title": {
        "type": "text",
        "label": "Pay until Title",
        "placeholder": "Pay until Title",
        "val": "Pay this invoice until"
      },
      "label_data.bg.register_no_title": {
        "type": "text",
        "label": "Register No Title",
        "placeholder": "Register No Title",
        "val": "Register No.:"
      },
      "label_data.bg.register_court_title": {
        "type": "text",
        "label": "Register Court Title",
        "placeholder": "Register Court Title",
        "val": "Register Court:"
      },
      "label_data.bg.iban_title": {
        "type": "text",
        "label": "IBAN Title",
        "placeholder": "IBAN Title",
        "val": "IBAN:"
      },
      "label_data.bg.bic_title": {
        "type": "text",
        "label": "BIC Title",
        "placeholder": "BIC Title",
        "val": "BIC:"
      },
      "label_data.bg.vat_number_title": {
        "type": "text",
        "label": "VAT Number Title",
        "placeholder": "VAT Number Title",
        "val": "VAT Number:"
      },
      "label_data.bg.article_number_title": {
        "type": "text",
        "label": "Article No Title",
        "placeholder": "Article No Title",
        "val": "Article No."
      },
      "label_data.bg.article_description_title": {
        "type": "text",
        "label": "Description Title",
        "placeholder": "Description Title",
        "val": "Description"
      },
      "label_data.bg.article_quantity_title": {
        "type": "text",
        "label": "Quantity Title",
        "placeholder": "Quantity Title",
        "val": "Quantity"
      },
      "label_data.bg.article_unit_title": {
        "type": "text",
        "label": "Article Unit Title",
        "placeholder": "Article Unit Title",
        "val": "Unit"
      },
      "label_data.bg.article_per_item_title": {
        "type": "text",
        "label": "per Item Title",
        "placeholder": "per Item Title",
        "val": "per Item"
      },
      "label_data.bg.article_net_of_vat_title": {
        "type": "text",
        "label": "Net of VAT Title",
        "placeholder": "Net of VAT Title",
        "val": "Net of VAT"
      },
      "label_data.bg.article_total_title": {
        "type": "text",
        "label": "Article Total Title",
        "placeholder": "Article Total Title",
        "val": "Total"
      }
    }
  }
}
,
"/pdf_invoice/CustomLabelSpanish.json/CustomLabelSpanish.json": {
  "custom_labels_frame_es": {
    "type": "fieldset",
    "label": "Custom Label",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "custom_labels=='true' && (lang=='standard' || lang=='es')",
    "repeat": false,
    "fields": {
      "label_data.es.invoice_title": {
        "type": "text",
        "label": "Invoice Title",
        "placeholder": "Invoice Title",
        "val": "Invoice"
      },
      "label_data.es.invoice_date_title": {
        "type": "text",
        "label": "Invoice Date Title",
        "placeholder": "Invoice Date Title",
        "val": "Date:"
      },
      "label_data.es.invoice_no_title": {
        "type": "text",
        "label": "Invoice No Title",
        "placeholder": "Invoice No Title",
        "val": "Invoice No.:"
      },
      "label_data.es.customer_no_title": {
        "type": "text",
        "label": "Customer No Title",
        "placeholder": "Customer No Title",
        "val": "Customer No.:"
      },
      "label_data.es.reference_no_title": {
        "type": "text",
        "label": "Reference No Title",
        "placeholder": "Reference No Title",
        "val": "Reference No.:"
      },
      "label_data.es.your_order_date_title": {
        "type": "text",
        "label": "Your Order Date Title",
        "placeholder": "Your Order Date Title",
        "val": "Date:"
      },
      "label_data.es.subject_title": {
        "type": "text",
        "label": "Subject Title",
        "placeholder": "Subject Title",
        "val": "Subject"
      },
      "label_data.es.value_added_tax_title": {
        "type": "text",
        "label": "Value Added Tax Title",
        "placeholder": "Value Added Tax Title",
        "val": "Value Added Tax"
      },
      "label_data.es.total_excluding_vat_title": {
        "type": "text",
        "label": "Total excluding Vat Title",
        "placeholder": "Total excluding Vat Title",
        "val": "Total excluding VAT"
      },
      "label_data.es.total_value_added_tax_title": {
        "type": "text",
        "label": "Total Value Added Tax Title",
        "placeholder": "Total Value Added Tax Title",
        "val": "Value Added Tax"
      },
      "label_data.es.total_including_vat_title": {
        "type": "text",
        "label": "Total including Vat Title",
        "placeholder": "Total including Vat Title",
        "val": "Total including VAT"
      },
      "label_data.es.pay_until_title": {
        "type": "text",
        "label": "Pay until Title",
        "placeholder": "Pay until Title",
        "val": "Pay this invoice until"
      },
      "label_data.es.register_no_title": {
        "type": "text",
        "label": "Register No Title",
        "placeholder": "Register No Title",
        "val": "Register No.:"
      },
      "label_data.es.register_court_title": {
        "type": "text",
        "label": "Register Court Title",
        "placeholder": "Register Court Title",
        "val": "Register Court:"
      },
      "label_data.es.iban_title": {
        "type": "text",
        "label": "IBAN Title",
        "placeholder": "IBAN Title",
        "val": "IBAN:"
      },
      "label_data.es.bic_title": {
        "type": "text",
        "label": "BIC Title",
        "placeholder": "BIC Title",
        "val": "BIC:"
      },
      "label_data.es.vat_number_title": {
        "type": "text",
        "label": "VAT Number Title",
        "placeholder": "VAT Number Title",
        "val": "VAT Number:"
      },
      "label_data.es.article_number_title": {
        "type": "text",
        "label": "Article No Title",
        "placeholder": "Article No Title",
        "val": "Article No."
      },
      "label_data.es.article_description_title": {
        "type": "text",
        "label": "Description Title",
        "placeholder": "Description Title",
        "val": "Description"
      },
      "label_data.es.article_quantity_title": {
        "type": "text",
        "label": "Quantity Title",
        "placeholder": "Quantity Title",
        "val": "Quantity"
      },
      "label_data.es.article_unit_title": {
        "type": "text",
        "label": "Article Unit Title",
        "placeholder": "Article Unit Title",
        "val": "Unit"
      },
      "label_data.es.article_per_item_title": {
        "type": "text",
        "label": "per Item Title",
        "placeholder": "per Item Title",
        "val": "per Item"
      },
      "label_data.es.article_net_of_vat_title": {
        "type": "text",
        "label": "Net of VAT Title",
        "placeholder": "Net of VAT Title",
        "val": "Net of VAT"
      },
      "label_data.es.article_total_title": {
        "type": "text",
        "label": "Article Total Title",
        "placeholder": "Article Total Title",
        "val": "Total"
      }
    }
  }
}
,
"/pdf_invoice/CustomLabelHungarian.json/CustomLabelHungarian.json": {
  "custom_labels_frame_hu": {
    "type": "fieldset",
    "label": "Custom Label",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "custom_labels=='true' && (lang=='standard' || lang=='hu')",
    "repeat": false,
    "fields": {
      "label_data.hu.invoice_title": {
        "type": "text",
        "label": "Invoice Title",
        "placeholder": "Invoice Title",
        "val": "Invoice"
      },
      "label_data.hu.invoice_date_title": {
        "type": "text",
        "label": "Invoice Date Title",
        "placeholder": "Invoice Date Title",
        "val": "Date:"
      },
      "label_data.hu.invoice_no_title": {
        "type": "text",
        "label": "Invoice No Title",
        "placeholder": "Invoice No Title",
        "val": "Invoice No.:"
      },
      "label_data.hu.customer_no_title": {
        "type": "text",
        "label": "Customer No Title",
        "placeholder": "Customer No Title",
        "val": "Customer No.:"
      },
      "label_data.hu.reference_no_title": {
        "type": "text",
        "label": "Reference No Title",
        "placeholder": "Reference No Title",
        "val": "Reference No.:"
      },
      "label_data.hu.your_order_date_title": {
        "type": "text",
        "label": "Your Order Date Title",
        "placeholder": "Your Order Date Title",
        "val": "Date:"
      },
      "label_data.hu.subject_title": {
        "type": "text",
        "label": "Subject Title",
        "placeholder": "Subject Title",
        "val": "Subject"
      },
      "label_data.hu.value_added_tax_title": {
        "type": "text",
        "label": "Value Added Tax Title",
        "placeholder": "Value Added Tax Title",
        "val": "Value Added Tax"
      },
      "label_data.hu.total_excluding_vat_title": {
        "type": "text",
        "label": "Total excluding Vat Title",
        "placeholder": "Total excluding Vat Title",
        "val": "Total excluding VAT"
      },
      "label_data.hu.total_value_added_tax_title": {
        "type": "text",
        "label": "Total Value Added Tax Title",
        "placeholder": "Total Value Added Tax Title",
        "val": "Value Added Tax"
      },
      "label_data.hu.total_including_vat_title": {
        "type": "text",
        "label": "Total including Vat Title",
        "placeholder": "Total including Vat Title",
        "val": "Total including VAT"
      },
      "label_data.hu.pay_until_title": {
        "type": "text",
        "label": "Pay until Title",
        "placeholder": "Pay until Title",
        "val": "Pay this invoice until"
      },
      "label_data.hu.register_no_title": {
        "type": "text",
        "label": "Register No Title",
        "placeholder": "Register No Title",
        "val": "Register No.:"
      },
      "label_data.hu.register_court_title": {
        "type": "text",
        "label": "Register Court Title",
        "placeholder": "Register Court Title",
        "val": "Register Court:"
      },
      "label_data.hu.iban_title": {
        "type": "text",
        "label": "IBAN Title",
        "placeholder": "IBAN Title",
        "val": "IBAN:"
      },
      "label_data.hu.bic_title": {
        "type": "text",
        "label": "BIC Title",
        "placeholder": "BIC Title",
        "val": "BIC:"
      },
      "label_data.hu.vat_number_title": {
        "type": "text",
        "label": "VAT Number Title",
        "placeholder": "VAT Number Title",
        "val": "VAT Number:"
      },
      "label_data.hu.article_number_title": {
        "type": "text",
        "label": "Article No Title",
        "placeholder": "Article No Title",
        "val": "Article No."
      },
      "label_data.hu.article_description_title": {
        "type": "text",
        "label": "Description Title",
        "placeholder": "Description Title",
        "val": "Description"
      },
      "label_data.hu.article_quantity_title": {
        "type": "text",
        "label": "Quantity Title",
        "placeholder": "Quantity Title",
        "val": "Quantity"
      },
      "label_data.hu.article_unit_title": {
        "type": "text",
        "label": "Article Unit Title",
        "placeholder": "Article Unit Title",
        "val": "Unit"
      },
      "label_data.hu.article_per_item_title": {
        "type": "text",
        "label": "per Item Title",
        "placeholder": "per Item Title",
        "val": "per Item"
      },
      "label_data.hu.article_net_of_vat_title": {
        "type": "text",
        "label": "Net of VAT Title",
        "placeholder": "Net of VAT Title",
        "val": "Net of VAT"
      },
      "label_data.hu.article_total_title": {
        "type": "text",
        "label": "Article Total Title",
        "placeholder": "Article Total Title",
        "val": "Total"
      }
    }
  }
}
,
"/pdf_invoice/CustomLabelGerman.json/CustomLabelGerman.json": {
  "custom_labels_frame_de": {
    "type": "fieldset",
    "label": "Custom Label",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "custom_labels=='true' && (lang=='standard' || lang=='de')",
    "repeat": false,
    "fields": {
      "label_data.de.invoice_title": {
        "type": "text",
        "label": "Invoice Title",
        "placeholder": "Invoice Title",
        "val": "Invoice"
      },
      "label_data.de.invoice_date_title": {
        "type": "text",
        "label": "Invoice Date Title",
        "placeholder": "Invoice Date Title",
        "val": "Date:"
      },
      "label_data.de.invoice_no_title": {
        "type": "text",
        "label": "Invoice No Title",
        "placeholder": "Invoice No Title",
        "val": "Invoice No.:"
      },
      "label_data.de.customer_no_title": {
        "type": "text",
        "label": "Customer No Title",
        "placeholder": "Customer No Title",
        "val": "Customer No.:"
      },
      "label_data.de.reference_no_title": {
        "type": "text",
        "label": "Reference No Title",
        "placeholder": "Reference No Title",
        "val": "Reference No.:"
      },
      "label_data.de.your_order_date_title": {
        "type": "text",
        "label": "Your Order Date Title",
        "placeholder": "Your Order Date Title",
        "val": "Date:"
      },
      "label_data.de.subject_title": {
        "type": "text",
        "label": "Subject Title",
        "placeholder": "Subject Title",
        "val": "Subject"
      },
      "label_data.de.value_added_tax_title": {
        "type": "text",
        "label": "Value Added Tax Title",
        "placeholder": "Value Added Tax Title",
        "val": "Value Added Tax"
      },
      "label_data.de.total_excluding_vat_title": {
        "type": "text",
        "label": "Total excluding Vat Title",
        "placeholder": "Total excluding Vat Title",
        "val": "Total excluding VAT"
      },
      "label_data.de.total_value_added_tax_title": {
        "type": "text",
        "label": "Total Value Added Tax Title",
        "placeholder": "Total Value Added Tax Title",
        "val": "Value Added Tax"
      },
      "label_data.de.total_including_vat_title": {
        "type": "text",
        "label": "Total including Vat Title",
        "placeholder": "Total including Vat Title",
        "val": "Total including VAT"
      },
      "label_data.de.pay_until_title": {
        "type": "text",
        "label": "Pay until Title",
        "placeholder": "Pay until Title",
        "val": "Pay this invoice until"
      },
      "label_data.de.register_no_title": {
        "type": "text",
        "label": "Register No Title",
        "placeholder": "Register No Title",
        "val": "Register No.:"
      },
      "label_data.de.register_court_title": {
        "type": "text",
        "label": "Register Court Title",
        "placeholder": "Register Court Title",
        "val": "Register Court:"
      },
      "label_data.de.iban_title": {
        "type": "text",
        "label": "IBAN Title",
        "placeholder": "IBAN Title",
        "val": "IBAN:"
      },
      "label_data.de.bic_title": {
        "type": "text",
        "label": "BIC Title",
        "placeholder": "BIC Title",
        "val": "BIC:"
      },
      "label_data.de.vat_number_title": {
        "type": "text",
        "label": "VAT Number Title",
        "placeholder": "VAT Number Title",
        "val": "VAT Number:"
      },
      "label_data.de.article_number_title": {
        "type": "text",
        "label": "Article No Title",
        "placeholder": "Article No Title",
        "val": "Article No."
      },
      "label_data.de.article_description_title": {
        "type": "text",
        "label": "Description Title",
        "placeholder": "Description Title",
        "val": "Description"
      },
      "label_data.de.article_quantity_title": {
        "type": "text",
        "label": "Quantity Title",
        "placeholder": "Quantity Title",
        "val": "Quantity"
      },
      "label_data.de.article_unit_title": {
        "type": "text",
        "label": "Article Unit Title",
        "placeholder": "Article Unit Title",
        "val": "Unit"
      },
      "label_data.de.article_per_item_title": {
        "type": "text",
        "label": "per Item Title",
        "placeholder": "per Item Title",
        "val": "per Item"
      },
      "label_data.de.article_net_of_vat_title": {
        "type": "text",
        "label": "Net of VAT Title",
        "placeholder": "Net of VAT Title",
        "val": "Net of VAT"
      },
      "label_data.de.article_total_title": {
        "type": "text",
        "label": "Article Total Title",
        "placeholder": "Article Total Title",
        "val": "Total"
      }
    }
  }
}
,
"/pdf_invoice/CustomLabelCanadian.json/CustomLabelCanadian.json": {
  "custom_labels_frame_ca": {
    "type": "fieldset",
    "label": "Custom Label",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "custom_labels=='true' && (lang=='standard' || lang=='ca')",
    "repeat": false,
    "fields": {
      "label_data.ca.invoice_title": {
        "type": "text",
        "label": "Invoice Title",
        "placeholder": "Invoice Title",
        "val": "Invoice"
      },
      "label_data.ca.invoice_date_title": {
        "type": "text",
        "label": "Invoice Date Title",
        "placeholder": "Invoice Date Title",
        "val": "Date:"
      },
      "label_data.ca.invoice_no_title": {
        "type": "text",
        "label": "Invoice No Title",
        "placeholder": "Invoice No Title",
        "val": "Invoice No.:"
      },
      "label_data.ca.customer_no_title": {
        "type": "text",
        "label": "Customer No Title",
        "placeholder": "Customer No Title",
        "val": "Customer No.:"
      },
      "label_data.ca.reference_no_title": {
        "type": "text",
        "label": "Reference No Title",
        "placeholder": "Reference No Title",
        "val": "Reference No.:"
      },
      "label_data.ca.your_order_date_title": {
        "type": "text",
        "label": "Your Order Date Title",
        "placeholder": "Your Order Date Title",
        "val": "Date:"
      },
      "label_data.ca.subject_title": {
        "type": "text",
        "label": "Subject Title",
        "placeholder": "Subject Title",
        "val": "Subject"
      },
      "label_data.ca.value_added_tax_title": {
        "type": "text",
        "label": "Value Added Tax Title",
        "placeholder": "Value Added Tax Title",
        "val": "Value Added Tax"
      },
      "label_data.ca.total_excluding_vat_title": {
        "type": "text",
        "label": "Total excluding Vat Title",
        "placeholder": "Total excluding Vat Title",
        "val": "Total excluding VAT"
      },
      "label_data.ca.total_value_added_tax_title": {
        "type": "text",
        "label": "Total Value Added Tax Title",
        "placeholder": "Total Value Added Tax Title",
        "val": "Value Added Tax"
      },
      "label_data.ca.total_including_vat_title": {
        "type": "text",
        "label": "Total including Vat Title",
        "placeholder": "Total including Vat Title",
        "val": "Total including VAT"
      },
      "label_data.ca.pay_until_title": {
        "type": "text",
        "label": "Pay until Title",
        "placeholder": "Pay until Title",
        "val": "Pay this invoice until"
      },
      "label_data.ca.register_no_title": {
        "type": "text",
        "label": "Register No Title",
        "placeholder": "Register No Title",
        "val": "Register No.:"
      },
      "label_data.ca.register_court_title": {
        "type": "text",
        "label": "Register Court Title",
        "placeholder": "Register Court Title",
        "val": "Register Court:"
      },
      "label_data.ca.iban_title": {
        "type": "text",
        "label": "IBAN Title",
        "placeholder": "IBAN Title",
        "val": "IBAN:"
      },
      "label_data.ca.bic_title": {
        "type": "text",
        "label": "BIC Title",
        "placeholder": "BIC Title",
        "val": "BIC:"
      },
      "label_data.ca.vat_number_title": {
        "type": "text",
        "label": "VAT Number Title",
        "placeholder": "VAT Number Title",
        "val": "VAT Number:"
      },
      "label_data.ca.article_number_title": {
        "type": "text",
        "label": "Article No Title",
        "placeholder": "Article No Title",
        "val": "Article No."
      },
      "label_data.ca.article_description_title": {
        "type": "text",
        "label": "Description Title",
        "placeholder": "Description Title",
        "val": "Description"
      },
      "label_data.ca.article_quantity_title": {
        "type": "text",
        "label": "Quantity Title",
        "placeholder": "Quantity Title",
        "val": "Quantity"
      },
      "label_data.ca.article_unit_title": {
        "type": "text",
        "label": "Article Unit Title",
        "placeholder": "Article Unit Title",
        "val": "Unit"
      },
      "label_data.ca.article_per_item_title": {
        "type": "text",
        "label": "per Item Title",
        "placeholder": "per Item Title",
        "val": "per Item"
      },
      "label_data.ca.article_net_of_vat_title": {
        "type": "text",
        "label": "Net of VAT Title",
        "placeholder": "Net of VAT Title",
        "val": "Net of VAT"
      },
      "label_data.ca.article_total_title": {
        "type": "text",
        "label": "Article Total Title",
        "placeholder": "Article Total Title",
        "val": "Total"
      }
    }
  }
}
,
"/sandbox/test-child-0.json/test-child-0.json": {
	"child": {
		"a": 1,
		"b": 2
	}
}
,
"/sandbox/test-child-1.json/test-child-1.json": {
	"child": {
		"c": 3,
		"d": 4
	}
}
,
"/sandbox/test.json/test.json": {
	"input": {
		"fields": {
			"input_table": {
				"child": {},
				"child.second": {},
				"child.before.second": {
					"child.first": 1,
					"child.second": 2,
					"child.third": 3
				},
				"child.after.first": {
					"child.first": 1,
					"child.second": 2,
					"child.third": 3
				}
			}
		}
	}
}
,
"/sandbox/TriggerOptions.json/TriggerOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "Add Trigger",
    "repeat": false,
    "fields": {
		"table_trigger_box": {
			"type": "fieldset",
			"label": "Table Trigger",
			"repeat": false,
			"fields": {
				"trigger_type": {
					"type": "select",
					"label": "Trigger Type",
					"required": true,
					"options": {
						"label_manual": {
						"label": "Manual"
						},
						"label_by_table": {
							"label": "Table"
						},
						"val": "label_manual",
						"breakLine": true
						}
					},		
					"tabel_trigger_label_column": {
						"type": "select",
						"label": "Select Label Column",
						"table": "input_table",
						"bind": "COLUMNS",
						"show_if": "this.trigger_type=='label_by_table'",
						"required": true
					},
					"table_trigger_value_column": {
						"type": "select",
						"label": "Select Value Column",
						"table": "input_table",
						"bind": "COLUMNS",
						"show_if": "this.trigger_type=='label_by_table'",
						"required": true
					}, 
					"table_trigger_manual_label": {
						"type": "fieldset",
						"label": "Set Table Trigger",
						"repeat": true,
						"fields": {
							"task_trigger_label": {
							"type": "text",
							"label": "Label",
							"val": "",
							"breakLine": false
							},
							"table_trigger_manual_value": {
							"type": "text",
							"label": "Value",
							"val": "",
							"breakLine": false
							},
							"delete": {
							"type": "button",
							"label": "Delete",
							"function": "DELETE_ROW"
							}
						}
					}
				}
			},
				"task_trigger_box": {
					"type": "fieldset",
					"label": "Task Trigger",
					"repeat": false,
					"fields": {
						"task_name": {
						"type": "text",
						"label": "Select Task to Run",
						"val": "",
						"breakLine": true
					},	
					"task_trigger": {
						"type": "fieldset",
							"label": "Task Trigger",
							"repeat": true,
							"fields": {
								"task_trigger_label": {
								"type": "text",
								"label": "Label",
								"val": "",
								"breakLine": false
							},
							"task_trigger_value": {
								"type": "text",
								"label": "Value",
								"val": "",
								"breakLine": false
							},
							"delete": {
								"type": "button",
								"label": "Delete",
								"function": "DELETE_ROW"
								}	
							}
						}
					}
				}
			}
		}
}
,
"/sandbox/test-child-2.json/test-child-2.json": {
	"child": {
		"e": 5,
		"f": 6
	}
}
,
"/sandbox/test-child-3.json/test-child-3.json": {
	"child": {
		"g": 7,
		"h": 8
	}
}
,
"/wiki-data/CustomQueryOptions.json/CustomQueryOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.help": {
        "type": "textarea",
        "label": "",
        "val": "Please refer to https://www.mediawiki.org/wiki/File:Wikidata_Sparql_Query_Tutorial.webm on how to write query",
        "md_no_resize": false,
        "rows": 2,
        "disabled": true,
        "width": "100%"
      },
      "options.use_query_table": {
        "type": "checkbox",
        "label": "Use Query Table",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.table_id": {
        "type": "select",
        "label": "Select Query Table",
        "show_if": "options.use_query_table=='true'",
        "bind": "TABLES",
        "empty": "",
        "required": true
      },
      "options.query_column": {
        "type": "select",
        "label": "Select Query Column",
        "show_if": "options.use_query_table=='true'",
        "required": true,
        "table": "options.table_id",
        "bind": "COLUMNS",
        "breakLine": true
      },
      "options.sparql": {
        "type": "textarea",
        "label": "Please input SPARQL Query.",
        "show_if": "options.use_query_table=='false'",
        "val": "SELECT ?Person ?PersonLabel ?BirthPlaceLabel ?BirthDate \nWHERE { \n\t?Person wdt:P69 wd:Q160302 . \n\t?Person wdt:P21 wd:Q6581072 . \n\t?Person wdt:P19 ?BirthPlace . \n\t?BirthPlace wdt:P625 ?Coordinates . \n\t?Person wdt:P569 ?BirthDate . \n\n\tSERVICE wikibase:label { bd:serviceParam wikibase:language 'en' . }\n}",
        "rows": 10,
        "width": "100%"
      },
      "options.output_wiki_entity_url": {
        "type": "checkbox",
        "label": "Output Wiki Entity URL",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
},
"/wiki-data/EdinburghFemaleOptions.json/EdinburghFemaleOptions.json": {
  "options.sparql": {
    "type": "hidden",
    "val": "SELECT ?Person ?PersonLabel ?BirthPlaceLabel ?BirthDate WHERE { ?Person wdt:P69 wd:Q160302 . ?Person wdt:P21 wd:Q6581072 . ?Person wdt:P19 ?BirthPlace . ?BirthPlace wdt:P625 ?Coordinates . ?Person wdt:P569 ?BirthDate . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en' . }}"
  }
},
"/wiki-data/CompanyListOptions.json/CompanyListOptions.json": {
  "options.sparql": {
    "type": "hidden",
    "val": "SELECT ?Company ?CompanyLabel ?HeadquartersLocation ?HeadquartersLocationLabel WHERE { ?Company wdt:P31 wd:Q6881511 ; wdt:P31 wd:Q4830453 ; wdt:P17 wd:Q183. ?Company wdt:P159 ?HeadquartersLocation . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en' . }}"
  }
},
"/common-snippets/FormattingWithKeepCurrent.json/FormattingWithKeepCurrent.json": {
  "options.format__category": {
    "type": "select",
    "label": "Display Format",
    "required": true,
    "options": {
      "keep_current": {
        "label": "Keep Current"
      },
      "standard": {
        "label": "Standard"
      },
      "number": {
        "label": "Number"
      },
      "percentage": {
        "label": "Percentage"
      },
      "text": {
        "label": "Text"
      },
      "date": {
        "label": "Date"
      },
      "currency": {
        "label": "Currency"
      }
    },
    "val": "keep_current"
  },
  "options.format__rounding": {
    "type": "select",
    "label": "Decimal Places for display",
    "show_if": "options.format__category=='number' || options.format__category=='percentage' || options.format__category=='currency'",
    "required": true,
    "options": {
      "no_rounding": {
        "label": "No rounding"
      },
      "0": {
        "label": "0 digits"
      },
      "1": {
        "label": "1 digits"
      },
      "2": {
        "label": "2 digits"
      },
      "3": {
        "label": "3 digits"
      },
      "4": {
        "label": "4 digits"
      },
      "5": {
        "label": "5 digits"
      },
      "6": {
        "label": "6 digits"
      },
      "7": {
        "label": "7 digits"
      },
      "8": {
        "label": "8 digits"
      },
      "9": {
        "label": "9 digits"
      }
    },
    "val": "2"
  },
  "options.format__use_1000_separator": {
    "type": "checkbox",
    "label": "Use 1000 Separator(,)",
    "show_if": "options.format__category=='number' || options.format__category=='percentage' || options.format__category=='currency'",
    "val": "true",
    "isOn": "true",
    "isOff": "false"
  },
  "options.format__currency_symbol": {
    "type": "select",
    "label": "Symbol",
    "show_if": "options.format__category=='currency'",
    "required": true,
    "options": {
      "dollar": {
        "label": "$"
      },
      "euro": {
        "label": "€"
      },
      "pound": {
        "label": "£"
      }
    },
    "val": "dollar"
  },
  "options.format__date_format": {
    "type": "select",
    "label": "Type",
    "show_if": "options.format__category=='date'",
    "required": true,
    "options": {
      "mm/dd/yyyy": {
        "label": "3/14/2012"
      },
      "D, M dd, Y": {
        "label": "Wednesday, March 14, 2012"
      },
      "yyyy-mm-dd": {
        "label": "2012-03-14"
      },
      "m.dd.yyyy": {
        "label": "3.14.2012"
      },
      "m.dd.yy": {
        "label": "3.14.12"
      },
      "dd.m.yyyy": {
        "label": "14.3.2012"
      },
      "dd.m.yy": {
        "label": "14.3.12"
      },
      "M dd, Y": {
        "label": "March 14, 2012"
      },
      "dd-mm-yyyy": {
        "label": "14-03-2012"
      },
      "mm-dd-yyyy": {
        "label": "03-14-2012"
      },
      "dd-mm-yy": {
        "label": "14-03-12"
      },
      "mm-dd-yy": {
        "label": "03-14-12"
      }
    },
    "val": "mm/dd/yyyy",
    "breakLine": true
  }
}
,
"/common-snippets/TrackerOutput.json/TrackerOutput.json": {
  "output": {
    "type": "fieldset",
    "label": "Define Output Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "output.custom_text": {
        "type": "text",
        "label": "Output Table Name",
        "show_if": "output.custom_options=='false' || (output.custom_options=='true' && output.compose_table_name=='false')",
        "minLength": 1,
        "val": "Note Tracker",
        "width": "100%",
        "breakLine": true
      },
      "output.custom_options": {
        "type": "checkbox",
        "label": "Output Options",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "output.compose_table_name": {
        "type": "checkbox",
        "label": "Compose Table Name",
        "show_if": "output.custom_options=='true'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "compose_table_name_frame": {
        "type": "fieldset",
        "label": "Compose Output Table Name",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "output.custom_options=='true' && output.compose_table_name=='true'",
        "repeat": false,
        "fields": {
          "output.prefix_rule": {
            "type": "select",
            "label": "Prefix",
            "show_if": "output.compose_table_name=='true'",
            "val": "empty",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.prefix_text": {
            "type": "text",
            "label": "Prefix Text",
            "show_if": "output.compose_table_name=='true' && output.prefix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "output.core_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "show_if": "output.compose_table_name=='true' && output.prefix_rule!='empty'",
            "val": "_",
            "width": "50px"
          },
          "output.core_rule": {
            "type": "select",
            "label": "Table Name",
            "show_if": "output.compose_table_name=='true'",
            "val": "input_table_name",
            "options": {
              "input_table_name": {
                "label": "Input Table Name"
              },
              "script_name": {
                "label": "Task Name"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.core_text": {
            "type": "text",
            "label": "Main Table Name",
            "show_if": "output.compose_table_name=='true' && output.core_rule=='custom'",
            "required": true,
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "output.suffix_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "show_if": "output.compose_table_name=='true'",
            "val": "_",
            "width": "50px"
          },
          "output.suffix_rule": {
            "type": "select",
            "label": "Suffix",
            "show_if": "output.compose_table_name=='true'",
            "val": "script_name",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.suffix_text": {
            "type": "text",
            "label": "Suffix Text",
            "show_if": "output.compose_table_name=='true' && output.suffix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": "",
            "breakLine": true
          },
          "output.timezone": {
            "type": "select",
            "label": "Timezone",
            "show_if": "output.compose_table_name=='true' && (output.prefix_rule=='date_string_type1' || output.prefix_rule=='date_string_type2' || output.prefix_rule=='time_string' || output.prefix_rule=='datetime_string' || output.suffix_rule=='date_string_type1' || output.suffix_rule=='date_string_type2' || output.suffix_rule=='time_string' || output.suffix_rule=='datetime_string')",
            "val": "Europe/Berlin",
            "required": true,
            "options": {
              "America/Adak": {
                "label": "Adak, Gambier"
              },
              "Australia/Adelaide": {
                "label": "Adelaide, Broken Hill, Darwin"
              },
              "America/Anchorage": {
                "label": "Anchorage, Juneau, Sitka"
              },
              "Pacific/Apia": {
                "label": "Apia, Asau, Mulifanua, Afega, Leulumoega"
              },
              "Pacific/Enderbury": {
                "label": "Apia, Fiji, Tongatapu"
              },
              "Antarctica/McMurdo": {
                "label": "Auckland, Casey, Davis"
              },
              "Pacific/Auckland": {
                "label": "Auckland, Wellington, Christchurch"
              },
              "Asia/Bangkok": {
                "label": "Bangkok, Jakarta, Novosibirsk"
              },
              "Europe/Berlin": {
                "label": "Berlin, Paris, Amsterdam"
              },
              "Australia/Perth": {
                "label": "Brunei, Singapore, Perth"
              },
              "Atlantic/Cape_Verde": {
                "label": "Cape Verde,Praia, Mindelo, Santa Maria"
              },
              "America/Belize": {
                "label": "Costa Rica, El Salvador, Denver"
              },
              "Antarctica/Vostok": {
                "label": "Dhaka, Bishkek, Omsk"
              },
              "Europe/Astrakhan": {
                "label": "Dubai, Baku, Tbilisi"
              },
              "Australia/Eucla": {
                "label": "Eucla"
              },
              "Pacific/Honolulu": {
                "label": "Honolulu, Rarotonga, Tahiti"
              },
              "Asia/Kabul": {
                "label": "Kabul, Kandahār, Mazār-e Sharīf, Herāt, Jalālābād"
              },
              "Asia/Aqtau": {
                "label": "Karachi, Tashkent, Maldives"
              },
              "Asia/Kathmandu": {
                "label": "Kathmandu, Pokhara, Pātan, Biratnagar"
              },
              "Pacific/Kiritimati": {
                "label": "Kiritimati"
              },
              "Asia/Colombo": {
                "label": "Kolkata, Colombo, Jaffna, Negombo"
              },
              "Europe/Guernsey": {
                "label": "London, Dublin, Lisbon"
              },
              "Australia/Lord_Howe": {
                "label": "Lord Howe"
              },
              "America/Creston": {
                "label": "Los Angeles, Vancouver, Hermosillo"
              },
              "Pacific/Marquesas": {
                "label": "Marquesas, Taiohae"
              },
              "America/Cayman": {
                "label": "Mexico City, Panama, Chicago"
              },
              "Pacific/Niue": {
                "label": "Midway, Niue, Pago Pago"
              },
              "Europe/Mariehamn": {
                "label": "Moscow, Istanbul, Qatar"
              },
              "Asia/Kolkata": {
                "label": "Mumbai, Delhi, Bengaluru, Kolkata, Chennai"
              },
              "America/Miquelon": {
                "label": "Noronha, Nuuk, Miquelon"
              },
              "America/Danmarkshavn": {
                "label": "Reykjavik, Dakar, Casablanca"
              },
              "Pacific/Bougainville": {
                "label": "Sakhalin, Norfolk, Bougainville"
              },
              "America/Araguaina": {
                "label": "Sao Paulo, Buenos Aires, Montevideo"
              },
              "America/St_Johns": {
                "label": "St. Johns, Mount Pearl, Corner Brook"
              },
              "Asia/Tehran": {
                "label": "Tehran, Mashhad, Isfahan, Karaj, Tabriz"
              },
              "Asia/Tokyo": {
                "label": "Tokyo, Seoul, Jayapura"
              },
              "America/New_York": {
                "label": "Toronto, Santiago, New York"
              },
              "Australia/Sydney": {
                "label": "Vladivostok, Sydney, Brisbane"
              },
              "Asia/Yangon": {
                "label": "Yangon, Cocos, Mandalay, Nay Pyi Taw, Mawlamyine"
              },
              "Indian/Cocos": {
                "label": "Yangon, Cocos, West Island"
              }
            },
            "breakLine": true
          }
        }
      }
    }
  }
},
"/common-snippets/SelectTablesWithColumnsRows.json/SelectTablesWithColumnsRows.json": {
  "input": {
    "type": "fieldset",
    "label": "Select Input Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "input_table1_table_id": {
        "type": "select",
        "label": "Select Table1",
        "bind": "TABLES",
        "empty": "",
        "required": true,
        "breakLine": true
      },
      "apply_to_all_columns1": {
        "type": "checkbox",
        "label": "All Columns",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "apply_columns1": {
        "type": "select",
        "label": "Select Columns to Apply",
        "show_if": "apply_to_all_columns1=='false'",
        "required": true,
        "table": "input_table1_table_id",
        "multiple": true,
        "bind": "COLUMNS",
        "breakLine": true
      },
      "apply_to_all_rows1": {
        "type": "checkbox",
        "label": "All Rows",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "apply_rows1": {
        "type": "select",
        "label": "Select Rows to Apply",
        "show_if": "apply_to_all_rows1=='false'",
        "required": true,
        "table": "input_table1_table_id",
        "multiple": true,
        "bind": "LABELS",
        "breakLine": true
      },
      "input_table2_table_id": {
        "type": "select",
        "label": "Select Table2",
        "bind": "TABLES",
        "empty": "",
        "required": true,
        "breakLine": true
      },
      "apply_to_all_columns2": {
        "type": "checkbox",
        "label": "All Columns",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "apply_columns2": {
        "type": "select",
        "label": "Select Columns to Apply",
        "show_if": "apply_to_all_columns2=='false'",
        "required": true,
        "table": "input_table2_table_id",
        "multiple": true,
        "bind": "COLUMNS",
        "breakLine": true
      },
      "apply_to_all_rows2": {
        "type": "checkbox",
        "label": "All Rows",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "apply_rows2": {
        "type": "select",
        "label": "Select Rows to Apply",
        "show_if": "apply_to_all_rows2=='false'",
        "required": true,
        "table": "input_table2_table_id",
        "multiple": true,
        "bind": "LABELS",
        "breakLine": true
      }
    }
  }
},
"/common-snippets/SelectOutputColumnWithTableWithoutSort.json/SelectOutputColumnWithTableWithoutSort.json": {
  "output.select_output_columns": {
    "type": "checkbox",
    "label": "Select Output Columns",
    "show_if": "output.custom_options=='true'",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "style": "margin-top: 10px"
  },
  "output_columns": {
    "type": "fieldset",
    "label": "Select Output Columns",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.custom_options=='true' && output.select_output_columns=='true'",
    "repeat": true,
    "fields": {
      "table_id": {
        "type": "select",
        "label": "Select Table",
        "bind": "TABLES",
        "required": true
      },
      "field_name": {
        "type": "select",
        "label": "Select Column",
        "table": "this.table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "is_rename": {
        "type": "checkbox",
        "label": "Rename",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "rename": {
        "show_if": "this.is_rename == 'true'",
        "type": "text",
        "required": true,
        "minLength": 1,
        "maxLength": 255,
        "label": "New Column Name",
        "style": "margin-left: 10px"
      },
      "format__category": {
        "type": "select",
        "label": "Display Format",
        "required": true,
        "options": {
          "standard": {
            "label": "Standard"
          },
          "number": {
            "label": "Number"
          },
          "percentage": {
            "label": "Percentage"
          },
          "text": {
            "label": "Text"
          },
          "date": {
            "label": "Date"
          },
          "currency": {
            "label": "Currency"
          }
        },
        "val": "standard"
      },
      "format__rounding": {
        "type": "select",
        "label": "Decimal Places for display",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "required": true,
        "options": {
          "no_rounding": {
            "label": "No rounding"
          },
          "0": {
            "label": "0 digits"
          },
          "1": {
            "label": "1 digits"
          },
          "2": {
            "label": "2 digits"
          },
          "3": {
            "label": "3 digits"
          },
          "4": {
            "label": "4 digits"
          },
          "5": {
            "label": "5 digits"
          },
          "6": {
            "label": "6 digits"
          },
          "7": {
            "label": "7 digits"
          },
          "8": {
            "label": "8 digits"
          },
          "9": {
            "label": "9 digits"
          }
        },
        "val": "2"
      },
      "format__use_1000_separator": {
        "type": "checkbox",
        "label": "Use 1000 Separator(.)",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "format__currency_symbol": {
        "type": "select",
        "label": "Symbol",
        "show_if": "this.format__category=='currency'",
        "required": true,
        "options": {
          "dollar": {
            "label": "$"
          },
          "euro": {
            "label": "€"
          },
          "pound": {
            "label": "£"
          },
          "yen": {
            "label": "¥ (Yen, currency of Japan)"
          },
          "colon": {
            "label": "₡ (Colón, currency of Costa Rica)"
          },
          "naira": {
            "label": "₦ (Naira, currency of Nigeria)"
          },
          "rupee": {
            "label": "₨ (Rupee, currency of India)"
          },
          "rupie": {
            "label": "₹ (Rupee, currency of India)"
          },
          "won": {
            "label": "₩ (Won, currency in South Korea and North Korea)"
          },
          "hebrew": {
            "label": "₪ (Currency of Israel)"
          },
          "dong": {
            "label": "₫ (Currency of Vietnam)"
          },
          "kip": {
            "label": "₭ (Kip, currency of Laos)"
          },
          "mongolia": {
            "label": "₮ (Currency of Mongolia)"
          },
          "peso": {
            "label": "₱ (Peso, currency of the Philippines)"
          },
          "guarani": {
            "label": "₲ (Guaraní, currency of Paraguay)"
          },
          "hryvnia": {
            "label": "₴ (Hryvnia, currency of Ukraine)"
          },
          "tenge": {
            "label": "₸ (Tenge, currency of Kazakhstan)"
          },
          "lira": {
            "label": "₺ (Lira, currency of Turkey)"
          },
          "manat": {
            "label": "₼ (Manat, currency of Azerbaijan)"
          },
          "rubles": {
            "label": "₽ (Rubles, currency of Russia)"
          },
          "lari": {
            "label": "₾ (Lari, currency of Georgia)"
          },
          "bitcoin": {
            "label": "₿ (Bitcoin, crypto currency)"
          }
        },
        "val": "dollar"
      },
      "format__date_format": {
        "type": "select",
        "label": "Type",
        "show_if": "this.format__category=='date'",
        "required": true,
        "options": {
          "mm/dd/yyyy": {
            "label": "3/14/2012"
          },
          "D, M dd, Y": {
            "label": "Wednesday, March 14, 2012"
          },
          "yyyy-mm-dd": {
            "label": "2012-03-14"
          },
          "m.dd.yyyy": {
            "label": "3.14.2012"
          },
          "m.dd.yy": {
            "label": "3.14.12"
          },
          "dd.m.yyyy": {
            "label": "14.3.2012"
          },
          "dd.m.yy": {
            "label": "14.3.12"
          },
          "M dd, Y": {
            "label": "March 14, 2012"
          },
          "dd-mm-yyyy": {
            "label": "14-03-2012"
          },
          "mm-dd-yyyy": {
            "label": "03-14-2012"
          },
          "dd-mm-yy": {
            "label": "14-03-12"
          },
          "mm-dd-yy": {
            "label": "03-14-12"
          }
        },
        "val": "mm/dd/yyyy",
        "breakLine": true
      },
      "delete": {
        "type": "button",
        "label": "Delete",
        "function": "DELETE_ROW"
      }
    },
    "breakLine": true,
    "style": "margin-bottom: 20px"
  }
},
"/common-snippets/SelectColumnOnly.json/SelectColumnOnly.json": {
  "placeholder": {
    "breakLine": true
  },
  "apply_to_all_columns": {
    "type": "checkbox",
    "label": "All Columns",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  },
  "apply_columns": {
    "type": "select",
    "label": "Select Columns to Apply",
    "width": "100%",
    "table": "table_id",
    "multiple": true,
    "bind": "COLUMNS",
    "breakLine": true
  }
}
,
"/common-snippets/IfTableExist.json/IfTableExist.json": {
  "output.if_table_exist.type": {
    "type": "select",
    "label": "If existing",
    "show_if": "output.custom_options=='true'",
    "val": "drop_if_exist",
    "options": {
      "drop_if_exist": {
        "label": "Create or Drop (if already existing)"
      },
      "error_if_exist": {
        "label": "Create New (throw error if existing)"
      },
      "error_if_not_exist": {
        "label": "Drop (throw error if not-existing)"
      },
      "append_all": {
        "label": "Append All"
      },
      "append_not_existing": {
        "label": "Append not existing"
      },
      "append_changes": {
        "label": "Append changes"
      }
    }
  },
  "output.if_table_exist.append_not_existing_cols": {
    "type": "select",
    "label": "Select Column(s)",
    "show_if": "output.if_table_exist.type=='append_not_existing'",
    "table": "table_id",
    "bind": "COLUMNS",
    "multiple": true,
    "required": true,
    "breakLine": true
  },
  "output.if_table_exist.append_changes__add_timestamp": {
    "type": "checkbox",
    "label": "Add Timestamp",
    "show_if": "output.if_table_exist.type=='append_changes'",
    "val": "false",
    "isOn": "true",
    "isOff": "false"
  },
  "output.if_table_exist.append_changes__timestamp_colname": {
    "type": "text",
    "label": "Timestamp column name",
    "show_if": "output.if_table_exist.type=='append_changes' && output.if_table_exist.append_changes__add_timestamp=='true'",
    "val": "Timestamp",
    "required": true,
    "breakLine": true
  },
  "output.if_table_exist.append_changes__add_row": {
    "type": "checkbox",
    "label": "Add Row",
    "show_if": "output.if_table_exist.type=='append_changes'",
    "val": "false",
    "isOn": "true",
    "isOff": "false"
  },
  "output.if_table_exist.append_changes__row_colname": {
    "type": "text",
    "label": "Row column name",
    "show_if": "output.if_table_exist.type=='append_changes' && output.if_table_exist.append_changes__add_row=='true'",
    "val": "Row",
    "required": true,
    "breakLine": true
  },
  "append_not_existing_info1": {
    "type": "text",
    "label": "",
    "show_if": "output.if_table_exist.type=='append_not_existing'",
    "val": "Appends rows only if the value of the",
    "disabled": true,
    "style": "width: 100%"
  },
  "append_not_existing_info2": {
    "type": "text",
    "label": "",
    "show_if": "output.if_table_exist.type=='append_not_existing'",
    "val": "selected column is new in the existing table.",
    "disabled": true,
    "style": "width: 100%"
  },
  "append_not_existing_info3": {
    "type": "text",
    "label": "",
    "show_if": "output.if_table_exist.type=='append_not_existing'",
    "val": "It is assumed that the selected column",
    "disabled": true,
    "style": "width: 100%"
  },
  "append_not_existing_info4": {
    "type": "text",
    "label": "",
    "show_if": "output.if_table_exist.type=='append_not_existing'",
    "val": "is found in the output and existing table",
    "disabled": true,
    "style": "width: 100%"
  }
}
,
"/common-snippets/Years.json/Years.json": {
  "options.sel_year": {
    "type": "select",
    "label": "Select year",
    "required": true,
    "options": {
      "1960": {
        "label": "1960"
      },
      "1961": {
        "label": "1961"
      },
      "1962": {
        "label": "1962"
      },
      "1963": {
        "label": "1963"
      },
      "1964": {
        "label": "1964"
      },
      "1965": {
        "label": "1965"
      },
      "1966": {
        "label": "1966"
      },
      "1967": {
        "label": "1967"
      },
      "1968": {
        "label": "1968"
      },
      "1969": {
        "label": "1969"
      },
      "1970": {
        "label": "1970"
      },
      "1971": {
        "label": "1971"
      },
      "1972": {
        "label": "1972"
      },
      "1973": {
        "label": "1973"
      },
      "1974": {
        "label": "1974"
      },
      "1975": {
        "label": "1975"
      },
      "1976": {
        "label": "1976"
      },
      "1977": {
        "label": "1977"
      },
      "1978": {
        "label": "1978"
      },
      "1979": {
        "label": "1979"
      },
      "1980": {
        "label": "1980"
      },
      "1981": {
        "label": "1981"
      },
      "1982": {
        "label": "1982"
      },
      "1983": {
        "label": "1983"
      },
      "1984": {
        "label": "1984"
      },
      "1985": {
        "label": "1985"
      },
      "1986": {
        "label": "1986"
      },
      "1987": {
        "label": "1987"
      },
      "1988": {
        "label": "1988"
      },
      "1989": {
        "label": "1989"
      },
      "1990": {
        "label": "1990"
      },
      "1991": {
        "label": "1991"
      },
      "1992": {
        "label": "1992"
      },
      "1993": {
        "label": "1993"
      },
      "1994": {
        "label": "1994"
      },
      "1995": {
        "label": "1995"
      },
      "1996": {
        "label": "1996"
      },
      "1997": {
        "label": "1997"
      },
      "1998": {
        "label": "1998"
      },
      "1999": {
        "label": "1999"
      },
      "2000": {
        "label": "2000"
      },
      "2001": {
        "label": "2001"
      },
      "2002": {
        "label": "2002"
      },
      "2003": {
        "label": "2003"
      },
      "2004": {
        "label": "2004"
      },
      "2005": {
        "label": "2005"
      },
      "2006": {
        "label": "2006"
      },
      "2007": {
        "label": "2007"
      },
      "2008": {
        "label": "2008"
      },
      "2009": {
        "label": "2009"
      },
      "2010": {
        "label": "2010"
      },
      "2011": {
        "label": "2011"
      },
      "2012": {
        "label": "2012"
      },
      "2013": {
        "label": "2013"
      },
      "2014": {
        "label": "2014"
      },
      "2015": {
        "label": "2015"
      },
      "2016": {
        "label": "2016"
      },
      "2017": {
        "label": "2017"
      },
      "2018": {
        "label": "2018"
      },
      "2019": {
        "label": "2019"
      },
      "2020": {
        "label": "2020"
      },
      "2021": {
        "label": "2021"
      },
      "2022": {
        "label": "2022"
      }
    },
    "val": "2020",
    "breakLine": true
  }
},
"/common-snippets/FormattingWithKeepCurrentInRepeat.json/FormattingWithKeepCurrentInRepeat.json": {
  "format__category": {
    "type": "select",
    "label": "Display Format",
    "required": true,
    "options": {
      "keep_current": {
        "label": "Keep Current"
      },
      "standard": {
        "label": "Standard"
      },
      "number": {
        "label": "Number"
      },
      "percentage": {
        "label": "Percentage"
      },
      "text": {
        "label": "Text"
      },
      "date": {
        "label": "Date"
      },
      "currency": {
        "label": "Currency"
      }
    },
    "val": "keep_current"
  },
  "format__rounding": {
    "type": "select",
    "label": "Decimal Places for display",
    "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
    "required": true,
    "options": {
      "no_rounding": {
        "label": "No rounding"
      },
      "0": {
        "label": "0 digits"
      },
      "1": {
        "label": "1 digits"
      },
      "2": {
        "label": "2 digits"
      },
      "3": {
        "label": "3 digits"
      },
      "4": {
        "label": "4 digits"
      },
      "5": {
        "label": "5 digits"
      },
      "6": {
        "label": "6 digits"
      },
      "7": {
        "label": "7 digits"
      },
      "8": {
        "label": "8 digits"
      },
      "9": {
        "label": "9 digits"
      }
    },
    "val": "2"
  },
  "format__use_1000_separator": {
    "type": "checkbox",
    "label": "Use 1000 Separator(,)",
    "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
    "val": "true",
    "isOn": "true",
    "isOff": "false"
  },
  "format__currency_symbol": {
    "type": "select",
    "label": "Symbol",
    "show_if": "this.format__category=='currency'",
    "required": true,
    "options": {
      "dollar": {
        "label": "$"
      },
      "euro": {
        "label": "€"
      },
      "pound": {
        "label": "£"
      }
    },
    "val": "dollar"
  },
  "format__date_format": {
    "type": "select",
    "label": "Type",
    "show_if": "this.format__category=='date'",
    "required": true,
    "options": {
      "mm/dd/yyyy": {
        "label": "3/14/2012"
      },
      "D, M dd, Y": {
        "label": "Wednesday, March 14, 2012"
      },
      "yyyy-mm-dd": {
        "label": "2012-03-14"
      },
      "m.dd.yyyy": {
        "label": "3.14.2012"
      },
      "m.dd.yy": {
        "label": "3.14.12"
      },
      "dd.m.yyyy": {
        "label": "14.3.2012"
      },
      "dd.m.yy": {
        "label": "14.3.12"
      },
      "M dd, Y": {
        "label": "March 14, 2012"
      },
      "dd-mm-yyyy": {
        "label": "14-03-2012"
      },
      "mm-dd-yyyy": {
        "label": "03-14-2012"
      },
      "dd-mm-yy": {
        "label": "14-03-12"
      },
      "mm-dd-yy": {
        "label": "03-14-12"
      }
    },
    "val": "mm/dd/yyyy",
    "breakLine": true
  }
}
,
"/common-snippets/AdvancedSelectTables.json/AdvancedSelectTables.json": {
  "input_table_options": {
    "type": "fieldset",
    "label": "Specify Input Tables",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "breakLine": true,
    "repeat": false,
    "fields": {
      "options.select_type": {
        "type": "select",
        "label": "Select Type",
        "required": true,
        "options": {
          "table_selection": {
            "label": "Table Selection"
          },
          "select_by_pattern": {
            "label": "Select by Pattern"
          }
        },
        "val": "table_selection"
      },
      "options.table_ids": {
        "type": "select",
        "label": "Select Tables",
        "bind": "TABLES",
        "empty": "",
        "multiple": true,
        "show_if": "options.select_type=='table_selection'",
        "required": true
      },
      "options.filter_params": {
        "type": "fieldset",
        "label": "Match tables",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.select_type=='select_by_pattern'",
        "breakLine": true,
        "repeat": true,
        "fields": {
          "keyword": {
            "type": "text",
            "label": "Enter Keyword",
            "required": true,
            "val": ""
          },
          "filter_target": {
            "type": "select",
            "label": "Filter on",
            "required": true,
            "options": {
              "table_name": {
                "label": "Table Name"
              },
              "table_tag": {
                "label": "Table Tag"
              }
            },
            "val": "table_name"
          },
          "filter_type": {
            "type": "select",
            "label": "Filter type",
            "required": true,
            "options": {
              "equal": {
                "label": "Equal"
              },
              "contain": {
                "label": "Contains"
              },
              "start_with": {
                "label": "Starts With"
              },
              "end_with": {
                "label": "Ends With"
              },
              "regex": {
                "label": "Regular Expression"
              }
            },
            "val": "equal"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      }
    }
  }
}
,
"/common-snippets/SelectInputTables.json/SelectInputTables.json": {
  "input": {
    "type": "fieldset",
    "label": "Select Input Tables",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "input_table1_table_id": {
        "type": "select",
        "label": "Select Table",
        "bind": "TABLES",
        "empty": "",
        "required": true
      },
      "input_table2_table_id": {
        "type": "select",
        "label": "Select Table",
        "bind": "TABLES",
        "empty": "",
        "required": true
      },
      "remove_input_table_after_processing": {
        "type": "hidden",
        "val": "false"
      },
      "is_word": {
        "type": "hidden",
        "val": "false"
      }
    }
  }
}
,
"/common-snippets/SelectTables.json/SelectTables.json": {
  "input": {
    "type": "fieldset",
    "label": "Select Input Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "configure_input_tables": {
        "type": "select",
        "label": "Select Source",
        "options": {
          "zippydoc_table": {
            "label": "Flow Table"
          },
          "search_tables": {
            "label": "Search Tables"
          }
        },
        "val": "zippydoc_table"
      },
      "search_tables__types": {
        "type": "select",
        "label": "Select Source",
        "show_if": "configure_input_tables=='search_tables'",
        "options": {
          "owned_tables": {
            "label": "Owned tables"
          },
          "shared_tables": {
            "label": "Shared tables"
          },
          "published_tables": {
            "label": "Published tables"
          }
        },
        "multiple": true,
        "val": ["owned_tables"]
      },
      "tables": {
        "type": "fieldset",
        "label": "Select Tables",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "configure_input_tables=='zippydoc_table'",
        "repeat": true,
        "fields": {
          "table_id": {
            "type": "select",
            "label": "Select Table",
            "bind": "TABLES"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "input_table_condition": {
        "type": "fieldset",
        "label": "Search Tables",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "configure_input_tables=='search_tables'",
        "repeat": true,
        "fields": {
          "initial_op": {
            "type": "select",
            "label": "Logic Operator",
            "required": true,
            "show_if" :  "$index == 0",
            "options": {
              "if": {
                "label": "IF"
              },
              "if_not": {
                "label": "IF NOT"
              }
            },
            "val": "if"
          },
          "op": {
            "type": "select",
            "label": "Logic Operator",
            "required": true,
            "show_if" :  "$index > 0",
            "options": {
              "and": {
                "label": "AND"
              },
              "or": {
                "label": "OR"
              },
              "and_not": {
                "label": "AND NOT"
              },
              "or_not": {
                "label": "OR NOT"
              }
            },
            "val": "and"
          },
          "type": {
            "type": "select",
            "label": "Type",
            "required": true,
            "options": {
              "Table Name": {
                "label": "Table Name"
              },
              "Tags": {
                "label": "Tags"
              }
            },
            "val": "Table Name"
          },
          "rows": {
            "type": "select",
            "label": "Condition",
            "show_if": "this.type == 'Tags'",
            "required": true,
            "options": {
              "All Tags": {
                "label": "All Tags"
              },
              "Some Tags": {
                "label": "Some Tags"
              }
            },
            "val": "Some Tags"
          },
          "condition": {
            "type": "select",
            "label": "Operator",
            "required": true,
            "options": {
              "CONTAINS": {
                "label": "CONTAINS"
              },
              "CONTAINED IN STRING": {
                "label": "CONTAINED IN"
              },
              "STARTS WITH": {
                "label": "STARTS WITH"
              },
              "ENDS WITH": {
                "label": "ENDS WITH"
              },
              "=": {
                "label": "EQUAL"
              },
              "REGEX MATCH": {
                "label": "REGEX MATCH"
              }
            },
            "val": "CONTAINS"
          },
          "value": {
            "type": "text",
            "label": "Input Value",
            "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "val": "",
            "required": true
          },
          "case_sensitive": {
            "type": "select",
            "label": "Case Sensitive",
            "required": true,
            "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "options": {
              "yes": {
                "label": "Case Sensitive"
              },
              "no": {
                "label": "Case Insensitive"
              }
            },
            "val": "yes"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      }
    }
  }
},
"/common-snippets/Debug.json/Debug.json": {
  "debug": {
    "type": "debug"
  }
}
,
"/common-snippets/SelectColumnOnlyN.json/SelectColumnOnlyN.json": {
  "placeholder": {
    "breakLine": true
  },
  "apply_columns_frame": {
    "type": "fieldset",
    "label": "Select column(s) to apply",
    "repeat": false,
    "fields": {
      "apply_to_all_columns": {
        "type": "checkbox",
        "label": "All Columns",
        "show_if": "false",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "apply_columns__all_but_selected": {
        "type": "checkbox",
        "label": "All but selected",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "apply_columns": {
        "type": "select",
        "label": "Select Columns to Apply",
        "width": "100%",
        "table": "table_id",
        "multiple": true,
        "bind": "COLUMNS",
        "breakLine": true
      }
    }
  }
}
,
"/common-snippets/IfTableExistWithoutAppendNotExisting.json/IfTableExistWithoutAppendNotExisting.json": {
  "output.if_table_exist.type": {
    "type": "select",
    "label": "If existing",
    "show_if": "output.custom_options=='true'",
    "val": "drop_if_exist",
    "options": {
      "drop_if_exist": {
        "label": "Create or Drop (if already existing)"
      },
      "error_if_exist": {
        "label": "Create New (throw error if existing)"
      },
      "error_if_not_exist": {
        "label": "Drop (throw error if not-existing)"
      },
      "append_all": {
        "label": "Append All"
      },
      "append_changes": {
        "label": "Append changes"
      }
    },
    "breakLine": true
  },
  "output.if_table_exist.append_changes__add_timestamp": {
    "type": "checkbox",
    "label": "Add Timestamp",
    "show_if": "output.if_table_exist.type=='append_changes'",
    "val": "false",
    "isOn": "true",
    "isOff": "false"
  },
  "output.if_table_exist.append_changes__timestamp_colname": {
    "type": "text",
    "label": "Timestamp column name",
    "show_if": "output.if_table_exist.type=='append_changes' && output.if_table_exist.append_changes__add_timestamp=='true'",
    "val": "Timestamp",
    "required": true,
    "breakLine": true
  },
  "output.if_table_exist.append_changes__add_row": {
    "type": "checkbox",
    "label": "Add Row",
    "show_if": "output.if_table_exist.type=='append_changes'",
    "val": "false",
    "isOn": "true",
    "isOff": "false"
  },
  "output.if_table_exist.append_changes__row_colname": {
    "type": "text",
    "label": "Row column name",
    "show_if": "output.if_table_exist.type=='append_changes' && output.if_table_exist.append_changes__add_row=='true'",
    "val": "Row",
    "required": true,
    "breakLine": true
  }
}
,
"/common-snippets/IfTableExistWithAppendAllDefault.json/IfTableExistWithAppendAllDefault.json": {
  "output.if_table_exist.type": {
    "type": "select",
    "label": "If existing",
    "show_if": "output.custom_options=='true'",
    "val": "append_all",
    "options": {
      "drop_if_exist": {
        "label": "Create or Drop (if already existing)"
      },
      "append_all": {
        "label": "Append All"
      }
    }
  },
  "output.if_table_exist.append_not_existing_cols": {
    "type": "select",
    "label": "Select Column(s)",
    "show_if": "output.if_table_exist.type=='append_not_existing'",
    "table": "table_id",
    "bind": "COLUMNS",
    "multiple": true,
    "required": true,
    "breakLine": true
  },
  "output.if_table_exist.append_changes__add_timestamp": {
    "type": "checkbox",
    "label": "Add Timestamp",
    "show_if": "output.if_table_exist.type=='append_changes'",
    "val": "false",
    "isOn": "true",
    "isOff": "false"
  },
  "output.if_table_exist.append_changes__timestamp_colname": {
    "type": "text",
    "label": "Timestamp column name",
    "show_if": "output.if_table_exist.type=='append_changes' && output.if_table_exist.append_changes__add_timestamp=='true'",
    "val": "Timestamp",
    "required": true,
    "breakLine": true
  },
  "output.if_table_exist.append_changes__add_row": {
    "type": "checkbox",
    "label": "Add Row",
    "show_if": "output.if_table_exist.type=='append_changes'",
    "val": "false",
    "isOn": "true",
    "isOff": "false"
  },
  "output.if_table_exist.append_changes__row_colname": {
    "type": "text",
    "label": "Row column name",
    "show_if": "output.if_table_exist.type=='append_changes' && output.if_table_exist.append_changes__add_row=='true'",
    "val": "Row",
    "required": true,
    "breakLine": true
  },
  "append_not_existing_info1": {
    "type": "text",
    "label": "",
    "show_if": "output.if_table_exist.type=='append_not_existing'",
    "val": "Appends rows only if the value of the",
    "disabled": true,
    "style": "width: 100%"
  },
  "append_not_existing_info2": {
    "type": "text",
    "label": "",
    "show_if": "output.if_table_exist.type=='append_not_existing'",
    "val": "selected column is new in the existing table.",
    "disabled": true,
    "style": "width: 100%"
  },
  "append_not_existing_info3": {
    "type": "text",
    "label": "",
    "show_if": "output.if_table_exist.type=='append_not_existing'",
    "val": "It is assumed that the selected column",
    "disabled": true,
    "style": "width: 100%"
  },
  "append_not_existing_info4": {
    "type": "text",
    "label": "",
    "show_if": "output.if_table_exist.type=='append_not_existing'",
    "val": "is found in the output and existing table",
    "disabled": true,
    "style": "width: 100%"
  }
}
,
"/common-snippets/PdfOutput.json/PdfOutput.json": {
  "output": {
    "type": "fieldset",
    "label": "Define Output PDF Name",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "options.where_to_create!='only_open_in_browser'",
    "repeat": false,
    "fields": {
      "output.custom_text": {
        "type": "text",
        "label": "Output Table Name",
        "show_if": "output.custom_options=='false' || (output.custom_options=='true' && output.compose_table_name=='false')",
        "minLength": 1,
        "val": "",
        "width": "100%",
        "breakLine": true
      },
      "output.custom_options": {
        "type": "hidden",
        "val": "true"
      },
      "output.compose_table_name": {
        "type": "checkbox",
        "label": "Compose PDF Name",
        "show_if": "output.custom_options=='true'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "compose_table_name_frame": {
        "type": "fieldset",
        "label": "Compose Output PDF Name",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "output.custom_options=='true' && output.compose_table_name=='true'",
        "repeat": false,
        "fields": {
          "output.prefix_rule": {
            "type": "select",
            "label": "Prefix",
            "show_if": "output.compose_table_name=='true'",
            "val": "empty",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.prefix_text": {
            "type": "text",
            "label": "Prefix Text",
            "show_if": "output.compose_table_name=='true' && output.prefix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "output.core_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "show_if": "output.compose_table_name=='true' && output.prefix_rule!='empty'",
            "val": "_",
            "width": "50px"
          },
          "output.core_rule": {
            "type": "select",
            "label": "Table Name",
            "show_if": "output.compose_table_name=='true'",
            "val": "input_table_name",
            "options": {
              "script_name": {
                "label": "Task Name"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.core_text": {
            "type": "text",
            "label": "Main Table Name",
            "show_if": "output.compose_table_name=='true' && output.core_rule=='custom'",
            "required": true,
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "output.suffix_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "show_if": "output.compose_table_name=='true'",
            "val": "_",
            "width": "50px"
          },
          "output.suffix_rule": {
            "type": "select",
            "label": "Suffix",
            "show_if": "output.compose_table_name=='true'",
            "val": "script_name",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.suffix_text": {
            "type": "text",
            "label": "Suffix Text",
            "show_if": "output.compose_table_name=='true' && output.suffix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": "",
            "breakLine": true
          },
          "output.timezone": {
            "type": "select",
            "label": "Timezone",
            "show_if": "output.compose_table_name=='true' && (output.prefix_rule=='date_string_type1' || output.prefix_rule=='date_string_type2' || output.prefix_rule=='time_string' || output.prefix_rule=='datetime_string' || output.suffix_rule=='date_string_type1' || output.suffix_rule=='date_string_type2' || output.suffix_rule=='time_string' || output.suffix_rule=='datetime_string')",
            "val": "Europe/Berlin",
            "required": true,
            "options": {
              "America/Adak": {
                "label": "Adak, Gambier"
              },
              "Australia/Adelaide": {
                "label": "Adelaide, Broken Hill, Darwin"
              },
              "America/Anchorage": {
                "label": "Anchorage, Juneau, Sitka"
              },
              "Pacific/Apia": {
                "label": "Apia, Asau, Mulifanua, Afega, Leulumoega"
              },
              "Pacific/Enderbury": {
                "label": "Apia, Fiji, Tongatapu"
              },
              "Antarctica/McMurdo": {
                "label": "Auckland, Casey, Davis"
              },
              "Pacific/Auckland": {
                "label": "Auckland, Wellington, Christchurch"
              },
              "Asia/Bangkok": {
                "label": "Bangkok, Jakarta, Novosibirsk"
              },
              "Europe/Berlin": {
                "label": "Berlin, Paris, Amsterdam"
              },
              "Australia/Perth": {
                "label": "Brunei, Singapore, Perth"
              },
              "Atlantic/Cape_Verde": {
                "label": "Cape Verde,Praia, Mindelo, Santa Maria"
              },
              "America/Belize": {
                "label": "Costa Rica, El Salvador, Denver"
              },
              "Antarctica/Vostok": {
                "label": "Dhaka, Bishkek, Omsk"
              },
              "Europe/Astrakhan": {
                "label": "Dubai, Baku, Tbilisi"
              },
              "Australia/Eucla": {
                "label": "Eucla"
              },
              "Pacific/Honolulu": {
                "label": "Honolulu, Rarotonga, Tahiti"
              },
              "Asia/Kabul": {
                "label": "Kabul, Kandahār, Mazār-e Sharīf, Herāt, Jalālābād"
              },
              "Asia/Aqtau": {
                "label": "Karachi, Tashkent, Maldives"
              },
              "Asia/Kathmandu": {
                "label": "Kathmandu, Pokhara, Pātan, Biratnagar"
              },
              "Pacific/Kiritimati": {
                "label": "Kiritimati"
              },
              "Asia/Colombo": {
                "label": "Kolkata, Colombo, Jaffna, Negombo"
              },
              "Europe/Guernsey": {
                "label": "London, Dublin, Lisbon"
              },
              "Australia/Lord_Howe": {
                "label": "Lord Howe"
              },
              "America/Creston": {
                "label": "Los Angeles, Vancouver, Hermosillo"
              },
              "Pacific/Marquesas": {
                "label": "Marquesas, Taiohae"
              },
              "America/Cayman": {
                "label": "Mexico City, Panama, Chicago"
              },
              "Pacific/Niue": {
                "label": "Midway, Niue, Pago Pago"
              },
              "Europe/Mariehamn": {
                "label": "Moscow, Istanbul, Qatar"
              },
              "Asia/Kolkata": {
                "label": "Mumbai, Delhi, Bengaluru, Kolkata, Chennai"
              },
              "America/Miquelon": {
                "label": "Noronha, Nuuk, Miquelon"
              },
              "America/Danmarkshavn": {
                "label": "Reykjavik, Dakar, Casablanca"
              },
              "Pacific/Bougainville": {
                "label": "Sakhalin, Norfolk, Bougainville"
              },
              "America/Araguaina": {
                "label": "Sao Paulo, Buenos Aires, Montevideo"
              },
              "America/St_Johns": {
                "label": "St. Johns, Mount Pearl, Corner Brook"
              },
              "Asia/Tehran": {
                "label": "Tehran, Mashhad, Isfahan, Karaj, Tabriz"
              },
              "Asia/Tokyo": {
                "label": "Tokyo, Seoul, Jayapura"
              },
              "America/New_York": {
                "label": "Toronto, Santiago, New York"
              },
              "Australia/Sydney": {
                "label": "Vladivostok, Sydney, Brisbane"
              },
              "Asia/Yangon": {
                "label": "Yangon, Cocos, Mandalay, Nay Pyi Taw, Mawlamyine"
              },
              "Indian/Cocos": {
                "label": "Yangon, Cocos, West Island"
              }
            },
            "breakLine": true
          }
        }
      }
    }
  }
},
"/common-snippets/SelectOutputColumnWithTable.json/SelectOutputColumnWithTable.json": {
  "output.select_output_columns": {
    "type": "checkbox",
    "label": "Select Output Columns",
    "show_if": "output.custom_options=='true'",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "style": "margin-top: 10px"
  },
  "output_columns": {
    "type": "fieldset",
    "label": "Select Output Columns",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.custom_options=='true' && output.select_output_columns=='true'",
    "repeat": true,
    "fields": {
      "table_id": {
        "type": "select",
        "label": "Select Table",
        "bind": "TABLES",
        "required": true
      },
      "field_name": {
        "type": "select",
        "label": "Select Column",
        "table": "this.table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "order": {
        "type": "select",
        "label": "Order",
        "options": {
          "-": {
            "label": "-"
          },
          "asc": {
            "label": "Asc"
          },
          "desc": {
            "label": "Desc"
          }
        },
        "val": "-"
      },
      "is_rename": {
        "type": "checkbox",
        "label": "Rename",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "rename": {
        "show_if": "this.is_rename == 'true'",
        "type": "text",
        "required": true,
        "minLength": 1,
        "maxLength": 255,
        "label": "New Column Name",
        "style": "margin-left: 10px"
      },
      "format__category": {
        "type": "select",
        "label": "Display Format",
        "required": true,
        "options": {
          "standard": {
            "label": "Standard"
          },
          "number": {
            "label": "Number"
          },
          "percentage": {
            "label": "Percentage"
          },
          "text": {
            "label": "Text"
          },
          "date": {
            "label": "Date"
          },
          "currency": {
            "label": "Currency"
          }
        },
        "val": "standard"
      },
      "format__rounding": {
        "type": "select",
        "label": "Decimal Places for display",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "required": true,
        "options": {
          "no_rounding": {
            "label": "No rounding"
          },
          "0": {
            "label": "0 digits"
          },
          "1": {
            "label": "1 digits"
          },
          "2": {
            "label": "2 digits"
          },
          "3": {
            "label": "3 digits"
          },
          "4": {
            "label": "4 digits"
          },
          "5": {
            "label": "5 digits"
          },
          "6": {
            "label": "6 digits"
          },
          "7": {
            "label": "7 digits"
          },
          "8": {
            "label": "8 digits"
          },
          "9": {
            "label": "9 digits"
          }
        },
        "val": "2"
      },
      "format__use_1000_separator": {
        "type": "checkbox",
        "label": "Use 1000 Separator(.)",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "format__currency_symbol": {
        "type": "select",
        "label": "Symbol",
        "show_if": "this.format__category=='currency'",
        "required": true,
        "options": {
          "dollar": {
            "label": "$"
          },
          "euro": {
            "label": "€"
          },
          "pound": {
            "label": "£"
          },
          "yen": {
            "label": "¥ (Yen, currency of Japan)"
          },
          "colon": {
            "label": "₡ (Colón, currency of Costa Rica)"
          },
          "naira": {
            "label": "₦ (Naira, currency of Nigeria)"
          },
          "rupee": {
            "label": "₨ (Rupee, currency of India)"
          },
          "rupie": {
            "label": "₹ (Rupee, currency of India)"
          },
          "won": {
            "label": "₩ (Won, currency in South Korea and North Korea)"
          },
          "hebrew": {
            "label": "₪ (Currency of Israel)"
          },
          "dong": {
            "label": "₫ (Currency of Vietnam)"
          },
          "kip": {
            "label": "₭ (Kip, currency of Laos)"
          },
          "mongolia": {
            "label": "₮ (Currency of Mongolia)"
          },
          "peso": {
            "label": "₱ (Peso, currency of the Philippines)"
          },
          "guarani": {
            "label": "₲ (Guaraní, currency of Paraguay)"
          },
          "hryvnia": {
            "label": "₴ (Hryvnia, currency of Ukraine)"
          },
          "tenge": {
            "label": "₸ (Tenge, currency of Kazakhstan)"
          },
          "lira": {
            "label": "₺ (Lira, currency of Turkey)"
          },
          "manat": {
            "label": "₼ (Manat, currency of Azerbaijan)"
          },
          "rubles": {
            "label": "₽ (Rubles, currency of Russia)"
          },
          "lari": {
            "label": "₾ (Lari, currency of Georgia)"
          },
          "bitcoin": {
            "label": "₿ (Bitcoin, crypto currency)"
          }
        },
        "val": "dollar"
      },
      "format__date_format": {
        "type": "select",
        "label": "Type",
        "show_if": "this.format__category=='date'",
        "required": true,
        "options": {
          "mm/dd/yyyy": {
            "label": "3/14/2012"
          },
          "D, M dd, Y": {
            "label": "Wednesday, March 14, 2012"
          },
          "yyyy-mm-dd": {
            "label": "2012-03-14"
          },
          "m.dd.yyyy": {
            "label": "3.14.2012"
          },
          "m.dd.yy": {
            "label": "3.14.12"
          },
          "dd.m.yyyy": {
            "label": "14.3.2012"
          },
          "dd.m.yy": {
            "label": "14.3.12"
          },
          "M dd, Y": {
            "label": "March 14, 2012"
          },
          "dd-mm-yyyy": {
            "label": "14-03-2012"
          },
          "mm-dd-yyyy": {
            "label": "03-14-2012"
          },
          "dd-mm-yy": {
            "label": "14-03-12"
          },
          "mm-dd-yy": {
            "label": "03-14-12"
          }
        },
        "val": "mm/dd/yyyy",
        "breakLine": true
      },
      "delete": {
        "type": "button",
        "label": "Delete",
        "function": "DELETE_ROW"
      }
    },
    "breakLine": true,
    "style": "margin-bottom: 20px"
  }
},
"/common-snippets/SelectColumnRow.json/SelectColumnRow.json": {
  "placeholder": {
    "breakLine": true
  },
  "apply_to_all_columns": {
    "type": "checkbox",
    "label": "All Columns",
    "show_if": "false",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true	
  },
  "apply_columns": {
    "type": "select",
    "label": "Select Columns to Apply",
    "required": true,
    "table": "table_id",
    "multiple": true,
    "bind": "COLUMNS",
    "breakLine": true
  },
  "apply_to_all_rows": {
    "type": "checkbox",
    "label": "All Rows",
    "show_if": "false",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  },
  "apply_rows": {
    "type": "select",
    "label": "Select Rows to Apply",
    "show_if": "$table_id.numOfLabel >= 1",
    "required": true,
    "table": "table_id",
    "multiple": true,
    "bind": "LABELS",
    "breakLine": true
  },
  "intersection": {
    "type": "select",
    "label": "Selection",
    "show_if": "false",
    "options": {
      "all": {
        "label": "All selected Rows & Columns"
      },
      "intersection": {
        "label": "Intersection of selected Rows & Columns"
      }
    },
    "val": "intersection"
  }
}
,
"/common-snippets/Countries.json/Countries.json": {
  "countries_frame": {
    "type": "fieldset",
    "label": "Select countries",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if" : "options.all_countries=='false'",
    "repeat": false,
    "fields": {
      "options.countries__select_type": {
        "type": "select",
        "label": "Method",
        "required": true,
        "options": {
          "all": {
            "label": "Select in all"
          },
          "region": {
            "label": "Select by region"
          },
          "income_group": {
            "label": "Select by income group"
          }
        },
        "val": "region"
      },
      "options.countries__select_region": {
        "type": "select",
        "label": "Region",
        "show_if" : "options.countries__select_type=='region'",
        "required": true,
        "options": {
          "east_asia_pacific": {
            "label": "East Asia & Pacific"
          },
          "europe_central_asia": {
            "label": "Europe & Central Asia"
          },
          "latin_america_caribbean": {
            "label": "Latin America & Caribbean"
          },
          "middle_east_north_africa": {
            "label": "Middle East & North Africa"
          },
          "north_america": {
            "label": "North America"
          },
          "south_asia": {
            "label": "South Asia"
          },
          "sub_saharan_africa": {
            "label": "Sub-Saharan Africa"
          }
        },
        "val": "europe_central_asia"
      },
      "options.countries__select_income_group": {
        "type": "select",
        "label": "Income Group",
        "show_if" : "options.countries__select_type=='income_group'",
        "required": true,
        "options": {
          "high_income": {
            "label": "High income"
          },
          "upper_middle_income": {
            "label": "Upper middle income"
          },
          "lower_middle_income": {
            "label": "Lower middle income"
          },
          "low_income": {
            "label": "Low income"
          }
        },
        "val": "high_income"
      },
      "options.countries__all_countries": {
        "type": "checkbox",
        "label": "All countries",
        "show_if" : "options.countries__select_type=='all'",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "options.countries__all_region_countries": {
        "type": "checkbox",
        "label": "All countries in Region",
        "show_if" : "options.countries__select_type=='region'",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "options.countries__all_income_group_countries": {
        "type": "checkbox",
        "label": "All countries in Income Group",
        "show_if" : "options.countries__select_type=='income_group'",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "options.countries_in_all": {
        "type": "select",
        "label": "Countries",
        "show_if" : "options.countries__select_type=='all' && options.countries__all_countries=='false'",
        "required": true,
        "options": {
          "AFG": {
            "label": "Afghanistan"
          },
          "ALB": {
            "label": "Albania"
          },
          "DZA": {
            "label": "Algeria"
          },
          "ASM": {
            "label": "American Samoa"
          },
          "AND": {
            "label": "Andorra"
          },
          "AGO": {
            "label": "Angola"
          },
          "ATA": {
            "label": "Antarctica"
          },
          "ATG": {
            "label": "Antigua and Barbuda"
          },
          "ARG": {
            "label": "Argentina"
          },
          "ARM": {
            "label": "Armenia"
          },
          "ABW": {
            "label": "Aruba"
          },
          "AUS": {
            "label": "Australia"
          },
          "AUT": {
            "label": "Austria"
          },
          "AZE": {
            "label": "Azerbaijan"
          },
          "BHS": {
            "label": "Bahamas"
          },
          "BHR": {
            "label": "Bahrain"
          },
          "BGD": {
            "label": "Bangladesh"
          },
          "BRB": {
            "label": "Barbados"
          },
          "BLR": {
            "label": "Belarus"
          },
          "BEL": {
            "label": "Belgium"
          },
          "BLZ": {
            "label": "Belize"
          },
          "BEN": {
            "label": "Benin"
          },
          "BMU": {
            "label": "Bermuda"
          },
          "BTN": {
            "label": "Bhutan"
          },
          "BOL": {
            "label": "Bolivia"
          },
          "BIH": {
            "label": "Bosnia and Herzegovina"
          },
          "BWA": {
            "label": "Botswana"
          },
          "BRA": {
            "label": "Brazil"
          },
          "IOT": {
            "label": "British Indian Ocean Territory"
          },
          "VGB": {
            "label": "British Virgin Islands"
          },
          "BRN": {
            "label": "Brunei"
          },
          "BGR": {
            "label": "Bulgaria"
          },
          "BFA": {
            "label": "Burkina Faso"
          },
          "BDI": {
            "label": "Burundi"
          },
          "KHM": {
            "label": "Cambodia"
          },
          "CMR": {
            "label": "Cameroon"
          },
          "CAN": {
            "label": "Canada"
          },
          "CPV": {
            "label": "Cape Verde"
          },
          "CYM": {
            "label": "Cayman Islands"
          },
          "CAF": {
            "label": "Central African Republic"
          },
          "TCD": {
            "label": "Chad"
          },
          "CHL": {
            "label": "Chile"
          },
          "CHN": {
            "label": "China"
          },
          "COL": {
            "label": "Colombia"
          },
          "COM": {
            "label": "Comoros"
          },
          "CRI": {
            "label": "Costa Rica"
          },
          "HRV": {
            "label": "Croatia"
          },
          "CUB": {
            "label": "Cuba"
          },
          "CUW": {
            "label": "Curacao"
          },
          "CYP": {
            "label": "Cyprus"
          },
          "CZE": {
            "label": "Czech Republic"
          },
          "COD": {
            "label": "Democratic Republic of the Congo"
          },
          "DNK": {
            "label": "Denmark"
          },
          "DJI": {
            "label": "Djibouti"
          },
          "DMA": {
            "label": "Dominica"
          },
          "DOM": {
            "label": "Dominican Republic"
          },
          "TLS": {
            "label": "East Timor"
          },
          "ECU": {
            "label": "Ecuador"
          },
          "EGY": {
            "label": "Egypt"
          },
          "SLV": {
            "label": "El Salvador"
          },
          "GNQ": {
            "label": "Equatorial Guinea"
          },
          "ERI": {
            "label": "Eritrea"
          },
          "EST": {
            "label": "Estonia"
          },
          "ETH": {
            "label": "Ethiopia"
          },
          "FRO": {
            "label": "Faroe Islands"
          },
          "FJI": {
            "label": "Fiji"
          },
          "FIN": {
            "label": "Finland"
          },
          "FRA": {
            "label": "France"
          },
          "PYF": {
            "label": "French Polynesia"
          },
          "GAB": {
            "label": "Gabon"
          },
          "GMB": {
            "label": "Gambia"
          },
          "GEO": {
            "label": "Georgia"
          },
          "DEU": {
            "label": "Germany"
          },
          "GHA": {
            "label": "Ghana"
          },
          "GIB": {
            "label": "Gibraltar"
          },
          "GRC": {
            "label": "Greece"
          },
          "GRL": {
            "label": "Greenland"
          },
          "GRD": {
            "label": "Grenada"
          },
          "GUM": {
            "label": "Guam"
          },
          "GTM": {
            "label": "Guatemala"
          },
          "GIN": {
            "label": "Guinea"
          },
          "GNB": {
            "label": "Guinea-Bissau"
          },
          "GUY": {
            "label": "Guyana"
          },
          "HTI": {
            "label": "Haiti"
          },
          "HND": {
            "label": "Honduras"
          },
          "HKG": {
            "label": "Hong Kong"
          },
          "HUN": {
            "label": "Hungary"
          },
          "ISL": {
            "label": "Iceland"
          },
          "IND": {
            "label": "India"
          },
          "IDN": {
            "label": "Indonesia"
          },
          "IRN": {
            "label": "Iran"
          },
          "IRQ": {
            "label": "Iraq"
          },
          "IRL": {
            "label": "Ireland"
          },
          "IMN": {
            "label": "Isle of Man"
          },
          "ISR": {
            "label": "Israel"
          },
          "ITA": {
            "label": "Italy"
          },
          "CIV": {
            "label": "Ivory Coast"
          },
          "JAM": {
            "label": "Jamaica"
          },
          "JPN": {
            "label": "Japan"
          },
          "JOR": {
            "label": "Jordan"
          },
          "KAZ": {
            "label": "Kazakhstan"
          },
          "KEN": {
            "label": "Kenya"
          },
          "KIR": {
            "label": "Kiribati"
          },
          "KWT": {
            "label": "Kuwait"
          },
          "KGZ": {
            "label": "Kyrgyzstan"
          },
          "LAO": {
            "label": "Laos"
          },
          "LVA": {
            "label": "Latvia"
          },
          "LBN": {
            "label": "Lebanon"
          },
          "LSO": {
            "label": "Lesotho"
          },
          "LBR": {
            "label": "Liberia"
          },
          "LBY": {
            "label": "Libya"
          },
          "LIE": {
            "label": "Liechtenstein"
          },
          "LTU": {
            "label": "Lithuania"
          },
          "LUX": {
            "label": "Luxembourg"
          },
          "MAC": {
            "label": "Macau"
          },
          "MKD": {
            "label": "Macedonia"
          },
          "MDG": {
            "label": "Madagascar"
          },
          "MWI": {
            "label": "Malawi"
          },
          "MYS": {
            "label": "Malaysia"
          },
          "MDV": {
            "label": "Maldives"
          },
          "MLI": {
            "label": "Mali"
          },
          "MLT": {
            "label": "Malta"
          },
          "MHL": {
            "label": "Marshall Islands"
          },
          "MRT": {
            "label": "Mauritania"
          },
          "MUS": {
            "label": "Mauritius"
          },
          "MEX": {
            "label": "Mexico"
          },
          "FSM": {
            "label": "Micronesia"
          },
          "MDA": {
            "label": "Moldova"
          },
          "MCO": {
            "label": "Monaco"
          },
          "MNG": {
            "label": "Mongolia"
          },
          "MNE": {
            "label": "Montenegro"
          },
          "MAR": {
            "label": "Morocco"
          },
          "MOZ": {
            "label": "Mozambique"
          },
          "MMR": {
            "label": "Myanmar"
          },
          "NAM": {
            "label": "Namibia"
          },
          "NRU": {
            "label": "Nauru"
          },
          "NPL": {
            "label": "Nepal"
          },
          "NLD": {
            "label": "Netherlands"
          },
          "NCL": {
            "label": "New Caledonia"
          },
          "NZL": {
            "label": "New Zealand"
          },
          "NIC": {
            "label": "Nicaragua"
          },
          "NER": {
            "label": "Niger"
          },
          "NGA": {
            "label": "Nigeria"
          },
          "PRK": {
            "label": "North Korea"
          },
          "MNP": {
            "label": "Northern Mariana Islands"
          },
          "NOR": {
            "label": "Norway"
          },
          "OMN": {
            "label": "Oman"
          },
          "PAK": {
            "label": "Pakistan"
          },
          "PLW": {
            "label": "Palau"
          },
          "PSE": {
            "label": "Palestine"
          },
          "PAN": {
            "label": "Panama"
          },
          "PNG": {
            "label": "Papua New Guinea"
          },
          "PRY": {
            "label": "Paraguay"
          },
          "PER": {
            "label": "Peru"
          },
          "PHL": {
            "label": "Philippines"
          },
          "POL": {
            "label": "Poland"
          },
          "PRT": {
            "label": "Portugal"
          },
          "PRI": {
            "label": "Puerto Rico"
          },
          "QAT": {
            "label": "Qatar"
          },
          "COG": {
            "label": "Republic of the Congo"
          },
          "ROU": {
            "label": "Romania"
          },
          "RUS": {
            "label": "Russia"
          },
          "RWA": {
            "label": "Rwanda"
          },
          "KNA": {
            "label": "Saint Kitts and Nevis"
          },
          "LCA": {
            "label": "Saint Lucia"
          },
          "MAF": {
            "label": "Saint Martin"
          },
          "VCT": {
            "label": "Saint Vincent and the Grenadines"
          },
          "WSM": {
            "label": "Samoa"
          },
          "SMR": {
            "label": "San Marino"
          },
          "STP": {
            "label": "Sao Tome and Principe"
          },
          "SAU": {
            "label": "Saudi Arabia"
          },
          "SEN": {
            "label": "Senegal"
          },
          "SRB": {
            "label": "Serbia"
          },
          "SYC": {
            "label": "Seychelles"
          },
          "SLE": {
            "label": "Sierra Leone"
          },
          "SGP": {
            "label": "Singapore"
          },
          "SXM": {
            "label": "Sint Maarten"
          },
          "SVK": {
            "label": "Slovakia"
          },
          "SVN": {
            "label": "Slovenia"
          },
          "SLB": {
            "label": "Solomon Islands"
          },
          "SOM": {
            "label": "Somalia"
          },
          "ZAF": {
            "label": "South Africa"
          },
          "KOR": {
            "label": "South Korea"
          },
          "SSD": {
            "label": "South Sudan"
          },
          "ESP": {
            "label": "Spain"
          },
          "LKA": {
            "label": "Sri Lanka"
          },
          "SDN": {
            "label": "Sudan"
          },
          "SUR": {
            "label": "Suriname"
          },
          "SJM": {
            "label": "Svalbard and Jan Mayen"
          },
          "SWZ": {
            "label": "Swaziland"
          },
          "SWE": {
            "label": "Sweden"
          },
          "CHE": {
            "label": "Switzerland"
          },
          "SYR": {
            "label": "Syria"
          },
          "TJK": {
            "label": "Tajikistan"
          },
          "TZA": {
            "label": "Tanzania"
          },
          "THA": {
            "label": "Thailand"
          },
          "TGO": {
            "label": "Togo"
          },
          "TON": {
            "label": "Tonga"
          },
          "TTO": {
            "label": "Trinidad and Tobago"
          },
          "TUN": {
            "label": "Tunisia"
          },
          "TUR": {
            "label": "Turkey"
          },
          "TKM": {
            "label": "Turkmenistan"
          },
          "TCA": {
            "label": "Turks and Caicos Islands"
          },
          "TUV": {
            "label": "Tuvalu"
          },
          "VIR": {
            "label": "U.S. Virgin Islands"
          },
          "UGA": {
            "label": "Uganda"
          },
          "UKR": {
            "label": "Ukraine"
          },
          "ARE": {
            "label": "United Arab Emirates"
          },
          "GBR": {
            "label": "United Kingdom"
          },
          "USA": {
            "label": "United States"
          },
          "URY": {
            "label": "Uruguay"
          },
          "UZB": {
            "label": "Uzbekistan"
          },
          "VUT": {
            "label": "Vanuatu"
          },
          "VEN": {
            "label": "Venezuela"
          },
          "VNM": {
            "label": "Vietnam"
          },
          "YEM": {
            "label": "Yemen"
          },
          "ZMB": {
            "label": "Zambia"
          },
          "ZWE": {
            "label": "Zimbabwe"
          }
        },
        "val": ["DEU","GBR"],
        "multiple": true
      },
      "options.countries_in_east_asia_pacific": {
        "type": "select",
        "label": "Countries",
        "show_if" : "options.countries__select_type=='region' && options.countries__select_region=='east_asia_pacific' && options.countries__all_region_countries=='false'",
        "required": true,
        "options": {
          "ASM": {
            "label": "American Samoa"
          },
          "AUS": {
            "label": "Australia"
          },
          "BRN": {
            "label": "Brunei"
          },
          "KHM": {
            "label": "Cambodia"
          },
          "CHN": {
            "label": "China"
          },
          "FJI": {
            "label": "Fiji"
          },
          "PYF": {
            "label": "French Polynesia"
          },
          "GUM": {
            "label": "Guam"
          },
          "HKG": {
            "label": "Hong Kong"
          },
          "IDN": {
            "label": "Indonesia"
          },
          "JPN": {
            "label": "Japan"
          },
          "KIR": {
            "label": "Kiribati"
          },
          "LAO": {
            "label": "Laos"
          },
          "MAC": {
            "label": "Macau"
          },
          "MYS": {
            "label": "Malaysia"
          },
          "MHL": {
            "label": "Marshall Islands"
          },
          "FSM": {
            "label": "Micronesia"
          },
          "MNG": {
            "label": "Mongolia"
          },
          "MMR": {
            "label": "Myanmar"
          },
          "NRU": {
            "label": "Nauru"
          },
          "NCL": {
            "label": "New Caledonia"
          },
          "NZL": {
            "label": "New Zealand"
          },
          "PRK": {
            "label": "North Korea"
          },
          "MNP": {
            "label": "Northern Mariana Islands"
          },
          "PLW": {
            "label": "Palau"
          },
          "PNG": {
            "label": "Papua New Guinea"
          },
          "PHL": {
            "label": "Philippines"
          },
          "WSM": {
            "label": "Samoa"
          },
          "SGP": {
            "label": "Singapore"
          },
          "SLB": {
            "label": "Solomon Islands"
          },
          "KOR": {
            "label": "South Korea"
          },
          "THA": {
            "label": "Thailand"
          },
          "TON": {
            "label": "Tonga"
          },
          "TUV": {
            "label": "Tuvalu"
          },
          "VUT": {
            "label": "Vanuatu"
          },
          "VNM": {
            "label": "Vietnam"
          }
        },
        "val": ["ASM","AUS"],
        "multiple": true,
        "breakLine": true
      },
      "options.countries_in_europe_central_asia": {
        "type": "select",
        "label": "Countries",
        "show_if" : "options.countries__select_type=='region' && options.countries__select_region=='europe_central_asia' && options.countries__all_region_countries=='false'",
        "required": true,
        "options": {
          "ALB": {
            "label": "Albania"
          },
          "AND": {
            "label": "Andorra"
          },
          "ARM": {
            "label": "Armenia"
          },
          "AUT": {
            "label": "Austria"
          },
          "AZE": {
            "label": "Azerbaijan"
          },
          "BLR": {
            "label": "Belarus"
          },
          "BEL": {
            "label": "Belgium"
          },
          "BIH": {
            "label": "Bosnia and Herzegovina"
          },
          "BGR": {
            "label": "Bulgaria"
          },
          "HRV": {
            "label": "Croatia"
          },
          "CYP": {
            "label": "Cyprus"
          },
          "CZE": {
            "label": "Czech Republic"
          },
          "DNK": {
            "label": "Denmark"
          },
          "EST": {
            "label": "Estonia"
          },
          "FRO": {
            "label": "Faroe Islands"
          },
          "FIN": {
            "label": "Finland"
          },
          "FRA": {
            "label": "France"
          },
          "GEO": {
            "label": "Georgia"
          },
          "DEU": {
            "label": "Germany"
          },
          "GIB": {
            "label": "Gibraltar"
          },
          "GRC": {
            "label": "Greece"
          },
          "GRL": {
            "label": "Greenland"
          },
          "HUN": {
            "label": "Hungary"
          },
          "ISL": {
            "label": "Iceland"
          },
          "IRL": {
            "label": "Ireland"
          },
          "IMN": {
            "label": "Isle of Man"
          },
          "ITA": {
            "label": "Italy"
          },
          "KAZ": {
            "label": "Kazakhstan"
          },
          "KGZ": {
            "label": "Kyrgyzstan"
          },
          "LVA": {
            "label": "Latvia"
          },
          "LIE": {
            "label": "Liechtenstein"
          },
          "LTU": {
            "label": "Lithuania"
          },
          "LUX": {
            "label": "Luxembourg"
          },
          "MDA": {
            "label": "Moldova"
          },
          "MCO": {
            "label": "Monaco"
          },
          "MNE": {
            "label": "Montenegro"
          },
          "NLD": {
            "label": "Netherlands"
          },
          "NOR": {
            "label": "Norway"
          },
          "POL": {
            "label": "Poland"
          },
          "PRT": {
            "label": "Portugal"
          },
          "ROU": {
            "label": "Romania"
          },
          "RUS": {
            "label": "Russia"
          },
          "SMR": {
            "label": "San Marino"
          },
          "SRB": {
            "label": "Serbia"
          },
          "SVK": {
            "label": "Slovakia"
          },
          "SVN": {
            "label": "Slovenia"
          },
          "ESP": {
            "label": "Spain"
          },
          "SWE": {
            "label": "Sweden"
          },
          "CHE": {
            "label": "Switzerland"
          },
          "TJK": {
            "label": "Tajikistan"
          },
          "TUR": {
            "label": "Turkey"
          },
          "TKM": {
            "label": "Turkmenistan"
          },
          "UKR": {
            "label": "Ukraine"
          },
          "GBR": {
            "label": "United Kingdom"
          },
          "UZB": {
            "label": "Uzbekistan"
          }
        },
        "val": ["DEU","GBR"],
        "multiple": true,
        "breakLine": true
      },
      "options.countries_in_latin_america_caribbean": {
        "type": "select",
        "label": "Countries",
        "show_if" : "options.countries__select_type=='region' && options.countries__select_region=='latin_america_caribbean' && options.countries__all_region_countries=='false'",
        "required": true,
        "options": {
          "ATG": {
            "label": "Antigua and Barbuda"
          },
          "ARG": {
            "label": "Argentina"
          },
          "ABW": {
            "label": "Aruba"
          },
          "BHS": {
            "label": "Bahamas"
          },
          "BRB": {
            "label": "Barbados"
          },
          "BLZ": {
            "label": "Belize"
          },
          "BOL": {
            "label": "Bolivia"
          },
          "BRA": {
            "label": "Brazil"
          },
          "VGB": {
            "label": "British Virgin Islands"
          },
          "CYM": {
            "label": "Cayman Islands"
          },
          "CHL": {
            "label": "Chile"
          },
          "COL": {
            "label": "Colombia"
          },
          "CRI": {
            "label": "Costa Rica"
          },
          "CUB": {
            "label": "Cuba"
          },
          "CUW": {
            "label": "Curacao"
          },
          "DMA": {
            "label": "Dominica"
          },
          "DOM": {
            "label": "Dominican Republic"
          },
          "ECU": {
            "label": "Ecuador"
          },
          "SLV": {
            "label": "El Salvador"
          },
          "GRD": {
            "label": "Grenada"
          },
          "GTM": {
            "label": "Guatemala"
          },
          "GUY": {
            "label": "Guyana"
          },
          "HTI": {
            "label": "Haiti"
          },
          "HND": {
            "label": "Honduras"
          },
          "JAM": {
            "label": "Jamaica"
          },
          "MEX": {
            "label": "Mexico"
          },
          "NIC": {
            "label": "Nicaragua"
          },
          "PAN": {
            "label": "Panama"
          },
          "PRY": {
            "label": "Paraguay"
          },
          "PER": {
            "label": "Peru"
          },
          "PRI": {
            "label": "Puerto Rico"
          },
          "MAF": {
            "label": "Saint Martin"
          },
          "VCT": {
            "label": "Saint Vincent and the Grenadines"
          },
          "SUR": {
            "label": "Suriname"
          },
          "TTO": {
            "label": "Trinidad and Tobago"
          },
          "TCA": {
            "label": "Turks and Caicos Islands"
          },
          "URY": {
            "label": "Uruguay"
          },
          "VEN": {
            "label": "Venezuela"
          }
        },
        "val": ["ATG","ARG"],
        "multiple": true,
        "breakLine": true
      },
      "options.countries_in_middle_east_north_africa": {
        "type": "select",
        "label": "Countries",
        "show_if" : "options.countries__select_type=='region' && options.countries__select_region=='middle_east_north_africa' && options.countries__all_region_countries=='false'",
        "required": true,
        "options": {
          "DZA": {
            "label": "Algeria"
          },
          "BHR": {
            "label": "Bahrain"
          },
          "DJI": {
            "label": "Djibouti"
          },
          "EGY": {
            "label": "Egypt"
          },
          "IRN": {
            "label": "Iran"
          },
          "IRQ": {
            "label": "Iraq"
          },
          "ISR": {
            "label": "Israel"
          },
          "JOR": {
            "label": "Jordan"
          },
          "KWT": {
            "label": "Kuwait"
          },
          "LBN": {
            "label": "Lebanon"
          },
          "LBY": {
            "label": "Libya"
          },
          "MLT": {
            "label": "Malta"
          },
          "MAR": {
            "label": "Morocco"
          },
          "OMN": {
            "label": "Oman"
          },
          "QAT": {
            "label": "Qatar"
          },
          "SAU": {
            "label": "Saudi Arabia"
          },
          "SYR": {
            "label": "Syria"
          },
          "TUN": {
            "label": "Tunisia"
          },
          "ARE": {
            "label": "United Arab Emirates"
          },
          "YEM": {
            "label": "Yemen"
          }
        },
        "val": ["DZA","BHR"],
        "multiple": true,
        "breakLine": true
      },
      "options.countries_in_north_america": {
        "type": "select",
        "label": "Countries",
        "show_if" : "options.countries__select_type=='region' && options.countries__select_region=='north_america' && options.countries__all_region_countries=='false'",
        "required": true,
        "options": {
          "CAN": {
            "label": "Canada"
          },
          "USA": {
            "label": "United States"
          }
        },
        "val": ["CAN","USA"],
        "multiple": true,
        "breakLine": true
      },
      "options.countries_in_south_asia": {
        "type": "select",
        "label": "Countries",
        "show_if" : "options.countries__select_type=='region' && options.countries__select_region=='south_asia' && options.countries__all_region_countries=='false'",
        "required": true,
        "options": {
          "AFG": {
            "label": "Afghanistan"
          },
          "BGD": {
            "label": "Bangladesh"
          },
          "BTN": {
            "label": "Bhutan"
          },
          "IND": {
            "label": "India"
          },
          "MDV": {
            "label": "Maldives"
          },
          "NPL": {
            "label": "Nepal"
          },
          "PAK": {
            "label": "Pakistan"
          },
          "LKA": {
            "label": "Sri Lanka"
          }
        },
        "val": ["AFG","BGD"],
        "multiple": true,
        "breakLine": true
      },
      "options.countries_in_sub_saharan_africa": {
        "type": "select",
        "label": "Countries",
        "show_if" : "options.countries__select_type=='region' && options.countries__select_region=='sub_saharan_africa' && options.countries__all_region_countries=='false'",
        "required": true,
        "options": {
          "AGO": {
            "label": "Angola"
          },
          "BEN": {
            "label": "Benin"
          },
          "BWA": {
            "label": "Botswana"
          },
          "BFA": {
            "label": "Burkina Faso"
          },
          "BDI": {
            "label": "Burundi"
          },
          "CMR": {
            "label": "Cameroon"
          },
          "CPV": {
            "label": "Cape Verde"
          },
          "CAF": {
            "label": "Central African Republic"
          },
          "TCD": {
            "label": "Chad"
          },
          "COM": {
            "label": "Comoros"
          },
          "COD": {
            "label": "Democratic Republic of the Congo"
          },
          "GNQ": {
            "label": "Equatorial Guinea"
          },
          "ERI": {
            "label": "Eritrea"
          },
          "EST": {
            "label": "Estonia"
          },
          "ETH": {
            "label": "Ethiopia"
          },
          "GAB": {
            "label": "Gabon"
          },
          "GMB": {
            "label": "Gambia"
          },
          "GHA": {
            "label": "Ghana"
          },
          "GIN": {
            "label": "Guinea"
          },
          "KEN": {
            "label": "Kenya"
          },
          "LSO": {
            "label": "Lesotho"
          },
          "LBR": {
            "label": "Liberia"
          },
          "MDG": {
            "label": "Madagascar"
          },
          "MWI": {
            "label": "Malawi"
          },
          "MLI": {
            "label": "Mali"
          },
          "MRT": {
            "label": "Mauritania"
          },
          "MUS": {
            "label": "Mauritius"
          },
          "MOZ": {
            "label": "Mozambique"
          },
          "NAM": {
            "label": "Namibia"
          },
          "NGA": {
            "label": "Nigeria"
          },
          "RWA": {
            "label": "Rwanda"
          },
          "STP": {
            "label": "Sao Tome and Principe"
          },
          "SEN": {
            "label": "Senegal"
          },
          "SYC": {
            "label": "Seychelles"
          },
          "SLE": {
            "label": "Sierra Leone"
          },
          "SOM": {
            "label": "Somalia"
          },
          "ZAF": {
            "label": "South Africa"
          },
          "SSD": {
            "label": "South Sudan"
          },
          "SDN": {
            "label": "Sudan"
          },
          "TZA": {
            "label": "Tanzania"
          },
          "TGO": {
            "label": "Togo"
          },
          "UGA": {
            "label": "Uganda"
          },
          "ZMB": {
            "label": "Zambia"
          },
          "ZWE": {
            "label": "Zimbabwe"
          }
        },
        "val": ["AGO","BEN"],
        "multiple": true,
        "breakLine": true
      },
      "options.countries_in_high_income": {
        "type": "select",
        "label": "Countries",
        "show_if" : "options.countries__select_type=='income_group' && options.countries__select_income_group=='high_income' && options.countries__all_income_group_countries=='false'",
        "required": true,
        "options": {
          "AND": {
            "label": "Andorra"
          },
          "ATG": {
            "label": "Antigua and Barbuda"
          },
          "ABW": {
            "label": "Aruba"
          },
          "AUS": {
            "label": "Australia"
          },
          "AUT": {
            "label": "Austria"
          },
          "BHS": {
            "label": "Bahamas"
          },
          "BHR": {
            "label": "Bahrain"
          },
          "BRB": {
            "label": "Barbados"
          },
          "BEL": {
            "label": "Belgium"
          },
          "BMU": {
            "label": "Bermuda"
          },
          "VGB": {
            "label": "British Virgin Islands"
          },
          "BRN": {
            "label": "Brunei"
          },
          "CAN": {
            "label": "Canada"
          },
          "CPV": {
            "label": "Cape Verde"
          },
          "CYM": {
            "label": "Cayman Islands"
          },
          "CHL": {
            "label": "Chile"
          },
          "HRV": {
            "label": "Croatia"
          },
          "CUW": {
            "label": "Curacao"
          },
          "CYP": {
            "label": "Cyprus"
          },
          "CZE": {
            "label": "Czech Republic"
          },
          "DNK": {
            "label": "Denmark"
          },
          "EST": {
            "label": "Estonia"
          },
          "FRO": {
            "label": "Faroe Islands"
          },
          "FIN": {
            "label": "Finland"
          },
          "FRA": {
            "label": "France"
          },
          "PYF": {
            "label": "French Polynesia"
          },
          "DEU": {
            "label": "Germany"
          },
          "GIB": {
            "label": "Gibraltar"
          },
          "GRC": {
            "label": "Greece"
          },
          "GRL": {
            "label": "Greenland"
          },
          "GUM": {
            "label": "Guam"
          },
          "HKG": {
            "label": "Hong Kong"
          },
          "HUN": {
            "label": "Hungary"
          },
          "ISL": {
            "label": "Iceland"
          },
          "IRL": {
            "label": "Ireland"
          },
          "IMN": {
            "label": "Isle of Man"
          },
          "ISR": {
            "label": "Israel"
          },
          "ITA": {
            "label": "Italy"
          },
          "JPN": {
            "label": "Japan"
          },
          "KWT": {
            "label": "Kuwait"
          },
          "LVA": {
            "label": "Latvia"
          },
          "LIE": {
            "label": "Liechtenstein"
          },
          "LTU": {
            "label": "Lithuania"
          },
          "LUX": {
            "label": "Luxembourg"
          },
          "MAC": {
            "label": "Macau"
          },
          "MLT": {
            "label": "Malta"
          },
          "MCO": {
            "label": "Monaco"
          },
          "NRU": {
            "label": "Nauru"
          },
          "NLD": {
            "label": "Netherlands"
          },
          "NCL": {
            "label": "New Caledonia"
          },
          "NZL": {
            "label": "New Zealand"
          },
          "MNP": {
            "label": "Northern Mariana Islands"
          },
          "NOR": {
            "label": "Norway"
          },
          "OMN": {
            "label": "Oman"
          },
          "PLW": {
            "label": "Palau"
          },
          "POL": {
            "label": "Poland"
          },
          "PRT": {
            "label": "Portugal"
          },
          "PRI": {
            "label": "Puerto Rico"
          },
          "QAT": {
            "label": "Qatar"
          },
          "SMR": {
            "label": "San Marino"
          },
          "SAU": {
            "label": "Saudi Arabia"
          },
          "SYC": {
            "label": "Seychelles"
          },
          "SGP": {
            "label": "Singapore"
          },
          "SXM": {
            "label": "Sint Maarten"
          },
          "SVK": {
            "label": "Slovakia"
          },
          "SVN": {
            "label": "Slovenia"
          },
          "ESP": {
            "label": "Spain"
          },
          "SWE": {
            "label": "Sweden"
          },
          "CHE": {
            "label": "Switzerland"
          },
          "TTO": {
            "label": "Trinidad and Tobago"
          },
          "TCA": {
            "label": "Turks and Caicos Islands"
          },
          "ARE": {
            "label": "United Arab Emirates"
          },
          "GBR": {
            "label": "United Kingdom"
          },
          "USA": {
            "label": "United States"
          },
          "URY": {
            "label": "Uruguay"
          }
        },
        "val": ["AND","ATG"],
        "multiple": true,
        "breakLine": true
      },
      "options.countries_in_upper_middle_income": {
        "type": "select",
        "label": "Countries",
        "show_if" : "options.countries__select_type=='income_group' && options.countries__select_income_group=='upper_middle_income' && options.countries__all_income_group_countries=='false'",
        "required": true,
        "options": {
          "ALB": {
            "label": "Albania"
          },
          "ASM": {
            "label": "American Samoa"
          },
          "ARG": {
            "label": "Argentina"
          },
          "ARM": {
            "label": "Armenia"
          },
          "AZE": {
            "label": "Azerbaijan"
          },
          "BLR": {
            "label": "Belarus"
          },
          "BIH": {
            "label": "Bosnia and Herzegovina"
          },
          "BWA": {
            "label": "Botswana"
          },
          "BRA": {
            "label": "Brazil"
          },
          "BGR": {
            "label": "Bulgaria"
          },
          "CHN": {
            "label": "China"
          },
          "COL": {
            "label": "Colombia"
          },
          "CRI": {
            "label": "Costa Rica"
          },
          "CUB": {
            "label": "Cuba"
          },
          "DMA": {
            "label": "Dominica"
          },
          "DOM": {
            "label": "Dominican Republic"
          },
          "ECU": {
            "label": "Ecuador"
          },
          "GNQ": {
            "label": "Equatorial Guinea"
          },
          "FJI": {
            "label": "Fiji"
          },
          "GAB": {
            "label": "Gabon"
          },
          "GEO": {
            "label": "Georgia"
          },
          "GRD": {
            "label": "Grenada"
          },
          "GTM": {
            "label": "Guatemala"
          },
          "GUY": {
            "label": "Guyana"
          },
          "IRQ": {
            "label": "Iraq"
          },
          "JAM": {
            "label": "Jamaica"
          },
          "JOR": {
            "label": "Jordan"
          },
          "KAZ": {
            "label": "Kazakhstan"
          },
          "LBN": {
            "label": "Lebanon"
          },
          "LBY": {
            "label": "Libya"
          },
          "MYS": {
            "label": "Malaysia"
          },
          "MDV": {
            "label": "Maldives"
          },
          "MHL": {
            "label": "Marshall Islands"
          },
          "MUS": {
            "label": "Mauritius"
          },
          "MEX": {
            "label": "Mexico"
          },
          "MDA": {
            "label": "Moldova"
          },
          "MNE": {
            "label": "Montenegro"
          },
          "NAM": {
            "label": "Namibia"
          },
          "PAN": {
            "label": "Panama"
          },
          "PRY": {
            "label": "Paraguay"
          },
          "PER": {
            "label": "Peru"
          },
          "ROU": {
            "label": "Romania"
          },
          "RUS": {
            "label": "Russia"
          },
          "SRB": {
            "label": "Serbia"
          },
          "ZAF": {
            "label": "South Africa"
          },
          "SUR": {
            "label": "Suriname"
          },
          "THA": {
            "label": "Thailand"
          },
          "TON": {
            "label": "Tonga"
          },
          "TUR": {
            "label": "Turkey"
          },
          "TKM": {
            "label": "Turkmenistan"
          },
          "TUV": {
            "label": "Tuvalu"
          },
          "VEN": {
            "label": "Venezuela"
          }
        },
        "val": ["ALB","ASM"],
        "multiple": true,
        "breakLine": true
      },
      "options.countries_in_lower_middle_income": {
        "type": "select",
        "label": "Countries",
        "show_if" : "options.countries__select_type=='income_group' && options.countries__select_income_group=='lower_middle_income' && options.countries__all_income_group_countries=='false'",
        "required": true,
        "options": {
          "DZA": {
            "label": "Algeria"
          },
          "AGO": {
            "label": "Angola"
          },
          "BGD": {
            "label": "Bangladesh"
          },
          "BLZ": {
            "label": "Belize"
          },
          "BEN": {
            "label": "Benin"
          },
          "BTN": {
            "label": "Bhutan"
          },
          "BOL": {
            "label": "Bolivia"
          },
          "KHM": {
            "label": "Cambodia"
          },
          "CMR": {
            "label": "Cameroon"
          },
          "CPV": {
            "label": "Cape Verde"
          },
          "COM": {
            "label": "Comoros"
          },
          "COD": {
            "label": "Democratic Republic of the Congo"
          },
          "DJI": {
            "label": "Djibouti"
          },
          "EGY": {
            "label": "Egypt"
          },
          "SLV": {
            "label": "El Salvador"
          },
          "GHA": {
            "label": "Ghana"
          },
          "HTI": {
            "label": "Haiti"
          },
          "HND": {
            "label": "Honduras"
          },
          "IND": {
            "label": "India"
          },
          "IDN": {
            "label": "Indonesia"
          },
          "IRN": {
            "label": "Iran"
          },
          "KEN": {
            "label": "Kenya"
          },
          "KIR": {
            "label": "Kiribati"
          },
          "KGZ": {
            "label": "Kyrgyzstan"
          },
          "LAO": {
            "label": "Laos"
          },
          "LSO": {
            "label": "Lesotho"
          },
          "MRT": {
            "label": "Mauritania"
          },
          "MNG": {
            "label": "Mongolia"
          },
          "MAR": {
            "label": "Morocco"
          },
          "MMR": {
            "label": "Myanmar"
          },
          "NPL": {
            "label": "Nepal"
          },
          "NIC": {
            "label": "Nicaragua"
          },
          "NGA": {
            "label": "Nigeria"
          },
          "PAK": {
            "label": "Pakistan"
          },
          "PNG": {
            "label": "Papua New Guinea"
          },
          "PHL": {
            "label": "Philippines"
          },
          "WSM": {
            "label": "Samoa"
          },
          "STP": {
            "label": "Sao Tome and Principe"
          },
          "SEN": {
            "label": "Senegal"
          },
          "SLB": {
            "label": "Solomon Islands"
          },
          "LKA": {
            "label": "Sri Lanka"
          },
          "TJK": {
            "label": "Tajikistan"
          },
          "TZA": {
            "label": "Tanzania"
          },
          "TUN": {
            "label": "Tunisia"
          },
          "UKR": {
            "label": "Ukraine"
          },
          "UZB": {
            "label": "Uzbekistan"
          },
          "VUT": {
            "label": "Vanuatu"
          },
          "VNM": {
            "label": "Vietnam"
          },
          "ZMB": {
            "label": "Zambia"
          },
          "ZWE": {
            "label": "Zimbabwe"
          }
        },
        "val": ["DZA","AGO"],
        "multiple": true,
        "breakLine": true
      },
      "options.countries_in_low_income": {
        "type": "select",
        "label": "Countries",
        "show_if" : "options.countries__select_type=='income_group' && options.countries__select_income_group=='low_income' && options.countries__all_income_group_countries=='false'",
        "required": true,
        "options": {
          "AFG": {
            "label": "Afghanistan"
          },
          "BFA": {
            "label": "Burkina Faso"
          },
          "BDI": {
            "label": "Burundi"
          },
          "CAF": {
            "label": "Central African Republic"
          },
          "TCD": {
            "label": "Chad"
          },
          "COD": {
            "label": "Democratic Republic of the Congo"
          },
          "ERI": {
            "label": "Eritrea"
          },
          "ETH": {
            "label": "Ethiopia"
          },
          "GMB": {
            "label": "Gambia"
          },
          "GIN": {
            "label": "Guinea"
          },
          "LBR": {
            "label": "Liberia"
          },
          "MDG": {
            "label": "Madagascar"
          },
          "MWI": {
            "label": "Malawi"
          },
          "MLI": {
            "label": "Mali"
          },
          "MOZ": {
            "label": "Mozambique"
          },
          "NER": {
            "label": "Niger"
          },
          "PRK": {
            "label": "North Korea"
          },
          "RWA": {
            "label": "Rwanda"
          },
          "SLE": {
            "label": "Sierra Leone"
          },
          "SOM": {
            "label": "Somalia"
          },
          "SSD": {
            "label": "South Sudan"
          },
          "SDN": {
            "label": "Sudan"
          },
          "SYR": {
            "label": "Syria"
          },
          "TGO": {
            "label": "Togo"
          },
          "UGA": {
            "label": "Uganda"
          },
          "YEM": {
            "label": "Yemen"
          }
        },
        "val": ["AFG","BFA"],
        "multiple": true,
        "breakLine": true
      }
    }
  }
}
,
"/common-snippets/SelectOutputColumnWithoutSort.json/SelectOutputColumnWithoutSort.json": {
  "output.select_output_columns": {
    "type": "checkbox",
    "label": "Select Output Columns",
    "show_if": "output.custom_options=='true'",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "style": "margin-top: 10px"
  },
  "output_columns": {
    "type": "fieldset",
    "label": "Select Output Columns",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.custom_options=='true' && output.select_output_columns=='true'",
    "repeat": true,
    "fields": {
      "field_name": {
        "type": "select",
        "label": "Select Column",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "is_rename": {
        "type": "checkbox",
        "label": "Rename",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "rename": {
        "show_if": "this.is_rename == 'true'",
        "type": "text",
        "required": true,
        "minLength": 1,
        "maxLength": 255,
        "label": "New Column Name",
        "style": "margin-left: 10px"
      },
      "format__category": {
        "type": "select",
        "label": "Display Format",
        "required": true,
        "options": {
          "standard": {
            "label": "Standard"
          },
          "number": {
            "label": "Number"
          },
          "percentage": {
            "label": "Percentage"
          },
          "text": {
            "label": "Text"
          },
          "date": {
            "label": "Date"
          },
          "currency": {
            "label": "Currency"
          }
        },
        "val": "standard"
      },
      "format__rounding": {
        "type": "select",
        "label": "Decimal Places for display",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "required": true,
        "options": {
          "no_rounding": {
            "label": "No rounding"
          },
          "0": {
            "label": "0 digits"
          },
          "1": {
            "label": "1 digits"
          },
          "2": {
            "label": "2 digits"
          },
          "3": {
            "label": "3 digits"
          },
          "4": {
            "label": "4 digits"
          },
          "5": {
            "label": "5 digits"
          },
          "6": {
            "label": "6 digits"
          },
          "7": {
            "label": "7 digits"
          },
          "8": {
            "label": "8 digits"
          },
          "9": {
            "label": "9 digits"
          }
        },
        "val": "2"
      },
      "format__use_1000_separator": {
        "type": "checkbox",
        "label": "Use 1000 Separator(.)",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "format__currency_symbol": {
        "type": "select",
        "label": "Symbol",
        "show_if": "this.format__category=='currency'",
        "required": true,
        "options": {
          "dollar": {
            "label": "$"
          },
          "euro": {
            "label": "€"
          },
          "pound": {
            "label": "£"
          }
        },
        "val": "dollar"
      },
      "format__date_format": {
        "type": "select",
        "label": "Type",
        "show_if": "this.format__category=='date'",
        "required": true,
        "options": {
          "mm/dd/yyyy": {
            "label": "3/14/2012"
          },
          "D, M dd, Y": {
            "label": "Wednesday, March 14, 2012"
          },
          "yyyy-mm-dd": {
            "label": "2012-03-14"
          },
          "m.dd.yyyy": {
            "label": "3.14.2012"
          },
          "m.dd.yy": {
            "label": "3.14.12"
          },
          "dd.m.yyyy": {
            "label": "14.3.2012"
          },
          "dd.m.yy": {
            "label": "14.3.12"
          },
          "M dd, Y": {
            "label": "March 14, 2012"
          },
          "dd-mm-yyyy": {
            "label": "14-03-2012"
          },
          "mm-dd-yyyy": {
            "label": "03-14-2012"
          },
          "dd-mm-yy": {
            "label": "14-03-12"
          },
          "mm-dd-yy": {
            "label": "03-14-12"
          }
        },
        "val": "mm/dd/yyyy",
        "breakLine": true
      },
      "delete": {
        "type": "button",
        "label": "Delete",
        "function": "DELETE_ROW"
      }
    },
    "breakLine": true,
    "style": "margin-bottom: 20px"
  }
},
"/common-snippets/LimitOutput.json/LimitOutput.json": {
  "options.data_volume_limitation": {
    "type": "checkbox",
    "label": "Data volume limitation",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  },
  "options.cut_off_run": {
    "type": "checkbox",
    "label": "Cut off Input table and Run",
    "show_if": "options.data_volume_limitation=='true'",
    "val": "false",
    "isOn": "true",
    "isOff": "false"
  },
  "options.input_table_rows_limit": {
    "type": "text",
    "label": "Input table limit(max: 800)",
    "show_if": "options.data_volume_limitation=='true' && options.cut_off_run=='true'",
    "minLength": 1,
    "maxLength": 3,
    "val": "500",
    "maxVal": 800,
    "breakLine": true
  },
  "options.limit_table_rows": {
    "type": "checkbox",
    "label": "Limit output table rows",
    "show_if": "options.data_volume_limitation=='true'",
    "val": "false",
    "isOn": "true",
    "isOff": "false"
  },
  "options.table_rows_limit": {
    "type": "text",
    "label": "Output table rows limit",
    "show_if": "options.data_volume_limitation=='true' && options.limit_table_rows=='true'",
    "minLength": 1,
    "maxLength": 9,
    "val": "100000000",
    "breakLine": true
  }
}
,
"/common-snippets/SelectOutputColumn.json/SelectOutputColumn.json": {
  "output.select_output_columns": {
    "type": "checkbox",
    "label": "Select Output Columns",
    "show_if": "output.custom_options=='true'",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "style": "margin-top: 10px"
  },
  "output_columns": {
    "type": "fieldset",
    "label": "Select Output Columns",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.custom_options=='true' && output.select_output_columns=='true'",
    "repeat": true,
    "fields": {
      "field_name": {
        "type": "select",
        "label": "Select Column",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "order": {
        "type": "select",
        "label": "Order",
        "options": {
          "-": {
            "label": "-"
          },
          "asc": {
            "label": "Asc"
          },
          "desc": {
            "label": "Desc"
          }
        },
        "val": "-"
      },
      "is_rename": {
        "type": "checkbox",
        "label": "Rename",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "rename": {
        "show_if": "this.is_rename == 'true'",
        "type": "text",
        "required": true,
        "minLength": 1,
        "maxLength": 255,
        "label": "New Column Name",
        "style": "margin-left: 10px"
      },
      "format__category": {
        "type": "select",
        "label": "Display Format",
        "required": true,
        "options": {
          "standard": {
            "label": "Standard"
          },
          "number": {
            "label": "Number"
          },
          "percentage": {
            "label": "Percentage"
          },
          "text": {
            "label": "Text"
          },
          "date": {
            "label": "Date"
          },
          "currency": {
            "label": "Currency"
          }
        },
        "val": "standard"
      },
      "format__rounding": {
        "type": "select",
        "label": "Decimal Places for display",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "required": true,
        "options": {
          "no_rounding": {
            "label": "No rounding"
          },
          "0": {
            "label": "0 digits"
          },
          "1": {
            "label": "1 digits"
          },
          "2": {
            "label": "2 digits"
          },
          "3": {
            "label": "3 digits"
          },
          "4": {
            "label": "4 digits"
          },
          "5": {
            "label": "5 digits"
          },
          "6": {
            "label": "6 digits"
          },
          "7": {
            "label": "7 digits"
          },
          "8": {
            "label": "8 digits"
          },
          "9": {
            "label": "9 digits"
          }
        },
        "val": "2"
      },
      "format__use_1000_separator": {
        "type": "checkbox",
        "label": "Use 1000 Separator(.)",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "format__currency_symbol": {
        "type": "select",
        "label": "Symbol",
        "show_if": "this.format__category=='currency'",
        "required": true,
        "options": {
          "dollar": {
            "label": "$"
          },
          "euro": {
            "label": "€"
          },
          "pound": {
            "label": "£"
          },
          "yen": {
            "label": "¥ (Yen, currency of Japan)"
          },
          "colon": {
            "label": "₡ (Colón, currency of Costa Rica)"
          },
          "naira": {
            "label": "₦ (Naira, currency of Nigeria)"
          },
          "rupee": {
            "label": "₨ (Rupee, currency of India)"
          },
          "rupie": {
            "label": "₹ (Rupee, currency of India)"
          },
          "won": {
            "label": "₩ (Won, currency in South Korea and North Korea)"
          },
          "hebrew": {
            "label": "₪ (Currency of Israel)"
          },
          "dong": {
            "label": "₫ (Currency of Vietnam)"
          },
          "kip": {
            "label": "₭ (Kip, currency of Laos)"
          },
          "mongolia": {
            "label": "₮ (Currency of Mongolia)"
          },
          "peso": {
            "label": "₱ (Peso, currency of the Philippines)"
          },
          "guarani": {
            "label": "₲ (Guaraní, currency of Paraguay)"
          },
          "hryvnia": {
            "label": "₴ (Hryvnia, currency of Ukraine)"
          },
          "tenge": {
            "label": "₸ (Tenge, currency of Kazakhstan)"
          },
          "lira": {
            "label": "₺ (Lira, currency of Turkey)"
          },
          "manat": {
            "label": "₼ (Manat, currency of Azerbaijan)"
          },
          "rubles": {
            "label": "₽ (Rubles, currency of Russia)"
          },
          "lari": {
            "label": "₾ (Lari, currency of Georgia)"
          },
          "bitcoin": {
            "label": "₿ (Bitcoin, crypto currency)"
          }
        },
        "val": "dollar"
      },
      "format__date_format": {
        "type": "select",
        "label": "Type",
        "show_if": "this.format__category=='date'",
        "required": true,
        "options": {
          "mm/dd/yyyy": {
            "label": "3/14/2012"
          },
          "D, M dd, Y": {
            "label": "Wednesday, March 14, 2012"
          },
          "yyyy-mm-dd": {
            "label": "2012-03-14"
          },
          "m.dd.yyyy": {
            "label": "3.14.2012"
          },
          "m.dd.yy": {
            "label": "3.14.12"
          },
          "dd.m.yyyy": {
            "label": "14.3.2012"
          },
          "dd.m.yy": {
            "label": "14.3.12"
          },
          "M dd, Y": {
            "label": "March 14, 2012"
          },
          "dd-mm-yyyy": {
            "label": "14-03-2012"
          },
          "mm-dd-yyyy": {
            "label": "03-14-2012"
          },
          "dd-mm-yy": {
            "label": "14-03-12"
          },
          "mm-dd-yy": {
            "label": "03-14-12"
          }
        },
        "val": "mm/dd/yyyy",
        "breakLine": true
      },
      "delete": {
        "type": "button",
        "label": "Delete",
        "function": "DELETE_ROW"
      }
    },
    "breakLine": true,
    "style": "margin-bottom: 20px"
  }
},
"/common-snippets/StandardOutput.json/StandardOutput.json": {
  "output": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "output.custom_text": {
        "type": "text",
        "label": "Output Table Name",
        "show_if": "output.custom_options=='false' || (output.custom_options=='true' && output.compose_table_name=='false')",
        "minLength": 1,
        "val": "",
        "width": "100%",
        "breakLine": true
      },
      "output.custom_options": {
        "type": "checkbox",
        "label": "Output Options",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "output.compose_table_name": {
        "type": "checkbox",
        "label": "Compose Table Name",
        "show_if": "output.custom_options=='true'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "compose_table_name_frame": {
        "type": "fieldset",
        "label": "Compose Output Table Name",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "output.custom_options=='true' && output.compose_table_name=='true'",
        "repeat": false,
        "fields": {
          "output.prefix_rule": {
            "type": "select",
            "label": "Prefix",
            "show_if": "output.compose_table_name=='true'",
            "val": "empty",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.prefix_text": {
            "type": "text",
            "label": "Prefix Text",
            "show_if": "output.compose_table_name=='true' && output.prefix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "output.core_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "show_if": "output.compose_table_name=='true' && output.prefix_rule!='empty'",
            "val": "_",
            "width": "50px"
          },
          "output.core_rule": {
            "type": "select",
            "label": "Table Name",
            "show_if": "output.compose_table_name=='true'",
            "val": "input_table_name",
            "options": {
              "input_table_name": {
                "label": "Input Table Name"
              },
              "script_name": {
                "label": "Task Name"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.core_text": {
            "type": "text",
            "label": "Main Table Name",
            "show_if": "output.compose_table_name=='true' && output.core_rule=='custom'",
            "required": true,
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "output.suffix_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "show_if": "output.compose_table_name=='true'",
            "val": "_",
            "width": "50px"
          },
          "output.suffix_rule": {
            "type": "select",
            "label": "Suffix",
            "show_if": "output.compose_table_name=='true'",
            "val": "script_name",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.suffix_text": {
            "type": "text",
            "label": "Suffix Text",
            "show_if": "output.compose_table_name=='true' && output.suffix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": "",
            "breakLine": true
          },
          "output.timezone": {
            "type": "select",
            "label": "Timezone",
            "show_if": "output.compose_table_name=='true' && (output.prefix_rule=='date_string_type1' || output.prefix_rule=='date_string_type2' || output.prefix_rule=='time_string' || output.prefix_rule=='datetime_string' || output.suffix_rule=='date_string_type1' || output.suffix_rule=='date_string_type2' || output.suffix_rule=='time_string' || output.suffix_rule=='datetime_string')",
            "val": "Europe/Berlin",
            "required": true,
            "options": {
              "America/Adak": {
                "label": "Adak, Gambier"
              },
              "Australia/Adelaide": {
                "label": "Adelaide, Broken Hill, Darwin"
              },
              "America/Anchorage": {
                "label": "Anchorage, Juneau, Sitka"
              },
              "Pacific/Apia": {
                "label": "Apia, Asau, Mulifanua, Afega, Leulumoega"
              },
              "Pacific/Enderbury": {
                "label": "Apia, Fiji, Tongatapu"
              },
              "Antarctica/McMurdo": {
                "label": "Auckland, Casey, Davis"
              },
              "Pacific/Auckland": {
                "label": "Auckland, Wellington, Christchurch"
              },
              "Asia/Bangkok": {
                "label": "Bangkok, Jakarta, Novosibirsk"
              },
              "Europe/Berlin": {
                "label": "Berlin, Paris, Amsterdam"
              },
              "Australia/Perth": {
                "label": "Brunei, Singapore, Perth"
              },
              "Atlantic/Cape_Verde": {
                "label": "Cape Verde,Praia, Mindelo, Santa Maria"
              },
              "America/Belize": {
                "label": "Costa Rica, El Salvador, Denver"
              },
              "Antarctica/Vostok": {
                "label": "Dhaka, Bishkek, Omsk"
              },
              "Europe/Astrakhan": {
                "label": "Dubai, Baku, Tbilisi"
              },
              "Australia/Eucla": {
                "label": "Eucla"
              },
              "Pacific/Honolulu": {
                "label": "Honolulu, Rarotonga, Tahiti"
              },
              "Asia/Kabul": {
                "label": "Kabul, Kandahār, Mazār-e Sharīf, Herāt, Jalālābād"
              },
              "Asia/Aqtau": {
                "label": "Karachi, Tashkent, Maldives"
              },
              "Asia/Kathmandu": {
                "label": "Kathmandu, Pokhara, Pātan, Biratnagar"
              },
              "Pacific/Kiritimati": {
                "label": "Kiritimati"
              },
              "Asia/Colombo": {
                "label": "Kolkata, Colombo, Jaffna, Negombo"
              },
              "Europe/Guernsey": {
                "label": "London, Dublin, Lisbon"
              },
              "Australia/Lord_Howe": {
                "label": "Lord Howe"
              },
              "America/Creston": {
                "label": "Los Angeles, Vancouver, Hermosillo"
              },
              "Pacific/Marquesas": {
                "label": "Marquesas, Taiohae"
              },
              "America/Cayman": {
                "label": "Mexico City, Panama, Chicago"
              },
              "Pacific/Niue": {
                "label": "Midway, Niue, Pago Pago"
              },
              "Europe/Mariehamn": {
                "label": "Moscow, Istanbul, Qatar"
              },
              "Asia/Kolkata": {
                "label": "Mumbai, Delhi, Bengaluru, Kolkata, Chennai"
              },
              "America/Miquelon": {
                "label": "Noronha, Nuuk, Miquelon"
              },
              "America/Danmarkshavn": {
                "label": "Reykjavik, Dakar, Casablanca"
              },
              "Pacific/Bougainville": {
                "label": "Sakhalin, Norfolk, Bougainville"
              },
              "America/Araguaina": {
                "label": "Sao Paulo, Buenos Aires, Montevideo"
              },
              "America/St_Johns": {
                "label": "St. Johns, Mount Pearl, Corner Brook"
              },
              "Asia/Tehran": {
                "label": "Tehran, Mashhad, Isfahan, Karaj, Tabriz"
              },
              "Asia/Tokyo": {
                "label": "Tokyo, Seoul, Jayapura"
              },
              "America/New_York": {
                "label": "Toronto, Santiago, New York"
              },
              "Australia/Sydney": {
                "label": "Vladivostok, Sydney, Brisbane"
              },
              "Asia/Yangon": {
                "label": "Yangon, Cocos, Mandalay, Nay Pyi Taw, Mawlamyine"
              },
              "Indian/Cocos": {
                "label": "Yangon, Cocos, West Island"
              }
            },
            "breakLine": true
          }
        }
      }
    }
  }
}
,
"/common-snippets/DataCommonsDescription.json/DataCommonsDescription.json": {
  "data_commons_description": {
    "type": "textarea",
    "label": "",
    "val": "Source: Data Commons; for applicable license conditions of the data, please refer to https://www.datacommons.org/ and their data suppliers.",
    "md_no_resize": false,
    "disabled": true,
    "width": "100%"
  }
},
"/common-snippets/SelectInputRows.json/SelectInputRows.json": {
  "options.cut_off_run": {
    "type": "checkbox",
    "label": "Cut off Input Table",
    "val": "false",
    "isOn": "true",
    "isOff": "false"
  },
  "options.cut_off.type": {
    "type": "select",
    "label": "Type of Cut off ",
    "show_if": "options.cut_off_run=='true'",
    "required": true,
    "options": {
      "from_first_row": {
        "label": "From first row"
      },
      "range": {
        "label": "Range"
      }
    },
    "val": "from_first_row"
  },
  "options.cut_off.start_row_num": {
    "type": "text",
    "label": "Start Row #",
    "show_if": "options.cut_off_run=='true' && options.cut_off.type=='range'",
    "required": true,
    "minLength": 1,
    "maxLength": 7,
    "val": "1"
  },
  "options.cut_off.row_count": {
    "type": "text",
    "label": "Rows count",
    "show_if": "options.cut_off_run=='true'",
    "required": true,
    "minLength": 1,
    "maxLength": 7,
    "val": "100"
  }
}
,
"/common-snippets/StandardOutputWithoutInputTable.json/StandardOutputWithoutInputTable.json": {
  "output": {
    "type": "fieldset",
    "label": "Define Output Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "output.custom_text": {
        "type": "text",
        "label": "Output Table Name",
        "show_if": "output.custom_options=='false' || (output.custom_options=='true' && output.compose_table_name=='false')",
        "minLength": 1,
        "val": "",
        "width": "100%",
        "breakLine": true
      },
      "output.custom_options": {
        "type": "checkbox",
        "label": "Output Options",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "output.compose_table_name": {
        "type": "checkbox",
        "label": "Compose Table Name",
        "show_if": "output.custom_options=='true'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "compose_table_name_frame": {
        "type": "fieldset",
        "label": "Compose Output Table Name",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "output.custom_options=='true' && output.compose_table_name=='true'",
        "repeat": false,
        "fields": {
          "output.prefix_rule": {
            "type": "select",
            "label": "Prefix",
            "show_if": "output.compose_table_name=='true'",
            "val": "empty",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.prefix_text": {
            "type": "text",
            "label": "Prefix Text",
            "show_if": "output.compose_table_name=='true' && output.prefix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "output.core_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "show_if": "output.compose_table_name=='true' && output.prefix_rule!='empty'",
            "val": "_",
            "width": "50px"
          },
          "output.core_rule": {
            "type": "select",
            "label": "Table Name",
            "show_if": "output.compose_table_name=='true'",
            "val": "script_name",
            "options": {
              "script_name": {
                "label": "Task Name"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.core_text": {
            "type": "text",
            "label": "Output Table Name",
            "show_if": "output.compose_table_name=='true' && output.core_rule=='custom'",
            "required": true,
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "output.suffix_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "show_if": "output.compose_table_name=='true'",
            "val": "_",
            "width": "50px"
          },
          "output.suffix_rule": {
            "type": "select",
            "label": "Suffix",
            "show_if": "output.compose_table_name=='true'",
            "val": "script_name",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.suffix_text": {
            "type": "text",
            "label": "Suffix Text",
            "show_if": "output.compose_table_name=='true' && output.suffix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": "",
            "breakLine": true
          },
          "output.timezone": {
            "type": "select",
            "label": "Timezone",
            "show_if": "output.compose_table_name=='true' && (output.prefix_rule=='date_string_type1' || output.prefix_rule=='date_string_type2' || output.prefix_rule=='time_string' || output.prefix_rule=='datetime_string' || output.core_rule=='date_string_type1' || output.core_rule=='date_string_type2' || output.core_rule=='time_string' || output.core_rule=='datetime_string' || output.suffix_rule=='date_string_type1' || output.suffix_rule=='date_string_type2' || output.suffix_rule=='time_string' || output.suffix_rule=='datetime_string')",
            "val": "Europe/Berlin",
            "required": true,
            "options": {
              "America/Adak": {
                "label": "Adak, Gambier"
              },
              "Australia/Adelaide": {
                "label": "Adelaide, Broken Hill, Darwin"
              },
              "America/Anchorage": {
                "label": "Anchorage, Juneau, Sitka"
              },
              "Pacific/Apia": {
                "label": "Apia, Asau, Mulifanua, Afega, Leulumoega"
              },
              "Pacific/Enderbury": {
                "label": "Apia, Fiji, Tongatapu"
              },
              "Antarctica/McMurdo": {
                "label": "Auckland, Casey, Davis"
              },
              "Pacific/Auckland": {
                "label": "Auckland, Wellington, Christchurch"
              },
              "Asia/Bangkok": {
                "label": "Bangkok, Jakarta, Novosibirsk"
              },
              "Europe/Berlin": {
                "label": "Berlin, Paris, Amsterdam"
              },
              "Australia/Perth": {
                "label": "Brunei, Singapore, Perth"
              },
              "Atlantic/Cape_Verde": {
                "label": "Cape Verde,Praia, Mindelo, Santa Maria"
              },
              "America/Belize": {
                "label": "Costa Rica, El Salvador, Denver"
              },
              "Antarctica/Vostok": {
                "label": "Dhaka, Bishkek, Omsk"
              },
              "Europe/Astrakhan": {
                "label": "Dubai, Baku, Tbilisi"
              },
              "Australia/Eucla": {
                "label": "Eucla"
              },
              "Pacific/Honolulu": {
                "label": "Honolulu, Rarotonga, Tahiti"
              },
              "Asia/Kabul": {
                "label": "Kabul, Kandahār, Mazār-e Sharīf, Herāt, Jalālābād"
              },
              "Asia/Aqtau": {
                "label": "Karachi, Tashkent, Maldives"
              },
              "Asia/Kathmandu": {
                "label": "Kathmandu, Pokhara, Pātan, Biratnagar"
              },
              "Pacific/Kiritimati": {
                "label": "Kiritimati"
              },
              "Asia/Colombo": {
                "label": "Kolkata, Colombo, Jaffna, Negombo"
              },
              "Europe/Guernsey": {
                "label": "London, Dublin, Lisbon"
              },
              "Australia/Lord_Howe": {
                "label": "Lord Howe"
              },
              "America/Creston": {
                "label": "Los Angeles, Vancouver, Hermosillo"
              },
              "Pacific/Marquesas": {
                "label": "Marquesas, Taiohae"
              },
              "America/Cayman": {
                "label": "Mexico City, Panama, Chicago"
              },
              "Pacific/Niue": {
                "label": "Midway, Niue, Pago Pago"
              },
              "Europe/Mariehamn": {
                "label": "Moscow, Istanbul, Qatar"
              },
              "Asia/Kolkata": {
                "label": "Mumbai, Delhi, Bengaluru, Kolkata, Chennai"
              },
              "America/Miquelon": {
                "label": "Noronha, Nuuk, Miquelon"
              },
              "America/Danmarkshavn": {
                "label": "Reykjavik, Dakar, Casablanca"
              },
              "Pacific/Bougainville": {
                "label": "Sakhalin, Norfolk, Bougainville"
              },
              "America/Araguaina": {
                "label": "Sao Paulo, Buenos Aires, Montevideo"
              },
              "America/St_Johns": {
                "label": "St. Johns, Mount Pearl, Corner Brook"
              },
              "Asia/Tehran": {
                "label": "Tehran, Mashhad, Isfahan, Karaj, Tabriz"
              },
              "Asia/Tokyo": {
                "label": "Tokyo, Seoul, Jayapura"
              },
              "America/New_York": {
                "label": "Toronto, Santiago, New York"
              },
              "Australia/Sydney": {
                "label": "Vladivostok, Sydney, Brisbane"
              },
              "Asia/Yangon": {
                "label": "Yangon, Cocos, Mandalay, Nay Pyi Taw, Mawlamyine"
              },
              "Indian/Cocos": {
                "label": "Yangon, Cocos, West Island"
              }
            },
            "breakLine": true
          }
        }
      }
    }
  }
},
"/common-snippets/SelectColumnRowDefaultAll.json/SelectColumnRowDefaultAll.json": {
  "placeholder": {
    "breakLine": true
  },
  "apply_to_all_columns": {
    "type": "checkbox",
    "label": "All Columns",
    "val": "true",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true	
  },
  "apply_columns": {
    "type": "select",
    "label": "Select Columns to Apply",
    "show_if": "apply_to_all_columns=='false'",
    "required": true,
    "table": "table_id",
    "multiple": true,
    "bind": "COLUMNS",
    "breakLine": true
  },
  "apply_to_all_rows": {
    "type": "checkbox",
    "label": "All Rows",
    "show_if": "$table_id.numOfLabel >= 1",
    "val": "true",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  },
  "apply_rows": {
    "type": "select",
    "label": "Select Rows to Apply",
    "show_if": "$table_id.numOfLabel >= 1 && apply_to_all_rows=='false'",
    "required": true,
    "table": "table_id",
    "multiple": true,
    "bind": "LABELS",
    "breakLine": true
  }
}
,
"/common-snippets/Timezone.json/Timezone.json": {
  "output.timezone": {
    "type": "select",
    "label": "Timezone",
    "show_if": "output.compose_table_name=='true' && (output.prefix_rule=='date_string_type1' || output.prefix_rule=='date_string_type2' || output.prefix_rule=='time_string' || output.prefix_rule=='datetime_string' || output.suffix_rule=='date_string_type1' || output.suffix_rule=='date_string_type2' || output.suffix_rule=='time_string' || output.suffix_rule=='datetime_string')",
    "val": "Europe/Berlin",
    "required": true,
    "options": {
      "America/Adak": {
        "label": "Adak, Gambier"
      },
      "Australia/Adelaide": {
        "label": "Adelaide, Broken Hill, Darwin"
      },
      "America/Anchorage": {
        "label": "Anchorage, Juneau, Sitka"
      },
      "Pacific/Apia": {
        "label": "Apia, Asau, Mulifanua, Afega, Leulumoega"
      },
      "Pacific/Enderbury": {
        "label": "Apia, Fiji, Tongatapu"
      },
      "Antarctica/McMurdo": {
        "label": "Auckland, Casey, Davis"
      },
      "Pacific/Auckland": {
        "label": "Auckland, Wellington, Christchurch"
      },
      "Asia/Bangkok": {
        "label": "Bangkok, Jakarta, Novosibirsk"
      },
      "Europe/Berlin": {
        "label": "Berlin, Paris, Amsterdam"
      },
      "Australia/Perth": {
        "label": "Brunei, Singapore, Perth"
      },
      "Atlantic/Cape_Verde": {
        "label": "Cape Verde,Praia, Mindelo, Santa Maria"
      },
      "America/Belize": {
        "label": "Costa Rica, El Salvador, Denver"
      },
      "Antarctica/Vostok": {
        "label": "Dhaka, Bishkek, Omsk"
      },
      "Europe/Astrakhan": {
        "label": "Dubai, Baku, Tbilisi"
      },
      "Australia/Eucla": {
        "label": "Eucla"
      },
      "Pacific/Honolulu": {
        "label": "Honolulu, Rarotonga, Tahiti"
      },
      "Asia/Kabul": {
        "label": "Kabul, Kandahār, Mazār-e Sharīf, Herāt, Jalālābād"
      },
      "Asia/Aqtau": {
        "label": "Karachi, Tashkent, Maldives"
      },
      "Asia/Kathmandu": {
        "label": "Kathmandu, Pokhara, Pātan, Biratnagar"
      },
      "Pacific/Kiritimati": {
        "label": "Kiritimati"
      },
      "Asia/Colombo": {
        "label": "Kolkata, Colombo, Jaffna, Negombo"
      },
      "Europe/Guernsey": {
        "label": "London, Dublin, Lisbon"
      },
      "Australia/Lord_Howe": {
        "label": "Lord Howe"
      },
      "America/Creston": {
        "label": "Los Angeles, Vancouver, Hermosillo"
      },
      "Pacific/Marquesas": {
        "label": "Marquesas, Taiohae"
      },
      "America/Cayman": {
        "label": "Mexico City, Panama, Chicago"
      },
      "Pacific/Niue": {
        "label": "Midway, Niue, Pago Pago"
      },
      "Europe/Mariehamn": {
        "label": "Moscow, Istanbul, Qatar"
      },
      "Asia/Kolkata": {
        "label": "Mumbai, Delhi, Bengaluru, Kolkata, Chennai"
      },
      "America/Miquelon": {
        "label": "Noronha, Nuuk, Miquelon"
      },
      "America/Danmarkshavn": {
        "label": "Reykjavik, Dakar, Casablanca"
      },
      "Pacific/Bougainville": {
        "label": "Sakhalin, Norfolk, Bougainville"
      },
      "America/Araguaina": {
        "label": "Sao Paulo, Buenos Aires, Montevideo"
      },
      "America/St_Johns": {
        "label": "St. Johns ,Mount Pearl, Corner Brook"
      },
      "Asia/Tehran": {
        "label": "Tehran, Mashhad, Isfahan, Karaj, Tabriz"
      },
      "Asia/Tokyo": {
        "label": "Tokyo, Seoul, Jayapura"
      },
      "America/New_York": {
        "label": "Toronto, Santiago, New York"
      },
      "Australia/Sydney": {
        "label": "Vladivostok, Sydney, Brisbane"
      },
      "Asia/Yangon": {
        "label": "Yangon, Cocos, Mandalay, Nay Pyi Taw, Mawlamyine"
      },
      "Indian/Cocos": {
        "label": "Yangon, Cocos, West Island"
      }
    }
  }
}
,
"/common-snippets/Months.json/Months.json": {
  "options.sel_month": {
    "type": "select",
    "label": "Select month",
    "required": true,
    "options": {
      "1": {
        "label": "1"
      },
      "2": {
        "label": "2"
      },
      "3": {
        "label": "3"
      },
      "4": {
        "label": "4"
      },
      "5": {
        "label": "5"
      },
      "6": {
        "label": "6"
      },
      "7": {
        "label": "7"
      },
      "8": {
        "label": "8"
      },
      "9": {
        "label": "9"
      },
      "10": {
        "label": "10"
      },
      "11": {
        "label": "11"
      },
      "12": {
        "label": "12"
      }
    },
    "val": "1",
    "breakLine": true
  }
},
"/common-snippets/OutputConfig.json/OutputConfig.json": {
  "output_config_frame": {
    "type": "fieldset",
    "label": "Output Configuration",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.custom_options=='true'",
    "repeat": false,
    "fields": {
      "output.add_tag": {
        "type": "checkbox",
        "label": "Add Tag",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-right: 15px"
      },
      "output.add_tag_type": {
        "type": "select",
        "label": "Tagging type",
        "show_if": "output.add_tag=='true'",
        "options": {
          "custom": {
            "label": "Custom"
          },
          "input_table_names": {
            "label": "Input Table Name(s)"
          },
          "output_table_names": {
            "label": "Output Table Name(s)"
          },
          "task_name": {
            "label": "Task Name"
          },
          "input_table_tags": {
            "label": "Input Table Tag(s)"
          }
        },
        "val": "custom"
      },
      "output.tag_name": {
        "type": "text",
        "label": "Tag Name",
        "show_if": "output.add_tag=='true' && output.add_tag_type=='custom'",
        "required": true,
        "minLength": 1,
        "maxLength": 255,
        "val": "",
        "breakLine": true,
        "style": "margin-left: 15px"
      }
    }
  }
}
,
"/common-snippets/TimeTrackerOutput.json/TimeTrackerOutput.json": {
  "output": {
    "type": "fieldset",
    "label": "Define Output Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "output.custom_text": {
        "type": "text",
        "label": "Output Table Name",
        "show_if": "output.custom_options=='false' || (output.custom_options=='true' && output.compose_table_name=='false')",
        "minLength": 1,
        "val": "Time Tracker",
        "width": "100%",
        "breakLine": true
      },
      "output.custom_options": {
        "type": "checkbox",
        "label": "Output Options",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "output.compose_table_name": {
        "type": "checkbox",
        "label": "Compose Table Name",
        "show_if": "output.custom_options=='true'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "compose_table_name_frame": {
        "type": "fieldset",
        "label": "Compose Output Table Name",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "output.custom_options=='true' && output.compose_table_name=='true'",
        "repeat": false,
        "fields": {
          "output.prefix_rule": {
            "type": "select",
            "label": "Prefix",
            "show_if": "output.compose_table_name=='true'",
            "val": "empty",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.prefix_text": {
            "type": "text",
            "label": "Prefix Text",
            "show_if": "output.compose_table_name=='true' && output.prefix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "output.core_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "show_if": "output.compose_table_name=='true' && output.prefix_rule!='empty'",
            "val": "_",
            "width": "50px"
          },
          "output.core_rule": {
            "type": "select",
            "label": "Table Name",
            "show_if": "output.compose_table_name=='true'",
            "val": "input_table_name",
            "options": {
              "input_table_name": {
                "label": "Input Table Name"
              },
              "script_name": {
                "label": "Task Name"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.core_text": {
            "type": "text",
            "label": "Main Table Name",
            "show_if": "output.compose_table_name=='true' && output.core_rule=='custom'",
            "required": true,
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "output.suffix_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "show_if": "output.compose_table_name=='true'",
            "val": "_",
            "width": "50px"
          },
          "output.suffix_rule": {
            "type": "select",
            "label": "Suffix",
            "show_if": "output.compose_table_name=='true'",
            "val": "script_name",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.suffix_text": {
            "type": "text",
            "label": "Suffix Text",
            "show_if": "output.compose_table_name=='true' && output.suffix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": "",
            "breakLine": true
          },
          "output.timezone": {
            "type": "select",
            "label": "Timezone",
            "show_if": "output.compose_table_name=='true' && (output.prefix_rule=='date_string_type1' || output.prefix_rule=='date_string_type2' || output.prefix_rule=='time_string' || output.prefix_rule=='datetime_string' || output.suffix_rule=='date_string_type1' || output.suffix_rule=='date_string_type2' || output.suffix_rule=='time_string' || output.suffix_rule=='datetime_string')",
            "val": "Europe/Berlin",
            "required": true,
            "options": {
              "America/Adak": {
                "label": "Adak, Gambier"
              },
              "Australia/Adelaide": {
                "label": "Adelaide, Broken Hill, Darwin"
              },
              "America/Anchorage": {
                "label": "Anchorage, Juneau, Sitka"
              },
              "Pacific/Apia": {
                "label": "Apia, Asau, Mulifanua, Afega, Leulumoega"
              },
              "Pacific/Enderbury": {
                "label": "Apia, Fiji, Tongatapu"
              },
              "Antarctica/McMurdo": {
                "label": "Auckland, Casey, Davis"
              },
              "Pacific/Auckland": {
                "label": "Auckland, Wellington, Christchurch"
              },
              "Asia/Bangkok": {
                "label": "Bangkok, Jakarta, Novosibirsk"
              },
              "Europe/Berlin": {
                "label": "Berlin, Paris, Amsterdam"
              },
              "Australia/Perth": {
                "label": "Brunei, Singapore, Perth"
              },
              "Atlantic/Cape_Verde": {
                "label": "Cape Verde,Praia, Mindelo, Santa Maria"
              },
              "America/Belize": {
                "label": "Costa Rica, El Salvador, Denver"
              },
              "Antarctica/Vostok": {
                "label": "Dhaka, Bishkek, Omsk"
              },
              "Europe/Astrakhan": {
                "label": "Dubai, Baku, Tbilisi"
              },
              "Australia/Eucla": {
                "label": "Eucla"
              },
              "Pacific/Honolulu": {
                "label": "Honolulu, Rarotonga, Tahiti"
              },
              "Asia/Kabul": {
                "label": "Kabul, Kandahār, Mazār-e Sharīf, Herāt, Jalālābād"
              },
              "Asia/Aqtau": {
                "label": "Karachi, Tashkent, Maldives"
              },
              "Asia/Kathmandu": {
                "label": "Kathmandu, Pokhara, Pātan, Biratnagar"
              },
              "Pacific/Kiritimati": {
                "label": "Kiritimati"
              },
              "Asia/Colombo": {
                "label": "Kolkata, Colombo, Jaffna, Negombo"
              },
              "Europe/Guernsey": {
                "label": "London, Dublin, Lisbon"
              },
              "Australia/Lord_Howe": {
                "label": "Lord Howe"
              },
              "America/Creston": {
                "label": "Los Angeles, Vancouver, Hermosillo"
              },
              "Pacific/Marquesas": {
                "label": "Marquesas, Taiohae"
              },
              "America/Cayman": {
                "label": "Mexico City, Panama, Chicago"
              },
              "Pacific/Niue": {
                "label": "Midway, Niue, Pago Pago"
              },
              "Europe/Mariehamn": {
                "label": "Moscow, Istanbul, Qatar"
              },
              "Asia/Kolkata": {
                "label": "Mumbai, Delhi, Bengaluru, Kolkata, Chennai"
              },
              "America/Miquelon": {
                "label": "Noronha, Nuuk, Miquelon"
              },
              "America/Danmarkshavn": {
                "label": "Reykjavik, Dakar, Casablanca"
              },
              "Pacific/Bougainville": {
                "label": "Sakhalin, Norfolk, Bougainville"
              },
              "America/Araguaina": {
                "label": "Sao Paulo, Buenos Aires, Montevideo"
              },
              "America/St_Johns": {
                "label": "St. Johns, Mount Pearl, Corner Brook"
              },
              "Asia/Tehran": {
                "label": "Tehran, Mashhad, Isfahan, Karaj, Tabriz"
              },
              "Asia/Tokyo": {
                "label": "Tokyo, Seoul, Jayapura"
              },
              "America/New_York": {
                "label": "Toronto, Santiago, New York"
              },
              "Australia/Sydney": {
                "label": "Vladivostok, Sydney, Brisbane"
              },
              "Asia/Yangon": {
                "label": "Yangon, Cocos, Mandalay, Nay Pyi Taw, Mawlamyine"
              },
              "Indian/Cocos": {
                "label": "Yangon, Cocos, West Island"
              }
            },
            "breakLine": true
          }
        }
      }
    }
  }
},
"/common-snippets/AddTagWithoutInputTable.json/AddTagWithoutInputTable.json": {
  "output_config_frame": {
    "type": "fieldset",
    "label": "Output Configuration",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.custom_options=='true'",
    "repeat": false,
    "fields": {
      "output.add_tag": {
        "type": "checkbox",
        "label": "Add Tag",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-right: 15px"
      },
      "output.add_tag_type": {
        "type": "select",
        "label": "Tagging type",
        "show_if": "output.add_tag=='true'",
        "options": {
          "custom": {
            "label": "Custom"
          },
          "output_table_names": {
            "label": "Output Table Name(s)"
          },
          "task_name": {
            "label": "Task Name"
          }
        },
        "val": "custom"
      },
      "output.tag_name": {
        "type": "text",
        "label": "Tag Name",
        "show_if": "output.add_tag=='true' && output.add_tag_type=='custom'",
        "required": true,
        "minLength": 1,
        "maxLength": 255,
        "val": "",
        "breakLine": true,
        "style": "margin-left: 15px"
      }
    }
  }
}
,
"/common-snippets/YearsWithoutBreakline.json/YearsWithoutBreakline.json": {
  "options.sel_year": {
    "type": "select",
    "label": "Select year",
    "required": true,
    "options": {
      "1960": {
        "label": "1960"
      },
      "1961": {
        "label": "1961"
      },
      "1962": {
        "label": "1962"
      },
      "1963": {
        "label": "1963"
      },
      "1964": {
        "label": "1964"
      },
      "1965": {
        "label": "1965"
      },
      "1966": {
        "label": "1966"
      },
      "1967": {
        "label": "1967"
      },
      "1968": {
        "label": "1968"
      },
      "1969": {
        "label": "1969"
      },
      "1970": {
        "label": "1970"
      },
      "1971": {
        "label": "1971"
      },
      "1972": {
        "label": "1972"
      },
      "1973": {
        "label": "1973"
      },
      "1974": {
        "label": "1974"
      },
      "1975": {
        "label": "1975"
      },
      "1976": {
        "label": "1976"
      },
      "1977": {
        "label": "1977"
      },
      "1978": {
        "label": "1978"
      },
      "1979": {
        "label": "1979"
      },
      "1980": {
        "label": "1980"
      },
      "1981": {
        "label": "1981"
      },
      "1982": {
        "label": "1982"
      },
      "1983": {
        "label": "1983"
      },
      "1984": {
        "label": "1984"
      },
      "1985": {
        "label": "1985"
      },
      "1986": {
        "label": "1986"
      },
      "1987": {
        "label": "1987"
      },
      "1988": {
        "label": "1988"
      },
      "1989": {
        "label": "1989"
      },
      "1990": {
        "label": "1990"
      },
      "1991": {
        "label": "1991"
      },
      "1992": {
        "label": "1992"
      },
      "1993": {
        "label": "1993"
      },
      "1994": {
        "label": "1994"
      },
      "1995": {
        "label": "1995"
      },
      "1996": {
        "label": "1996"
      },
      "1997": {
        "label": "1997"
      },
      "1998": {
        "label": "1998"
      },
      "1999": {
        "label": "1999"
      },
      "2000": {
        "label": "2000"
      },
      "2001": {
        "label": "2001"
      },
      "2002": {
        "label": "2002"
      },
      "2003": {
        "label": "2003"
      },
      "2004": {
        "label": "2004"
      },
      "2005": {
        "label": "2005"
      },
      "2006": {
        "label": "2006"
      },
      "2007": {
        "label": "2007"
      },
      "2008": {
        "label": "2008"
      },
      "2009": {
        "label": "2009"
      },
      "2010": {
        "label": "2010"
      },
      "2011": {
        "label": "2011"
      },
      "2012": {
        "label": "2012"
      },
      "2013": {
        "label": "2013"
      },
      "2014": {
        "label": "2014"
      },
      "2015": {
        "label": "2015"
      },
      "2016": {
        "label": "2016"
      },
      "2017": {
        "label": "2017"
      },
      "2018": {
        "label": "2018"
      },
      "2019": {
        "label": "2019"
      },
      "2020": {
        "label": "2020"
      },
      "2021": {
        "label": "2021"
      }
    },
    "val": "2021"
  }
},
"/common-snippets/SelectTableWithRows.json/SelectTableWithRows.json": {
  "input": {
    "type": "fieldset",
    "label": "Select Input Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "input_table": {
        "type": "select",
        "label": "Select Table",
        "bind": "TABLES",
        "empty": "",
        "required": true
      },
      "remove_input_table_after_processing": {
        "type": "hidden",
        "val": "false"
      },
      "is_word": {
        "type": "hidden",
        "val": "false"
      },
      "apply_to_all_rows": {
        "type": "checkbox",
        "label": "All Rows",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "header_labels": {
        "type": "select",
        "label": "Select Label(s) to Apply",
        "show_if": "apply_to_all_rows=='false'",
        "required": true,
        "width": "100%",
        "table": "input_table",
        "multiple": true,
        "bind": "LABELS",
        "breakLine": true
      }
    }
  }
}
,
"/common-snippets/SelectCustomScript.json/SelectCustomScript.json": {
  "input": {
    "type": "fieldset",
    "label": "Select Custom Task",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "custom_script": {
        "type": "select",
        "label": "Custom Script",
        "bind": "OWN_CUSTOM_SCRIPTS",
        "empty": "",
        "required": true,
        "breakLine": true
      }
    }
  }
}
,
"/common-snippets/SelectTask.json/SelectTask.json": {
  "select_task_frame": {
    "type": "fieldset",
    "label": "Select Task",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "input_task": {
        "type": "select",
        "label": "Select Task",
        "bind": "TASKS",
        "empty": "",
        "required": true,
        "breakLine": true
      }
    }
  }
}
,
"/common-snippets/StandardOutputWithOutputAsNewTable.json/StandardOutputWithOutputAsNewTable.json": {
  "output": {
    "type": "fieldset",
    "label": "Define Output Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "output.output_as_new_table": {
        "type": "checkbox",
        "label": "Output as New table",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "output.custom_text": {
        "type": "text",
        "label": "Output Table Name",
        "show_if": "(output.custom_options=='false' && output.output_as_new_table=='true') || (output.custom_options=='false' && output.compose_table_name=='true' && output.output_as_new_table=='true')",
        "minLength": 1,
        "val": "",
        "width": "100%",
        "breakLine": true
      },
      "output.custom_options": {
        "type": "checkbox",
        "label": "Output Options",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "output.compose_table_name": {
        "type": "checkbox",
        "label": "Compose Table Name",
        "show_if": "output.output_as_new_table=='true' && output.custom_options=='true'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "compose_table_name_frame": {
        "type": "fieldset",
        "label": "Compose Output Table Name",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "output.output_as_new_table=='true' && output.custom_options=='true' && output.compose_table_name=='true'",
        "repeat": false,
        "fields": {
          "output.prefix_rule": {
            "type": "select",
            "label": "Prefix",
            "show_if": "output.compose_table_name=='true'",
            "val": "empty",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.prefix_text": {
            "type": "text",
            "label": "Prefix Text",
            "show_if": "output.compose_table_name=='true' && output.prefix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "output.core_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "show_if": "output.compose_table_name=='true' && output.prefix_rule!='empty'",
            "val": "_",
            "width": "50px"
          },
          "output.core_rule": {
            "type": "select",
            "label": "Table Name",
            "show_if": "output.compose_table_name=='true'",
            "val": "input_table_name",
            "options": {
              "input_table_name": {
                "label": "Input Table Name"
              },
              "script_name": {
                "label": "Task Name"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.core_text": {
            "type": "text",
            "label": "Main Table Name",
            "show_if": "output.compose_table_name=='true' && output.core_rule=='custom'",
            "required": true,
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "output.suffix_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "show_if": "output.compose_table_name=='true'",
            "val": "_",
            "width": "50px"
          },
          "output.suffix_rule": {
            "type": "select",
            "label": "Suffix",
            "show_if": "output.compose_table_name=='true'",
            "val": "script_name",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.suffix_text": {
            "type": "text",
            "label": "Suffix Text",
            "show_if": "output.compose_table_name=='true' && output.suffix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": "",
            "breakLine": true
          },
          "output.timezone": {
            "type": "select",
            "label": "Timezone",
            "show_if": "output.compose_table_name=='true' && (output.prefix_rule=='date_string_type1' || output.prefix_rule=='date_string_type2' || output.prefix_rule=='time_string' || output.prefix_rule=='datetime_string' || output.suffix_rule=='date_string_type1' || output.suffix_rule=='date_string_type2' || output.suffix_rule=='time_string' || output.suffix_rule=='datetime_string')",
            "val": "Europe/Berlin",
            "required": true,
            "options": {
              "America/Adak": {
                "label": "Adak, Gambier"
              },
              "Australia/Adelaide": {
                "label": "Adelaide, Broken Hill, Darwin"
              },
              "America/Anchorage": {
                "label": "Anchorage, Juneau, Sitka"
              },
              "Pacific/Apia": {
                "label": "Apia, Asau, Mulifanua, Afega, Leulumoega"
              },
              "Pacific/Enderbury": {
                "label": "Apia, Fiji, Tongatapu"
              },
              "Antarctica/McMurdo": {
                "label": "Auckland, Casey, Davis"
              },
              "Pacific/Auckland": {
                "label": "Auckland, Wellington, Christchurch"
              },
              "Asia/Bangkok": {
                "label": "Bangkok, Jakarta, Novosibirsk"
              },
              "Europe/Berlin": {
                "label": "Berlin, Paris, Amsterdam"
              },
              "Australia/Perth": {
                "label": "Brunei, Singapore, Perth"
              },
              "Atlantic/Cape_Verde": {
                "label": "Cape Verde, Praia, Mindelo, Santa Maria"
              },
              "America/Belize": {
                "label": "Costa Rica, El Salvador, Denver"
              },
              "Antarctica/Vostok": {
                "label": "Dhaka, Bishkek, Omsk"
              },
              "Europe/Astrakhan": {
                "label": "Dubai, Baku, Tbilisi"
              },
              "Australia/Eucla": {
                "label": "Eucla"
              },
              "Pacific/Honolulu": {
                "label": "Honolulu, Rarotonga, Tahiti"
              },
              "Asia/Kabul": {
                "label": "Kabul, Kandahār, Mazār-e Sharīf, Herāt, Jalālābād"
              },
              "Asia/Aqtau": {
                "label": "Karachi, Tashkent, Maldives"
              },
              "Asia/Kathmandu": {
                "label": "Kathmandu,Pokhara, Pātan, Biratnagar"
              },
              "Pacific/Kiritimati": {
                "label": "Kiritimati"
              },
              "Asia/Colombo": {
                "label": "Kolkata, Colombo, Jaffna, Negombo"
              },
              "Europe/Guernsey": {
                "label": "London, Dublin, Lisbon"
              },
              "Australia/Lord_Howe": {
                "label": "Lord Howe"
              },
              "America/Creston": {
                "label": "Los Angeles, Vancouver, Hermosillo"
              },
              "Pacific/Marquesas": {
                "label": "Marquesas, Taiohae"
              },
              "America/Cayman": {
                "label": "Mexico City, Panama, Chicago"
              },
              "Pacific/Niue": {
                "label": "Midway, Niue, Pago Pago"
              },
              "Europe/Mariehamn": {
                "label": "Moscow, Istanbul, Qatar"
              },
              "Asia/Kolkata": {
                "label": "Mumbai, Delhi, Bengaluru, Kolkata, Chennai"
              },
              "America/Miquelon": {
                "label": "Noronha, Nuuk, Miquelon"
              },
              "America/Danmarkshavn": {
                "label": "Reykjavik, Dakar, Casablanca"
              },
              "Pacific/Bougainville": {
                "label": "Sakhalin, Norfolk, Bougainville"
              },
              "America/Araguaina": {
                "label": "Sao Paulo, Buenos Aires, Montevideo"
              },
              "America/St_Johns": {
                "label": "St. Johns, Mount Pearl, Corner Brook"
              },
              "Asia/Tehran": {
                "label": "Tehran, Mashhad, Isfahan, Karaj, Tabriz"
              },
              "Asia/Tokyo": {
                "label": "Tokyo, Seoul, Jayapura"
              },
              "America/New_York": {
                "label": "Toronto, Santiago, New York"
              },
              "Australia/Sydney": {
                "label": "Vladivostok, Sydney, Brisbane"
              },
              "Asia/Yangon": {
                "label": "Yangon, Cocos, Mandalay, Nay Pyi Taw, Mawlamyine"
              },
              "Indian/Cocos": {
                "label": "Yangon, Cocos, West Island"
              }
            },
            "breakLine": true
          }
        }
      }
    }
  }
},
"/common-snippets/Formatting.json/Formatting.json": {
  "format__category": {
    "type": "select",
    "label": "Display Format",
    "required": true,
    "options": {
      "standard": {
        "label": "Standard"
      },
      "number": {
        "label": "Number"
      },
      "percentage": {
        "label": "Percentage"
      },
      "text": {
        "label": "Text"
      },
      "date": {
        "label": "Date"
      },
      "currency": {
        "label": "Currency"
      }
    },
    "val": "standard"
  },
  "format__rounding": {
    "type": "select",
    "label": "Decimal Places for display",
    "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
    "required": true,
    "options": {
      "no_rounding": {
        "label": "No rounding"
      },
      "0": {
        "label": "0 digits"
      },
      "1": {
        "label": "1 digits"
      },
      "2": {
        "label": "2 digits"
      },
      "3": {
        "label": "3 digits"
      },
      "4": {
        "label": "4 digits"
      },
      "5": {
        "label": "5 digits"
      },
      "6": {
        "label": "6 digits"
      },
      "7": {
        "label": "7 digits"
      },
      "8": {
        "label": "8 digits"
      },
      "9": {
        "label": "9 digits"
      }
    },
    "val": "2"
  },
  "format__use_1000_separator": {
    "type": "checkbox",
    "label": "Use 1000 Separator(,)",
    "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
    "val": "true",
    "isOn": "true",
    "isOff": "false"
  },
  "format__currency_symbol": {
    "type": "select",
    "label": "Symbol",
    "show_if": "this.format__category=='currency'",
    "required": true,
    "options": {
      "dollar": {
        "label": "$"
      },
      "euro": {
        "label": "€"
      },
      "pound": {
        "label": "£"
      }
    },
    "val": "dollar"
  },
  "format__date_format": {
    "type": "select",
    "label": "Type",
    "show_if": "this.format__category=='date'",
    "required": true,
    "options": {
      "mm/dd/yyyy": {
        "label": "3/14/2012"
      },
      "D, M dd, Y": {
        "label": "Wednesday, March 14, 2012"
      },
      "yyyy-mm-dd": {
        "label": "2012-03-14"
      },
      "m.dd.yyyy": {
        "label": "3.14.2012"
      },
      "m.dd.yy": {
        "label": "3.14.12"
      },
      "dd.m.yyyy": {
        "label": "14.3.2012"
      },
      "dd.m.yy": {
        "label": "14.3.12"
      },
      "M dd, Y": {
        "label": "March 14, 2012"
      },
      "dd-mm-yyyy": {
        "label": "14-03-2012"
      },
      "mm-dd-yyyy": {
        "label": "03-14-2012"
      },
      "dd-mm-yy": {
        "label": "14-03-12"
      },
      "mm-dd-yy": {
        "label": "03-14-12"
      }
    },
    "val": "mm/dd/yyyy",
    "breakLine": true
  }
}
,
"/common-snippets/SelectTable.json/SelectTable.json": {
  "input": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "table_id": {
        "type": "select",
        "label": "Select Table",
        "bind": "TABLES",
        "empty": "",
        "required": true,
        "breakLine": true
      },
      "remove_input_table_after_processing": {
        "type": "hidden",
        "val": "false"
      },
      "is_word": {
        "type": "hidden",
        "val": "false"
      }
    }
  }
}
,
"/common-snippets/DownloadSettings.json/DownloadSettings.json": {
  "download_setting_frame": {
    "type": "fieldset",
    "label": "Download Settings",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "false",
    "repeat": false,
    "fields": {
      "output.options.location": {
        "type": "text",
        "label": "Specify Location",
        "val": "A1",
        "breakLine": true
      },
      "output.options.formatted_as_table": {
        "type": "checkbox",
        "label": "Formatted as Table",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "output.options.visibility": {
        "type": "select",
        "label": "Visibility",
        "val": "current_flow",
        "options": {
          "current_flow": {
            "label": "Current Flow"
          },
          "all_flow": {
            "label": "All Flows"
          }
        },
        "breakLine": true
      },
      "output.options.table_mode": {
        "type": "select",
        "label": "Paste",
        "val": "content_only",
        "options": {
          "content_only": {
            "label": "Content Only"
          },
          "fully_formatted": {
            "label": "Fully Formatted"
          }
        }
      }
    },
    "breakLine": true,
    "style": "margin-bottom: 20px"
  }
}
,
"/common-snippets/v1/AddTag.json/AddTag.json": {
  "output.add_tag": {
    "type": "checkbox",
    "label": "Add Tag",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "style": "margin-right: 15px"
  },
  "output.add_tag_type": {
    "type": "select",
    "label": "Tagging type",
    "style": "margin-left: 15px",
    "show_if": "output.add_tag=='true'",
    "options": {
      "custom": {
        "label": "Custom"
      },
      "input_table_names": {
        "label": "Input Table Name(s)"
      },
      "output_table_names": {
        "label": "Output Table Name(s)"
      },
      "task_name": {
        "label": "Task Name"
      },
      "input_table_tags": {
        "label": "Input Table Tag(s)"
      }
    },
    "val": "custom"
  },
  "output.tag_name": {
    "type": "text",
    "label": "Tag Name",
    "show_if": "output.add_tag=='true' && output.add_tag_type=='custom'",
    "required": true,
    "minLength": 1,
    "maxLength": 255,
    "val": "",
    "breakLine": true,
    "style": "margin-left: 15px"
  }
}
,
"/common-snippets/v1/OutputAsNewTable.json/OutputAsNewTable.json": {
  "output.output_as_new_table": {
    "type": "checkbox",
    "label": "Output as New Table",
    "val": "true",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  }
}
,
"/common-snippets/v1/IfTableExist.json/IfTableExist.json": {
  "output.if_table_exist.type": {
    "type": "select",
    "label": "If existing",
    "val": "drop_if_exist",
    "options": {
      "drop_if_exist": {
        "label": "Create or Drop (if already existing)"
      },
      "error_if_exist": {
        "label": "Create New (throw error if existing)"
      },
      "error_if_not_exist": {
        "label": "Drop (throw error if not-existing)"
      },
      "append_all": {
        "label": "Append All"
      },
      "append_not_existing": {
        "label": "Append not existing"
      },
      "append_changes": {
        "label": "Append changes"
      }
    }
  },
  "output.if_table_exist.append_not_existing_cols": {
    "type": "select",
    "label": "Select Column(s)",
    "show_if": "output.if_table_exist.type=='append_not_existing'",
    "table": "table_id",
    "bind": "COLUMNS",
    "multiple": true,
    "required": true,
    "breakLine": true
  },
  "output.if_table_exist.append_changes__add_timestamp": {
    "type": "checkbox",
    "label": "Add Timestamp",
    "show_if": "output.if_table_exist.type=='append_changes'",
    "val": "false",
    "isOn": "true",
    "isOff": "false"
  },
  "output.if_table_exist.append_changes__timestamp_colname": {
    "type": "text",
    "label": "Timestamp column name",
    "show_if": "output.if_table_exist.type=='append_changes' && output.if_table_exist.append_changes__add_timestamp=='true'",
    "val": "Timestamp",
    "required": true,
    "style": "margin-left: 15px",
    "breakLine": true
  },
  "output.if_table_exist.append_changes__add_row": {
    "type": "checkbox",
    "label": "Add Row",
    "show_if": "output.if_table_exist.type=='append_changes'",
    "val": "false",
    "isOn": "true",
    "isOff": "false"
  },
  "output.if_table_exist.append_changes__row_colname": {
    "type": "text",
    "label": "Row column name",
    "show_if": "output.if_table_exist.type=='append_changes' && output.if_table_exist.append_changes__add_row=='true'",
    "val": "Row",
    "required": true,
    "style": "margin-left: 15px",
    "breakLine": true
  },
  "append_not_existing_info": {
    "type": "textarea",
    "label": "",
    "show_if": "output.if_table_exist.type=='append_not_existing'",
    "val": "Appends rows only if the value of the selected column is new in the existing table. It is assumed that the selected column is found in the output and existing table",
    "disabled": true,
    "style": "width: 100%"
  }
}
,
"/common-snippets/v1/LookupOutputColumn.json/LookupOutputColumn.json": {
  "output.select_output_columns_type": {
    "type": "select",
    "label": "Select Output Columns",
    "show_if": "options.task_type=='label_duplicates' || options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table'",
    "required": true,
    "options": {
      "all": {
        "label": "All"
      },
      "standard": {
        "label": "Standard Column Selection"
      },
      "advanced": {
        "label": "Advanced Column Selection"
      }
    },
    "val": "all",
    "style": "margin-right: 15px"
  },
  "output_columns_frame": {
    "type": "fieldset",
    "label": "Select Output Columns",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "(options.task_type=='label_duplicates' || options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table') && output.select_output_columns_type=='standard'",
    "repeat": false,
    "fields": {
      "output.output_columns": {
        "type": "select",
        "label": "Output Column(s)",
        "table": "table_id",
        "bind": "COLUMNS",
        "multiple": true,
        "required": true,
        "breakLine": true
      },
      "output.all_but_selected": {
        "type": "checkbox",
        "label": "All but selected",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  },
  "output.detail_output_columns": {
    "type": "fieldset",
    "label": "Select Output Columns",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "(options.task_type=='label_duplicates' || options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table') && output.select_output_columns_type=='advanced'",
    "repeat": true,
    "fields": {
      "field_name": {
        "type": "select",
        "label": "Select Column",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "order": {
        "type": "select",
        "label": "Order",
        "options": {
          "-": {
            "label": "-"
          },
          "asc": {
            "label": "Asc"
          },
          "desc": {
            "label": "Desc"
          }
        },
        "val": "-"
      },
      "format__category": {
        "type": "select",
        "label": "Display Format",
        "required": true,
        "options": {
          "standard": {
            "label": "Standard"
          },
          "number": {
            "label": "Number"
          },
          "percentage": {
            "label": "Percentage"
          },
          "text": {
            "label": "Text"
          },
          "date": {
            "label": "Date"
          },
          "currency": {
            "label": "Currency"
          }
        },
        "val": "standard"
      },
      "format__rounding": {
        "type": "select",
        "label": "Decimal Places for display",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "required": true,
        "options": {
          "no_rounding": {
            "label": "No rounding"
          },
          "0": {
            "label": "0 digits"
          },
          "1": {
            "label": "1 digits"
          },
          "2": {
            "label": "2 digits"
          },
          "3": {
            "label": "3 digits"
          },
          "4": {
            "label": "4 digits"
          },
          "5": {
            "label": "5 digits"
          },
          "6": {
            "label": "6 digits"
          },
          "7": {
            "label": "7 digits"
          },
          "8": {
            "label": "8 digits"
          },
          "9": {
            "label": "9 digits"
          }
        },
        "val": "2"
      },
      "format__use_1000_separator": {
        "type": "checkbox",
        "label": "Use 1000 Separator(.)",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "format__currency_symbol": {
        "type": "select",
        "label": "Symbol",
        "show_if": "this.format__category=='currency'",
        "required": true,
        "options": {
          "dollar": {
            "label": "$"
          },
          "euro": {
            "label": "€"
          },
          "pound": {
            "label": "£"
          },
          "yen": {
            "label": "¥ (Yen, currency of Japan)"
          },
          "colon": {
            "label": "₡ (Colón, currency of Costa Rica)"
          },
          "naira": {
            "label": "₦ (Naira, currency of Nigeria)"
          },
          "rupee": {
            "label": "₨ (Rupee, currency of India)"
          },
          "rupie": {
            "label": "₹ (Rupee, currency of India)"
          },
          "won": {
            "label": "₩ (Won, currency in South Korea and North Korea)"
          },
          "hebrew": {
            "label": "₪ (Currency of Israel)"
          },
          "dong": {
            "label": "₫ (Currency of Vietnam)"
          },
          "kip": {
            "label": "₭ (Kip, currency of Laos)"
          },
          "mongolia": {
            "label": "₮ (Currency of Mongolia)"
          },
          "peso": {
            "label": "₱ (Peso, currency of the Philippines)"
          },
          "guarani": {
            "label": "₲ (Guaraní, currency of Paraguay)"
          },
          "hryvnia": {
            "label": "₴ (Hryvnia, currency of Ukraine)"
          },
          "tenge": {
            "label": "₸ (Tenge, currency of Kazakhstan)"
          },
          "lira": {
            "label": "₺ (Lira, currency of Turkey)"
          },
          "manat": {
            "label": "₼ (Manat, currency of Azerbaijan)"
          },
          "rubles": {
            "label": "₽ (Rubles, currency of Russia)"
          },
          "lari": {
            "label": "₾ (Lari, currency of Georgia)"
          },
          "bitcoin": {
            "label": "₿ (Bitcoin, crypto currency)"
          }
        },
        "val": "dollar"
      },
      "format__date_format": {
        "type": "select",
        "label": "Type",
        "show_if": "this.format__category=='date'",
        "required": true,
        "options": {
          "mm/dd/yyyy": {
            "label": "3/14/2012"
          },
          "D, M dd, Y": {
            "label": "Wednesday, March 14, 2012"
          },
          "yyyy-mm-dd": {
            "label": "2012-03-14"
          },
          "m.dd.yyyy": {
            "label": "3.14.2012"
          },
          "m.dd.yy": {
            "label": "3.14.12"
          },
          "dd.m.yyyy": {
            "label": "14.3.2012"
          },
          "dd.m.yy": {
            "label": "14.3.12"
          },
          "M dd, Y": {
            "label": "March 14, 2012"
          },
          "dd-mm-yyyy": {
            "label": "14-03-2012"
          },
          "mm-dd-yyyy": {
            "label": "03-14-2012"
          },
          "dd-mm-yy": {
            "label": "14-03-12"
          },
          "mm-dd-yy": {
            "label": "03-14-12"
          }
        },
        "val": "mm/dd/yyyy"
      },
      "is_rename": {
        "type": "checkbox",
        "label": "Rename",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "rename": {
        "show_if": "this.is_rename == 'true'",
        "type": "text",
        "required": true,
        "minLength": 1,
        "maxLength": 255,
        "label": "New Column Name",
        "style": "margin-left: 10px"
      },
      "delete": {
        "type": "button",
        "label": "Delete",
        "function": "DELETE_ROW"
      }
    },
    "breakLine": true
  }
},
"/common-snippets/v1/TableInfoSetting.json/TableInfoSetting.json": {
  "output.set_table_info": {
    "type": "checkbox",
    "label": "Set Display Type",
    "val": "false",
    "isOn": "true",
    "isOff": "false"
  },
  "output.table_info": {
    "type": "select",
    "label": "Output Type",
    "show_if": "output.set_table_info=='true'",
    "options": {
      "simple_table": {
        "label": "Table"
      },
      "D3": {
        "label": "D3"
      },
      "Flexmonster": {
        "label": "Flexmonster"
      },
      "PDF": {
        "label": "PDF"
      }
    },
    "val": "table",
    "required": true,
    "breakLine": true
  }
},
"/common-snippets/v1/ComposeTableNameWithoutAsNewTable.json/ComposeTableNameWithoutAsNewTable.json": {
  "output.table_name_type": {
    "type": "select",
    "label": "Table Name",
    "required": true,
    "options": {
      "task_name": {
        "label": "Task Name (Flow Name)"
      },
      "custom_name": {
        "label": "Custom Name"
      },
      "compose_name": {
        "label": "Compose Name"
      }
    },
    "val": "task_name",
    "breakLine": true
  },
  "output.custom_text": {
    "type": "text",
    "label": "Output Table Name",
    "show_if": "output.table_name_type=='custom_name'",
    "minLength": 1,
    "val": "",
    "width": "100%",
    "breakLine": true
  },
  "compose_table_name_frame": {
    "type": "fieldset",
    "label": "Compose Output Table Name",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.table_name_type=='compose_name'",
    "repeat": false,
    "fields": {
      "output.prefix_rule": {
        "type": "select",
        "label": "Prefix",
        "val": "empty",
        "options": {
          "empty": {
            "label": "-"
          },
          "script_name": {
            "label": "Task Name"
          },
          "date_string_type1": {
            "label": "Date: dd_mm_yyyy"
          },
          "date_string_type2": {
            "label": "Date: yyyy_mm_dd"
          },
          "time_string": {
            "label": "Time: h_min_sec"
          },
          "datetime_string": {
            "label": "Date_Time"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.prefix_text": {
        "type": "text",
        "label": "Prefix Text",
        "show_if": "output.prefix_rule=='custom'",
        "minLength": 1,
        "maxLength": 31,
        "val": ""
      },
      "output.core_delimiter": {
        "type": "text",
        "label": "Delimiter",
        "show_if": "output.prefix_rule!='empty'",
        "val": "_",
        "width": "50px"
      },
      "output.core_rule": {
        "type": "select",
        "label": "Table Name",
        "val": "script_name",
        "options": {
          "input_table_name": {
            "label": "Input Table Name"
          },
          "script_name": {
            "label": "Task Name"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.core_text": {
        "type": "text",
        "label": "Main Table Name",
        "show_if": "output.core_rule=='custom'",
        "required": true,
        "minLength": 1,
        "maxLength": 31,
        "val": ""
      },
      "output.suffix_delimiter": {
        "type": "text",
        "label": "Delimiter",
        "val": " ",
        "width": "50px"
      },
      "output.suffix_rule": {
        "type": "select",
        "label": "Suffix",
        "val": "flow_name",
        "options": {
          "empty": {
            "label": "-"
          },
          "flow_name": {
            "label": "(Flow Name)"
          },
          "script_name": {
            "label": "Task Name"
          },
          "date_string_type1": {
            "label": "Date: dd_mm_yyyy"
          },
          "date_string_type2": {
            "label": "Date: yyyy_mm_dd"
          },
          "time_string": {
            "label": "Time: h_min_sec"
          },
          "datetime_string": {
            "label": "Date_Time"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.suffix_text": {
        "type": "text",
        "label": "Suffix Text",
        "show_if": "output.suffix_rule=='custom'",
        "minLength": 1,
        "maxLength": 31,
        "val": "",
        "breakLine": true
      },
      "output.timezone": {
        "type": "select",
        "label": "Timezone",
        "show_if": "output.prefix_rule=='date_string_type1' || output.prefix_rule=='date_string_type2' || output.prefix_rule=='time_string' || output.prefix_rule=='datetime_string' || output.suffix_rule=='date_string_type1' || output.suffix_rule=='date_string_type2' || output.suffix_rule=='time_string' || output.suffix_rule=='datetime_string'",
        "val": "Europe/Berlin",
        "required": true,
        "options": {
          "America/Adak": {
            "label": "Adak, Gambier"
          },
          "Australia/Adelaide": {
            "label": "Adelaide, Broken Hill, Darwin"
          },
          "America/Anchorage": {
            "label": "Anchorage, Juneau, Sitka"
          },
          "Pacific/Apia": {
            "label": "Apia, Asau, Mulifanua, Afega, Leulumoega"
          },
          "Pacific/Enderbury": {
            "label": "Apia, Fiji, Tongatapu"
          },
          "Antarctica/McMurdo": {
            "label": "Auckland, Casey, Davis"
          },
          "Pacific/Auckland": {
            "label": "Auckland, Wellington, Christchurch"
          },
          "Asia/Bangkok": {
            "label": "Bangkok, Jakarta, Novosibirsk"
          },
          "Europe/Berlin": {
            "label": "Berlin, Paris, Amsterdam"
          },
          "Australia/Perth": {
            "label": "Brunei, Singapore, Perth"
          },
          "Atlantic/Cape_Verde": {
            "label": "Cape Verde,Praia, Mindelo, Santa Maria"
          },
          "America/Belize": {
            "label": "Costa Rica, El Salvador, Denver"
          },
          "Antarctica/Vostok": {
            "label": "Dhaka, Bishkek, Omsk"
          },
          "Europe/Astrakhan": {
            "label": "Dubai, Baku, Tbilisi"
          },
          "Australia/Eucla": {
            "label": "Eucla"
          },
          "Pacific/Honolulu": {
            "label": "Honolulu, Rarotonga, Tahiti"
          },
          "Asia/Kabul": {
            "label": "Kabul, Kandahār, Mazār-e Sharīf, Herāt, Jalālābād"
          },
          "Asia/Aqtau": {
            "label": "Karachi, Tashkent, Maldives"
          },
          "Asia/Kathmandu": {
            "label": "Kathmandu, Pokhara, Pātan, Biratnagar"
          },
          "Pacific/Kiritimati": {
            "label": "Kiritimati"
          },
          "Asia/Colombo": {
            "label": "Kolkata, Colombo, Jaffna, Negombo"
          },
          "Europe/Guernsey": {
            "label": "London, Dublin, Lisbon"
          },
          "Australia/Lord_Howe": {
            "label": "Lord Howe"
          },
          "America/Creston": {
            "label": "Los Angeles, Vancouver, Hermosillo"
          },
          "Pacific/Marquesas": {
            "label": "Marquesas, Taiohae"
          },
          "America/Cayman": {
            "label": "Mexico City, Panama, Chicago"
          },
          "Pacific/Niue": {
            "label": "Midway, Niue, Pago Pago"
          },
          "Europe/Mariehamn": {
            "label": "Moscow, Istanbul, Qatar"
          },
          "Asia/Kolkata": {
            "label": "Mumbai, Delhi, Bengaluru, Kolkata, Chennai"
          },
          "America/Miquelon": {
            "label": "Noronha, Nuuk, Miquelon"
          },
          "America/Danmarkshavn": {
            "label": "Reykjavik, Dakar, Casablanca"
          },
          "Pacific/Bougainville": {
            "label": "Sakhalin, Norfolk, Bougainville"
          },
          "America/Araguaina": {
            "label": "Sao Paulo, Buenos Aires, Montevideo"
          },
          "America/St_Johns": {
            "label": "St. Johns, Mount Pearl, Corner Brook"
          },
          "Asia/Tehran": {
            "label": "Tehran, Mashhad, Isfahan, Karaj, Tabriz"
          },
          "Asia/Tokyo": {
            "label": "Tokyo, Seoul, Jayapura"
          },
          "America/New_York": {
            "label": "Toronto, Santiago, New York"
          },
          "Australia/Sydney": {
            "label": "Vladivostok, Sydney, Brisbane"
          },
          "Asia/Yangon": {
            "label": "Yangon, Cocos, Mandalay, Nay Pyi Taw, Mawlamyine"
          },
          "Indian/Cocos": {
            "label": "Yangon, Cocos, West Island"
          }
        },
        "breakLine": true
      }
    },
    "breakLine": true
  }
},
"/common-snippets/v1/SelectOutputColumnConfig.json/SelectOutputColumnConfig.json": {
  "output.select_output_columns_type": {
    "type": "select",
    "label": "Select Output Columns",
    "required": true,
    "options": {
      "all": {
        "label": "All"
      },
      "standard": {
        "label": "Standard Column Selection"
      },
      "advanced": {
        "label": "Advanced Column Selection"
      }
    },
    "val": "all",
    "breakLine": true
  },
  "output_columns_frame": {
    "type": "fieldset",
    "label": "Select Output Columns",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.select_output_columns_type=='standard'",
    "repeat": false,
    "fields": {
      "output.output_columns": {
        "type": "select",
        "label": "Output Column(s)",
        "show_if": "configure_input_tables=='zippydoc_table'",
        "table": "table_id",
        "bind": "COLUMNS",
        "multiple": true,
        "required": true,
        "breakLine": true
      },
      "output.excel_sheet__output_columns": {
        "type": "select",
        "label": "Output Column(s)",
        "show_if": "configure_input_tables!='zippydoc_table'",
        "multiple": true,
        "options": {
          "A": {
            "label": "A"
          },
          "B": {
            "label": "B"
          },
          "C": {
            "label": "C"
          },
          "D": {
            "label": "D"
          },
          "E": {
            "label": "E"
          },
          "F": {
            "label": "F"
          },
          "G": {
            "label": "G"
          },
          "H": {
            "label": "H"
          },
          "I": {
            "label": "I"
          },
          "J": {
            "label": "J"
          },
          "K": {
            "label": "K"
          },
          "L": {
            "label": "L"
          },
          "M": {
            "label": "M"
          },
          "N": {
            "label": "N"
          },
          "O": {
            "label": "O"
          },
          "P": {
            "label": "P"
          },
          "Q": {
            "label": "Q"
          },
          "R": {
            "label": "R"
          },
          "S": {
            "label": "S"
          },
          "T": {
            "label": "T"
          },
          "U": {
            "label": "U"
          },
          "V": {
            "label": "V"
          },
          "W": {
            "label": "W"
          },
          "X": {
            "label": "X"
          },
          "Y": {
            "label": "Y"
          },
          "Z": {
            "label": "Z"
          },
          "AA": {
            "label": "AA"
          },
          "AB": {
            "label": "AB"
          },
          "AC": {
            "label": "AC"
          },
          "AD": {
            "label": "AD"
          },
          "AE": {
            "label": "AE"
          },
          "AF": {
            "label": "AF"
          },
          "AG": {
            "label": "AG"
          },
          "AH": {
            "label": "AH"
          },
          "AI": {
            "label": "AI"
          },
          "AJ": {
            "label": "AJ"
          },
          "AK": {
            "label": "AK"
          },
          "AL": {
            "label": "AL"
          },
          "AM": {
            "label": "AM"
          },
          "AN": {
            "label": "AN"
          },
          "AO": {
            "label": "AO"
          },
          "AP": {
            "label": "AP"
          },
          "AQ": {
            "label": "AQ"
          },
          "AR": {
            "label": "AR"
          },
          "AS": {
            "label": "AS"
          },
          "AT": {
            "label": "AT"
          },
          "AU": {
            "label": "AU"
          },
          "AV": {
            "label": "AV"
          },
          "AW": {
            "label": "AW"
          },
          "AX": {
            "label": "AX"
          },
          "AY": {
            "label": "AY"
          },
          "AZ": {
            "label": "AZ"
          }
        },
        "val": ""
      },
      "output.all_but_selected": {
        "type": "checkbox",
        "label": "All but selected",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  },
  "output.detail_output_columns": {
    "type": "fieldset",
    "label": "Select Output Columns",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.select_output_columns_type=='advanced'",
    "repeat": true,
    "fields": {
      "field_name": {
        "type": "select",
        "label": "Select Column",
        "show_if": "configure_input_tables=='zippydoc_table'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "excel_sheet__field_name": {
        "type": "select",
        "label": "Select Column",
        "show_if": "configure_input_tables!='zippydoc_table'",
        "options": {
          "A": {
            "label": "A"
          },
          "B": {
            "label": "B"
          },
          "C": {
            "label": "C"
          },
          "D": {
            "label": "D"
          },
          "E": {
            "label": "E"
          },
          "F": {
            "label": "F"
          },
          "G": {
            "label": "G"
          },
          "H": {
            "label": "H"
          },
          "I": {
            "label": "I"
          },
          "J": {
            "label": "J"
          },
          "K": {
            "label": "K"
          },
          "L": {
            "label": "L"
          },
          "M": {
            "label": "M"
          },
          "N": {
            "label": "N"
          },
          "O": {
            "label": "O"
          },
          "P": {
            "label": "P"
          },
          "Q": {
            "label": "Q"
          },
          "R": {
            "label": "R"
          },
          "S": {
            "label": "S"
          },
          "T": {
            "label": "T"
          },
          "U": {
            "label": "U"
          },
          "V": {
            "label": "V"
          },
          "W": {
            "label": "W"
          },
          "X": {
            "label": "X"
          },
          "Y": {
            "label": "Y"
          },
          "Z": {
            "label": "Z"
          },
          "AA": {
            "label": "AA"
          },
          "AB": {
            "label": "AB"
          },
          "AC": {
            "label": "AC"
          },
          "AD": {
            "label": "AD"
          },
          "AE": {
            "label": "AE"
          },
          "AF": {
            "label": "AF"
          },
          "AG": {
            "label": "AG"
          },
          "AH": {
            "label": "AH"
          },
          "AI": {
            "label": "AI"
          },
          "AJ": {
            "label": "AJ"
          },
          "AK": {
            "label": "AK"
          },
          "AL": {
            "label": "AL"
          },
          "AM": {
            "label": "AM"
          },
          "AN": {
            "label": "AN"
          },
          "AO": {
            "label": "AO"
          },
          "AP": {
            "label": "AP"
          },
          "AQ": {
            "label": "AQ"
          },
          "AR": {
            "label": "AR"
          },
          "AS": {
            "label": "AS"
          },
          "AT": {
            "label": "AT"
          },
          "AU": {
            "label": "AU"
          },
          "AV": {
            "label": "AV"
          },
          "AW": {
            "label": "AW"
          },
          "AX": {
            "label": "AX"
          },
          "AY": {
            "label": "AY"
          },
          "AZ": {
            "label": "AZ"
          }
        },
        "val": ""
      },
      "order": {
        "type": "select",
        "label": "Order",
        "options": {
          "-": {
            "label": "-"
          },
          "asc": {
            "label": "Asc"
          },
          "desc": {
            "label": "Desc"
          }
        },
        "val": "-"
      },
      "format__category": {
        "type": "select",
        "label": "Display Format",
        "required": true,
        "options": {
          "standard": {
            "label": "Standard"
          },
          "number": {
            "label": "Number"
          },
          "percentage": {
            "label": "Percentage"
          },
          "text": {
            "label": "Text"
          },
          "date": {
            "label": "Date"
          },
          "currency": {
            "label": "Currency"
          }
        },
        "val": "standard"
      },
      "format__rounding": {
        "type": "select",
        "label": "Decimal Places for display",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "required": true,
        "options": {
          "no_rounding": {
            "label": "No rounding"
          },
          "0": {
            "label": "0 digits"
          },
          "1": {
            "label": "1 digits"
          },
          "2": {
            "label": "2 digits"
          },
          "3": {
            "label": "3 digits"
          },
          "4": {
            "label": "4 digits"
          },
          "5": {
            "label": "5 digits"
          },
          "6": {
            "label": "6 digits"
          },
          "7": {
            "label": "7 digits"
          },
          "8": {
            "label": "8 digits"
          },
          "9": {
            "label": "9 digits"
          }
        },
        "val": "2"
      },
      "format__use_1000_separator": {
        "type": "checkbox",
        "label": "Use 1000 Separator(.)",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "format__currency_symbol": {
        "type": "select",
        "label": "Symbol",
        "show_if": "this.format__category=='currency'",
        "required": true,
        "options": {
          "dollar": {
            "label": "$"
          },
          "euro": {
            "label": "€"
          },
          "pound": {
            "label": "£"
          },
          "yen": {
            "label": "¥ (Yen, currency of Japan)"
          },
          "colon": {
            "label": "₡ (Colón, currency of Costa Rica)"
          },
          "naira": {
            "label": "₦ (Naira, currency of Nigeria)"
          },
          "rupee": {
            "label": "₨ (Rupee, currency of India)"
          },
          "rupie": {
            "label": "₹ (Rupee, currency of India)"
          },
          "won": {
            "label": "₩ (Won, currency in South Korea and North Korea)"
          },
          "hebrew": {
            "label": "₪ (Currency of Israel)"
          },
          "dong": {
            "label": "₫ (Currency of Vietnam)"
          },
          "kip": {
            "label": "₭ (Kip, currency of Laos)"
          },
          "mongolia": {
            "label": "₮ (Currency of Mongolia)"
          },
          "peso": {
            "label": "₱ (Peso, currency of the Philippines)"
          },
          "guarani": {
            "label": "₲ (Guaraní, currency of Paraguay)"
          },
          "hryvnia": {
            "label": "₴ (Hryvnia, currency of Ukraine)"
          },
          "tenge": {
            "label": "₸ (Tenge, currency of Kazakhstan)"
          },
          "lira": {
            "label": "₺ (Lira, currency of Turkey)"
          },
          "manat": {
            "label": "₼ (Manat, currency of Azerbaijan)"
          },
          "rubles": {
            "label": "₽ (Rubles, currency of Russia)"
          },
          "lari": {
            "label": "₾ (Lari, currency of Georgia)"
          },
          "bitcoin": {
            "label": "₿ (Bitcoin, crypto currency)"
          }
        },
        "val": "dollar"
      },
      "format__date_format": {
        "type": "select",
        "label": "Type",
        "show_if": "this.format__category=='date'",
        "required": true,
        "options": {
          "mm/dd/yyyy": {
            "label": "3/14/2012"
          },
          "D, M dd, Y": {
            "label": "Wednesday, March 14, 2012"
          },
          "yyyy-mm-dd": {
            "label": "2012-03-14"
          },
          "m.dd.yyyy": {
            "label": "3.14.2012"
          },
          "m.dd.yy": {
            "label": "3.14.12"
          },
          "dd.m.yyyy": {
            "label": "14.3.2012"
          },
          "dd.m.yy": {
            "label": "14.3.12"
          },
          "M dd, Y": {
            "label": "March 14, 2012"
          },
          "dd-mm-yyyy": {
            "label": "14-03-2012"
          },
          "mm-dd-yyyy": {
            "label": "03-14-2012"
          },
          "dd-mm-yy": {
            "label": "14-03-12"
          },
          "mm-dd-yy": {
            "label": "03-14-12"
          }
        },
        "val": "mm/dd/yyyy"
      },
      "is_rename": {
        "type": "checkbox",
        "label": "Rename",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "rename": {
        "show_if": "this.is_rename == 'true'",
        "type": "text",
        "required": true,
        "minLength": 1,
        "maxLength": 255,
        "label": "New Column Name",
        "style": "margin-left: 10px"
      },
      "delete": {
        "type": "button",
        "label": "Delete",
        "function": "DELETE_ROW"
      }
    },
    "breakLine": true
  }
},
"/common-snippets/v1/OutputLocation.json/OutputLocation.json": {
  "output.location": {
    "type": "select",
    "label": "Output Location",
    "options": {
      "output_as_new_table": {
        "label": "Output as New Table"
      },
      "overwrite_input_table": {
        "label": "Overwrite Input Table"
      },
      "output_as_excel_sheet": {
        "label": "Output as Excel Sheet"
      },
      "output_in_excel_range": {
        "label": "Output in Excel Range"
      },
      "output_in_excel_named_range": {
        "label": "Output in Excel Named Range"
      },
      "output_at_marked_cell_position": {
        "label": "Output at marked cell position"
      }
    },
    "val": "output_as_new_table"
  },
  "output_location_frame": {
    "type": "fieldset",
    "label": "Excel Config",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.location=='output_as_excel_sheet' || output.location=='output_in_excel_range' || output.location=='output_in_excel_named_range' || output.location=='output_at_marked_cell_position'",
    "repeat": false,
    "fields": {
      "output.location__output_sheet": {
        "type": "select",
        "label": "Output Sheet",
        "show_if": "output.location=='output_as_excel_sheet' || output.location=='output_in_excel_range' || output.location=='output_in_excel_named_range'",
        "options": {
          "active_sheet": {
            "label": "Active Sheet"
          },
          "select_sheet": {
            "label": "Select Sheet"
          },
          "new_sheet": {
            "label": "New Sheet"
          }
        },
        "val": "active_sheet"
      },
      "output.location__sheet_name": {
        "type": "text",
        "label": "Sheet Name",
        "show_if": "(output.location=='output_as_excel_sheet' || output.location=='output_in_excel_range' || output.location=='output_in_excel_named_range') && output.location__output_sheet=='select_sheet'",
        "val": "",
        "style": "margin-left: 15px",
        "breakLine": true
      },
      "output.location__columns_from_label": {
        "type": "text",
        "label": "",
        "show_if": "output.location=='output_in_excel_range'",
        "val": "Columns from",
        "disabled": true
      },
      "output.location__from_column": {
        "type": "select",
        "label": "From Column",
        "show_if": "output.location=='output_in_excel_range'",
        "options": {
          "A": {
            "label": "A"
          },
          "B": {
            "label": "B"
          },
          "C": {
            "label": "C"
          },
          "D": {
            "label": "D"
          },
          "E": {
            "label": "E"
          },
          "F": {
            "label": "F"
          },
          "G": {
            "label": "G"
          },
          "H": {
            "label": "H"
          },
          "I": {
            "label": "I"
          },
          "J": {
            "label": "J"
          },
          "K": {
            "label": "K"
          },
          "L": {
            "label": "L"
          },
          "M": {
            "label": "M"
          },
          "N": {
            "label": "N"
          },
          "O": {
            "label": "O"
          },
          "P": {
            "label": "P"
          },
          "Q": {
            "label": "Q"
          },
          "R": {
            "label": "R"
          },
          "S": {
            "label": "S"
          },
          "T": {
            "label": "T"
          },
          "U": {
            "label": "U"
          },
          "V": {
            "label": "V"
          },
          "W": {
            "label": "W"
          },
          "X": {
            "label": "X"
          },
          "Y": {
            "label": "Y"
          },
          "Z": {
            "label": "Z"
          },
          "AA": {
            "label": "AA"
          },
          "AB": {
            "label": "AB"
          },
          "AC": {
            "label": "AC"
          },
          "AD": {
            "label": "AD"
          },
          "AE": {
            "label": "AE"
          },
          "AF": {
            "label": "AF"
          },
          "AG": {
            "label": "AG"
          },
          "AH": {
            "label": "AH"
          },
          "AI": {
            "label": "AI"
          },
          "AJ": {
            "label": "AJ"
          },
          "AK": {
            "label": "AK"
          },
          "AL": {
            "label": "AL"
          },
          "AM": {
            "label": "AM"
          },
          "AN": {
            "label": "AN"
          },
          "AO": {
            "label": "AO"
          },
          "AP": {
            "label": "AP"
          },
          "AQ": {
            "label": "AQ"
          },
          "AR": {
            "label": "AR"
          },
          "AS": {
            "label": "AS"
          },
          "AT": {
            "label": "AT"
          },
          "AU": {
            "label": "AU"
          },
          "AV": {
            "label": "AV"
          },
          "AW": {
            "label": "AW"
          },
          "AX": {
            "label": "AX"
          },
          "AY": {
            "label": "AY"
          },
          "AZ": {
            "label": "AZ"
          }
        },
        "val": "A"
      },
      "output.location__columns_to_label": {
        "type": "text",
        "label": "",
        "show_if": "output.location=='output_in_excel_range'",
        "val": "to",
        "disabled": true
      },
      "output.location__to_column": {
        "type": "select",
        "label": "To Column",
        "show_if": "output.location=='output_in_excel_range'",
        "options": {
          "A": {
            "label": "A"
          },
          "B": {
            "label": "B"
          },
          "C": {
            "label": "C"
          },
          "D": {
            "label": "D"
          },
          "E": {
            "label": "E"
          },
          "F": {
            "label": "F"
          },
          "G": {
            "label": "G"
          },
          "H": {
            "label": "H"
          },
          "I": {
            "label": "I"
          },
          "J": {
            "label": "J"
          },
          "K": {
            "label": "K"
          },
          "L": {
            "label": "L"
          },
          "M": {
            "label": "M"
          },
          "N": {
            "label": "N"
          },
          "O": {
            "label": "O"
          },
          "P": {
            "label": "P"
          },
          "Q": {
            "label": "Q"
          },
          "R": {
            "label": "R"
          },
          "S": {
            "label": "S"
          },
          "T": {
            "label": "T"
          },
          "U": {
            "label": "U"
          },
          "V": {
            "label": "V"
          },
          "W": {
            "label": "W"
          },
          "X": {
            "label": "X"
          },
          "Y": {
            "label": "Y"
          },
          "Z": {
            "label": "Z"
          },
          "AA": {
            "label": "AA"
          },
          "AB": {
            "label": "AB"
          },
          "AC": {
            "label": "AC"
          },
          "AD": {
            "label": "AD"
          },
          "AE": {
            "label": "AE"
          },
          "AF": {
            "label": "AF"
          },
          "AG": {
            "label": "AG"
          },
          "AH": {
            "label": "AH"
          },
          "AI": {
            "label": "AI"
          },
          "AJ": {
            "label": "AJ"
          },
          "AK": {
            "label": "AK"
          },
          "AL": {
            "label": "AL"
          },
          "AM": {
            "label": "AM"
          },
          "AN": {
            "label": "AN"
          },
          "AO": {
            "label": "AO"
          },
          "AP": {
            "label": "AP"
          },
          "AQ": {
            "label": "AQ"
          },
          "AR": {
            "label": "AR"
          },
          "AS": {
            "label": "AS"
          },
          "AT": {
            "label": "AT"
          },
          "AU": {
            "label": "AU"
          },
          "AV": {
            "label": "AV"
          },
          "AW": {
            "label": "AW"
          },
          "AX": {
            "label": "AX"
          },
          "AY": {
            "label": "AY"
          },
          "AZ": {
            "label": "AZ"
          }
        },
        "val": "B",
        "breakLine": true
      },
      "output.location__rows_from_label": {
        "type": "text",
        "label": "",
        "show_if": "output.location=='output_in_excel_range'",
        "val": "Rows from",
        "disabled": true
      },
      "output.location__from_row": {
        "type": "number",
        "label": "From Row(1-1000)",
        "show_if": "output.location=='output_in_excel_range'",
        "required": true,
        "val": 1
      },
      "output.location__rows_to_label": {
        "type": "text",
        "label": "",
        "show_if": "output.location=='output_in_excel_range'",
        "val": "to",
        "disabled": true
      },
      "output.location__to_row": {
        "type": "number",
        "label": "To Row(1-1000)",
        "show_if": "output.location=='output_in_excel_range'",
        "required": true,
        "val": 2,
        "breakLine": true
      },
      "output.location__named_range": {
        "type": "text",
        "label": "Named Range",
        "show_if": "output.location=='output_in_excel_named_range'",
        "val": "",
        "breakLine": true
      },
      "output.location__include_table_header": {
        "type": "checkbox",
        "label": "Include Table Header",
        "show_if": "output.location=='output_as_excel_sheet' || output.location=='output_in_excel_range' || output.location=='output_in_excel_named_range' || output.location=='output_at_marked_cell_position'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "output.location__as_excel_list_table": {
        "type": "checkbox",
        "label": "As Excel List Table",
        "show_if": "output.location=='output_as_excel_sheet' || output.location=='output_in_excel_range' || output.location=='output_in_excel_named_range' || output.location=='output_at_marked_cell_position'",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "output.location__sustain_cell_format_of_excel": {
        "type": "checkbox",
        "label": "Sustain Cell Format of Excel",
        "show_if": "output.location=='output_as_excel_sheet' || output.location=='output_in_excel_range' || output.location=='output_in_excel_named_range' || output.location=='output_at_marked_cell_position'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "output.location__crop_if_range_is_not_matching": {
        "type": "checkbox",
        "label": "Crop if range is not matching",
        "show_if": "output.location=='output_in_excel_range'",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
}
,
"/common-snippets/v1/SelectTableHiddenIfAutoConfigure.json/SelectTableHiddenIfAutoConfigure.json": {
  "input": {
    "type": "fieldset",
    "label": "Select Input Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.input_table_auto_config=='false'",
    "repeat": false,
    "fields": {
      "table_id": {
        "type": "select",
        "label": "Select Table",
        "bind": "TABLES",
        "empty": "",
        "required": true,
        "breakLine": true
      },
      "remove_input_table_after_processing": {
        "type": "hidden",
        "val": "false"
      },
      "is_word": {
        "type": "hidden",
        "val": "false"
      }
    }
  }
}
,
"/common-snippets/v1/ComposeTableName.json/ComposeTableName.json": {
  "output.table_name_type": {
    "type": "select",
    "label": "Table Name",
    "show_if": "output.output_as_new_table=='true'",
    "required": true,
    "options": {
      "task_name": {
        "label": "Task Name (Flow Name)"
      },
      "custom_name": {
        "label": "Custom Name"
      },
      "compose_name": {
        "label": "Compose Name"
      }
    },
    "val": "task_name",
    "breakLine": true,
	"style": "margin-top: 10px"
  },
  "output.custom_text": {
    "type": "text",
    "label": "Output Table Name",
    "show_if": "output.output_as_new_table=='true' && output.table_name_type=='custom_name'",
    "minLength": 1,
    "val": "",
    "width": "100%",
    "breakLine": true
  },
  "compose_table_name_frame": {
    "type": "fieldset",
    "label": "Compose Output Table Name",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.output_as_new_table=='true' && output.table_name_type=='compose_name'",
    "repeat": false,
    "fields": {
      "output.prefix_rule": {
        "type": "select",
        "label": "Prefix",
        "val": "empty",
        "options": {
          "empty": {
            "label": "-"
          },
          "script_name": {
            "label": "Task Name"
          },
          "date_string_type1": {
            "label": "Date: dd_mm_yyyy"
          },
          "date_string_type2": {
            "label": "Date: yyyy_mm_dd"
          },
          "time_string": {
            "label": "Time: h_min_sec"
          },
          "datetime_string": {
            "label": "Date_Time"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.prefix_text": {
        "type": "text",
        "label": "Prefix Text",
        "show_if": "output.prefix_rule=='custom'",
        "minLength": 1,
        "maxLength": 31,
        "val": ""
      },
      "output.core_delimiter": {
        "type": "text",
        "label": "Delimiter",
        "show_if": "output.prefix_rule!='empty'",
        "val": "_",
        "width": "50px"
      },
      "output.core_rule": {
        "type": "select",
        "label": "Table Name",
        "val": "script_name",
        "options": {
          "input_table_name": {
            "label": "Input Table Name"
          },
          "script_name": {
            "label": "Task Name"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.core_text": {
        "type": "text",
        "label": "Main Table Name",
        "show_if": "output.core_rule=='custom'",
        "required": true,
        "minLength": 1,
        "maxLength": 31,
        "val": ""
      },
      "output.suffix_delimiter": {
        "type": "text",
        "label": "Delimiter",
        "val": " ",
        "width": "50px"
      },
      "output.suffix_rule": {
        "type": "select",
        "label": "Suffix",
        "val": "flow_name",
        "options": {
          "empty": {
            "label": "-"
          },
          "flow_name": {
            "label": "(Flow Name)"
          },
          "script_name": {
            "label": "Task Name"
          },
          "date_string_type1": {
            "label": "Date: dd_mm_yyyy"
          },
          "date_string_type2": {
            "label": "Date: yyyy_mm_dd"
          },
          "time_string": {
            "label": "Time: h_min_sec"
          },
          "datetime_string": {
            "label": "Date_Time"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.suffix_text": {
        "type": "text",
        "label": "Suffix Text",
        "show_if": "output.suffix_rule=='custom'",
        "minLength": 1,
        "maxLength": 31,
        "val": "",
        "breakLine": true
      },
      "output.timezone": {
        "type": "select",
        "label": "Timezone",
        "show_if": "output.prefix_rule=='date_string_type1' || output.prefix_rule=='date_string_type2' || output.prefix_rule=='time_string' || output.prefix_rule=='datetime_string' || output.suffix_rule=='date_string_type1' || output.suffix_rule=='date_string_type2' || output.suffix_rule=='time_string' || output.suffix_rule=='datetime_string'",
        "val": "Europe/Berlin",
        "required": true,
        "options": {
          "America/Adak": {
            "label": "Adak, Gambier"
          },
          "Australia/Adelaide": {
            "label": "Adelaide, Broken Hill, Darwin"
          },
          "America/Anchorage": {
            "label": "Anchorage, Juneau, Sitka"
          },
          "Pacific/Apia": {
            "label": "Apia, Asau, Mulifanua, Afega, Leulumoega"
          },
          "Pacific/Enderbury": {
            "label": "Apia, Fiji, Tongatapu"
          },
          "Antarctica/McMurdo": {
            "label": "Auckland, Casey, Davis"
          },
          "Pacific/Auckland": {
            "label": "Auckland, Wellington, Christchurch"
          },
          "Asia/Bangkok": {
            "label": "Bangkok, Jakarta, Novosibirsk"
          },
          "Europe/Berlin": {
            "label": "Berlin, Paris, Amsterdam"
          },
          "Australia/Perth": {
            "label": "Brunei, Singapore, Perth"
          },
          "Atlantic/Cape_Verde": {
            "label": "Cape Verde,Praia, Mindelo, Santa Maria"
          },
          "America/Belize": {
            "label": "Costa Rica, El Salvador, Denver"
          },
          "Antarctica/Vostok": {
            "label": "Dhaka, Bishkek, Omsk"
          },
          "Europe/Astrakhan": {
            "label": "Dubai, Baku, Tbilisi"
          },
          "Australia/Eucla": {
            "label": "Eucla"
          },
          "Pacific/Honolulu": {
            "label": "Honolulu, Rarotonga, Tahiti"
          },
          "Asia/Kabul": {
            "label": "Kabul, Kandahār, Mazār-e Sharīf, Herāt, Jalālābād"
          },
          "Asia/Aqtau": {
            "label": "Karachi, Tashkent, Maldives"
          },
          "Asia/Kathmandu": {
            "label": "Kathmandu, Pokhara, Pātan, Biratnagar"
          },
          "Pacific/Kiritimati": {
            "label": "Kiritimati"
          },
          "Asia/Colombo": {
            "label": "Kolkata, Colombo, Jaffna, Negombo"
          },
          "Europe/Guernsey": {
            "label": "London, Dublin, Lisbon"
          },
          "Australia/Lord_Howe": {
            "label": "Lord Howe"
          },
          "America/Creston": {
            "label": "Los Angeles, Vancouver, Hermosillo"
          },
          "Pacific/Marquesas": {
            "label": "Marquesas, Taiohae"
          },
          "America/Cayman": {
            "label": "Mexico City, Panama, Chicago"
          },
          "Pacific/Niue": {
            "label": "Midway, Niue, Pago Pago"
          },
          "Europe/Mariehamn": {
            "label": "Moscow, Istanbul, Qatar"
          },
          "Asia/Kolkata": {
            "label": "Mumbai, Delhi, Bengaluru, Kolkata, Chennai"
          },
          "America/Miquelon": {
            "label": "Noronha, Nuuk, Miquelon"
          },
          "America/Danmarkshavn": {
            "label": "Reykjavik, Dakar, Casablanca"
          },
          "Pacific/Bougainville": {
            "label": "Sakhalin, Norfolk, Bougainville"
          },
          "America/Araguaina": {
            "label": "Sao Paulo, Buenos Aires, Montevideo"
          },
          "America/St_Johns": {
            "label": "St. Johns, Mount Pearl, Corner Brook"
          },
          "Asia/Tehran": {
            "label": "Tehran, Mashhad, Isfahan, Karaj, Tabriz"
          },
          "Asia/Tokyo": {
            "label": "Tokyo, Seoul, Jayapura"
          },
          "America/New_York": {
            "label": "Toronto, Santiago, New York"
          },
          "Australia/Sydney": {
            "label": "Vladivostok, Sydney, Brisbane"
          },
          "Asia/Yangon": {
            "label": "Yangon, Cocos, Mandalay, Nay Pyi Taw, Mawlamyine"
          },
          "Indian/Cocos": {
            "label": "Yangon, Cocos, West Island"
          }
        },
        "breakLine": true
      }
    },
    "breakLine": true
  }
},
"/common-snippets/v1/SelectOutputColumnWithTable.json/SelectOutputColumnWithTable.json": {
  "output.select_output_columns_type": {
    "type": "select",
    "label": "Select Output Columns",
    "required": true,
    "options": {
      "all": {
        "label": "All"
      },
      "standard": {
        "label": "Standard Column Selection"
      },
      "advanced": {
        "label": "Advanced Column Selection"
      }
    },
    "val": "all",
    "breakLine": true
  },
  "output_columns_frame": {
    "type": "fieldset",
    "label": "Select Output Columns",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.select_output_columns_type=='standard'",
    "repeat": false,
    "fields": {
      "output.output_columns": {
        "type": "select",
        "label": "Output Column(s)",
        "table": "table_id",
        "bind": "COLUMNS",
        "multiple": true,
        "required": true,
        "breakLine": true
      },
      "output.all_but_selected": {
        "type": "checkbox",
        "label": "All but selected",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  },
  "output.detail_output_columns": {
    "type": "fieldset",
    "label": "Select Output Columns",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.select_output_columns_type=='advanced'",
    "repeat": true,
    "fields": {
      "field_name": {
        "type": "select",
        "label": "Select Column",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "order": {
        "type": "select",
        "label": "Order",
        "options": {
          "-": {
            "label": "-"
          },
          "asc": {
            "label": "Asc"
          },
          "desc": {
            "label": "Desc"
          }
        },
        "val": "-"
      },
      "format__category": {
        "type": "select",
        "label": "Display Format",
        "required": true,
        "options": {
          "standard": {
            "label": "Standard"
          },
          "number": {
            "label": "Number"
          },
          "percentage": {
            "label": "Percentage"
          },
          "text": {
            "label": "Text"
          },
          "date": {
            "label": "Date"
          },
          "currency": {
            "label": "Currency"
          }
        },
        "val": "standard"
      },
      "format__rounding": {
        "type": "select",
        "label": "Decimal Places for display",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "required": true,
        "options": {
          "no_rounding": {
            "label": "No rounding"
          },
          "0": {
            "label": "0 digits"
          },
          "1": {
            "label": "1 digits"
          },
          "2": {
            "label": "2 digits"
          },
          "3": {
            "label": "3 digits"
          },
          "4": {
            "label": "4 digits"
          },
          "5": {
            "label": "5 digits"
          },
          "6": {
            "label": "6 digits"
          },
          "7": {
            "label": "7 digits"
          },
          "8": {
            "label": "8 digits"
          },
          "9": {
            "label": "9 digits"
          }
        },
        "val": "2"
      },
      "format__use_1000_separator": {
        "type": "checkbox",
        "label": "Use 1000 Separator(.)",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "format__currency_symbol": {
        "type": "select",
        "label": "Symbol",
        "show_if": "this.format__category=='currency'",
        "required": true,
        "options": {
          "dollar": {
            "label": "$"
          },
          "euro": {
            "label": "€"
          },
          "pound": {
            "label": "£"
          },
          "yen": {
            "label": "¥ (Yen, currency of Japan)"
          },
          "colon": {
            "label": "₡ (Colón, currency of Costa Rica)"
          },
          "naira": {
            "label": "₦ (Naira, currency of Nigeria)"
          },
          "rupee": {
            "label": "₨ (Rupee, currency of India)"
          },
          "rupie": {
            "label": "₹ (Rupee, currency of India)"
          },
          "won": {
            "label": "₩ (Won, currency in South Korea and North Korea)"
          },
          "hebrew": {
            "label": "₪ (Currency of Israel)"
          },
          "dong": {
            "label": "₫ (Currency of Vietnam)"
          },
          "kip": {
            "label": "₭ (Kip, currency of Laos)"
          },
          "mongolia": {
            "label": "₮ (Currency of Mongolia)"
          },
          "peso": {
            "label": "₱ (Peso, currency of the Philippines)"
          },
          "guarani": {
            "label": "₲ (Guaraní, currency of Paraguay)"
          },
          "hryvnia": {
            "label": "₴ (Hryvnia, currency of Ukraine)"
          },
          "tenge": {
            "label": "₸ (Tenge, currency of Kazakhstan)"
          },
          "lira": {
            "label": "₺ (Lira, currency of Turkey)"
          },
          "manat": {
            "label": "₼ (Manat, currency of Azerbaijan)"
          },
          "rubles": {
            "label": "₽ (Rubles, currency of Russia)"
          },
          "lari": {
            "label": "₾ (Lari, currency of Georgia)"
          },
          "bitcoin": {
            "label": "₿ (Bitcoin, crypto currency)"
          }
        },
        "val": "dollar"
      },
      "format__date_format": {
        "type": "select",
        "label": "Type",
        "show_if": "this.format__category=='date'",
        "required": true,
        "options": {
          "mm/dd/yyyy": {
            "label": "3/14/2012"
          },
          "D, M dd, Y": {
            "label": "Wednesday, March 14, 2012"
          },
          "yyyy-mm-dd": {
            "label": "2012-03-14"
          },
          "m.dd.yyyy": {
            "label": "3.14.2012"
          },
          "m.dd.yy": {
            "label": "3.14.12"
          },
          "dd.m.yyyy": {
            "label": "14.3.2012"
          },
          "dd.m.yy": {
            "label": "14.3.12"
          },
          "M dd, Y": {
            "label": "March 14, 2012"
          },
          "dd-mm-yyyy": {
            "label": "14-03-2012"
          },
          "mm-dd-yyyy": {
            "label": "03-14-2012"
          },
          "dd-mm-yy": {
            "label": "14-03-12"
          },
          "mm-dd-yy": {
            "label": "03-14-12"
          }
        },
        "val": "mm/dd/yyyy"
      },
      "is_rename": {
        "type": "checkbox",
        "label": "Rename",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "rename": {
        "show_if": "this.is_rename == 'true'",
        "type": "text",
        "required": true,
        "minLength": 1,
        "maxLength": 255,
        "label": "New Column Name",
        "style": "margin-left: 10px"
      },
      "delete": {
        "type": "button",
        "label": "Delete",
        "function": "DELETE_ROW"
      }
    },
    "breakLine": true
  }
},
"/common-snippets/v1/AutoConfigInputTable.json/AutoConfigInputTable.json": {
  "output.input_table_auto_config": {
    "type": "checkbox",
    "label": "Autoconfigure Input Table",
    "val": "false",
    "isOn": "true",
    "isOff": "false"
  },
  "output.input_table_condition": {
    "type": "fieldset",
    "label": "Autoconfigure Input Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.input_table_auto_config=='true'",
    "repeat": true,
    "fields": {
      "initial_op": {
        "type": "select",
        "label": "Logic Operator",
        "required": true,
        "show_if" :  "$index == 0",
        "options": {
          "if": {
            "label": "IF"
          },
          "if_not": {
            "label": "IF NOT"
          }
        },
        "val": "if"
      },
      "op": {
        "type": "select",
        "label": "Logic Operator",
        "required": true,
        "show_if" :  "$index > 0",
        "options": {
          "and": {
            "label": "AND"
          },
          "or": {
            "label": "OR"
          },
          "and_not": {
            "label": "AND NOT"
          },
          "or_not": {
            "label": "OR NOT"
          }
        },
        "val": "and"
      },
      "type": {
        "type": "select",
        "label": "Type",
        "required": true,
        "options": {
          "Table Name": {
            "label": "Table Name"
          },
          "Tags": {
            "label": "Tags"
          }
        },
        "val": "Table Name"
      },
      "rows": {
        "type": "select",
        "label": "Condition",
        "show_if": "this.type == 'Tags'",
        "required": true,
        "options": {
          "All Tags": {
            "label": "All Tags"
          },
          "Some Tags": {
            "label": "Some Tags"
          }
        },
        "val": "Some Tags"
      },
      "condition": {
        "type": "select",
        "label": "Operator",
        "required": true,
        "options": {
          "CONTAINS": {
            "label": "CONTAINS"
          },
          "CONTAINED IN STRING": {
            "label": "CONTAINED IN"
          },
          "STARTS WITH": {
            "label": "STARTS WITH"
          },
          "ENDS WITH": {
            "label": "ENDS WITH"
          },
          "=": {
            "label": "EQUAL"
          },
          "REGEX MATCH": {
            "label": "REGEX MATCH"
          }
        },
        "val": "CONTAINS"
      },
      "value": {
        "type": "text",
        "label": "Input Value",
        "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
        "val": "",
        "required": true
      },
      "case_sensitive": {
        "type": "select",
        "label": "Case Sensitive",
        "required": true,
        "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
        "options": {
          "yes": {
            "label": "Case Sensitive"
          },
          "no": {
            "label": "Case Insensitive"
          }
        },
        "val": "yes"
      },
      "delete": {
        "type": "button",
        "label": "Delete",
        "function": "DELETE_ROW"
      }
    }
  }
}
,
"/common-snippets/v1/SelectOutputColumn.json/SelectOutputColumn.json": {
  "output.select_output_columns_type": {
    "type": "select",
    "label": "Select Output Columns",
    "required": true,
    "options": {
      "all": {
        "label": "All"
      },
      "standard": {
        "label": "Standard Column Selection"
      },
      "advanced": {
        "label": "Advanced Column Selection"
      }
    },
    "val": "all",
    "style": "margin-right: 15px"
  },
  "output_columns_frame": {
    "type": "fieldset",
    "label": "Select Output Columns",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.select_output_columns_type=='standard'",
    "repeat": false,
    "fields": {
      "output.output_columns": {
        "type": "select",
        "label": "Output Column(s)",
        "table": "table_id",
        "bind": "COLUMNS",
        "multiple": true,
        "required": true,
        "breakLine": true
      },
      "output.all_but_selected": {
        "type": "checkbox",
        "label": "All but selected",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  },
  "output.detail_output_columns": {
    "type": "fieldset",
    "label": "Select Output Columns",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.select_output_columns_type=='advanced'",
    "repeat": true,
    "fields": {
      "field_name": {
        "type": "select",
        "label": "Select Column",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "order": {
        "type": "select",
        "label": "Order",
        "options": {
          "-": {
            "label": "-"
          },
          "asc": {
            "label": "Asc"
          },
          "desc": {
            "label": "Desc"
          }
        },
        "val": "-"
      },
      "format__category": {
        "type": "select",
        "label": "Display Format",
        "required": true,
        "options": {
          "standard": {
            "label": "Standard"
          },
          "number": {
            "label": "Number"
          },
          "percentage": {
            "label": "Percentage"
          },
          "text": {
            "label": "Text"
          },
          "date": {
            "label": "Date"
          },
          "currency": {
            "label": "Currency"
          }
        },
        "val": "standard"
      },
      "format__rounding": {
        "type": "select",
        "label": "Decimal Places for display",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "required": true,
        "options": {
          "no_rounding": {
            "label": "No rounding"
          },
          "0": {
            "label": "0 digits"
          },
          "1": {
            "label": "1 digits"
          },
          "2": {
            "label": "2 digits"
          },
          "3": {
            "label": "3 digits"
          },
          "4": {
            "label": "4 digits"
          },
          "5": {
            "label": "5 digits"
          },
          "6": {
            "label": "6 digits"
          },
          "7": {
            "label": "7 digits"
          },
          "8": {
            "label": "8 digits"
          },
          "9": {
            "label": "9 digits"
          }
        },
        "val": "2"
      },
      "format__use_1000_separator": {
        "type": "checkbox",
        "label": "Use 1000 Separator(.)",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "format__currency_symbol": {
        "type": "select",
        "label": "Symbol",
        "show_if": "this.format__category=='currency'",
        "required": true,
        "options": {
          "dollar": {
            "label": "$"
          },
          "euro": {
            "label": "€"
          },
          "pound": {
            "label": "£"
          },
          "yen": {
            "label": "¥ (Yen, currency of Japan)"
          },
          "colon": {
            "label": "₡ (Colón, currency of Costa Rica)"
          },
          "naira": {
            "label": "₦ (Naira, currency of Nigeria)"
          },
          "rupee": {
            "label": "₨ (Rupee, currency of India)"
          },
          "rupie": {
            "label": "₹ (Rupee, currency of India)"
          },
          "won": {
            "label": "₩ (Won, currency in South Korea and North Korea)"
          },
          "hebrew": {
            "label": "₪ (Currency of Israel)"
          },
          "dong": {
            "label": "₫ (Currency of Vietnam)"
          },
          "kip": {
            "label": "₭ (Kip, currency of Laos)"
          },
          "mongolia": {
            "label": "₮ (Currency of Mongolia)"
          },
          "peso": {
            "label": "₱ (Peso, currency of the Philippines)"
          },
          "guarani": {
            "label": "₲ (Guaraní, currency of Paraguay)"
          },
          "hryvnia": {
            "label": "₴ (Hryvnia, currency of Ukraine)"
          },
          "tenge": {
            "label": "₸ (Tenge, currency of Kazakhstan)"
          },
          "lira": {
            "label": "₺ (Lira, currency of Turkey)"
          },
          "manat": {
            "label": "₼ (Manat, currency of Azerbaijan)"
          },
          "rubles": {
            "label": "₽ (Rubles, currency of Russia)"
          },
          "lari": {
            "label": "₾ (Lari, currency of Georgia)"
          },
          "bitcoin": {
            "label": "₿ (Bitcoin, crypto currency)"
          }
        },
        "val": "dollar"
      },
      "format__date_format": {
        "type": "select",
        "label": "Type",
        "show_if": "this.format__category=='date'",
        "required": true,
        "options": {
          "mm/dd/yyyy": {
            "label": "3/14/2012"
          },
          "D, M dd, Y": {
            "label": "Wednesday, March 14, 2012"
          },
          "yyyy-mm-dd": {
            "label": "2012-03-14"
          },
          "m.dd.yyyy": {
            "label": "3.14.2012"
          },
          "m.dd.yy": {
            "label": "3.14.12"
          },
          "dd.m.yyyy": {
            "label": "14.3.2012"
          },
          "dd.m.yy": {
            "label": "14.3.12"
          },
          "M dd, Y": {
            "label": "March 14, 2012"
          },
          "dd-mm-yyyy": {
            "label": "14-03-2012"
          },
          "mm-dd-yyyy": {
            "label": "03-14-2012"
          },
          "dd-mm-yy": {
            "label": "14-03-12"
          },
          "mm-dd-yy": {
            "label": "03-14-12"
          }
        },
        "val": "mm/dd/yyyy"
      },
      "is_rename": {
        "type": "checkbox",
        "label": "Rename",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "rename": {
        "show_if": "this.is_rename == 'true'",
        "type": "text",
        "required": true,
        "minLength": 1,
        "maxLength": 255,
        "label": "New Column Name",
        "style": "margin-left: 10px"
      },
      "delete": {
        "type": "button",
        "label": "Delete",
        "function": "DELETE_ROW"
      }
    },
    "breakLine": true
  }
},
"/common-snippets/v1/StandardOutput.json/StandardOutput.json": {
  "output": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.output_and_setting=='true'",
    "repeat": false,
    "fields": {
    }
  }
}
,
"/common-snippets/v1/ComposeTableNameWithoutInputTable.json/ComposeTableNameWithoutInputTable.json": {
  "output.table_name_type": {
    "type": "select",
    "label": "Table Name",
    "required": true,
    "options": {
      "task_name": {
        "label": "Task Name (Flow Name)"
      },
      "custom_name": {
        "label": "Custom Name"
      },
      "compose_name": {
        "label": "Compose Name"
      }
    },
    "val": "task_name",
    "breakLine": true
  },
  "output.custom_text": {
    "type": "text",
    "label": "Output Table Name",
    "show_if": "output.table_name_type=='custom_name'",
    "minLength": 1,
    "val": "",
    "width": "100%",
    "breakLine": true
  },
  "compose_table_name_frame": {
    "type": "fieldset",
    "label": "Compose Output Table Name",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.table_name_type=='compose_name'",
    "repeat": false,
    "fields": {
      "output.prefix_rule": {
        "type": "select",
        "label": "Prefix",
        "val": "empty",
        "options": {
          "empty": {
            "label": "-"
          },
          "script_name": {
            "label": "Task Name"
          },
          "date_string_type1": {
            "label": "Date: dd_mm_yyyy"
          },
          "date_string_type2": {
            "label": "Date: yyyy_mm_dd"
          },
          "time_string": {
            "label": "Time: h_min_sec"
          },
          "datetime_string": {
            "label": "Date_Time"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.prefix_text": {
        "type": "text",
        "label": "Prefix Text",
        "show_if": "output.prefix_rule=='custom'",
        "minLength": 1,
        "maxLength": 31,
        "val": ""
      },
      "output.core_delimiter": {
        "type": "text",
        "label": "Delimiter",
        "show_if": "output.prefix_rule!='empty'",
        "val": "_",
        "width": "50px"
      },
      "output.core_rule": {
        "type": "select",
        "label": "Table Name",
        "val": "script_name",
        "options": {
          "script_name": {
            "label": "Task Name"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.core_text": {
        "type": "text",
        "label": "Main Table Name",
        "show_if": "output.core_rule=='custom'",
        "required": true,
        "minLength": 1,
        "maxLength": 31,
        "val": ""
      },
      "output.suffix_delimiter": {
        "type": "text",
        "label": "Delimiter",
        "val": " ",
        "width": "50px"
      },
      "output.suffix_rule": {
        "type": "select",
        "label": "Suffix",
        "val": "flow_name",
        "options": {
          "empty": {
            "label": "-"
          },
          "flow_name": {
            "label": "(Flow Name)"
          },
          "script_name": {
            "label": "Task Name"
          },
          "date_string_type1": {
            "label": "Date: dd_mm_yyyy"
          },
          "date_string_type2": {
            "label": "Date: yyyy_mm_dd"
          },
          "time_string": {
            "label": "Time: h_min_sec"
          },
          "datetime_string": {
            "label": "Date_Time"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.suffix_text": {
        "type": "text",
        "label": "Suffix Text",
        "show_if": "output.suffix_rule=='custom'",
        "minLength": 1,
        "maxLength": 31,
        "val": "",
        "breakLine": true
      },
      "output.timezone": {
        "type": "select",
        "label": "Timezone",
        "show_if": "output.prefix_rule=='date_string_type1' || output.prefix_rule=='date_string_type2' || output.prefix_rule=='time_string' || output.prefix_rule=='datetime_string' || output.suffix_rule=='date_string_type1' || output.suffix_rule=='date_string_type2' || output.suffix_rule=='time_string' || output.suffix_rule=='datetime_string'",
        "val": "Europe/Berlin",
        "required": true,
        "options": {
          "America/Adak": {
            "label": "Adak, Gambier"
          },
          "Australia/Adelaide": {
            "label": "Adelaide, Broken Hill, Darwin"
          },
          "America/Anchorage": {
            "label": "Anchorage, Juneau, Sitka"
          },
          "Pacific/Apia": {
            "label": "Apia, Asau, Mulifanua, Afega, Leulumoega"
          },
          "Pacific/Enderbury": {
            "label": "Apia, Fiji, Tongatapu"
          },
          "Antarctica/McMurdo": {
            "label": "Auckland, Casey, Davis"
          },
          "Pacific/Auckland": {
            "label": "Auckland, Wellington, Christchurch"
          },
          "Asia/Bangkok": {
            "label": "Bangkok, Jakarta, Novosibirsk"
          },
          "Europe/Berlin": {
            "label": "Berlin, Paris, Amsterdam"
          },
          "Australia/Perth": {
            "label": "Brunei, Singapore, Perth"
          },
          "Atlantic/Cape_Verde": {
            "label": "Cape Verde,Praia, Mindelo, Santa Maria"
          },
          "America/Belize": {
            "label": "Costa Rica, El Salvador, Denver"
          },
          "Antarctica/Vostok": {
            "label": "Dhaka, Bishkek, Omsk"
          },
          "Europe/Astrakhan": {
            "label": "Dubai, Baku, Tbilisi"
          },
          "Australia/Eucla": {
            "label": "Eucla"
          },
          "Pacific/Honolulu": {
            "label": "Honolulu, Rarotonga, Tahiti"
          },
          "Asia/Kabul": {
            "label": "Kabul, Kandahār, Mazār-e Sharīf, Herāt, Jalālābād"
          },
          "Asia/Aqtau": {
            "label": "Karachi, Tashkent, Maldives"
          },
          "Asia/Kathmandu": {
            "label": "Kathmandu, Pokhara, Pātan, Biratnagar"
          },
          "Pacific/Kiritimati": {
            "label": "Kiritimati"
          },
          "Asia/Colombo": {
            "label": "Kolkata, Colombo, Jaffna, Negombo"
          },
          "Europe/Guernsey": {
            "label": "London, Dublin, Lisbon"
          },
          "Australia/Lord_Howe": {
            "label": "Lord Howe"
          },
          "America/Creston": {
            "label": "Los Angeles, Vancouver, Hermosillo"
          },
          "Pacific/Marquesas": {
            "label": "Marquesas, Taiohae"
          },
          "America/Cayman": {
            "label": "Mexico City, Panama, Chicago"
          },
          "Pacific/Niue": {
            "label": "Midway, Niue, Pago Pago"
          },
          "Europe/Mariehamn": {
            "label": "Moscow, Istanbul, Qatar"
          },
          "Asia/Kolkata": {
            "label": "Mumbai, Delhi, Bengaluru, Kolkata, Chennai"
          },
          "America/Miquelon": {
            "label": "Noronha, Nuuk, Miquelon"
          },
          "America/Danmarkshavn": {
            "label": "Reykjavik, Dakar, Casablanca"
          },
          "Pacific/Bougainville": {
            "label": "Sakhalin, Norfolk, Bougainville"
          },
          "America/Araguaina": {
            "label": "Sao Paulo, Buenos Aires, Montevideo"
          },
          "America/St_Johns": {
            "label": "St. Johns, Mount Pearl, Corner Brook"
          },
          "Asia/Tehran": {
            "label": "Tehran, Mashhad, Isfahan, Karaj, Tabriz"
          },
          "Asia/Tokyo": {
            "label": "Tokyo, Seoul, Jayapura"
          },
          "America/New_York": {
            "label": "Toronto, Santiago, New York"
          },
          "Australia/Sydney": {
            "label": "Vladivostok, Sydney, Brisbane"
          },
          "Asia/Yangon": {
            "label": "Yangon, Cocos, Mandalay, Nay Pyi Taw, Mawlamyine"
          },
          "Indian/Cocos": {
            "label": "Yangon, Cocos, West Island"
          }
        },
        "breakLine": true
      }
    },
    "breakLine": true
  }
},
"/common-snippets/v1/OutputSettingTickboxWEmbed.json/OutputSettingTickboxWEmbed.json": {
  "output.output_and_setting": {
    "type": "checkbox",
    "label": "Output and Settings",
    "show_if": "$rootScope.hostType!='Embed'",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  }
}
,
"/common-snippets/v1/OutputLocationNoExcel.json/OutputLocationNoExcel.json": {
  "output.location": {
    "type": "select",
    "label": "Output Type",
	"style": "margin-right: 15px",
    "options": {
      "output_as_new_table": {
        "label": "As New Table"
      },
      "overwrite_input_table": {
        "label": "Overwrite Input Table"
      }
    },
    "val": "output_as_new_table"
  }
}
,
"/common-snippets/v1/RootOutput.json/RootOutput.json": {
  "output": {
    "type": "fieldset",
    "label": "Output and Settings",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
    }
  }
},
"/common-snippets/v1/ComposeTableNameConfig.json/ComposeTableNameConfig.json": {
  "output.table_name_type": {
    "type": "select",
    "label": "Table Name",
    "show_if": "output.location!='overwrite_input_table'",
    "required": true,
    "options": {
      "task_name": {
        "label": "Task Name (Flow Name)"
      },
      "custom_name": {
        "label": "Custom Name"
      },
      "compose_name": {
        "label": "Compose Name"
      }
    },
    "val": "task_name",
    "breakLine": true
  },
  "output.custom_text": {
    "type": "text",
    "label": "Output Table Name",
    "show_if": "output.location!='overwrite_input_table' && output.table_name_type=='custom_name'",
    "minLength": 1,
    "val": "",
    "width": "100%",
    "breakLine": true
  },
  "compose_table_name_frame": {
    "type": "fieldset",
    "label": "Compose Output Table Name",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.location!='overwrite_input_table' && output.table_name_type=='compose_name'",
    "repeat": false,
    "fields": {
      "output.prefix_rule": {
        "type": "select",
        "label": "Prefix",
        "val": "empty",
        "options": {
          "empty": {
            "label": "-"
          },
          "script_name": {
            "label": "Task Name"
          },
          "date_string_type1": {
            "label": "Date: dd_mm_yyyy"
          },
          "date_string_type2": {
            "label": "Date: yyyy_mm_dd"
          },
          "time_string": {
            "label": "Time: h_min_sec"
          },
          "datetime_string": {
            "label": "Date_Time"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.prefix_text": {
        "type": "text",
        "label": "Prefix Text",
        "show_if": "output.prefix_rule=='custom'",
        "minLength": 1,
        "maxLength": 31,
        "val": ""
      },
      "output.core_delimiter": {
        "type": "text",
        "label": "Delimiter",
        "show_if": "output.prefix_rule!='empty'",
        "val": "_",
        "width": "50px"
      },
      "output.core_rule": {
        "type": "select",
        "label": "Table Name",
        "val": "script_name",
        "options": {
          "input_table_name": {
            "label": "Input Table Name"
          },
          "script_name": {
            "label": "Task Name"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.core_text": {
        "type": "text",
        "label": "Main Table Name",
        "show_if": "output.core_rule=='custom'",
        "required": true,
        "minLength": 1,
        "maxLength": 31,
        "val": ""
      },
      "output.suffix_delimiter": {
        "type": "text",
        "label": "Delimiter",
        "val": " ",
        "width": "50px"
      },
      "output.suffix_rule": {
        "type": "select",
        "label": "Suffix",
        "val": "flow_name",
        "options": {
          "empty": {
            "label": "-"
          },
          "flow_name": {
            "label": "(Flow Name)"
          },
          "script_name": {
            "label": "Task Name"
          },
          "date_string_type1": {
            "label": "Date: dd_mm_yyyy"
          },
          "date_string_type2": {
            "label": "Date: yyyy_mm_dd"
          },
          "time_string": {
            "label": "Time: h_min_sec"
          },
          "datetime_string": {
            "label": "Date_Time"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.suffix_text": {
        "type": "text",
        "label": "Suffix Text",
        "show_if": "output.suffix_rule=='custom'",
        "minLength": 1,
        "maxLength": 31,
        "val": "",
        "breakLine": true
      },
      "output.timezone": {
        "type": "select",
        "label": "Timezone",
        "show_if": "output.prefix_rule=='date_string_type1' || output.prefix_rule=='date_string_type2' || output.prefix_rule=='time_string' || output.prefix_rule=='datetime_string' || output.suffix_rule=='date_string_type1' || output.suffix_rule=='date_string_type2' || output.suffix_rule=='time_string' || output.suffix_rule=='datetime_string'",
        "val": "Europe/Berlin",
        "required": true,
        "options": {
          "America/Adak": {
            "label": "Adak, Gambier"
          },
          "Australia/Adelaide": {
            "label": "Adelaide, Broken Hill, Darwin"
          },
          "America/Anchorage": {
            "label": "Anchorage, Juneau, Sitka"
          },
          "Pacific/Apia": {
            "label": "Apia, Asau, Mulifanua, Afega, Leulumoega"
          },
          "Pacific/Enderbury": {
            "label": "Apia, Fiji, Tongatapu"
          },
          "Antarctica/McMurdo": {
            "label": "Auckland, Casey, Davis"
          },
          "Pacific/Auckland": {
            "label": "Auckland, Wellington, Christchurch"
          },
          "Asia/Bangkok": {
            "label": "Bangkok, Jakarta, Novosibirsk"
          },
          "Europe/Berlin": {
            "label": "Berlin, Paris, Amsterdam"
          },
          "Australia/Perth": {
            "label": "Brunei, Singapore, Perth"
          },
          "Atlantic/Cape_Verde": {
            "label": "Cape Verde,Praia, Mindelo, Santa Maria"
          },
          "America/Belize": {
            "label": "Costa Rica, El Salvador, Denver"
          },
          "Antarctica/Vostok": {
            "label": "Dhaka, Bishkek, Omsk"
          },
          "Europe/Astrakhan": {
            "label": "Dubai, Baku, Tbilisi"
          },
          "Australia/Eucla": {
            "label": "Eucla"
          },
          "Pacific/Honolulu": {
            "label": "Honolulu, Rarotonga, Tahiti"
          },
          "Asia/Kabul": {
            "label": "Kabul, Kandahār, Mazār-e Sharīf, Herāt, Jalālābād"
          },
          "Asia/Aqtau": {
            "label": "Karachi, Tashkent, Maldives"
          },
          "Asia/Kathmandu": {
            "label": "Kathmandu, Pokhara, Pātan, Biratnagar"
          },
          "Pacific/Kiritimati": {
            "label": "Kiritimati"
          },
          "Asia/Colombo": {
            "label": "Kolkata, Colombo, Jaffna, Negombo"
          },
          "Europe/Guernsey": {
            "label": "London, Dublin, Lisbon"
          },
          "Australia/Lord_Howe": {
            "label": "Lord Howe"
          },
          "America/Creston": {
            "label": "Los Angeles, Vancouver, Hermosillo"
          },
          "Pacific/Marquesas": {
            "label": "Marquesas, Taiohae"
          },
          "America/Cayman": {
            "label": "Mexico City, Panama, Chicago"
          },
          "Pacific/Niue": {
            "label": "Midway, Niue, Pago Pago"
          },
          "Europe/Mariehamn": {
            "label": "Moscow, Istanbul, Qatar"
          },
          "Asia/Kolkata": {
            "label": "Mumbai, Delhi, Bengaluru, Kolkata, Chennai"
          },
          "America/Miquelon": {
            "label": "Noronha, Nuuk, Miquelon"
          },
          "America/Danmarkshavn": {
            "label": "Reykjavik, Dakar, Casablanca"
          },
          "Pacific/Bougainville": {
            "label": "Sakhalin, Norfolk, Bougainville"
          },
          "America/Araguaina": {
            "label": "Sao Paulo, Buenos Aires, Montevideo"
          },
          "America/St_Johns": {
            "label": "St. Johns, Mount Pearl, Corner Brook"
          },
          "Asia/Tehran": {
            "label": "Tehran, Mashhad, Isfahan, Karaj, Tabriz"
          },
          "Asia/Tokyo": {
            "label": "Tokyo, Seoul, Jayapura"
          },
          "America/New_York": {
            "label": "Toronto, Santiago, New York"
          },
          "Australia/Sydney": {
            "label": "Vladivostok, Sydney, Brisbane"
          },
          "Asia/Yangon": {
            "label": "Yangon, Cocos, Mandalay, Nay Pyi Taw, Mawlamyine"
          },
          "Indian/Cocos": {
            "label": "Yangon, Cocos, West Island"
          }
        },
        "breakLine": true
      }
    },
    "breakLine": true
  }
},
"/common-snippets/v1/AddTagWithoutInputTable.json/AddTagWithoutInputTable.json": {
  "output.add_tag": {
    "type": "checkbox",
    "label": "Add Tag",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "style": "margin-right: 15px"
  },
  "output.add_tag_type": {
    "type": "select",
    "label": "Tagging type",
    "show_if": "output.add_tag=='true'",
    "options": {
      "custom": {
        "label": "Custom"
      },
      "output_table_names": {
        "label": "Output Table Name(s)"
      },
      "task_name": {
        "label": "Task Name"
      }
    },
    "val": "custom"
  },
  "output.tag_name": {
    "type": "text",
    "label": "Tag Name",
    "show_if": "output.add_tag=='true' && output.add_tag_type=='custom'",
    "required": true,
    "minLength": 1,
    "maxLength": 255,
    "val": "",
    "breakLine": true,
    "style": "margin-left: 15px"
  }
},
"/common-snippets/v1/ImportComposeTableName.json/ImportComposeTableName.json": {
  "output.table_name_type": {
    "type": "select",
    "label": "Table Name",
    "show_if": "options.use_filename_as_output_table_name=='false'",
    "required": true,
    "options": {
      "task_name": {
        "label": "Task Name (Flow Name)"
      },
      "custom_name": {
        "label": "Custom Name"
      },
      "compose_name": {
        "label": "Compose Name"
      }
    },
    "val": "task_name",
    "breakLine": true
  },
  "output.custom_text": {
    "type": "text",
    "label": "Output Table Name",
    "show_if": "options.use_filename_as_output_table_name=='false' && output.table_name_type=='custom_name'",
    "minLength": 1,
    "val": "",
    "width": "100%",
    "breakLine": true
  },
  "compose_table_name_frame": {
    "type": "fieldset",
    "label": "Compose Output Table Name",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "options.use_filename_as_output_table_name=='false' && output.table_name_type=='compose_name'",
    "repeat": false,
    "fields": {
      "output.prefix_rule": {
        "type": "select",
        "label": "Prefix",
        "val": "empty",
        "options": {
          "empty": {
            "label": "-"
          },
          "script_name": {
            "label": "Task Name"
          },
          "date_string_type1": {
            "label": "Date: dd_mm_yyyy"
          },
          "date_string_type2": {
            "label": "Date: yyyy_mm_dd"
          },
          "time_string": {
            "label": "Time: h_min_sec"
          },
          "datetime_string": {
            "label": "Date_Time"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.prefix_text": {
        "type": "text",
        "label": "Prefix Text",
        "show_if": "output.prefix_rule=='custom'",
        "minLength": 1,
        "maxLength": 31,
        "val": ""
      },
      "output.core_delimiter": {
        "type": "text",
        "label": "Delimiter",
        "show_if": "output.prefix_rule!='empty'",
        "val": "_",
        "width": "50px"
      },
      "output.core_rule": {
        "type": "select",
        "label": "Table Name",
        "val": "script_name",
        "options": {
          "script_name": {
            "label": "Task Name"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.core_text": {
        "type": "text",
        "label": "Main Table Name",
        "show_if": "output.core_rule=='custom'",
        "required": true,
        "minLength": 1,
        "maxLength": 31,
        "val": ""
      },
      "output.suffix_delimiter": {
        "type": "text",
        "label": "Delimiter",
        "val": " ",
        "width": "50px"
      },
      "output.suffix_rule": {
        "type": "select",
        "label": "Suffix",
        "val": "flow_name",
        "options": {
          "empty": {
            "label": "-"
          },
          "flow_name": {
            "label": "(Flow Name)"
          },
          "script_name": {
            "label": "Task Name"
          },
          "date_string_type1": {
            "label": "Date: dd_mm_yyyy"
          },
          "date_string_type2": {
            "label": "Date: yyyy_mm_dd"
          },
          "time_string": {
            "label": "Time: h_min_sec"
          },
          "datetime_string": {
            "label": "Date_Time"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.suffix_text": {
        "type": "text",
        "label": "Suffix Text",
        "show_if": "output.suffix_rule=='custom'",
        "minLength": 1,
        "maxLength": 31,
        "val": "",
        "breakLine": true
      },
      "output.timezone": {
        "type": "select",
        "label": "Timezone",
        "show_if": "output.prefix_rule=='date_string_type1' || output.prefix_rule=='date_string_type2' || output.prefix_rule=='time_string' || output.prefix_rule=='datetime_string' || output.suffix_rule=='date_string_type1' || output.suffix_rule=='date_string_type2' || output.suffix_rule=='time_string' || output.suffix_rule=='datetime_string'",
        "val": "Europe/Berlin",
        "required": true,
        "options": {
          "America/Adak": {
            "label": "Adak, Gambier"
          },
          "Australia/Adelaide": {
            "label": "Adelaide, Broken Hill, Darwin"
          },
          "America/Anchorage": {
            "label": "Anchorage, Juneau, Sitka"
          },
          "Pacific/Apia": {
            "label": "Apia, Asau, Mulifanua, Afega, Leulumoega"
          },
          "Pacific/Enderbury": {
            "label": "Apia, Fiji, Tongatapu"
          },
          "Antarctica/McMurdo": {
            "label": "Auckland, Casey, Davis"
          },
          "Pacific/Auckland": {
            "label": "Auckland, Wellington, Christchurch"
          },
          "Asia/Bangkok": {
            "label": "Bangkok, Jakarta, Novosibirsk"
          },
          "Europe/Berlin": {
            "label": "Berlin, Paris, Amsterdam"
          },
          "Australia/Perth": {
            "label": "Brunei, Singapore, Perth"
          },
          "Atlantic/Cape_Verde": {
            "label": "Cape Verde,Praia, Mindelo, Santa Maria"
          },
          "America/Belize": {
            "label": "Costa Rica, El Salvador, Denver"
          },
          "Antarctica/Vostok": {
            "label": "Dhaka, Bishkek, Omsk"
          },
          "Europe/Astrakhan": {
            "label": "Dubai, Baku, Tbilisi"
          },
          "Australia/Eucla": {
            "label": "Eucla"
          },
          "Pacific/Honolulu": {
            "label": "Honolulu, Rarotonga, Tahiti"
          },
          "Asia/Kabul": {
            "label": "Kabul, Kandahār, Mazār-e Sharīf, Herāt, Jalālābād"
          },
          "Asia/Aqtau": {
            "label": "Karachi, Tashkent, Maldives"
          },
          "Asia/Kathmandu": {
            "label": "Kathmandu, Pokhara, Pātan, Biratnagar"
          },
          "Pacific/Kiritimati": {
            "label": "Kiritimati"
          },
          "Asia/Colombo": {
            "label": "Kolkata, Colombo, Jaffna, Negombo"
          },
          "Europe/Guernsey": {
            "label": "London, Dublin, Lisbon"
          },
          "Australia/Lord_Howe": {
            "label": "Lord Howe"
          },
          "America/Creston": {
            "label": "Los Angeles, Vancouver, Hermosillo"
          },
          "Pacific/Marquesas": {
            "label": "Marquesas, Taiohae"
          },
          "America/Cayman": {
            "label": "Mexico City, Panama, Chicago"
          },
          "Pacific/Niue": {
            "label": "Midway, Niue, Pago Pago"
          },
          "Europe/Mariehamn": {
            "label": "Moscow, Istanbul, Qatar"
          },
          "Asia/Kolkata": {
            "label": "Mumbai, Delhi, Bengaluru, Kolkata, Chennai"
          },
          "America/Miquelon": {
            "label": "Noronha, Nuuk, Miquelon"
          },
          "America/Danmarkshavn": {
            "label": "Reykjavik, Dakar, Casablanca"
          },
          "Pacific/Bougainville": {
            "label": "Sakhalin, Norfolk, Bougainville"
          },
          "America/Araguaina": {
            "label": "Sao Paulo, Buenos Aires, Montevideo"
          },
          "America/St_Johns": {
            "label": "St. Johns, Mount Pearl, Corner Brook"
          },
          "Asia/Tehran": {
            "label": "Tehran, Mashhad, Isfahan, Karaj, Tabriz"
          },
          "Asia/Tokyo": {
            "label": "Tokyo, Seoul, Jayapura"
          },
          "America/New_York": {
            "label": "Toronto, Santiago, New York"
          },
          "Australia/Sydney": {
            "label": "Vladivostok, Sydney, Brisbane"
          },
          "Asia/Yangon": {
            "label": "Yangon, Cocos, Mandalay, Nay Pyi Taw, Mawlamyine"
          },
          "Indian/Cocos": {
            "label": "Yangon, Cocos, West Island"
          }
        },
        "breakLine": true
      }
    },
    "breakLine": true
  }
},
"/common-snippets/v1/DataCommonsOutputSettingTickbox.json/DataCommonsOutputSettingTickbox.json": {
  "output.output_and_setting": {
    "type": "checkbox",
    "label": "Output and Settings",
    "show_if": "options.output_as_chart=='false'",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  }
}
,
"/common-snippets/v1/Export2FileComposeTableName.json/Export2FileComposeTableName.json": {
  "output.table_name_type": {
    "type": "select",
    "label": "Table Name",
    "show_if": "options.export_series=='false'",
    "required": true,
    "options": {
      "task_name": {
        "label": "Task Name (Flow Name)"
      },
      "custom_name": {
        "label": "Custom Name"
      },
      "compose_name": {
        "label": "Compose Name"
      }
    },
    "val": "task_name",
    "breakLine": true
  },
  "output.custom_text": {
    "type": "text",
    "label": "Output Table Name",
    "show_if": "output.output_as_new_table=='true' && output.table_name_type=='custom_name'",
    "minLength": 1,
    "val": "",
    "width": "100%",
    "breakLine": true
  },
  "compose_table_name_frame": {
    "type": "fieldset",
    "label": "Compose Output Table Name",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.output_as_new_table=='true' && output.table_name_type=='compose_name'",
    "repeat": false,
    "fields": {
      "output.prefix_rule": {
        "type": "select",
        "label": "Prefix",
        "val": "empty",
        "options": {
          "empty": {
            "label": "-"
          },
          "script_name": {
            "label": "Task Name"
          },
          "date_string_type1": {
            "label": "Date: dd_mm_yyyy"
          },
          "date_string_type2": {
            "label": "Date: yyyy_mm_dd"
          },
          "time_string": {
            "label": "Time: h_min_sec"
          },
          "datetime_string": {
            "label": "Date_Time"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.prefix_text": {
        "type": "text",
        "label": "Prefix Text",
        "show_if": "output.prefix_rule=='custom'",
        "minLength": 1,
        "maxLength": 31,
        "val": ""
      },
      "output.core_delimiter": {
        "type": "text",
        "label": "Delimiter",
        "show_if": "output.prefix_rule!='empty'",
        "val": "_",
        "width": "50px"
      },
      "output.core_rule": {
        "type": "select",
        "label": "Table Name",
        "val": "script_name",
        "options": {
          "input_table_name": {
            "label": "Input Table Name"
          },
          "script_name": {
            "label": "Task Name"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.core_text": {
        "type": "text",
        "label": "Main Table Name",
        "show_if": "output.core_rule=='custom'",
        "required": true,
        "minLength": 1,
        "maxLength": 31,
        "val": ""
      },
      "output.suffix_delimiter": {
        "type": "text",
        "label": "Delimiter",
        "val": " ",
        "width": "50px"
      },
      "output.suffix_rule": {
        "type": "select",
        "label": "Suffix",
        "val": "flow_name",
        "options": {
          "empty": {
            "label": "-"
          },
          "flow_name": {
            "label": "(Flow Name)"
          },
          "script_name": {
            "label": "Task Name"
          },
          "date_string_type1": {
            "label": "Date: dd_mm_yyyy"
          },
          "date_string_type2": {
            "label": "Date: yyyy_mm_dd"
          },
          "time_string": {
            "label": "Time: h_min_sec"
          },
          "datetime_string": {
            "label": "Date_Time"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.suffix_text": {
        "type": "text",
        "label": "Suffix Text",
        "show_if": "output.suffix_rule=='custom'",
        "minLength": 1,
        "maxLength": 31,
        "val": "",
        "breakLine": true
      },
      "output.timezone": {
        "type": "select",
        "label": "Timezone",
        "show_if": "output.prefix_rule=='date_string_type1' || output.prefix_rule=='date_string_type2' || output.prefix_rule=='time_string' || output.prefix_rule=='datetime_string' || output.suffix_rule=='date_string_type1' || output.suffix_rule=='date_string_type2' || output.suffix_rule=='time_string' || output.suffix_rule=='datetime_string'",
        "val": "Europe/Berlin",
        "required": true,
        "options": {
          "America/Adak": {
            "label": "Adak, Gambier"
          },
          "Australia/Adelaide": {
            "label": "Adelaide, Broken Hill, Darwin"
          },
          "America/Anchorage": {
            "label": "Anchorage, Juneau, Sitka"
          },
          "Pacific/Apia": {
            "label": "Apia, Asau, Mulifanua, Afega, Leulumoega"
          },
          "Pacific/Enderbury": {
            "label": "Apia, Fiji, Tongatapu"
          },
          "Antarctica/McMurdo": {
            "label": "Auckland, Casey, Davis"
          },
          "Pacific/Auckland": {
            "label": "Auckland, Wellington, Christchurch"
          },
          "Asia/Bangkok": {
            "label": "Bangkok, Jakarta, Novosibirsk"
          },
          "Europe/Berlin": {
            "label": "Berlin, Paris, Amsterdam"
          },
          "Australia/Perth": {
            "label": "Brunei, Singapore, Perth"
          },
          "Atlantic/Cape_Verde": {
            "label": "Cape Verde,Praia, Mindelo, Santa Maria"
          },
          "America/Belize": {
            "label": "Costa Rica, El Salvador, Denver"
          },
          "Antarctica/Vostok": {
            "label": "Dhaka, Bishkek, Omsk"
          },
          "Europe/Astrakhan": {
            "label": "Dubai, Baku, Tbilisi"
          },
          "Australia/Eucla": {
            "label": "Eucla"
          },
          "Pacific/Honolulu": {
            "label": "Honolulu, Rarotonga, Tahiti"
          },
          "Asia/Kabul": {
            "label": "Kabul, Kandahār, Mazār-e Sharīf, Herāt, Jalālābād"
          },
          "Asia/Aqtau": {
            "label": "Karachi, Tashkent, Maldives"
          },
          "Asia/Kathmandu": {
            "label": "Kathmandu, Pokhara, Pātan, Biratnagar"
          },
          "Pacific/Kiritimati": {
            "label": "Kiritimati"
          },
          "Asia/Colombo": {
            "label": "Kolkata, Colombo, Jaffna, Negombo"
          },
          "Europe/Guernsey": {
            "label": "London, Dublin, Lisbon"
          },
          "Australia/Lord_Howe": {
            "label": "Lord Howe"
          },
          "America/Creston": {
            "label": "Los Angeles, Vancouver, Hermosillo"
          },
          "Pacific/Marquesas": {
            "label": "Marquesas, Taiohae"
          },
          "America/Cayman": {
            "label": "Mexico City, Panama, Chicago"
          },
          "Pacific/Niue": {
            "label": "Midway, Niue, Pago Pago"
          },
          "Europe/Mariehamn": {
            "label": "Moscow, Istanbul, Qatar"
          },
          "Asia/Kolkata": {
            "label": "Mumbai, Delhi, Bengaluru, Kolkata, Chennai"
          },
          "America/Miquelon": {
            "label": "Noronha, Nuuk, Miquelon"
          },
          "America/Danmarkshavn": {
            "label": "Reykjavik, Dakar, Casablanca"
          },
          "Pacific/Bougainville": {
            "label": "Sakhalin, Norfolk, Bougainville"
          },
          "America/Araguaina": {
            "label": "Sao Paulo, Buenos Aires, Montevideo"
          },
          "America/St_Johns": {
            "label": "St. Johns, Mount Pearl, Corner Brook"
          },
          "Asia/Tehran": {
            "label": "Tehran, Mashhad, Isfahan, Karaj, Tabriz"
          },
          "Asia/Tokyo": {
            "label": "Tokyo, Seoul, Jayapura"
          },
          "America/New_York": {
            "label": "Toronto, Santiago, New York"
          },
          "Australia/Sydney": {
            "label": "Vladivostok, Sydney, Brisbane"
          },
          "Asia/Yangon": {
            "label": "Yangon, Cocos, Mandalay, Nay Pyi Taw, Mawlamyine"
          },
          "Indian/Cocos": {
            "label": "Yangon, Cocos, West Island"
          }
        },
        "breakLine": true
      }
    },
    "breakLine": true
  }
},
"/common-snippets/v1/OutputSettingTickbox.json/OutputSettingTickbox.json": {
  "output.output_and_setting": {
    "type": "checkbox",
    "label": "Output and Settings",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  }
}
,
"/common-snippets/v1/SelectTable.json/SelectTable.json": {
  "input": {
    "type": "fieldset",
    "label": "Select Input Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "table_id": {
        "type": "select",
        "label": "Select Table",
        "bind": "TABLES",
        "empty": "",
        "required": true,
        "breakLine": true
      },
      "remove_input_table_after_processing": {
        "type": "hidden",
        "val": "false"
      },
      "is_word": {
        "type": "hidden",
        "val": "false"
      }
    }
  }
}
,
"/common-snippets/v1/ReverseOrder.json/ReverseOrder.json": {
  "output.reverse_order": {
    "type": "checkbox",
    "label": "Reverse order",
    "show_if": "output.select_output_columns_type=='all' || output.select_output_columns_type=='standard'",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  }
},
"/common-snippets/v1/ImportUseFilenameAsTableName.json/ImportUseFilenameAsTableName.json": {
  "options.use_filename_as_output_table_name": {
    "type": "checkbox",
    "label": "Use filename as output table name",
    "val": "true",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  }
},
"/common-snippets/v1/DataCommonsOutput.json/DataCommonsOutput.json": {
  "output": {
    "type": "fieldset",
    "label": "Output and Settings",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "options.output_as_chart=='false' && output.output_and_setting=='true'",
    "repeat": false,
    "fields": {
    }
  }
},
"/common-snippets/v1/InputColumnsConfig.json/InputColumnsConfig.json": {
  "output.input_table_config": {
    "type": "checkbox",
    "label": "Autoconfigure Input Table",
    "val": "false",
    "isOn": "true",
    "isOff": "false"
  },
  "input_table_config_frame": {
    "type": "fieldset",
    "label": "Autoconfigure Input Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.input_table_config=='true'",
    "repeat": false,
    "fields": {

    }
  }
}
,
"/common-snippets/v1/DownloadSettings.json/DownloadSettings.json": {
  "download_setting_frame": {
    "type": "fieldset",
    "label": "Download Settings",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "false",
    "repeat": false,
    "fields": {
      "output.options.location": {
        "type": "text",
        "label": "Specify Location",
        "val": "A1",
        "breakLine": true
      },
      "output.options.formatted_as_table": {
        "type": "checkbox",
        "label": "Formatted as Table",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "output.options.visibility": {
        "type": "select",
        "label": "Visibility",
        "val": "current_flow",
        "options": {
          "current_flow": {
            "label": "Current Flow"
          },
          "all_flow": {
            "label": "All Flows"
          }
        },
        "breakLine": true
      },
      "output.options.table_mode": {
        "type": "select",
        "label": "Paste",
        "val": "content_only",
        "options": {
          "content_only": {
            "label": "Content Only"
          },
          "fully_formatted": {
            "label": "Fully Formatted"
          }
        }
      }
    },
    "breakLine": true,
    "style": "margin-bottom: 20px"
  }
}
,
"/common-snippets/v2/SelectTableConfig.json/SelectTableConfig.json": {
  "input": {
    "type": "fieldset",
    "label": "Select Input Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "configure_input_tables": {
        "type": "select",
        "label": "Select Source",
        "options": {
          "zippydoc_table": {
            "label": "Flow Table"
          },
          "excel_sheet": {
            "label": "Excel Sheet",
          },
          "excel_column_and_row_range": {
            "label": "Excel Column & Row Range"
          },
          "excel_range_name": {
            "label": "Excel Range Name"
          },
          "search_tables": {
            "label": "Search Tables"
          }
        },
        "val": "zippydoc_table"
      },
      "search_tables__types": {
        "type": "select",
        "label": "Table Search Source",
        "show_if": "configure_input_tables!='zippydoc_table'",
        "options": {
          "owned_tables": {
            "label": "Owned tables"
          },
          "shared_tables": {
            "label": "Shared tables"
          },
          "published_tables": {
            "label": "Published tables"
          }
        },
        "multiple": true,
        "val": ["owned_tables"]
      },
      "search_tables__select_columns_by": {
        "type": "select",
        "label": "Column selection type",
        "show_if": "configure_input_tables!='zippydoc_table'",
        "options": {
          "by_name_text": {
            "label": "Select columns by name"
          },
          "by_order": {
            "label": "Select columns by order"
          }
        },
        "val": "by_name_text"
      },
      "table_id": {
        "type": "select",
        "label": "Input Table",
        "show_if": "configure_input_tables=='zippydoc_table'",
        "bind": "TABLES",
        "empty": "",
        "required": true
      },
      "excel_sheet__table_has_header": {
        "type": "checkbox",
        "label": "Table has header",
        "show_if": "configure_input_tables=='excel_sheet' || configure_input_tables=='excel_column_and_row_range' || configure_input_tables=='excel_range_name'",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "excel_sheet__active_sheet": {
        "type": "checkbox",
        "label": "Active Sheet",
        "show_if": "configure_input_tables=='excel_sheet' || configure_input_tables=='excel_column_and_row_range' || configure_input_tables=='excel_range_name'",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "excel_sheet__sheet_name": {
        "type": "text",
        "label": "Sheet Name",
        "show_if": "(configure_input_tables=='excel_sheet' || configure_input_tables=='excel_column_and_row_range' || configure_input_tables=='excel_range_name') && excel_sheet__active_sheet=='false'",
        "val": "",
        "style": "margin-left: 15px",
        "breakLine": true
      },
      "excel_sheet__named_range": {
        "type": "text",
        "label": "Named Range",
        "show_if": "configure_input_tables=='excel_range_name'",
        "val": ""
      },
      "excel_sheet__columns_from_label": {
        "type": "text",
        "label": "",
        "show_if": "configure_input_tables=='excel_column_and_row_range'",
        "val": "Columns from",
        "disabled": true
      },
      "excel_sheet__from_column": {
        "type": "select",
        "label": "From Column",
        "show_if": "configure_input_tables=='excel_column_and_row_range'",
        "options": {
          "A": {
            "label": "A"
          },
          "B": {
            "label": "B"
          },
          "C": {
            "label": "C"
          },
          "D": {
            "label": "D"
          },
          "E": {
            "label": "E"
          },
          "F": {
            "label": "F"
          },
          "G": {
            "label": "G"
          },
          "H": {
            "label": "H"
          },
          "I": {
            "label": "I"
          },
          "J": {
            "label": "J"
          },
          "K": {
            "label": "K"
          },
          "L": {
            "label": "L"
          },
          "M": {
            "label": "M"
          },
          "N": {
            "label": "N"
          },
          "O": {
            "label": "O"
          },
          "P": {
            "label": "P"
          },
          "Q": {
            "label": "Q"
          },
          "R": {
            "label": "R"
          },
          "S": {
            "label": "S"
          },
          "T": {
            "label": "T"
          },
          "U": {
            "label": "U"
          },
          "V": {
            "label": "V"
          },
          "W": {
            "label": "W"
          },
          "X": {
            "label": "X"
          },
          "Y": {
            "label": "Y"
          },
          "Z": {
            "label": "Z"
          },
          "AA": {
            "label": "AA"
          },
          "AB": {
            "label": "AB"
          },
          "AC": {
            "label": "AC"
          },
          "AD": {
            "label": "AD"
          },
          "AE": {
            "label": "AE"
          },
          "AF": {
            "label": "AF"
          },
          "AG": {
            "label": "AG"
          },
          "AH": {
            "label": "AH"
          },
          "AI": {
            "label": "AI"
          },
          "AJ": {
            "label": "AJ"
          },
          "AK": {
            "label": "AK"
          },
          "AL": {
            "label": "AL"
          },
          "AM": {
            "label": "AM"
          },
          "AN": {
            "label": "AN"
          },
          "AO": {
            "label": "AO"
          },
          "AP": {
            "label": "AP"
          },
          "AQ": {
            "label": "AQ"
          },
          "AR": {
            "label": "AR"
          },
          "AS": {
            "label": "AS"
          },
          "AT": {
            "label": "AT"
          },
          "AU": {
            "label": "AU"
          },
          "AV": {
            "label": "AV"
          },
          "AW": {
            "label": "AW"
          },
          "AX": {
            "label": "AX"
          },
          "AY": {
            "label": "AY"
          },
          "AZ": {
            "label": "AZ"
          }
        },
        "val": "A"
      },
      "excel_sheet__columns_to_label": {
        "type": "text",
        "label": "",
        "show_if": "configure_input_tables=='excel_column_and_row_range'",
        "val": "to",
        "disabled": true
      },
      "excel_sheet__to_column": {
        "type": "select",
        "label": "To Column",
        "show_if": "configure_input_tables=='excel_column_and_row_range'",
        "options": {
          "A": {
            "label": "A"
          },
          "B": {
            "label": "B"
          },
          "C": {
            "label": "C"
          },
          "D": {
            "label": "D"
          },
          "E": {
            "label": "E"
          },
          "F": {
            "label": "F"
          },
          "G": {
            "label": "G"
          },
          "H": {
            "label": "H"
          },
          "I": {
            "label": "I"
          },
          "J": {
            "label": "J"
          },
          "K": {
            "label": "K"
          },
          "L": {
            "label": "L"
          },
          "M": {
            "label": "M"
          },
          "N": {
            "label": "N"
          },
          "O": {
            "label": "O"
          },
          "P": {
            "label": "P"
          },
          "Q": {
            "label": "Q"
          },
          "R": {
            "label": "R"
          },
          "S": {
            "label": "S"
          },
          "T": {
            "label": "T"
          },
          "U": {
            "label": "U"
          },
          "V": {
            "label": "V"
          },
          "W": {
            "label": "W"
          },
          "X": {
            "label": "X"
          },
          "Y": {
            "label": "Y"
          },
          "Z": {
            "label": "Z"
          },
          "AA": {
            "label": "AA"
          },
          "AB": {
            "label": "AB"
          },
          "AC": {
            "label": "AC"
          },
          "AD": {
            "label": "AD"
          },
          "AE": {
            "label": "AE"
          },
          "AF": {
            "label": "AF"
          },
          "AG": {
            "label": "AG"
          },
          "AH": {
            "label": "AH"
          },
          "AI": {
            "label": "AI"
          },
          "AJ": {
            "label": "AJ"
          },
          "AK": {
            "label": "AK"
          },
          "AL": {
            "label": "AL"
          },
          "AM": {
            "label": "AM"
          },
          "AN": {
            "label": "AN"
          },
          "AO": {
            "label": "AO"
          },
          "AP": {
            "label": "AP"
          },
          "AQ": {
            "label": "AQ"
          },
          "AR": {
            "label": "AR"
          },
          "AS": {
            "label": "AS"
          },
          "AT": {
            "label": "AT"
          },
          "AU": {
            "label": "AU"
          },
          "AV": {
            "label": "AV"
          },
          "AW": {
            "label": "AW"
          },
          "AX": {
            "label": "AX"
          },
          "AY": {
            "label": "AY"
          },
          "AZ": {
            "label": "AZ"
          }
        },
        "val": "B",
        "breakLine": true
      },
      "excel_sheet__rows_from_label": {
        "type": "text",
        "label": "",
        "show_if": "configure_input_tables=='excel_column_and_row_range'",
        "val": "Rows from",
        "disabled": true
      },
      "excel_sheet__from_row": {
        "type": "number",
        "label": "From Row(1-1000)",
        "show_if": "configure_input_tables=='excel_column_and_row_range'",
        "required": true,
        "val": 1
      },
      "excel_sheet__rows_to_label": {
        "type": "text",
        "label": "",
        "show_if": "configure_input_tables=='excel_column_and_row_range'",
        "val": "to",
        "disabled": true
      },
      "excel_sheet__to_row": {
        "type": "number",
        "label": "To Row(1-1000)",
        "show_if": "configure_input_tables=='excel_column_and_row_range'",
        "required": true,
        "val": 2,
        "breakLine": true
      },
      "input_table_condition": {
        "type": "fieldset",
        "label": "Search Tables",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "configure_input_tables=='search_tables'",
        "repeat": true,
        "fields": {
          "initial_op": {
            "type": "select",
            "label": "Logic Operator",
            "required": true,
            "show_if" :  "$index == 0",
            "options": {
              "if": {
                "label": "IF"
              },
              "if_not": {
                "label": "IF NOT"
              }
            },
            "val": "if"
          },
          "op": {
            "type": "select",
            "label": "Logic Operator",
            "required": true,
            "show_if" :  "$index > 0",
            "options": {
              "and": {
                "label": "AND"
              },
              "or": {
                "label": "OR"
              },
              "and_not": {
                "label": "AND NOT"
              },
              "or_not": {
                "label": "OR NOT"
              }
            },
            "val": "and"
          },
          "type": {
            "type": "select",
            "label": "Type",
            "required": true,
            "options": {
              "Table Name": {
                "label": "Table Name"
              },
              "Tags": {
                "label": "Tags"
              }
            },
            "val": "Table Name"
          },
          "condition": {
            "type": "select",
            "label": "Operator",
            "required": true,
            "options": {
              "CONTAINS": {
                "label": "CONTAINS"
              },
              "STARTS WITH": {
                "label": "STARTS WITH"
              },
              "ENDS WITH": {
                "label": "ENDS WITH"
              },
              "=": {
                "label": "EQUAL"
              },
              "REGEX MATCH": {
                "label": "REGEX MATCH"
              }
            },
            "val": "CONTAINS"
          },
          "value": {
            "type": "text",
            "label": "Input Value",
            "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "val": "",
            "required": true
          },
          "case_sensitive": {
            "type": "select",
            "label": "Case Sensitive",
            "required": true,
            "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "options": {
              "yes": {
                "label": "Case Sensitive"
              },
              "no": {
                "label": "Case Insensitive"
              }
            },
            "val": "yes"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "remove_input_table_after_processing": {
        "type": "hidden",
        "val": "false"
      },
      "is_word": {
        "type": "hidden",
        "val": "false"
      }
    }
  }
}
,
"/common-snippets/v2/SelectColumnOnlyConfig.json/SelectColumnOnlyConfig.json": {
  "placeholder": {
    "breakLine": true
  },
  "apply_columns_frame": {
    "type": "fieldset",
    "label": "Select column(s) to apply",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "apply_to_all_columns": {
        "type": "checkbox",
        "label": "All Columns",
        "show_if": "configure_input_tables=='zippydoc_table' && false",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "apply_columns__all_but_selected": {
        "type": "checkbox",
        "label": "All but selected",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "apply_columns": {
        "type": "select",
        "label": "Select Columns to Apply",
        "show_if": "configure_input_tables=='zippydoc_table'",
        "required": true,
        "width": "100%",
        "table": "table_id",
        "multiple": true,
        "bind": "COLUMNS",
        "breakLine": true
      },
      "search_tables__apply_columns_text": {
        "type": "text",
        "label": "Column(s) to apply (separated by `;`)",
        "show_if": "configure_input_tables!='zippydoc_table' && search_tables__select_columns_by=='by_name_text'",
        "val": "",
        "placeholder": "Column1; Column2; ColumnN",
        "required": true,
        "style": "width: 100%"
      },
      "search_tables__apply_columns_order": {
        "type": "select",
        "label": "Column(s) to apply",
        "required": true,
        "show_if" :  "configure_input_tables!='zippydoc_table' && search_tables__select_columns_by=='by_order'",
        "options": {
          "col1": {
            "label": "Column 1"
          },
          "col2": {
            "label": "Column 2"
          },
          "col3": {
            "label": "Column 3"
          },
          "col4": {
            "label": "Column 4"
          },
          "col5": {
            "label": "Column 5"
          },
          "col6": {
            "label": "Column 6"
          },
          "col7": {
            "label": "Column 7"
          },
          "col8": {
            "label": "Column 8"
          },
          "col9": {
            "label": "Column 9"
          },
          "col10": {
            "label": "Column 10"
          },
          "col11": {
            "label": "Column 11"
          },
          "col12": {
            "label": "Column 12"
          },
          "col13": {
            "label": "Column 13"
          },
          "col14": {
            "label": "Column 14"
          },
          "col15": {
            "label": "Column 15"
          },
          "col16": {
            "label": "Column 16"
          },
          "col17": {
            "label": "Column 17"
          },
          "col18": {
            "label": "Column 18"
          },
          "col19": {
            "label": "Column 19"
          },
          "col20": {
            "label": "Column 20"
          }
        },
        "multiple": true,
        "val": []
      }
    }
  }
}
,
"/common-snippets/v2/SelectOutputColumnConfig.json/SelectOutputColumnConfig.json": {
  "output.select_output_columns_type": {
    "type": "select",
    "label": "Select Output Columns",
    "required": true,
    "options": {
      "all": {
        "label": "All"
      },
      "standard": {
        "label": "Standard Column Selection"
      },
      "advanced": {
        "label": "Advanced Column Selection"
      }
    },
    "val": "all",
    "breakLine": true
  },
  "output_columns_frame": {
    "type": "fieldset",
    "label": "Select Output Columns",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.select_output_columns_type=='standard'",
    "repeat": false,
    "fields": {
      "output.output_columns": {
        "type": "select",
        "label": "Output Column(s)",
        "show_if": "configure_input_tables=='zippydoc_table'",
        "table": "table_id",
        "bind": "COLUMNS",
        "multiple": true,
        "required": true
      },
      "output.search_tables__output_columns_text": {
        "type": "text",
        "label": "Output Column(s) separated by `;`",
        "show_if": "configure_input_tables!='zippydoc_table' && search_tables__select_columns_by=='by_name_text'",
        "val": "",
        "placeholder": "Column1; Column2; ColumnN",
        "required": true,
        "style": "width: 100%"
      },
      "output.search_tables__output_columns_order": {
        "type": "select",
        "label": "Output Column(s)",
        "show_if": "configure_input_tables!='zippydoc_table' && search_tables__select_columns_by=='by_order'",
        "multiple": true,
        "options": {
          "col1": {
            "label": "Column 1"
          },
          "col2": {
            "label": "Column 2"
          },
          "col3": {
            "label": "Column 3"
          },
          "col4": {
            "label": "Column 4"
          },
          "col5": {
            "label": "Column 5"
          },
          "col6": {
            "label": "Column 6"
          },
          "col7": {
            "label": "Column 7"
          },
          "col8": {
            "label": "Column 8"
          },
          "col9": {
            "label": "Column 9"
          },
          "col10": {
            "label": "Column 10"
          },
          "col11": {
            "label": "Column 11"
          },
          "col12": {
            "label": "Column 12"
          },
          "col13": {
            "label": "Column 13"
          },
          "col14": {
            "label": "Column 14"
          },
          "col15": {
            "label": "Column 15"
          },
          "col16": {
            "label": "Column 16"
          },
          "col17": {
            "label": "Column 17"
          },
          "col18": {
            "label": "Column 18"
          },
          "col19": {
            "label": "Column 19"
          },
          "col20": {
            "label": "Column 20"
          }
        },
        "val": [],
        "breakLine": true
      },
      "output.all_but_selected": {
        "type": "checkbox",
        "label": "All but selected",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  },
  "output.detail_output_columns": {
    "type": "fieldset",
    "label": "Select Output Columns",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.select_output_columns_type=='advanced'",
    "repeat": true,
    "fields": {
      "field_name": {
        "type": "select",
        "label": "Select Column",
        "show_if": "configure_input_tables=='zippydoc_table'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "search_tables__field_name_text": {
        "type": "text",
        "label": "Input Column Name",
        "show_if": "configure_input_tables!='zippydoc_table' && search_tables__select_columns_by=='by_name_text'",
        "val": "",
        "required": true
      },
      "search_tables__field_name_order": {
        "type": "select",
        "label": "Select Column",
        "show_if": "configure_input_tables!='zippydoc_table' && search_tables__select_columns_by=='by_order'",
        "options": {
          "col1": {
            "label": "Column 1"
          },
          "col2": {
            "label": "Column 2"
          },
          "col3": {
            "label": "Column 3"
          },
          "col4": {
            "label": "Column 4"
          },
          "col5": {
            "label": "Column 5"
          },
          "col6": {
            "label": "Column 6"
          },
          "col7": {
            "label": "Column 7"
          },
          "col8": {
            "label": "Column 8"
          },
          "col9": {
            "label": "Column 9"
          },
          "col10": {
            "label": "Column 10"
          },
          "col11": {
            "label": "Column 11"
          },
          "col12": {
            "label": "Column 12"
          },
          "col13": {
            "label": "Column 13"
          },
          "col14": {
            "label": "Column 14"
          },
          "col15": {
            "label": "Column 15"
          },
          "col16": {
            "label": "Column 16"
          },
          "col17": {
            "label": "Column 17"
          },
          "col18": {
            "label": "Column 18"
          },
          "col19": {
            "label": "Column 19"
          },
          "col20": {
            "label": "Column 20"
          }
        },
        "val": ""
      },
      "order": {
        "type": "select",
        "label": "Order",
        "options": {
          "-": {
            "label": "-"
          },
          "asc": {
            "label": "Asc"
          },
          "desc": {
            "label": "Desc"
          }
        },
        "val": "-"
      },
      "format__category": {
        "type": "select",
        "label": "Display Format",
        "required": true,
        "options": {
          "standard": {
            "label": "Standard"
          },
          "number": {
            "label": "Number"
          },
          "percentage": {
            "label": "Percentage"
          },
          "text": {
            "label": "Text"
          },
          "date": {
            "label": "Date"
          },
          "currency": {
            "label": "Currency"
          }
        },
        "val": "standard"
      },
      "format__rounding": {
        "type": "select",
        "label": "Decimal Places for display",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "required": true,
        "options": {
          "no_rounding": {
            "label": "No rounding"
          },
          "0": {
            "label": "0 digits"
          },
          "1": {
            "label": "1 digits"
          },
          "2": {
            "label": "2 digits"
          },
          "3": {
            "label": "3 digits"
          },
          "4": {
            "label": "4 digits"
          },
          "5": {
            "label": "5 digits"
          },
          "6": {
            "label": "6 digits"
          },
          "7": {
            "label": "7 digits"
          },
          "8": {
            "label": "8 digits"
          },
          "9": {
            "label": "9 digits"
          }
        },
        "val": "2"
      },
      "format__use_1000_separator": {
        "type": "checkbox",
        "label": "Use 1000 Separator(.)",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "format__currency_symbol": {
        "type": "select",
        "label": "Symbol",
        "show_if": "this.format__category=='currency'",
        "required": true,
        "options": {
          "dollar": {
            "label": "$"
          },
          "euro": {
            "label": "€"
          },
          "pound": {
            "label": "£"
          },
          "yen": {
            "label": "¥ (Yen, currency of Japan)"
          },
          "colon": {
            "label": "₡ (Colón, currency of Costa Rica)"
          },
          "naira": {
            "label": "₦ (Naira, currency of Nigeria)"
          },
          "rupee": {
            "label": "₨ (Rupee, currency of India)"
          },
          "rupie": {
            "label": "₹ (Rupee, currency of India)"
          },
          "won": {
            "label": "₩ (Won, currency in South Korea and North Korea)"
          },
          "hebrew": {
            "label": "₪ (Currency of Israel)"
          },
          "dong": {
            "label": "₫ (Currency of Vietnam)"
          },
          "kip": {
            "label": "₭ (Kip, currency of Laos)"
          },
          "mongolia": {
            "label": "₮ (Currency of Mongolia)"
          },
          "peso": {
            "label": "₱ (Peso, currency of the Philippines)"
          },
          "guarani": {
            "label": "₲ (Guaraní, currency of Paraguay)"
          },
          "hryvnia": {
            "label": "₴ (Hryvnia, currency of Ukraine)"
          },
          "tenge": {
            "label": "₸ (Tenge, currency of Kazakhstan)"
          },
          "lira": {
            "label": "₺ (Lira, currency of Turkey)"
          },
          "manat": {
            "label": "₼ (Manat, currency of Azerbaijan)"
          },
          "rubles": {
            "label": "₽ (Rubles, currency of Russia)"
          },
          "lari": {
            "label": "₾ (Lari, currency of Georgia)"
          },
          "bitcoin": {
            "label": "₿ (Bitcoin, crypto currency)"
          }
        },
        "val": "dollar"
      },
      "format__date_format": {
        "type": "select",
        "label": "Type",
        "show_if": "this.format__category=='date'",
        "required": true,
        "options": {
          "mm/dd/yyyy": {
            "label": "3/14/2012"
          },
          "D, M dd, Y": {
            "label": "Wednesday, March 14, 2012"
          },
          "yyyy-mm-dd": {
            "label": "2012-03-14"
          },
          "m.dd.yyyy": {
            "label": "3.14.2012"
          },
          "m.dd.yy": {
            "label": "3.14.12"
          },
          "dd.m.yyyy": {
            "label": "14.3.2012"
          },
          "dd.m.yy": {
            "label": "14.3.12"
          },
          "M dd, Y": {
            "label": "March 14, 2012"
          },
          "dd-mm-yyyy": {
            "label": "14-03-2012"
          },
          "mm-dd-yyyy": {
            "label": "03-14-2012"
          },
          "dd-mm-yy": {
            "label": "14-03-12"
          },
          "mm-dd-yy": {
            "label": "03-14-12"
          }
        },
        "val": "mm/dd/yyyy"
      },
      "is_rename": {
        "type": "checkbox",
        "label": "Rename",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "rename": {
        "show_if": "this.is_rename == 'true'",
        "type": "text",
        "required": true,
        "minLength": 1,
        "maxLength": 255,
        "label": "New Column Name",
        "style": "margin-left: 10px"
      },
      "delete": {
        "type": "button",
        "label": "Delete",
        "function": "DELETE_ROW"
      }
    },
    "breakLine": true
  }
},
"/common-snippets/v2/SelectColumnRowConfig.json/SelectColumnRowConfig.json": {
  "placeholder": {
    "breakLine": true
  },
  "apply_columns_frame": {
    "type": "fieldset",
    "label": "Select column(s) to apply",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "apply_to_all_columns": {
        "type": "checkbox",
        "label": "All Columns",
        "show_if": "configure_input_tables=='zippydoc_table' && false",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "apply_columns__all_but_selected": {
        "type": "checkbox",
        "label": "All but selected",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "apply_columns": {
        "type": "select",
        "label": "Select Columns to Apply",
        "show_if": "configure_input_tables=='zippydoc_table'",
        "required": true,
        "table": "table_id",
        "multiple": true,
        "bind": "COLUMNS",
        "breakLine": true
      },
      "search_tables__apply_columns_text": {
        "type": "text",
        "label": "Column(s) to apply (separated by `;`)",
        "show_if": "configure_input_tables!='zippydoc_table' && search_tables__select_columns_by=='by_name_text'",
        "val": "",
        "placeholder": "Column1; Column2; ColumnN",
        "required": true,
        "style": "width: 100%"
      },
      "search_tables__apply_columns_order": {
        "type": "select",
        "label": "Column(s) to apply",
        "required": true,
        "show_if" :  "configure_input_tables!='zippydoc_table' && search_tables__select_columns_by=='by_order'",
        "options": {
          "col1": {
            "label": "Column 1"
          },
          "col2": {
            "label": "Column 2"
          },
          "col3": {
            "label": "Column 3"
          },
          "col4": {
            "label": "Column 4"
          },
          "col5": {
            "label": "Column 5"
          },
          "col6": {
            "label": "Column 6"
          },
          "col7": {
            "label": "Column 7"
          },
          "col8": {
            "label": "Column 8"
          },
          "col9": {
            "label": "Column 9"
          },
          "col10": {
            "label": "Column 10"
          },
          "col11": {
            "label": "Column 11"
          },
          "col12": {
            "label": "Column 12"
          },
          "col13": {
            "label": "Column 13"
          },
          "col14": {
            "label": "Column 14"
          },
          "col15": {
            "label": "Column 15"
          },
          "col16": {
            "label": "Column 16"
          },
          "col17": {
            "label": "Column 17"
          },
          "col18": {
            "label": "Column 18"
          },
          "col19": {
            "label": "Column 19"
          },
          "col20": {
            "label": "Column 20"
          }
        },
        "multiple": true,
        "val": []
      }
    }
  },
  "apply_to_all_rows": {
    "type": "checkbox",
    "label": "All Rows",
    "show_if": "configure_input_tables=='zippydoc_table' && false",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  },
  "apply_rows": {
    "type": "select",
    "label": "Select Rows to Apply",
    "show_if": "configure_input_tables=='zippydoc_table' && $table_id.numOfLabel >= 1",
    "required": true,
    "table": "table_id",
    "multiple": true,
    "bind": "LABELS",
    "breakLine": true
  },
  "intersection": {
    "type": "select",
    "label": "Selection",
    "show_if": "configure_input_tables=='zippydoc_table' && false",
    "options": {
      "all": {
        "label": "All selected Rows & Columns"
      },
      "intersection": {
        "label": "Intersection of selected Rows & Columns"
      }
    },
    "val": "intersection"
  }
}
,
"/common-snippets/v3/SelectColumnOnly.json/SelectColumnOnly.json": {
  "placeholder": {
    "breakLine": true
  },
  "apply_columns_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border: 1px solid #ccc; color: #2C3E50;line-height: 0.9; border-radius: 3px; font-family: montserrat;font-size:13 px",
    "repeat": false,
    "fields": {
      "apply_to_all_columns": {
        "type": "checkbox",
        "label": "All Columns",
        "show_if": "false",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "apply_columns": {
        "type": "select",
        "label": "Select Columns to Apply",
        "style": "float: left; width: 60%",
        "show_if": "search_tables=='false'",
        "required": true,
        "table": "table_id",
        "multiple": true,
        "bind": "COLUMNS"
      },
      "search_tables__apply_columns_text": {
        "type": "text",
        "label": "Column(s) to apply (separated by `;`)",
        "show_if": "search_tables=='true' && search_tables__select_columns_by=='by_name_text'",
        "val": "",
        "placeholder": "Column1; Column2; ColumnN",
        "required": true,
        "style": "width: 100%"
      },
      "search_tables__apply_columns_order": {
        "type": "select",
        "label": "Column(s) to apply",
        "required": true,
        "show_if" :  "search_tables=='true' && search_tables__select_columns_by=='by_order'",
        "options": {
          "col1": {
            "label": "Column 1"
          },
          "col2": {
            "label": "Column 2"
          },
          "col3": {
            "label": "Column 3"
          },
          "col4": {
            "label": "Column 4"
          },
          "col5": {
            "label": "Column 5"
          },
          "col6": {
            "label": "Column 6"
          },
          "col7": {
            "label": "Column 7"
          },
          "col8": {
            "label": "Column 8"
          },
          "col9": {
            "label": "Column 9"
          },
          "col10": {
            "label": "Column 10"
          },
          "col11": {
            "label": "Column 11"
          },
          "col12": {
            "label": "Column 12"
          },
          "col13": {
            "label": "Column 13"
          },
          "col14": {
            "label": "Column 14"
          },
          "col15": {
            "label": "Column 15"
          },
          "col16": {
            "label": "Column 16"
          },
          "col17": {
            "label": "Column 17"
          },
          "col18": {
            "label": "Column 18"
          },
          "col19": {
            "label": "Column 19"
          },
          "col20": {
            "label": "Column 20"
          }
        },
        "multiple": true,
        "val": []
      },
      "apply_columns__all_but_selected": {
        "type": "checkbox",
        "label": "All but selected",
        "style": "float: right; width: 30%",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-left: 15px",
        "breakLine": true
      }
    }
  }
}
,
"/common-snippets/v3/SelectColumnRowWEmbed.json/SelectColumnRowWEmbed.json": {
  "placeholder": {
    "breakLine": true
  },
  "apply_columns_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border: 1px solid #ccc; color: #2C3E50;line-height: 0.9; border-radius: 3px; font-family: montserrat;font-size:13 px",
    "show_if": "$rootScope.hostType!='Embed'",
    "repeat": false,
    "fields": {
      "apply_to_all_columns": {
        "type": "checkbox",
        "label": "Apply to all columns",
        "show_if": "false",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "apply_columns": {
        "type": "select",
        "label": "Select Columns to Apply",
        "style": "float: left; width: 65%; padding: 15px",
        "show_if": "search_tables=='false'",
        "required": true,
        "table": "table_id",
        "multiple": true,
        "bind": "COLUMNS"
      },
      "search_tables__apply_columns_text": {
        "type": "text",
        "label": "Column(s) to apply (separated by `;`)",
        "show_if": "search_tables=='true' && search_tables__select_columns_by=='by_name_text'",
        "val": "",
        "placeholder": "Column1; Column2; ColumnN",
        "required": true,
        "style": "width: 100%"
      },
      "search_tables__apply_columns_order": {
        "type": "select",
        "label": "Column(s) to apply",
        "required": true,
        "show_if" :  "search_tables=='true' && search_tables__select_columns_by=='by_order'",
        "options": {
          "col1": {
            "label": "Column 1"
          },
          "col2": {
            "label": "Column 2"
          },
          "col3": {
            "label": "Column 3"
          },
          "col4": {
            "label": "Column 4"
          },
          "col5": {
            "label": "Column 5"
          },
          "col6": {
            "label": "Column 6"
          },
          "col7": {
            "label": "Column 7"
          },
          "col8": {
            "label": "Column 8"
          },
          "col9": {
            "label": "Column 9"
          },
          "col10": {
            "label": "Column 10"
          },
          "col11": {
            "label": "Column 11"
          },
          "col12": {
            "label": "Column 12"
          },
          "col13": {
            "label": "Column 13"
          },
          "col14": {
            "label": "Column 14"
          },
          "col15": {
            "label": "Column 15"
          },
          "col16": {
            "label": "Column 16"
          },
          "col17": {
            "label": "Column 17"
          },
          "col18": {
            "label": "Column 18"
          },
          "col19": {
            "label": "Column 19"
          },
          "col20": {
            "label": "Column 20"
          }
        },
        "multiple": true,
        "val": []
      },
      "apply_columns__all_but_selected": {
        "type": "checkbox",
        "label": "All but selected",
        "style": "float: right; width: 30%",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "float: left; width: 30%",
        "breakLine": true
      }
    }
  },
  "apply_to_all_rows": {
    "type": "checkbox",
    "label": "All Rows",
    "show_if": "$rootScope.hostType!='Embed' && search_tables=='false' && false",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  },
  "apply_rows": {
    "type": "select",
    "label": "Select Rows to Apply",
    "show_if": "$rootScope.hostType!='Embed' && search_tables=='false' && $table_id.numOfLabel >= 1",
    "required": true,
    "table": "table_id",
    "multiple": true,
    "bind": "LABELS",
    "breakLine": true
  },
  "intersection": {
    "type": "select",
    "label": "Selection",
    "show_if": "$rootScope.hostType!='Embed' && search_tables=='false' && false",
    "options": {
      "all": {
        "label": "All selected Rows & Columns"
      },
      "intersection": {
        "label": "Intersection of selected Rows & Columns"
      }
    },
    "val": "intersection"
  }
}
,
"/common-snippets/v3/SelectTableWoSearch.json/SelectTableWoSearch.json": {
  "input": {
    "type": "fieldset",
    "label": "",
    "style": "border: 1px solid #ccc; color: #2C3E50; line-height: 0.9; border-radius: 3px; font-family: montserrat;font-size:13 px",
    "repeat": false,
    "fields": {
      "table_id": {
        "type": "select",
        "label": "Input Table",
        "bind": "TABLES",
        "empty": "",
        "required": true,
        "style": "margin-right: 15px"
      },
      "remove_input_table_after_processing": {
        "type": "hidden",
        "val": "false"
      },
      "is_word": {
        "type": "hidden",
        "val": "false"
      }
    }
  }
}
,
"/common-snippets/v3/SelectTables.json/SelectTables.json": {
  "input": {
    "type": "fieldset",
    "label": "Select Input Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "configure_input_tables": {
        "type": "select",
        "label": "Select Source",
        "options": {
          "zippydoc_table": {
            "label": "Flow Table"
          },
          "search_tables": {
            "label": "Search Tables"
          }
        },
        "val": "zippydoc_table"
      },
      "search_tables__types": {
        "type": "select",
        "label": "Select Source",
        "show_if": "configure_input_tables=='search_tables'",
        "options": {
          "owned_tables": {
            "label": "Owned tables"
          },
          "shared_tables": {
            "label": "Shared tables"
          },
          "published_tables": {
            "label": "Published tables"
          }
        },
        "multiple": true,
        "val": ["owned_tables"]
      },
      "tables": {
        "type": "fieldset",
        "label": "Select Tables",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "configure_input_tables=='zippydoc_table'",
        "repeat": true,
        "fields": {
          "table_id": {
            "type": "select",
            "label": "Select Table",
            "bind": "TABLES"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "input_table_condition": {
        "type": "fieldset",
        "label": "Search Tables",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "configure_input_tables=='search_tables'",
        "repeat": true,
        "fields": {
          "initial_op": {
            "type": "select",
            "label": "Logic Operator",
            "required": true,
            "show_if" :  "$index == 0",
            "options": {
              "if": {
                "label": "IF"
              },
              "if_not": {
                "label": "IF NOT"
              }
            },
            "val": "if"
          },
          "op": {
            "type": "select",
            "label": "Logic Operator",
            "required": true,
            "show_if" :  "$index > 0",
            "options": {
              "and": {
                "label": "AND"
              },
              "or": {
                "label": "OR"
              },
              "and_not": {
                "label": "AND NOT"
              },
              "or_not": {
                "label": "OR NOT"
              }
            },
            "val": "and"
          },
          "type": {
            "type": "select",
            "label": "Type",
            "required": true,
            "options": {
              "Table Name": {
                "label": "Table Name"
              },
              "Tags": {
                "label": "Tags"
              }
            },
            "val": "Table Name"
          },
          "condition": {
            "type": "select",
            "label": "Operator",
            "required": true,
            "options": {
              "CONTAINS": {
                "label": "CONTAINS"
              },
              "CONTAINED IN STRING": {
                "label": "CONTAINED IN"
              },
              "STARTS WITH": {
                "label": "STARTS WITH"
              },
              "ENDS WITH": {
                "label": "ENDS WITH"
              },
              "=": {
                "label": "EQUAL"
              },
              "REGEX MATCH": {
                "label": "REGEX MATCH"
              }
            },
            "val": "CONTAINS"
          },
          "value": {
            "type": "text",
            "label": "Input Value",
            "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "val": "",
            "required": true
          },
          "case_sensitive": {
            "type": "select",
            "label": "Case Sensitive",
            "required": true,
            "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "options": {
              "yes": {
                "label": "Case Sensitive"
              },
              "no": {
                "label": "Case Insensitive"
              }
            },
            "val": "yes"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      }
    }
  }
},
"/common-snippets/v3/SelectTableWEmbed.json/SelectTableWEmbed.json": {
  "input": {
    "type": "fieldset",
    "label": "",
    "style": "border: 1px solid #ccc;  color: #2C3E50;line-height: 0.9; border-radius: 3px; font-family: montserrat;font-size:13 px",
    "repeat": false,
    "fields": {
      "table_id": {
        "type": "select",
        "label": "Input Table",
        "style": "float: left; width: 65%; align: right",
        "show_if": "$rootScope.hostType!='Embed' && search_tables=='false'",
        "bind": "TABLES",
        "empty": "",
        "required": true
      },
      "search_tables": {
        "type": "checkbox",
        "label": "Search Table(s)",
        "style": "float: right; width: 30%",
        "show_if": "$rootScope.hostType!='Embed'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "search_tables__types": {
        "type": "select",
        "label": "Table Search Source",
        "show_if": "$rootScope.hostType!='Embed' && search_tables=='true'",
        "options": {
          "owned_tables": {
            "label": "Owned tables"
          },
          "shared_tables": {
            "label": "Shared tables"
          },
          "published_tables": {
            "label": "Published tables"
          }
        },
        "multiple": true,
        "val": ["owned_tables"]
      },
      "search_tables__select_columns_by": {
        "type": "select",
        "label": "Column selection type",
        "show_if": "$rootScope.hostType!='Embed' && search_tables=='true'",
        "options": {
          "by_name_text": {
            "label": "Select columns by name"
          },
          "by_order": {
            "label": "Select columns by order"
          }
        },
        "val": "by_name_text"
      },
      "input_table_condition": {
        "type": "fieldset",
        "label": "Search Tables",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "$rootScope.hostType!='Embed' && search_tables=='true'",
        "repeat": true,
        "fields": {
          "initial_op": {
            "type": "select",
            "label": "Logic Operator",
            "required": true,
            "show_if" :  "$index == 0",
            "options": {
              "if": {
                "label": "IF"
              },
              "if_not": {
                "label": "IF NOT"
              }
            },
            "val": "if"
          },
          "op": {
            "type": "select",
            "label": "Logic Operator",
            "required": true,
            "show_if" :  "$index > 0",
            "options": {
              "and": {
                "label": "AND"
              },
              "or": {
                "label": "OR"
              },
              "and_not": {
                "label": "AND NOT"
              },
              "or_not": {
                "label": "OR NOT"
              }
            },
            "val": "and"
          },
          "type": {
            "type": "select",
            "label": "Type",
            "required": true,
            "options": {
              "Table Name": {
                "label": "Table Name"
              },
              "Tags": {
                "label": "Tags"
              }
            },
            "val": "Table Name"
          },
          "condition": {
            "type": "select",
            "label": "Operator",
            "required": true,
            "options": {
              "CONTAINS": {
                "label": "CONTAINS"
              },
              "STARTS WITH": {
                "label": "STARTS WITH"
              },
              "ENDS WITH": {
                "label": "ENDS WITH"
              },
              "=": {
                "label": "EQUAL"
              },
              "REGEX MATCH": {
                "label": "REGEX MATCH"
              }
            },
            "val": "CONTAINS"
          },
          "value": {
            "type": "text",
            "label": "Input Value",
            "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "val": "",
            "required": true
          },
          "case_sensitive": {
            "type": "select",
            "label": "Case Sensitive",
            "required": true,
            "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "options": {
              "yes": {
                "label": "Case Sensitive"
              },
              "no": {
                "label": "Case Insensitive"
              }
            },
            "val": "yes"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "remove_input_table_after_processing": {
        "type": "hidden",
        "val": "false"
      },
      "is_word": {
        "type": "hidden",
        "val": "false"
      }
    }
  }
}
,
"/common-snippets/v3/SelectColumnRow.json/SelectColumnRow.json": {
  "placeholder": {
    "breakLine": true
  },
  "apply_columns_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "apply_to_all_columns": {
        "type": "checkbox",
        "label": "Apply to all columns",
        "show_if": "false",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "apply_columns": {
        "type": "select",
        "label": "Select Columns to Apply",
        "style": "float: left; width: 65%",
        "show_if": "search_tables=='false'",
        "required": true,
        "table": "table_id",
        "multiple": true,
        "bind": "COLUMNS"
      },
      "search_tables__apply_columns_text": {
        "type": "text",
        "label": "Column(s) to apply (separated by `;`)",
        "show_if": "search_tables=='true' && search_tables__select_columns_by=='by_name_text'",
        "val": "",
        "placeholder": "Column1; Column2; ColumnN",
        "required": true,
        "style": "width: 100%"
      },
      "search_tables__apply_columns_order": {
        "type": "select",
        "label": "Column(s) to apply",
        "required": true,
        "show_if" :  "search_tables=='true' && search_tables__select_columns_by=='by_order'",
        "options": {
          "col1": {
            "label": "Column 1"
          },
          "col2": {
            "label": "Column 2"
          },
          "col3": {
            "label": "Column 3"
          },
          "col4": {
            "label": "Column 4"
          },
          "col5": {
            "label": "Column 5"
          },
          "col6": {
            "label": "Column 6"
          },
          "col7": {
            "label": "Column 7"
          },
          "col8": {
            "label": "Column 8"
          },
          "col9": {
            "label": "Column 9"
          },
          "col10": {
            "label": "Column 10"
          },
          "col11": {
            "label": "Column 11"
          },
          "col12": {
            "label": "Column 12"
          },
          "col13": {
            "label": "Column 13"
          },
          "col14": {
            "label": "Column 14"
          },
          "col15": {
            "label": "Column 15"
          },
          "col16": {
            "label": "Column 16"
          },
          "col17": {
            "label": "Column 17"
          },
          "col18": {
            "label": "Column 18"
          },
          "col19": {
            "label": "Column 19"
          },
          "col20": {
            "label": "Column 20"
          }
        },
        "multiple": true,
        "val": []
      },
      "apply_columns__all_but_selected": {
        "type": "checkbox",
        "label": "All but selected",
        "style": "float: right; width: 30%",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  },
  "apply_to_all_rows": {
    "type": "checkbox",
    "label": "All Rows",
    "show_if": "search_tables=='false' && false",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  },
  "apply_rows": {
    "type": "select",
    "label": "Select Rows to Apply",
    "show_if": "search_tables=='false' && $table_id.numOfLabel >= 1",
    "required": true,
    "table": "table_id",
    "multiple": true,
    "bind": "LABELS",
    "breakLine": true
  },
  "intersection": {
    "type": "select",
    "label": "Selection",
    "show_if": "search_tables=='false' && false",
    "options": {
      "all": {
        "label": "All selected Rows & Columns"
      },
      "intersection": {
        "label": "Intersection of selected Rows & Columns"
      }
    },
    "val": "intersection"
  }
}
,
"/common-snippets/v3/SelectOutputColumn.json/SelectOutputColumn.json": {
  "output.select_output_columns_type": {
    "type": "select",
    "label": "Select Output Columns",
    "required": true,
    "options": {
      "all": {
        "label": "All"
      },
      "standard": {
        "label": "Standard Column Selection"
      },
      "advanced": {
        "label": "Advanced Column Selection"
      }
    },
    "val": "all",
    "style": "margin-right: 15px"
  },
  "output_columns_frame": {
    "type": "fieldset",
    "label": "Select Output Columns",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.select_output_columns_type=='standard'",
    "repeat": false,
    "fields": {
      "output.output_columns": {
        "type": "select",
        "label": "Output Column(s)",
        "show_if": "search_tables=='false'",
        "table": "table_id",
        "bind": "COLUMNS",
        "multiple": true,
        "required": true,
        "breakLine": true
      },
      "output.excel_sheet__output_columns": {
        "type": "select",
        "label": "Output Column(s)",
        "show_if": "search_tables=='true'",
        "multiple": true,
        "options": {
          "A": {
            "label": "A"
          },
          "B": {
            "label": "B"
          },
          "C": {
            "label": "C"
          },
          "D": {
            "label": "D"
          },
          "E": {
            "label": "E"
          },
          "F": {
            "label": "F"
          },
          "G": {
            "label": "G"
          },
          "H": {
            "label": "H"
          },
          "I": {
            "label": "I"
          },
          "J": {
            "label": "J"
          },
          "K": {
            "label": "K"
          },
          "L": {
            "label": "L"
          },
          "M": {
            "label": "M"
          },
          "N": {
            "label": "N"
          },
          "O": {
            "label": "O"
          },
          "P": {
            "label": "P"
          },
          "Q": {
            "label": "Q"
          },
          "R": {
            "label": "R"
          },
          "S": {
            "label": "S"
          },
          "T": {
            "label": "T"
          },
          "U": {
            "label": "U"
          },
          "V": {
            "label": "V"
          },
          "W": {
            "label": "W"
          },
          "X": {
            "label": "X"
          },
          "Y": {
            "label": "Y"
          },
          "Z": {
            "label": "Z"
          },
          "AA": {
            "label": "AA"
          },
          "AB": {
            "label": "AB"
          },
          "AC": {
            "label": "AC"
          },
          "AD": {
            "label": "AD"
          },
          "AE": {
            "label": "AE"
          },
          "AF": {
            "label": "AF"
          },
          "AG": {
            "label": "AG"
          },
          "AH": {
            "label": "AH"
          },
          "AI": {
            "label": "AI"
          },
          "AJ": {
            "label": "AJ"
          },
          "AK": {
            "label": "AK"
          },
          "AL": {
            "label": "AL"
          },
          "AM": {
            "label": "AM"
          },
          "AN": {
            "label": "AN"
          },
          "AO": {
            "label": "AO"
          },
          "AP": {
            "label": "AP"
          },
          "AQ": {
            "label": "AQ"
          },
          "AR": {
            "label": "AR"
          },
          "AS": {
            "label": "AS"
          },
          "AT": {
            "label": "AT"
          },
          "AU": {
            "label": "AU"
          },
          "AV": {
            "label": "AV"
          },
          "AW": {
            "label": "AW"
          },
          "AX": {
            "label": "AX"
          },
          "AY": {
            "label": "AY"
          },
          "AZ": {
            "label": "AZ"
          }
        },
        "val": ""
      },
      "output.all_but_selected": {
        "type": "checkbox",
        "label": "All but selected",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  },
  "output.detail_output_columns": {
    "type": "fieldset",
    "label": "Select Output Columns",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.select_output_columns_type=='advanced'",
    "repeat": true,
    "fields": {
      "field_name": {
        "type": "select",
        "label": "Select Column",
        "show_if": "search_tables=='false'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "excel_sheet__field_name": {
        "type": "select",
        "label": "Select Column",
        "show_if": "search_tables=='true'",
        "options": {
          "A": {
            "label": "A"
          },
          "B": {
            "label": "B"
          },
          "C": {
            "label": "C"
          },
          "D": {
            "label": "D"
          },
          "E": {
            "label": "E"
          },
          "F": {
            "label": "F"
          },
          "G": {
            "label": "G"
          },
          "H": {
            "label": "H"
          },
          "I": {
            "label": "I"
          },
          "J": {
            "label": "J"
          },
          "K": {
            "label": "K"
          },
          "L": {
            "label": "L"
          },
          "M": {
            "label": "M"
          },
          "N": {
            "label": "N"
          },
          "O": {
            "label": "O"
          },
          "P": {
            "label": "P"
          },
          "Q": {
            "label": "Q"
          },
          "R": {
            "label": "R"
          },
          "S": {
            "label": "S"
          },
          "T": {
            "label": "T"
          },
          "U": {
            "label": "U"
          },
          "V": {
            "label": "V"
          },
          "W": {
            "label": "W"
          },
          "X": {
            "label": "X"
          },
          "Y": {
            "label": "Y"
          },
          "Z": {
            "label": "Z"
          },
          "AA": {
            "label": "AA"
          },
          "AB": {
            "label": "AB"
          },
          "AC": {
            "label": "AC"
          },
          "AD": {
            "label": "AD"
          },
          "AE": {
            "label": "AE"
          },
          "AF": {
            "label": "AF"
          },
          "AG": {
            "label": "AG"
          },
          "AH": {
            "label": "AH"
          },
          "AI": {
            "label": "AI"
          },
          "AJ": {
            "label": "AJ"
          },
          "AK": {
            "label": "AK"
          },
          "AL": {
            "label": "AL"
          },
          "AM": {
            "label": "AM"
          },
          "AN": {
            "label": "AN"
          },
          "AO": {
            "label": "AO"
          },
          "AP": {
            "label": "AP"
          },
          "AQ": {
            "label": "AQ"
          },
          "AR": {
            "label": "AR"
          },
          "AS": {
            "label": "AS"
          },
          "AT": {
            "label": "AT"
          },
          "AU": {
            "label": "AU"
          },
          "AV": {
            "label": "AV"
          },
          "AW": {
            "label": "AW"
          },
          "AX": {
            "label": "AX"
          },
          "AY": {
            "label": "AY"
          },
          "AZ": {
            "label": "AZ"
          }
        },
        "val": ""
      },
      "order": {
        "type": "select",
        "label": "Order",
        "options": {
          "-": {
            "label": "-"
          },
          "asc": {
            "label": "Asc"
          },
          "desc": {
            "label": "Desc"
          }
        },
        "val": "-"
      },
      "format__category": {
        "type": "select",
        "label": "Display Format",
        "required": true,
        "options": {
          "standard": {
            "label": "Standard"
          },
          "number": {
            "label": "Number"
          },
          "percentage": {
            "label": "Percentage"
          },
          "text": {
            "label": "Text"
          },
          "date": {
            "label": "Date"
          },
          "currency": {
            "label": "Currency"
          }
        },
        "val": "standard"
      },
      "format__rounding": {
        "type": "select",
        "label": "Decimal Places for display",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "required": true,
        "options": {
          "no_rounding": {
            "label": "No rounding"
          },
          "0": {
            "label": "0 digits"
          },
          "1": {
            "label": "1 digits"
          },
          "2": {
            "label": "2 digits"
          },
          "3": {
            "label": "3 digits"
          },
          "4": {
            "label": "4 digits"
          },
          "5": {
            "label": "5 digits"
          },
          "6": {
            "label": "6 digits"
          },
          "7": {
            "label": "7 digits"
          },
          "8": {
            "label": "8 digits"
          },
          "9": {
            "label": "9 digits"
          }
        },
        "val": "2"
      },
      "format__use_1000_separator": {
        "type": "checkbox",
        "label": "Use 1000 Separator(.)",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "format__currency_symbol": {
        "type": "select",
        "label": "Symbol",
        "show_if": "this.format__category=='currency'",
        "required": true,
        "options": {
          "dollar": {
            "label": "$"
          },
          "euro": {
            "label": "€"
          },
          "pound": {
            "label": "£"
          },
          "yen": {
            "label": "¥ (Yen, currency of Japan)"
          },
          "colon": {
            "label": "₡ (Colón, currency of Costa Rica)"
          },
          "naira": {
            "label": "₦ (Naira, currency of Nigeria)"
          },
          "rupee": {
            "label": "₨ (Rupee, currency of India)"
          },
          "rupie": {
            "label": "₹ (Rupee, currency of India)"
          },
          "won": {
            "label": "₩ (Won, currency in South Korea and North Korea)"
          },
          "hebrew": {
            "label": "₪ (Currency of Israel)"
          },
          "dong": {
            "label": "₫ (Currency of Vietnam)"
          },
          "kip": {
            "label": "₭ (Kip, currency of Laos)"
          },
          "mongolia": {
            "label": "₮ (Currency of Mongolia)"
          },
          "peso": {
            "label": "₱ (Peso, currency of the Philippines)"
          },
          "guarani": {
            "label": "₲ (Guaraní, currency of Paraguay)"
          },
          "hryvnia": {
            "label": "₴ (Hryvnia, currency of Ukraine)"
          },
          "tenge": {
            "label": "₸ (Tenge, currency of Kazakhstan)"
          },
          "lira": {
            "label": "₺ (Lira, currency of Turkey)"
          },
          "manat": {
            "label": "₼ (Manat, currency of Azerbaijan)"
          },
          "rubles": {
            "label": "₽ (Rubles, currency of Russia)"
          },
          "lari": {
            "label": "₾ (Lari, currency of Georgia)"
          },
          "bitcoin": {
            "label": "₿ (Bitcoin, crypto currency)"
          }
        },
        "val": "dollar"
      },
      "format__date_format": {
        "type": "select",
        "label": "Type",
        "show_if": "this.format__category=='date'",
        "required": true,
        "options": {
          "mm/dd/yyyy": {
            "label": "3/14/2012"
          },
          "D, M dd, Y": {
            "label": "Wednesday, March 14, 2012"
          },
          "yyyy-mm-dd": {
            "label": "2012-03-14"
          },
          "m.dd.yyyy": {
            "label": "3.14.2012"
          },
          "m.dd.yy": {
            "label": "3.14.12"
          },
          "dd.m.yyyy": {
            "label": "14.3.2012"
          },
          "dd.m.yy": {
            "label": "14.3.12"
          },
          "M dd, Y": {
            "label": "March 14, 2012"
          },
          "dd-mm-yyyy": {
            "label": "14-03-2012"
          },
          "mm-dd-yyyy": {
            "label": "03-14-2012"
          },
          "dd-mm-yy": {
            "label": "14-03-12"
          },
          "mm-dd-yy": {
            "label": "03-14-12"
          }
        },
        "val": "mm/dd/yyyy"
      },
      "is_rename": {
        "type": "checkbox",
        "label": "Rename",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "rename": {
        "show_if": "this.is_rename == 'true'",
        "type": "text",
        "required": true,
        "minLength": 1,
        "maxLength": 255,
        "label": "New Column Name",
        "style": "margin-left: 10px"
      },
      "delete": {
        "type": "button",
        "label": "Delete",
        "function": "DELETE_ROW"
      }
    },
    "breakLine": true
  }
}
,
"/common-snippets/v3/SelectTableWoSearchWEmbed.json/SelectTableWoSearchWEmbed.json": {
  "input": {
    "type": "fieldset",
    "label": "",
    "style": "border: 1px solid #ccc; color: #2C3E50; line-height: 0.9; border-radius: 3px; font-family: montserrat;font-size:13 px",
    "show_if": "$rootScope.hostType!='Embed'",
    "repeat": false,
    "fields": {
      "table_id": {
        "type": "select",
        "label": "Input Table",
        "bind": "TABLES",
        "empty": "",
        "required": true,
        "style": "margin-right: 15px"
      },
      "remove_input_table_after_processing": {
        "type": "hidden",
        "val": "false"
      },
      "is_word": {
        "type": "hidden",
        "val": "false"
      }
    }
  }
}
,
"/common-snippets/v3/SelectTable.json/SelectTable.json": {
  "input": {
    "type": "fieldset",
    "label": "",
    "style": "border: 1px solid #ccc; color: #2C3E50;line-height: 0.9; border-radius: 3px",
    "repeat": false,
    "fields": {
      "table_id": {
        "type": "select",
        "label": "Input Table",
        "style": "float: left; width: 65%; align: right",
        "show_if": "search_tables=='false'",
        "bind": "TABLES",
        "empty": "",
        "required": true
      },
      "search_tables": {
        "type": "checkbox",
        "label": "Search Table(s)",
        "style": "float: right; width: 30%",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "search_tables__types": {
        "type": "select",
        "label": "Table Search Source",
        "show_if": "search_tables=='true'",
        "options": {
          "owned_tables": {
            "label": "Owned tables"
          },
          "shared_tables": {
            "label": "Shared tables"
          },
          "published_tables": {
            "label": "Published tables"
          }
        },
        "multiple": true,
        "val": ["owned_tables"]
      },
      "input_table_condition": {
        "type": "fieldset",
        "label": "Search Tables",
        "style": "border: 1px solid #ccc",
        "show_if": "search_tables=='true'",
        "repeat": true,
        "fields": {
          "initial_op": {
            "type": "select",
            "label": "Logic Operator",
            "required": true,
            "show_if" :  "$index == 0",
            "options": {
              "if": {
                "label": "IF"
              },
              "if_not": {
                "label": "IF NOT"
              }
            },
            "val": "if"
          },
          "op": {
            "type": "select",
            "label": "Logic Operator",
            "required": true,
            "show_if" :  "$index > 0",
            "options": {
              "and": {
                "label": "AND"
              },
              "or": {
                "label": "OR"
              },
              "and_not": {
                "label": "AND NOT"
              },
              "or_not": {
                "label": "OR NOT"
              }
            },
            "val": "and"
          },
          "type": {
            "type": "select",
            "label": "Type",
            "required": true,
            "options": {
              "Table Name": {
                "label": "Table Name"
              },
              "Tags": {
                "label": "Tags"
              }
            },
            "val": "Table Name"
          },
          "condition": {
            "type": "select",
            "label": "Operator",
            "required": true,
            "options": {
              "CONTAINS": {
                "label": "CONTAINS"
              },
              "STARTS WITH": {
                "label": "STARTS WITH"
              },
              "ENDS WITH": {
                "label": "ENDS WITH"
              },
              "=": {
                "label": "EQUAL"
              },
              "REGEX MATCH": {
                "label": "REGEX MATCH"
              }
            },
            "val": "CONTAINS"
          },
          "value": {
            "type": "text",
            "label": "Input Value",
            "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "val": "",
            "required": true
          },
          "case_sensitive": {
            "type": "select",
            "label": "Case Sensitive",
            "required": true,
            "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "options": {
              "yes": {
                "label": "Case Sensitive"
              },
              "no": {
                "label": "Case Insensitive"
              }
            },
            "val": "yes"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "search_tables__select_columns_by": {
        "type": "select",
        "label": "Column selection type",
        "show_if": "search_tables=='true'",
        "options": {
          "by_name_text": {
            "label": "Select columns by name"
          },
          "by_order": {
            "label": "Select columns by order"
          }
        },
        "val": "by_name_text"
      },
      "remove_input_table_after_processing": {
        "type": "hidden",
        "val": "false"
      },
      "is_word": {
        "type": "hidden",
        "val": "false"
      }
    }
  }
}
,
}
,
"/FlexmonsterLineOptions.json/FlexmonsterLineOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "show_if": "options.configure_manual=='true'",
    "repeat": false,
    "fields": {
      "options.type": {
        "type": "hidden",
        "val": "line_chart"
      },
      "options.chart_type": {
        "type": "hidden",
        "val": "line"
      },
      "options.add_column_cols": {
        "type": "checkbox",
        "label": "by Category",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.column_cols": {
        "type": "fieldset",
        "label": "Category column(s)",
        "show_if": "options.add_column_cols=='true'",
        "repeat": true,
        "fields": {
          "column_col": {
            "type": "select",
            "label": "Category column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "is_date": {
            "type": "checkbox",
            "label": "Is Date",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.row_cols": {
        "type": "fieldset",
        "label": "Series column(s)",
        "repeat": true,
        "fields": {
          "row_col": {
            "type": "select",
            "label": "Series column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "is_date": {
            "type": "checkbox",
            "label": "Is Date",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.measure_cols": {
        "type": "fieldset",
        "label": "Value column(s)",
        "repeat": true,
        "fields": {
          "measure_col": {
            "type": "select",
            "label": "Value Column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "aggregation": {
            "type": "select",
            "label": "Aggregation Function",
            "options": {
              "sum": {
                "label": "Sum"
              },
              "count": {
                "label": "Count"
              },
              "distinctcount": {
                "label": "Distinct Count"
              },
              "average": {
                "label": "Average"
              },
              "median": {
                "label": "Median"
              },
              "product": {
                "label": "Product"
              },
              "min": {
                "label": "Min"
              },
              "max": {
                "label": "Max"
              },
              "stdevp": {
                "label": "Population Standard Deviation"
              },
              "stdevs": {
                "label": "Sample Standard Deviation"
              },
              "percent": {
                "label": "Percent"
              }
            },
            "val": "sum",
            "required": true,
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      }
    }
  }
}
,
"/UserManageOptions.json/UserManageOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Select Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.manage_type": {
        "type": "select",
        "label": "Type",
        "required": true,
        "options": {
          "add_user": {
            "label": "Add user"
          },
          "delete_user": {
            "label": "Delete user"
          }
        },
        "val": "add_user",
        "breakLine": true
      },
      "options.email": {
        "type": "text",
        "label": "MS login email",
        "show_if": "options.manage_type=='add_user'",
        "required": true,
        "val": "",
        "breakLine": true
      },
      "options.user_role": {
        "type": "select",
        "label": "User role",
        "show_if": "options.manage_type=='add_user'",
        "options": {
          "ROLE_USER": {
            "label": "User"
          },
          "ROLE_ADMIN": {
            "label": "Admin"
          }
        },
        "val": "ROLE_USER",
        "breakLine": true
      },
      "options.points": {
        "type": "number",
        "label": "Available points",
        "show_if": "options.manage_type=='add_user'",
        "required": true,
        "val": 100,
        "breakLine": true
      },
      "options.user_id_to_delete": {
        "type": "number",
        "label": "User ID",
        "show_if": "options.manage_type=='delete_user'",
        "required": true,
        "val": 0,
        "breakLine": true
      }
    }
  }
}
,
"/DCCOVID19WorldDataOptions.json/DCCOVID19WorldDataOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.group_by": {
        "type": "select",
        "label": "Group By",
        "required": true,
        "options": {
          "Region": {
            "label": "Region"
          },
          "Income Group": {
            "label": "Income Group"
          }
        },
        "val": "Region"
      },
      "options.stat_var_name": {
        "type": "select",
        "label": "Statistics Data",
        "required": true,
        "options": {
          "CumulativeCount_Vaccine_COVID_19_Administered": {
            "label": "Cumulative Count of COVID_19, Vaccine Administered"
          },
          "IncrementalCount_Vaccine_COVID_19_Administered": {
            "label": "Incremental Count of COVID_19, Vaccine Administered"
          },
          "CumulativeCount_MedicalTest_ConditionCOVID_19": {
            "label": "Cumulative Count of COVID_19"
          },
          "IncrementalCount_MedicalTest_ConditionCOVID_19": {
            "label": "Incremental Count of COVID_19"
          },
          "CumulativeCount_MedicalTest_COVID_19_PCR": {
            "label": "Cumulative Count of COVID_19, COVID-19 PCRTest"
          },
          "IncrementalCount_MedicalTest_COVID_19_PCR": {
            "label": "Incremental Count of COVID_19, COVID-19 PCRTest"
          },
          "CumulativeCount_MedicalConditionIncident_COVID_19_ConfirmedCase": {
            "label": "Cumulative Count of Confirmed Case"
          },
          "IncrementalCount_MedicalConditionIncident_COVID_19_ConfirmedCase": {
            "label": "Incremental Count of Confirmed Case"
          },
          "CumulativeCount_MedicalConditionIncident_COVID_19_PatientDeceased": {
            "label": "Cumulative Count of Patient Deceased"
          },
          "IncrementalCount_MedicalConditionIncident_COVID_19_PatientDeceased": {
            "label": "Incremental Count of Patient Deceased"
          },
          "Count_MedicalConditionIncident_COVID_19_PatientHospitalized": {
            "label": "Count of Patient Hospitalized"
          },
          "Count_MedicalConditionIncident_COVID_19_PatientInICU": {
            "label": "Count of Patient in ICU"
          },
          "dc/n9rqwq8d3lcx3": {
            "label": "Covid 19 Mobility Trend of Grocery Store & Pharmacy"
          },
          "dc/0ny9m7k0lzmn5": {
            "label": "Covid 19 Mobility Trend of Local Business"
          },
          "dc/p49ghylpwz93f": {
            "label": "Covid 19 Mobility Trend of Park"
          },
          "dc/7fmnve6yyc508": {
            "label": "Covid 19 Mobility Trend of Residence"
          },
          "dc/qdbhwwr88yhl7": {
            "label": "Covid 19 Mobility Trend of Transport Hub"
          },
          "dc/tbbjnf9bk96yh": {
            "label": "Covid 19 Mobility Trend of Workplace"
          }
        },
        "val": "CumulativeCount_Vaccine_COVID_19_Administered"
      },
      "options.per_capita": {
        "type": "checkbox",
        "label": "Per capita",
        "show_if": "false",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.all_countries": {
        "type": "checkbox",
        "label": "All countries",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.output_as_chart": {
        "type": "checkbox",
        "label": "Output a Graph",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "options.graph_type": {
        "type": "select",
        "label": "Graph Type",
        "show_if": "options.output_as_chart=='true'",
        "required": true,
        "options": {
          "zoomable_sunburst": {
            "label": "Sunburst"
          },
          "tidy_tree": {
            "label": "Tree"
          },
          "treemap": {
            "label": "Treemap"
          }
        },
        "val": "zoomable_sunburst",
        "breakLine": true
      }
    }
  }
}
,
"/FlexmonsterPieOptions.json/FlexmonsterPieOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "show_if": "options.configure_manual=='true'",
    "repeat": false,
    "fields": {
      "options.type": {
        "type": "hidden",
        "val": "pie_chart"
      },
      "options.chart_type": {
        "type": "hidden",
        "val": "pie"
      },
      "options.add_column_cols": {
        "type": "checkbox",
        "label": "by Category",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.column_cols": {
        "type": "fieldset",
        "label": "Category column(s)",
        "show_if": "options.add_column_cols=='true'",
        "repeat": true,
        "fields": {
          "column_col": {
            "type": "select",
            "label": "Category column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "is_date": {
            "type": "checkbox",
            "label": "Is Date",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.row_cols": {
        "type": "fieldset",
        "label": "Pie column(s)",
        "repeat": true,
        "fields": {
          "row_col": {
            "type": "select",
            "label": "Pie column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "is_date": {
            "type": "checkbox",
            "label": "Is Date",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.measure_cols": {
        "type": "fieldset",
        "label": "Value column(s)",
        "repeat": true,
        "fields": {
          "measure_col": {
            "type": "select",
            "label": "Value Column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "aggregation": {
            "type": "select",
            "label": "Aggregation Function",
            "options": {
              "sum": {
                "label": "Sum"
              },
              "count": {
                "label": "Count"
              },
              "distinctcount": {
                "label": "Distinct Count"
              },
              "average": {
                "label": "Average"
              },
              "median": {
                "label": "Median"
              },
              "product": {
                "label": "Product"
              },
              "min": {
                "label": "Min"
              },
              "max": {
                "label": "Max"
              },
              "stdevp": {
                "label": "Population Standard Deviation"
              },
              "stdevs": {
                "label": "Sample Standard Deviation"
              },
              "percent": {
                "label": "Percent"
              }
            },
            "val": "sum",
            "required": true,
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      }
    }
  }
}
,
"/CleanOptions.json/CleanOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; border: none; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "modify_case": {
        "type": "fieldset",
        "label": "",
        "style": "float: left; width: 43%; min-height: 155px; border: 1px solid #ccc",
        "repeat": false,
        "fields": {
          "modify_case": {
            "type": "checkbox",
            "label": "Modify Case",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": false
          },
          "modify_case_by": {
            "type": "radio",
            "show_if": "modify_case=='true'",
            "val": "upper",
            "values": {
              "upper": "to Upper Case",
              "lower": "to Lower Case",
              "title": "to Title Case"
            },
            "breakLine": false
          }
        }
      },
      "replace_null": {
        "type": "fieldset",
        "label": "",
        "style": "float: right; width: 43%; min-height: 155px; border: 1px solid #ccc",
        "repeat": false,
        "fields": {
          "replace_null": {
            "type": "checkbox",
            "label": "Treat Empty Records",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "replace_null_type": {
            "type": "select",
            "label": "Action",
            "show_if": "replace_null=='true'",
            "options": {
              "Replace Empty by Blank": {
                "label": "Replace Empty by Blank"
              },
              "Replace Empty by Zero": {
                "label": "Replace Empty by Zero"
              },
              "Replace Blank by Zero": {
                "label": "Replace Blank by Zero"
              },
              "Replace NULL by Blank": {
                "label": "Replace NULL by Blank"
              },
              "Replace NULL by Zero": {
                "label": "Replace NULL by Zero"
              }
            },
            "val": "Replace Empty by Zero",
            "breakLine": true
          },
          "delete_corresponding_row": {
            "type": "checkbox",
            "label": "Delete corresponding row",
            "show_if": "replace_null=='true'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          }
        }
      },
      "remove_whitespace": {
        "type": "fieldset",
        "label": "Remove Whitespace",
        "style": "float: left; width: 43%; min-height: 360px; border: 1px solid #ccc",
        "repeat": false,
        "fields": {
          "remove_characters.all_whitespace": {
            "type": "checkbox",
            "label": "All Whitespace",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "remove_characters.leading_whitespace": {
            "type": "checkbox",
            "label": "Leading Whitespace",
            "show_if": "remove_characters.all_whitespace=='false'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "remove_characters.trailing_whitespace": {
            "type": "checkbox",
            "label": "Trailing Whitespace",
            "show_if": "remove_characters.all_whitespace=='false'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "remove_characters.whitespace": {
            "type": "checkbox",
            "label": "Space",
            "show_if": "remove_characters.all_whitespace=='false'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "remove_characters.tabs": {
            "type": "checkbox",
            "label": "Tabs",
            "show_if": "remove_characters.all_whitespace=='false'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "remove_characters.line_breaks": {
            "type": "checkbox",
            "label": "Line Breaks",
            "show_if": "remove_characters.all_whitespace=='false'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "remove_characters.duplicate_whitespace": {
            "type": "checkbox",
            "label": "Duplicate Whitespace",
            "show_if": "remove_characters.all_whitespace=='false'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          }
        }
      },
      "remove_characters": {
        "type": "fieldset",
        "label": "Remove Characters",
        "style": "float: right; width: 43%; min-height: 362px; border: 1px solid #ccc",
        "repeat": false,
        "fields": {
          "remove_characters.letters": {
            "type": "checkbox",
            "label": "Letters",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "remove_characters.numbers": {
            "type": "checkbox",
            "label": "Numbers",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "remove_characters.punctuation": {
            "type": "checkbox",
            "label": "Punctuation",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "remove_characters.trailing_zero": {
            "type": "checkbox",
            "label": "Trailing 0",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "remove_characters.custom": {
            "type": "checkbox",
            "label": "To-be-delted Characters",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "remove_characters.custom_chars": {
            "type": "text",
            "label": "enter characters",
            "style": "float: left; width: 45%",
            "show_if": "remove_characters.custom=='true'",
            "val": "",
            "required": true,
            "breakLine": true
          },
          "remove_characters.custom_delimiter": {
            "type": "select",
            "label": "Delimiter",
            "show_if": "remove_characters.custom=='true'",
            "options": {
              ",": {
                "label": ","
              },
              ";": {
                "label": ";"
              },
              ".": {
                "label": "."
              }
            },
            "val": ","
          },
          "remove_characters.custom_mode": {
            "type": "select",
            "label": "Position",
            "show_if": "remove_characters.custom=='true'",
            "options": {
              "all": {
                "label": "all"
              },
              "leading only": {
                "label": "leading only"
              },
              "trailing only": {
                "label": "trailing only"
              }
            },
            "val": "all"
          }
        }
      },
      "remove_duplicates": {
        "type": "fieldset",
        "label": "Remove Duplicates",
        "style": "float: left; width: 43%; min-height: 165px; border: 1px solid #ccc",
        "repeat": false,
        "fields": {
          "remove_duplicates.rows": {
            "type": "checkbox",
            "label": "Duplicate Rows",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "remove_duplicates.cell": {
            "type": "checkbox",
            "label": "Duplicates in Cell",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "remove_duplicates.delimiter": {
            "type": "text",
            "label": "Delimiter",
            "style": "float: left; width: 30%",
            "show_if": "remove_duplicates.cell=='true'",
            "val": ";",
            "required": true,
            "breakLine": false            
          },
          "remove_duplicates.include_whitespace": {
            "type": "checkbox",
            "label": "incl. whitespace",
            "style": "float: right; width: 60%",
            "show_if": "remove_duplicates.cell=='true'",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          }
        }
      },
      "rounding": {
        "type": "fieldset",
        "label": "Apply Rounding",
        "style": "float: right; width: 43%; min-height: 167px; border: 1px solid #ccc",
        "repeat": false,
        "fields": {
          "is_rounding": {
            "type": "checkbox",
            "label": "Rounding",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "rounding": {
            "type": "select",
            "label": "Rounding",
            "show_if": "is_rounding=='true'",
            "required": true,
            "options": {
              "no_rounding": {
                "label": "No rounding"
              },
              "0": {
                "label": "0 digits"
              },
              "1": {
                "label": "1 digits"
              },
              "2": {
                "label": "2 digits"
              },
              "3": {
                "label": "3 digits"
              },
              "4": {
                "label": "4 digits"
              },
              "5": {
                "label": "5 digits"
              },
              "6": {
                "label": "6 digits"
              },
              "7": {
                "label": "7 digits"
              },
              "8": {
                "label": "8 digits"
              },
              "9": {
                "label": "9 digits"
              }
            },
            "val": "2 digits"
          }
        }
      },
      "options.use_filter": {
        "type": "checkbox",
        "label": "Use Filter",
        "style": "margin-top: 5px",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "filter_box": {
        "type": "fieldset",
        "label": "Filter Options",
        "style": "border: 1px solid #ccc",
        "show_if": "options.use_filter=='true'",
        "repeat": false,
        "fields": {
          "options.filter": {
            "type": "fieldset",
            "label": "Add Filter Conditions",
            "style": "border: 1px solid #ccc",            
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if" :  "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if" :  "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "show_if": "search_tables=='false'",
                "table": "table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "search_tables__column_text": {
                "type": "text",
                "label": "Input Column Name",
                "show_if": "search_tables=='true' && search_tables__select_columns_by=='by_name_text'",
                "val": "",
                "required": true
              },
              "search_tables__column_order": {
                "type": "select",
                "label": "Select Column",
                "required": true,
                "show_if" :  "search_tables=='true' && search_tables__select_columns_by=='by_order'",
                "options": {
                  "col1": {
                    "label": "Column 1"
                  },
                  "col2": {
                    "label": "Column 2"
                  },
                  "col3": {
                    "label": "Column 3"
                  },
                  "col4": {
                    "label": "Column 4"
                  },
                  "col5": {
                    "label": "Column 5"
                  },
                  "col6": {
                    "label": "Column 6"
                  },
                  "col7": {
                    "label": "Column 7"
                  },
                  "col8": {
                    "label": "Column 8"
                  },
                  "col9": {
                    "label": "Column 9"
                  },
                  "col10": {
                    "label": "Column 10"
                  },
                  "col11": {
                    "label": "Column 11"
                  },
                  "col12": {
                    "label": "Column 12"
                  },
                  "col13": {
                    "label": "Column 13"
                  },
                  "col14": {
                    "label": "Column 14"
                  },
                  "col15": {
                    "label": "Column 15"
                  },
                  "col16": {
                    "label": "Column 16"
                  },
                  "col17": {
                    "label": "Column 17"
                  },
                  "col18": {
                    "label": "Column 18"
                  },
                  "col19": {
                    "label": "Column 19"
                  },
                  "col20": {
                    "label": "Column 20"
                  }
                },
                "val": ""
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "search_tables=='false' && this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "search_tables__self_compare_column_text": {
                "type": "text",
                "label": "Input Compare Column Name",
                "show_if": "search_tables=='true' && search_tables__select_columns_by=='by_name_text' && this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "val": "",
                "required": true
              },
              "search_tables__self_compare_column_order": {
                "type": "select",
                "label": "Select Compare Column",
                "required": true,
                "show_if" :  "search_tables=='true' && search_tables__select_columns_by=='by_order' && this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "options": {
                  "col1": {
                    "label": "Column 1"
                  },
                  "col2": {
                    "label": "Column 2"
                  },
                  "col3": {
                    "label": "Column 3"
                  },
                  "col4": {
                    "label": "Column 4"
                  },
                  "col5": {
                    "label": "Column 5"
                  },
                  "col6": {
                    "label": "Column 6"
                  },
                  "col7": {
                    "label": "Column 7"
                  },
                  "col8": {
                    "label": "Column 8"
                  },
                  "col9": {
                    "label": "Column 9"
                  },
                  "col10": {
                    "label": "Column 10"
                  },
                  "col11": {
                    "label": "Column 11"
                  },
                  "col12": {
                    "label": "Column 12"
                  },
                  "col13": {
                    "label": "Column 13"
                  },
                  "col14": {
                    "label": "Column 14"
                  },
                  "col15": {
                    "label": "Column 15"
                  },
                  "col16": {
                    "label": "Column 16"
                  },
                  "col17": {
                    "label": "Column 17"
                  },
                  "col18": {
                    "label": "Column 18"
                  },
                  "col19": {
                    "label": "Column 19"
                  },
                  "col20": {
                    "label": "Column 20"
                  }
                },
                "val": ""
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table",
                "bind": "COLUMNS",
                "show_if": "search_tables=='false' && (this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE')",
                "required": true
              },
              "search_tables__compare_column_text": {
                "type": "text",
                "label": "Input Compare Column Name",
                "show_if": "search_tables=='true' && search_tables__select_columns_by=='by_name_text' && (this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE')",
                "val": "",
                "required": true
              },
              "search_tables__compare_column_order": {
                "type": "select",
                "label": "Select Compare Column",
                "required": true,
                "show_if" :  "search_tables=='true' && search_tables__select_columns_by=='by_order' && (this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE')",
                "options": {
                  "col1": {
                    "label": "Column 1"
                  },
                  "col2": {
                    "label": "Column 2"
                  },
                  "col3": {
                    "label": "Column 3"
                  },
                  "col4": {
                    "label": "Column 4"
                  },
                  "col5": {
                    "label": "Column 5"
                  },
                  "col6": {
                    "label": "Column 6"
                  },
                  "col7": {
                    "label": "Column 7"
                  },
                  "col8": {
                    "label": "Column 8"
                  },
                  "col9": {
                    "label": "Column 9"
                  },
                  "col10": {
                    "label": "Column 10"
                  },
                  "col11": {
                    "label": "Column 11"
                  },
                  "col12": {
                    "label": "Column 12"
                  },
                  "col13": {
                    "label": "Column 13"
                  },
                  "col14": {
                    "label": "Column 14"
                  },
                  "col15": {
                    "label": "Column 15"
                  },
                  "col16": {
                    "label": "Column 16"
                  },
                  "col17": {
                    "label": "Column 17"
                  },
                  "col18": {
                    "label": "Column 18"
                  },
                  "col19": {
                    "label": "Column 19"
                  },
                  "col20": {
                    "label": "Column 20"
                  }
                },
                "val": ""
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 5px",
            "breakLine": true
          },
          "apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group",
            "style": "border: 1px solid #ccc",
            "show_if": "options.apply_to_record=='false'",
            "repeat": false,
            "fields": {
              "options.apply_to_group_columns__all_but_selected": {
                "type": "checkbox",
                "label": "All but selected",
                "val": "false",
                "isOn": "true",
                "isOff": "false",
                "breakLine": true
              },
              "options.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "show_if": "search_tables=='false'",
                "required": true,
                "width": "100%",
                "table": "table_id",
                "multiple": true,
                "bind": "COLUMNS"
              },
              "options.search_tables__apply_to_group_columns_text": {
                "type": "text",
                "label": "Group Column(s) separated by `;`",
                "show_if": "search_tables=='true' && search_tables__select_columns_by=='by_name_text'",
                "val": "",
                "placeholder": "Column1; Column2; ColumnN",
                "required": true,
                "style": "width: 100%"
              },
              "options.search_tables__apply_to_group_columns_order": {
                "type": "select",
                "label": "Group Column(s)",
                "required": true,
                "show_if" :  "search_tables=='true' && search_tables__select_columns_by=='by_order'",
                "options": {
                  "col1": {
                    "label": "Column 1"
                  },
                  "col2": {
                    "label": "Column 2"
                  },
                  "col3": {
                    "label": "Column 3"
                  },
                  "col4": {
                    "label": "Column 4"
                  },
                  "col5": {
                    "label": "Column 5"
                  },
                  "col6": {
                    "label": "Column 6"
                  },
                  "col7": {
                    "label": "Column 7"
                  },
                  "col8": {
                    "label": "Column 8"
                  },
                  "col9": {
                    "label": "Column 9"
                  },
                  "col10": {
                    "label": "Column 10"
                  },
                  "col11": {
                    "label": "Column 11"
                  },
                  "col12": {
                    "label": "Column 12"
                  },
                  "col13": {
                    "label": "Column 13"
                  },
                  "col14": {
                    "label": "Column 14"
                  },
                  "col15": {
                    "label": "Column 15"
                  },
                  "col16": {
                    "label": "Column 16"
                  },
                  "col17": {
                    "label": "Column 17"
                  },
                  "col18": {
                    "label": "Column 18"
                  },
                  "col19": {
                    "label": "Column 19"
                  },
                  "col20": {
                    "label": "Column 20"
                  }
                },
                "multiple": true,
                "val": []
              }
            }
          }
        }
      }
    }
  }
}
,
"/MirrorMatrixOptions.json/MirrorMatrixOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "transpose_type": {
        "type": "hidden",
        "val": "mirror_matrix"
      },
      "mirror_matrix.exchange_label_header": {
        "type": "checkbox",
        "label": "Convert header to label, label to header",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "mirror_matrix.convert_header_to_label": {
        "type": "checkbox",
        "label": "Convert header to label",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "mirror_matrix.convert_label_to_header": {
        "type": "checkbox",
        "label": "Convert label to header",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
}
,
"/ImportFromDirOutput.json/ImportFromDirOutput.json": {
  "output": {
    "type": "fieldset",
    "label": "Define Output Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "output.custom_text": {
        "type": "text",
        "label": "Output Table Name",
        "show_if": "output.custom_options=='false' || (output.custom_options=='true' && output.compose_table_name=='false')",
        "minLength": 1,
        "val": "",
        "width": "100%",
        "breakLine": true
      },
      "output.custom_options": {
        "type": "checkbox",
        "label": "Output Options",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "output.compose_table_name": {
        "type": "checkbox",
        "label": "Compose Table Name",
        "show_if": "output.custom_options=='true'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "compose_table_name_frame": {
        "type": "fieldset",
        "label": "Compose Output Table Name",
        "show_if": "output.custom_options=='true' && output.compose_table_name=='true'",
        "repeat": false,
        "fields": {
          "output.prefix_rule": {
            "type": "select",
            "label": "Prefix",
            "show_if": "output.compose_table_name=='true'",
            "val": "empty",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.prefix_text": {
            "type": "text",
            "label": "Prefix Text",
            "show_if": "output.compose_table_name=='true' && output.prefix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "output.core_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "show_if": "output.compose_table_name=='true' && output.prefix_rule!='empty'",
            "val": "_",
            "width": "50px"
          },
          "output.core_rule": {
            "type": "select",
            "label": "Table Name",
            "show_if": "output.compose_table_name=='true'",
            "val": "script_name",
            "options": {
              "script_name": {
                "label": "Task Name"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.core_text": {
            "type": "text",
            "label": "Main Table Name",
            "show_if": "output.compose_table_name=='true' && output.core_rule=='custom'",
            "required": true,
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "output.suffix_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "show_if": "output.compose_table_name=='true'",
            "val": "_",
            "width": "50px"
          },
          "output.suffix_rule": {
            "type": "select",
            "label": "Suffix",
            "show_if": "output.compose_table_name=='true'",
            "val": "script_name",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.suffix_text": {
            "type": "text",
            "label": "Suffix Text",
            "show_if": "output.compose_table_name=='true' && output.suffix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": "",
            "breakLine": true
          },
          "output.timezone": {
            "type": "select",
            "label": "Timezone",
            "show_if": "output.compose_table_name=='true' && (output.prefix_rule=='date_string_type1' || output.prefix_rule=='date_string_type2' || output.prefix_rule=='time_string' || output.prefix_rule=='datetime_string' || output.suffix_rule=='date_string_type1' || output.suffix_rule=='date_string_type2' || output.suffix_rule=='time_string' || output.suffix_rule=='datetime_string')",
            "val": "Europe/Berlin",
            "required": true,
            "options": {
              "America/Adak": {
                "label": "Adak, Gambier"
              },
              "Australia/Adelaide": {
                "label": "Adelaide, Broken_Hill, Darwin"
              },
              "America/Anchorage": {
                "label": "Anchorage, Juneau, Sitka"
              },
              "Pacific/Apia": {
                "label": "Apia, Asau, Mulifanua, Afega, Leulumoega"
              },
              "Pacific/Enderbury": {
                "label": "Apia, Fiji, Tongatapu"
              },
              "Antarctica/McMurdo": {
                "label": "Auckland, Casey, Davis"
              },
              "Pacific/Auckland": {
                "label": "Auckland, Wellington, Christchurch"
              },
              "Asia/Bangkok": {
                "label": "Bangkok, Jakarta, Novosibirsk"
              },
              "Europe/Berlin": {
                "label": "Berlin, Paris, Amsterdam"
              },
              "Australia/Perth": {
                "label": "Brunei, Singapore, Perth"
              },
              "Atlantic/Cape_Verde": {
                "label": "Cape_Verde,Praia, Mindelo, Santa Maria"
              },
              "America/Belize": {
                "label": "Costa_Rica, El_Salvador, Denver"
              },
              "Antarctica/Vostok": {
                "label": "Dhaka, Bishkek, Omsk"
              },
              "Europe/Astrakhan": {
                "label": "Dubai, Baku, Tbilisi"
              },
              "Australia/Eucla": {
                "label": "Eucla"
              },
              "Pacific/Honolulu": {
                "label": "Honolulu, Rarotonga, Tahiti"
              },
              "Asia/Kabul": {
                "label": "Kabul, Kandahār, Mazār-e Sharīf, Herāt, Jalālābād"
              },
              "Asia/Aqtau": {
                "label": "Karachi, Tashkent, Maldives"
              },
              "Asia/Kathmandu": {
                "label": "Kathmandu,Pokhara, Pātan, Biratnagar"
              },
              "Pacific/Kiritimati": {
                "label": "Kiritimati"
              },
              "Asia/Colombo": {
                "label": "Kolkata, Colombo,Jaffna, Negombo"
              },
              "Europe/Guernsey": {
                "label": "London. Dublin, Lisbon"
              },
              "Australia/Lord_Howe": {
                "label": "Lord_Howe"
              },
              "America/Creston": {
                "label": "Los_Angeles, Vancouver, Hermosillo"
              },
              "Pacific/Marquesas": {
                "label": "Marquesas,Taiohae"
              },
              "America/Cayman": {
                "label": "Mexico_City, Panama, Chicago"
              },
              "Pacific/Niue": {
                "label": "Midway, Niue, Pago_Pago"
              },
              "Europe/Mariehamn": {
                "label": "Moscow, Istanbul, Qatar"
              },
              "Asia/Kolkata": {
                "label": "Mumbai, Delhi, Bengaluru, Kolkata, Chennai"
              },
              "America/Miquelon": {
                "label": "Noronha, Nuuk, Miquelon"
              },
              "America/Danmarkshavn": {
                "label": "Reykjavik, Dakar, Casablanca"
              },
              "Pacific/Bougainville": {
                "label": "Sakhalin, Norfolk, Bougainville"
              },
              "America/Araguaina": {
                "label": "Sao_Paulo, Buenos_Aires, Montevideo"
              },
              "America/St_Johns": {
                "label": "St_Johns,Mount Pearl, Corner Brook"
              },
              "Asia/Tehran": {
                "label": "Tehran, Mashhad, Isfahan, Karaj, Tabriz"
              },
              "Asia/Tokyo": {
                "label": "Tokyo, Seoul, Jayapura"
              },
              "America/New_York": {
                "label": "Toronto, Santiago, New_York"
              },
              "Australia/Sydney": {
                "label": "Vladivostok, Sydney, Brisbane"
              },
              "Asia/Yangon": {
                "label": "Yangon, Cocos,Mandalay, Nay Pyi Taw, Mawlamyine"
              },
              "Indian/Cocos": {
                "label": "Yangon, Cocos,West Island"
              }
            },
            "breakLine": true
          }
        }
      }
    }
  }
},
"/DCCrimeWorldDataOptions.json/DCCrimeWorldDataOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.group_by": {
        "type": "select",
        "label": "Group By",
        "required": true,
        "options": {
          "Region": {
            "label": "Region"
          },
          "Income Group": {
            "label": "Income Group"
          }
        },
        "val": "Region"
      },
      "options.stat_var_name": {
        "type": "select",
        "label": "Statistics Data",
        "required": true,
        "options": {
          "Count_CriminalActivities_MurderAndNonNegligentManslaughter_AsFractionOf_Count_Person": {
            "label": "Count of Murder And Non Negligent Manslaughter Per Capita"
          },
          "Count_CriminalActivities_MurderAndNonNegligentManslaughter_Female_AsFractionOf_Count_Person_Female": {
            "label": "Count of Female Murder And Non Negligent Manslaughter Per Female Capita"
          },
          "Count_CriminalActivities_MurderAndNonNegligentManslaughter_Male_AsFractionOf_Count_Person_Male": {
            "label": "Count of Male Murder And Non Negligent Manslaughter Per Male Capita"
          }
        },
        "val": "Count_CriminalActivities_MurderAndNonNegligentManslaughter_AsFractionOf_Count_Person"
      },
      "options.per_capita": {
        "type": "checkbox",
        "label": "Per capita",
        "show_if": "false",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "help_Count_CriminalActivities_MurderAndNonNegligentManslaughter_AsFractionOf_Count_Person": {
        "type": "textarea",
        "label": "",
        "show_if": "options.stat_var_name=='help_Count_CriminalActivities_MurderAndNonNegligentManslaughter_AsFractionOf_Count_Person'",
        "val": "Intentional homicides are unlawful homicides purposely inflicted as a result of domestic disputes, interpersonal violence, violent conflicts over land resources, intergang violence over turf or control, and predatory violence and killing by armed groups. Intentional homicide does not include all intentional killing; the difference is usually in the organization of the killing. Individuals or small groups usually commit homicide, whereas killing in armed conflict is usually committed by fairly cohesive groups of up to several hundred members and is thus usually excluded.",
        "md_no_resize": false,
        "rows": 9,
        "disabled": true,
        "width": "100%"
      },
      "options.all_countries": {
        "type": "checkbox",
        "label": "All countries",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.output_as_chart": {
        "type": "checkbox",
        "label": "Output a Graph",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "options.graph_type": {
        "type": "select",
        "label": "Graph Type",
        "show_if": "options.output_as_chart=='true'",
        "required": true,
        "options": {
          "zoomable_sunburst": {
            "label": "Sunburst"
          },
          "tidy_tree": {
            "label": "Tree"
          },
          "treemap": {
            "label": "Treemap"
          }
        },
        "val": "zoomable_sunburst",
        "breakLine": true
      }
    }
  }
}
,
"/ImportFileFromGDriveOptions.json/ImportFileFromGDriveOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Select Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.from": {
        "type": "hidden",
        "val": "web"
      },
      "options.webservice": {
        "type": "hidden",
        "val": "google_drive"
      },
      "options.output_format": {
        "type": "select",
        "label": "Select Type",
        "options": {
          "csv_table": {
            "label": "CSV-Table"
          },
          "line_by_line": {
            "label": "Line by Line"
          },
          "word_by_word": {
            "label": "Text"
          }
        },
        "val": "csv_table",
        "required": true
      },
      "options.word_pattern_type": {
        "type": "select",
        "label": "Word Pattern",
        "show_if": "options.output_format=='word_by_word' && options.specify_word_pattern=='true'",
        "options": {
          "regex": {
            "label": "Regular Expression"
          }
        },
        "val": "regex",
        "required": true
      },
      "options.word_pattern_regex": {
        "type": "text",
        "label": "Regular Expression",
        "show_if": "options.output_format=='word_by_word' && options.specify_word_pattern=='true' && options.word_pattern_type=='regex'",
        "required": true,
        "val": "[a-z][1-9]",
        "breakLine": true
      },
      "options.column_setting": {
        "type": "checkbox",
        "label": "Column Settings",
        "show_if": "options.output_format!='file_list'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "column_setting_frame": {
        "type": "fieldset",
        "label": "Column Settings",
        "show_if": "options.output_format!='file_list' && options.column_setting=='true'",
        "repeat": false,
        "fields": {
          "options.add_row_column": {
            "type": "checkbox",
            "label": "Add Row Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_word_count_column": {
            "type": "checkbox",
            "label": "Add 'Word Count' Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_word_nonword_column": {
            "type": "checkbox",
            "label": "Add 'Word & Non-Word' Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_section_column": {
            "type": "checkbox",
            "label": "Add Section Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "section_column_types_frame": {
            "type": "fieldset",
            "label": "Section Column Types",
            "show_if": "options.output_format=='word_by_word' && options.add_section_column=='true'",
            "repeat": false,
            "fields": {
              "options.section_columns.add_paragraph_section_column": {
                "type": "checkbox",
                "label": "Paragraph",
                "val": "false",
                "isOn": "true",
                "isOff": "false",
                "breakLine": true
              },
              "options.section_columns.add_custom_section_column": {
                "type": "checkbox",
                "label": "Custom Section Delimiter",
                "val": "false",
                "isOn": "true",
                "isOff": "false"
              },
              "options.section_columns.custom_delimiter": {
                "type": "text",
                "label": "Delimiter(1 character)",
                "show_if": "options.section_columns.add_custom_section_column=='true'",
                "maxLength": 1,
                "required": true,
                "breakLine": true
              },
              "options.section_columns.add_brackets_punctuation_section_column": {
                "type": "checkbox",
                "label": "Brackets and Punctuation",
                "val": "false",
                "isOn": "true",
                "isOff": "false"
              },
              "options.section_columns.brackets_punctuation_section_column_type": {
                "type": "select",
                "label": "Brackets Type",
                "show_if": "options.section_columns.add_brackets_punctuation_section_column=='true'",
                "options": {
                  "nesting_structure": {
                    "label": "Nesting Structure"
                  },
                  "inner_bracket": {
                    "label": "Inner Bracket"
                  },
                  "brackets_only": {
                    "label": "Brackets Only"
                  },
                  "show_all": {
                    "label": "Show All"
                  }
                },
                "val": "show_all",
                "required": true,
                "breakLine": true
              }
            }
          },
          "options.add_filename_column": {
            "type": "checkbox",
            "label": "Add Column for File Name",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "options.add_filepath_column": {
            "type": "checkbox",
            "label": "Add Column for File Path",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          }
        }
      },
      "options.is_cloud_dir": {
        "type": "hidden",
        "val": "false"
      },
      "if_dir_frame": {
        "type": "fieldset",
        "label": "Directory Import Options",
        "show_if": "options.output_format!='file_list' && options.is_cloud_dir=='true'",
        "repeat": false,
        "fields": {
          "options.unify_in_one_table": {
            "type": "checkbox",
            "label": "Unify in one table",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.suffix": {
            "type": "select",
            "label": "Output tables suffix",
            "show_if": "options.unify_in_one_table=='false'",
            "options": {
              "number": {
                "label": "Number"
              },
              "filename": {
                "label": "Filename"
              }
            },
            "val": "number",
            "required": true,
            "breakLine": true
          },
          "options.include_subdir": {
            "type": "checkbox",
            "label": "Include Subdirectories",
            "show_if": "options.output_format!='file_list' && options.is_cloud_dir=='true'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true,
            "style": "margin-top: 10px"
          }
        }
      },
      "options.file_list.include_subdir": {
        "type": "checkbox",
        "label": "Include Subdirectories",
        "show_if": "options.output_format=='file_list'",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true,
        "style": "margin-top: 10px"
      },
      "options.file_list.add_change_date_column": {
        "type": "checkbox",
        "label": "Add Change Date Column",
        "show_if": "options.output_format=='file_list'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  },
  "import_link_token_frame": {
    "type": "fieldset",
    "label": "Import Link",
    "repeat": false,
    "fields": {
      "options.link_csv_file": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test/blob/main/example.csv",
        "show_if": "options.webservice=='github' && options.is_cloud_dir=='false' && options.output_format=='csv_table'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.link_text_file": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test/blob/main/example.txt(json, csv, etc)",
        "show_if": "options.webservice=='github' && options.is_cloud_dir=='false' && options.output_format!='csv_table' && options.output_format!='file_list'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.one_drive.file_path": {
        "type": "text",
        "label": "Enter path to file e.g. ZippyDoc/Subdir1/test.txt",
        "show_if": "options.webservice=='ms_one_drive' && options.output_format!='file_list' && options.is_cloud_dir=='false'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox.file_path": {
        "type": "text",
        "label": "Enter path to file e.g. ZippyDoc/Subdir1/test.txt",
        "show_if": "options.webservice=='dropbox' && options.output_format!='file_list' && options.is_cloud_dir=='false'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dir_path_filter": {
        "type": "fieldset",
        "label": "Import Path and File Filter",
        "show_if": "options.output_format=='file_list' || options.is_cloud_dir=='true'",
        "repeat": true,
        "fields": {
          "github__link_directory": {
            "type": "text",
            "label": "Enter link e.g. https://github.com/zippydoc/test",
            "show_if": "options.webservice=='github'",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "one_drive__dir_path": {
            "type": "text",
            "label": "Enter path to dir e.g. ZippyDoc/Subdir1",
            "show_if": "options.webservice=='ms_one_drive'",
            "width": "100%",
            "breakLine": true
          },
          "dropbox__dir_path": {
            "type": "text",
            "label": "Enter path to dir e.g. ZippyDoc/Subdir1",
            "show_if": "options.webservice=='dropbox'",
            "width": "100%",
            "breakLine": true
          },
          "google_drive__dir_path": {
            "type": "text",
            "label": "Enter path to dir",
            "show_if": "options.webservice=='google_drive'",
            "width": "100%",
            "breakLine": true
          },
          "dir_filter__filter_type": {
            "type": "select",
            "label": "Filter Type",
            "options": {
              "all": {
                "label": "All"
              },
              "contains": {
                "label": "Contains"
              },
              "starts_with": {
                "label": "Starts With"
              },
              "ends_with": {
                "label": "Ends With"
              },
              "regex": {
                "label": "Regular Expression"
              }
            },
            "val": "all",
            "required": true
          },
          "dir_filter__filter_string": {
            "type": "text",
            "label": "Filter",
            "show_if": "this.dir_filter__filter_type!='all'",
            "required": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.is_github_private": {
        "type": "checkbox",
        "label": "Github repository is private",
        "show_if": "options.webservice=='github'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "options.github_token": {
        "type": "text",
        "label": "Github personal access token",
        "show_if": "options.webservice=='github' && options.is_github_private=='true'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.one_drive.access_token": {
        "type": "text",
        "label": "One Drive Access Token",
        "show_if": "options.webservice=='ms_one_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox.auth_code": {
        "type": "text",
        "label": "Dropbox Authorization Code",
        "show_if": "options.webservice=='dropbox'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.google_drive.access_token": {
        "type": "text",
        "label": "Google Drive Access Token",
        "show_if": "options.webservice=='google_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      }
    }
  }
}
,
"/JoinOptions.json/JoinOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "join_type": {
        "type": "select",
        "label": "Join By",
        "options": {
          "join_by_automatic": {
            "label": "Automatic"
          },
          "join_by_specific_field": {
            "label": "Specific Field"
          },
          "join_by_record_position": {
            "label": "Record Position"
          }
        },
        "val": "join_by_automatic",
        "breakLine": true
      },
      "join_fields": {
        "type": "fieldset",
        "label": "Join By Columns",
        "show_if": "join_type=='join_by_specific_field'",
        "repeat": true,
        "fields": {
          "left_table_field": {
            "type": "select",
            "label": "Left Table Column",
            "table": "left_table.table_id",
            "bind": "COLUMNS"
          },
          "right_table_field": {
            "type": "select",
            "label": "Right Table Column",
            "table": "right_table.table_id",
            "bind": "COLUMNS"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      }
    }
  }
}
,
"/FormulaOptions.json/FormulaOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.column": {
        "type": "select",
        "label": "Column to apply",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "options.column_value_type": {
        "type": "select",
        "label": "Type",
        "required": true,
        "options": {
          "static_value": {
            "label": "Static Value"
          },
          "numeric_formula": {
            "label": "Numeric Formula"
          },
          "text_formula": {
            "label": "Text Formula"
          },
          "inc_dec_percent": {
            "label": "Increase / Decrease (%)"
          },
          "inc_dec_abs": {
            "label": "Increase / Decrease (Absolute)"
          }
        },
        "val": "static_value"
      },
      "options.inc_or_dec": {
        "type": "select",
        "label": "Increase Type",
        "show_if": "options.column_value_type=='inc_dec_percent' || options.column_value_type=='inc_dec_abs'",
        "required": true,
        "options": {
          "increase": {
            "label": "Increase"
          },
          "decrease": {
            "label": "Decrease"
          }
        },
        "val": "increase"
      },
      "options.inc_or_dec_val": {
        "type": "text",
        "label": "Input Value",
        "show_if": "options.column_value_type=='inc_dec_percent' || options.column_value_type=='inc_dec_abs'",
        "val": "1",
        "breakLine": true
      },
      "options.static_value__type": {
        "type": "select",
        "label": "Static Value Type",
        "show_if": "options.column_value_type=='static_value'",
        "required": true,
        "options": {
          "custom": {
            "label": "Custom"
          },
          "input_table_name": {
            "label": "Input Table Name"
          },
          "output_table_name": {
            "label": "Output Table Name"
          },
          "tags": {
            "label": "Tags"
          }
        },
        "val": "custom"
      },
      "options.static_value": {
        "type": "text",
        "label": "Input Value",
        "show_if": "options.column_value_type=='static_value' && options.static_value__type=='custom'",
        "val": "",
        "width": "100%"
      },
      "options.numeric_formula": {
        "type": "text",
        "label": "Input Formula, e.g. [Column1] + 2 * ([Row-1:Column3] - [Column1])",
        "show_if": "options.column_value_type=='numeric_formula'",
        "val": "",
        "width": "100%"
      },
      "options.text_formula": {
        "type": "text",
        "label": "Input Formula, e.g. [firstName] + ' ' + [lastName] + ' ' + [Row-1:Column3]",
        "show_if": "options.column_value_type=='text_formula'",
        "val": "",
        "width": "100%"
      },
      "options.rounding": {
        "type": "select",
        "label": "Rounding",
        "show_if": "options.column_value_type=='numeric_formula' || options.column_value_type=='inc_dec_percent' || options.column_value_type=='inc_dec_abs'",
        "required": true,
        "options": {
          "no_rounding": {
            "label": "No rounding"
          },
          "0": {
            "label": "0 digits"
          },
          "1": {
            "label": "1 digits"
          },
          "2": {
            "label": "2 digits"
          },
          "3": {
            "label": "3 digits"
          },
          "4": {
            "label": "4 digits"
          },
          "5": {
            "label": "5 digits"
          },
          "6": {
            "label": "6 digits"
          },
          "7": {
            "label": "7 digits"
          },
          "8": {
            "label": "8 digits"
          },
          "9": {
            "label": "9 digits"
          }
        },
        "val": "0"
      },
      "options.use_multi_row": {
        "type": "checkbox",
        "label": "Multi-Row Options",
        "show_if": "options.column_value_type=='numeric_formula' || options.column_value_type=='text_formula'",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "options.if_row_not_exist": {
        "type": "select",
        "label": "If referred row not exist",
        "show_if": "(options.column_value_type=='numeric_formula' || options.column_value_type=='text_formula') && options.use_multi_row=='true'",
        "required": true,
        "options": {
          "empty": {
            "label": "Empty or 0"
          },
          "closest": {
            "label": "Closest Row Value"
          }
        },
        "val": "empty"
      },
      "options.refer_row_type": {
        "type": "select",
        "label": "Refer row type",
        "show_if": "options.column_value_type=='numeric_formula' && options.use_multi_row=='true'",
        "required": true,
        "options": {
          "non_cumulative": {
            "label": "non cumulative"
          },
          "cumulative": {
            "label": "cumulative"
          }
        },
        "val": "cumulative",
        "breakLine": true
      },
      "options.use_filter": {
        "type": "checkbox",
        "label": "Use Filter",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "filter_box": {
        "type": "fieldset",
        "label": "Filter Options",
        "show_if": "options.use_filter=='true'",
        "repeat": false,
        "fields": {
          "options.filter": {
            "type": "fieldset",
            "label": "Add Filter Conditions",
            "show_if": "options.use_filter=='true'",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if" :  "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if" :  "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table_id": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table_id",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group",
            "show_if": "options.apply_to_record=='false'",
            "repeat": false,
            "fields": {
              "options.apply_to_group_columns__all_but_selected": {
                "type": "checkbox",
                "label": "All but selected",
                "val": "false",
                "isOn": "true",
                "isOff": "false",
                "breakLine": true
              },
              "options.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "width": "100%",
                "table": "table_id",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      }
    }
  }
}
,
"/FilterOptions.json/FilterOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "filter": {
        "type": "fieldset",
        "label": "Add Filter Conditions",
        "repeat": true,
        "fields": {
          "initial_op": {
            "type": "select",
            "label": "Select Logic Operator",
            "required": true,
            "show_if" :  "$index == 0",
            "options": {
              "if": {
                "label": "IF"
              },
              "if_not": {
                "label": "IF NOT"
              }
            },
            "val": "if"
          },
          "op": {
            "type": "select",
            "label": "Select Logic Operator",
            "required": true,
            "show_if" :  "$index > 0",
            "options": {
              "and": {
                "label": "AND"
              },
              "or": {
                "label": "OR"
              },
              "and_not": {
                "label": "AND NOT"
              },
              "or_not": {
                "label": "OR NOT"
              }
            },
            "val": "and"
          },
          "column": {
            "type": "select",
            "label": "Select Column",
            "show_if": "search_tables=='false'",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "search_tables__column_text": {
            "type": "text",
            "label": "Input Column Name",
            "show_if": "search_tables=='true' && search_tables__select_columns_by=='by_name_text'",
            "val": "",
            "required": true
          },
          "search_tables__column_order": {
            "type": "select",
            "label": "Select Column",
            "required": true,
            "show_if" :  "search_tables=='true' && search_tables__select_columns_by=='by_order'",
            "options": {
              "col1": {
                "label": "Column 1"
              },
              "col2": {
                "label": "Column 2"
              },
              "col3": {
                "label": "Column 3"
              },
              "col4": {
                "label": "Column 4"
              },
              "col5": {
                "label": "Column 5"
              },
              "col6": {
                "label": "Column 6"
              },
              "col7": {
                "label": "Column 7"
              },
              "col8": {
                "label": "Column 8"
              },
              "col9": {
                "label": "Column 9"
              },
              "col10": {
                "label": "Column 10"
              },
              "col11": {
                "label": "Column 11"
              },
              "col12": {
                "label": "Column 12"
              },
              "col13": {
                "label": "Column 13"
              },
              "col14": {
                "label": "Column 14"
              },
              "col15": {
                "label": "Column 15"
              },
              "col16": {
                "label": "Column 16"
              },
              "col17": {
                "label": "Column 17"
              },
              "col18": {
                "label": "Column 18"
              },
              "col19": {
                "label": "Column 19"
              },
              "col20": {
                "label": "Column 20"
              }
            },
            "val": ""
          },
          "condition": {
            "type": "select",
            "label": "Select Operator",
            "required": true,
            "options": {
              "CONTAINS": {
                "label": "CONTAINS"
              },
              "CONTAINED IN STRING": {
                "label": "CONTAINED IN"
              },
              "STARTS WITH": {
                "label": "STARTS WITH"
              },
              "ENDS WITH": {
                "label": "ENDS WITH"
              },
              "=": {
                "label": "EQUAL"
              },
              ">": {
                "label": "GREATER THAN"
              },
              ">=": {
                "label": "GREATER OR EQUAL"
              },
              "<": {
                "label": "SMALLER THAN"
              },
              "<=": {
                "label": "SMALLER OR EQUAL"
              },
              "EMPTY": {
                "label": "IS EMPTY"
              },
              "BLANK": {
                "label": "IS BLANK"
              },
              "IS NULL": {
                "label": "IS NULL"
              },
              "IS TRUE": {
                "label": "IS TRUE"
              },
              "IS FALSE": {
                "label": "IS FALSE"
              },
              "REGEX MATCH": {
                "label": "REGEX MATCH"
              },
              "CONTAINED IN TABLE": {
                "label": "IN TABLE"
              },
              "IN REGEX TABLE": {
                "label": "IN REGEX TABLE"
              },
              "DATE": {
                "label": "DATE"
              }
            },
            "val": "CONTAINS"
          },
          "date_condition": {
            "type": "select",
            "label": "Select Date Operator",
            "required": true,
            "show_if": "this.condition == 'DATE'",
            "options": {
              "<": {
                "label": "PRIOR"
              },
              "<=": {
                "label": "PRIOR OR EQUAL"
              },
              "=": {
                "label": "EQUAL"
              },
              ">": {
                "label": "AFTER"
              },
              ">=": {
                "label": "AFTER OR EQUAL"
              }
            },
            "val": "="
          },
          "compare_with": {
            "type": "select",
            "label": "Compare with",
            "required": true,
            "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
            "options": {
              "custom_value": {
                "label": "Custom value"
              },
              "column_value": {
                "label": "Column value"
              }
            },
            "val": "custom_value"
          },
          "self_compare_column": {
            "type": "select",
            "label": "Select Compare Column",
            "table": "table_id",
            "bind": "COLUMNS",
            "show_if": "search_tables=='false' && this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
            "required": true
          },
          "search_tables__self_compare_column_text": {
            "type": "text",
            "label": "Input Compare Column Name",
            "show_if": "search_tables=='true' && search_tables__select_columns_by=='by_name_text' && this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
            "val": "",
            "required": true
          },
          "search_tables__self_compare_column_order": {
            "type": "select",
            "label": "Select Compare Column",
            "required": true,
            "show_if" :  "search_tables=='true' && search_tables__select_columns_by=='by_order' && this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
            "options": {
              "col1": {
                "label": "Column 1"
              },
              "col2": {
                "label": "Column 2"
              },
              "col3": {
                "label": "Column 3"
              },
              "col4": {
                "label": "Column 4"
              },
              "col5": {
                "label": "Column 5"
              },
              "col6": {
                "label": "Column 6"
              },
              "col7": {
                "label": "Column 7"
              },
              "col8": {
                "label": "Column 8"
              },
              "col9": {
                "label": "Column 9"
              },
              "col10": {
                "label": "Column 10"
              },
              "col11": {
                "label": "Column 11"
              },
              "col12": {
                "label": "Column 12"
              },
              "col13": {
                "label": "Column 13"
              },
              "col14": {
                "label": "Column 14"
              },
              "col15": {
                "label": "Column 15"
              },
              "col16": {
                "label": "Column 16"
              },
              "col17": {
                "label": "Column 17"
              },
              "col18": {
                "label": "Column 18"
              },
              "col19": {
                "label": "Column 19"
              },
              "col20": {
                "label": "Column 20"
              }
            },
            "val": ""
          },
          "date_value": {
            "type": "date",
            "label": "Select Date",
            "show_if": "this.condition=='DATE'",
            "val": "",
            "required": true
          },
          "value": {
            "type": "text",
            "label": "Input Value",
            "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
            "val": "",
            "required": true
          },
          "case_sensitive": {
            "type": "select",
            "label": "Select Case Sensitive",
            "required": true,
            "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "options": {
              "yes": {
                "label": "Case Sensitive"
              },
              "no": {
                "label": "Case Insensitive"
              }
            },
            "val": "yes"
          },
          "compare_table_id": {
            "type": "select",
            "label": "Select Table",
            "bind": "TABLES",
            "empty": "",
            "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "required": true
          },
          "compare_column": {
            "type": "select",
            "label": "Select Compare Column",
            "table": "this.compare_table_id",
            "bind": "COLUMNS",
            "show_if": "search_tables=='false' && (this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE')",
            "required": true
          },
          "search_tables__compare_column_text": {
            "type": "text",
            "label": "Input Compare Column Name",
            "show_if": "search_tables=='true' && search_tables__select_columns_by=='by_name_text' && (this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE')",
            "val": "",
            "required": true
          },
          "search_tables__compare_column_order": {
            "type": "select",
            "label": "Select Compare Column",
            "required": true,
            "show_if" :  "search_tables=='true' && search_tables__select_columns_by=='by_order' && (this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE')",
            "options": {
              "col1": {
                "label": "Column 1"
              },
              "col2": {
                "label": "Column 2"
              },
              "col3": {
                "label": "Column 3"
              },
              "col4": {
                "label": "Column 4"
              },
              "col5": {
                "label": "Column 5"
              },
              "col6": {
                "label": "Column 6"
              },
              "col7": {
                "label": "Column 7"
              },
              "col8": {
                "label": "Column 8"
              },
              "col9": {
                "label": "Column 9"
              },
              "col10": {
                "label": "Column 10"
              },
              "col11": {
                "label": "Column 11"
              },
              "col12": {
                "label": "Column 12"
              },
              "col13": {
                "label": "Column 13"
              },
              "col14": {
                "label": "Column 14"
              },
              "col15": {
                "label": "Column 15"
              },
              "col16": {
                "label": "Column 16"
              },
              "col17": {
                "label": "Column 17"
              },
              "col18": {
                "label": "Column 18"
              },
              "col19": {
                "label": "Column 19"
              },
              "col20": {
                "label": "Column 20"
              }
            },
            "val": ""
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "apply_to_record": {
        "type": "checkbox",
        "label": "Apply to Record",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "apply_to_group_box": {
        "type": "fieldset",
        "label": "Apply to Group",
        "show_if": "apply_to_record=='false'",
        "repeat": false,
        "fields": {
          "apply_to_group_columns__all_but_selected": {
            "type": "checkbox",
            "label": "All but selected",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "apply_to_group_columns": {
            "type": "select",
            "label": "Select Group Column(s)",
            "show_if": "search_tables=='false'",
            "required": true,
            "width": "100%",
            "table": "table_id",
            "multiple": true,
            "bind": "COLUMNS"
          },
          "search_tables__apply_to_group_columns_text": {
            "type": "text",
            "label": "Group Column(s) separated by `;`",
            "show_if": "search_tables=='true' && search_tables__select_columns_by=='by_name_text'",
            "val": "",
            "placeholder": "Column1; Column2; ColumnN",
            "required": true,
            "style": "width: 100%"
          },
          "search_tables__apply_to_group_columns_order": {
            "type": "select",
            "label": "Group Column(s)",
            "required": true,
            "show_if" :  "search_tables=='true' && search_tables__select_columns_by=='by_order'",
            "options": {
              "col1": {
                "label": "Column 1"
              },
              "col2": {
                "label": "Column 2"
              },
              "col3": {
                "label": "Column 3"
              },
              "col4": {
                "label": "Column 4"
              },
              "col5": {
                "label": "Column 5"
              },
              "col6": {
                "label": "Column 6"
              },
              "col7": {
                "label": "Column 7"
              },
              "col8": {
                "label": "Column 8"
              },
              "col9": {
                "label": "Column 9"
              },
              "col10": {
                "label": "Column 10"
              },
              "col11": {
                "label": "Column 11"
              },
              "col12": {
                "label": "Column 12"
              },
              "col13": {
                "label": "Column 13"
              },
              "col14": {
                "label": "Column 14"
              },
              "col15": {
                "label": "Column 15"
              },
              "col16": {
                "label": "Column 16"
              },
              "col17": {
                "label": "Column 17"
              },
              "col18": {
                "label": "Column 18"
              },
              "col19": {
                "label": "Column 19"
              },
              "col20": {
                "label": "Column 20"
              }
            },
            "multiple": true,
            "val": []
          }
        }
      }
    }
  }
}
,
"/ExportToDbOptions.json/ExportToDbOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.to": {
        "type": "hidden",
        "val": "database"
      },
      "postgresql_db_credential_box": {
        "type": "fieldset",
        "label": "Database Connection Credentials",
        "repeat": false,
        "fields": {
          "options.dbms": {
            "type": "select",
            "label": "Select DBMS",
            "options": {
              "postgresql": {
                "label": "PostgreSQL"
              },
              "mysql": {
                "label": "MySQL"
              },
              "sql_server": {
                "label": "MS SQL Server"
              },
              "oracle": {
                "label": "Oracle"
              }
            },
            "val": "postgresql",
            "required": true,
            "breakLine": true
          },
          "options.host": {
            "type": "text",
            "label": "Host",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "options.user": {
            "type": "text",
            "label": "User",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "options.password": {
            "type": "password",
            "label": "Password",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "options.database": {
            "type": "text",
            "label": "Database",
            "required": true,
            "width": "100%",
            "breakLine": true
          }
        }
      },
      "options.schema_name_to_export": {
        "type": "text",
        "label": "Schema name to export into",
        "show_if": "options.dbms=='postgresql' || options.dbms=='sql_server' || options.dbms=='oracle'",
        "required": true,
        "val": "public",
        "width": "100%",
        "breakLine": true
      },
      "options.if_duplicated": {
        "type": "select",
        "label": "If duplicated",
        "val": "drop_if_exist",
        "options": {
          "drop_if_exist": {
            "label": "Create or Drop (if already existing)"
          },
          "error_if_exist": {
            "label": "Create New (throw error if existing)"
          },
          "error_if_not_exist": {
            "label": "Drop (throw error if not-existing)"
          },
          "append": {
            "label": "Append"
          }
        },
        "breakLine": true
      },
      "output.output_as_new_table": {
        "type": "hidden",
        "val": "true"
      }
    }
  }
}
,
"/TableStructureOptions.json/TableStructureOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.all_fields": {
        "type": "checkbox",
        "label": "All Info Fields",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.info_fields": {
        "type": "select",
        "label": "Info Fields",
        "show_if" :  "options.all_fields == 'false'",
        "multiple": true,
        "options": {
          "Record Count": {
            "label": "Record Count"
          },
          "Empty Records": {
            "label": "Empty Records"
          },
          "Distinct Records": {
            "label": "Distinct Records"
          },
          "Only Numbers": {
            "label": "Only Numbers"
          },
          "Only Characters": {
            "label": "Only Characters"
          },
          "Contains Characters": {
            "label": "Contains Characters"
          },
          "Contains Whitespace": {
            "label": "Contains Whitespace"
          },
          "Contains Punctuation": {
            "label": "Contains Punctuation"
          }
        },
        "val": ["Record Count"],
        "required": true,
        "breakLine": true
      }
    }
  }
}
,
"/ReplacePlaceholderOptions.json/ReplacePlaceholderOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.find_col": {
        "type": "select",
        "label": "Placeholder Column",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "options.placeholder_type": {
        "type": "select",
        "label": "Placeholder type",
        "required": true,
        "options": {
          "text": {
            "label": "Text"
          },
          "regex": {
            "label": "Regular Expression"
          }
        },
        "val": "text"
      },
      "options.placeholder_text": {
        "type": "text",
        "label": "Placeholder",
        "show_if": "options.placeholder_type=='text'",
        "val": "",
        "placeholder": "FindText",
        "required": true,
        "breakLine": true
      },
      "options.placeholder_regex": {
        "type": "text",
        "label": "Placeholder RegEx",
        "show_if": "options.placeholder_type=='regex'",
        "val": "",
        "placeholder": "\\sFindText\\s",
        "required": true
      },
      "options.case_sensitivity": {
        "type": "select",
        "label": "Case Sensitivity",
        "required": true,
        "options": {
          "yes": {
            "label": "Case Sensitive"
          },
          "no": {
            "label": "Case Insensitive"
          }
        },
        "val": "yes",
        "breakLine": true
      },
      "options.replace_col": {
        "type": "select",
        "label": "Replace By Column",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true,
        "breakLine": true
      }
    }
  }
}
,
"/RecordIDOptions.json/RecordIDOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.new_column_name": {
        "type": "text",
        "label": "New Column Name",
        "val": "RecordID",
        "required": true
      },
      "options.starting_value": {
        "type": "text",
        "label": "Starting Value",
        "val": "1",
        "required": true
      },
      "options.position": {
        "type": "select",
        "label": "Position",
        "required": true,
        "options": {
          "first_column": {
            "label": "First Column"
          },
          "last_column": {
            "label": "Last Column"
          }
        },
        "val": "first_column",
        "breakLine": true
      },
      "options.count_per_group": {
        "type": "checkbox",
        "label": "Restart counting per each group",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "options.group_cols": {
        "type": "select",
        "label": "Group column(s)",
        "show_if": "options.count_per_group=='true'",
        "table": "table_id",
        "bind": "COLUMNS",
        "multiple": true
      },
      "options.treat_each_change_as_new_group": {
        "type": "checkbox",
        "label": "Treat each change as new Group",
        "show_if": "options.count_per_group=='true'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
}
,
"/JsonToTableOptions.json/JsonToTableOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.category": {
        "type": "hidden",
        "val": "json_to_table"
      },
      "options.input_by_table": {
        "type": "checkbox",
        "label": "Input by table",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.json_str": {
        "type": "textarea",
        "label": "Input JSON",
        "show_if": "options.input_by_table=='false'",
        "val": "{\n  \"k1\": \"v1\",\n  \"k2\": \"v2\",\n  \"k3\": {\n    \"k4\": \"v4\",\n    \"k5\": [\n      {\n        \"k6\": \"v6\",\n        \"k7\": \"v7\"\n      },\n      {\n        \"k8\": [\n          \"v8-1\",\n          \"v8-2\",\n          [\n            \"v8-3-1\",\n            \"v8-3-2\"\n          ],\n          {\n            \"k10\": \"v10\"\n          }\n        ]\n      }\n    ]\n  }\n}",
        "width": "100%",
        "rows": 6,
        "required": true,
        "breakLine": true
      },
      "options.table_id": {
        "type": "select",
        "label": "Select Table",
        "show_if": "options.input_by_table=='true'",
        "bind": "TABLES",
        "empty": "",
        "required": true
      },
      "options.json_column": {
        "type": "select",
        "label": "JSON column",
        "show_if": "options.input_by_table=='true'",
        "table": "options.table_id",
        "bind": "COLUMNS",
        "required": true,
        "breakLine": true
      },
      "options.output_nesting_structure": {
        "type": "checkbox",
        "label": "Output Nesting Structure",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
},
"/TestInputOptions.json/TestInputOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Table Header & Label Result",
    "repeat": false,
    "fields": {
      "has_header": {
        "type": "button",
        "label": "Has header!",
        "show_if": "$input_table.numOfHeader >= 1"
      },
      "has_label": {
        "type": "button",
        "label": "Has label!",
        "show_if": "$input_table.numOfLabel >= 1"
      },
      "has_both": {
        "type": "button",
        "label": "Have both!",
        "show_if": "$input_table.numOfHeader >= 1 && $input_table.numOfLabel >= 1"
      },
      "has_both2": {
        "type": "text",
        "label": "Have both2!",
        "show_if": "$input_table.numOfHeader>=1 && $input_table.numOfLabel>=1",
        "val": "both"
      },
      "header_only": {
        "type": "button",
        "label": "Header only!",
        "show_if": "$input_table.numOfHeader >= 1 && $input_table.numOfLabel < 1"
      },
      "label_only": {
        "type": "button",
        "label": "Label only!",
        "show_if": "$input_table.numOfHeader < 1 && $input_table.numOfLabel >= 1"
      },
      "no_header": {
        "type": "button",
        "label": "No header!",
        "show_if": "$input_table.numOfHeader < 1"
      },
      "no_label": {
        "type": "button",
        "label": "No label!",
        "show_if": "$input_table.numOfLabel < 1"
      }
    }
  }
},
"/FindReplaceByTableOptions.json/FindReplaceByTableOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "incoming_value_to_replace.type": {
        "type": "hidden",
        "val": "replacement_table"
      },
      "incoming_value_to_replace.value": {
        "type": "text",
        "label": "Incoming Value To Replace",
        "required": true,
        "show_if": "incoming_value_to_replace.type=='user_specified_value' || incoming_value_to_replace.type=='begins_with' || incoming_value_to_replace.type=='ends_with'",
        "val": "",
        "style": "min-width: 170px"
      },
      "incoming_value_to_replace.regex": {
        "type": "text",
        "label": "Regular Expression",
        "required": true,
        "show_if": "incoming_value_to_replace.type=='regex'",
        "val": "(.*),(.*),(.*)\\s(\\d{5})(-\\d{4})?",
        "style": "min-width: 200px"
      },
      "replace_table.table_id": {
        "type": "select",
        "label": "Replacement Table",
        "show_if": "incoming_value_to_replace.type=='replacement_table'",
        "bind": "TABLES",
        "required": true
      },
      "replace_table.find_column": {
        "type": "select",
        "label": "Select Find Column",
        "show_if": "incoming_value_to_replace.type=='replacement_table'",
        "table": "replace_table.table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "replace_table.replace_with_column": {
        "type": "select",
        "label": "Select Replace with Column",
        "show_if": "incoming_value_to_replace.type=='replacement_table'",
        "table": "replace_table.table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "incoming_value_to_replace.partial_match": {
        "type": "select",
        "label": "Partial Match",
        "show_if": "incoming_value_to_replace.type=='user_specified_value' || incoming_value_to_replace.type=='replacement_table'",
        "options": {
          "full_match": {
            "label": "Full match"
          },
          "full_and_partial_match": {
            "label": "Full and partial match"
          },
          "partial_match_only": {
            "label": "Partial match only"
          }
        },
        "val": "full_and_partial_match"
      },
      "replace_with.value_type": {
        "type": "select",
        "label": "Replace With",
        "show_if": "incoming_value_to_replace.type!='regex' && incoming_value_to_replace.type!='replacement_table'",
        "options": {
          "user_specified_value": {
            "label": "Custom Value"
          },
          "average": {
            "label": "Column Average"
          },
          "median": {
            "label": "Column Median"
          },
          "mode": {
            "label": "Column Mode"
          },
          "sum": {
            "label": "Column Sum"
          },
          "table": {
            "label": "Table Column"
          }
        },
        "val": "user_specified_value",
        "style": "min-width: 190px"
      },
      "replace_with.value": {
        "type": "text",
        "label": "Replace With Value",
        "show_if": "incoming_value_to_replace.type!='regex' && replace_with.value_type=='user_specified_value' && incoming_value_to_replace.type!='replacement_table'",
        "val": ""
      },
      "replace_with.regex_value": {
        "type": "text",
        "label": "Replace With Value",
        "show_if": "incoming_value_to_replace.type=='regex' && incoming_value_to_replace.type!='replacement_table'",
        "val": "\\4: \\2, \\3"
      },
      "replace_with.table_id": {
        "type": "select",
        "label": "Select Table",
        "show_if": "incoming_value_to_replace.type!='regex' && replace_with.value_type=='table' && incoming_value_to_replace.type!='replacement_table'",
        "bind": "TABLES",
        "required": true
      },
      "replace_with.column": {
        "type": "select",
        "label": "Select Column",
        "show_if": "incoming_value_to_replace.type!='regex' && replace_with.value_type=='table' && incoming_value_to_replace.type!='replacement_table'",
        "table": "replace_with.table_id",
        "bind": "COLUMNS",
        "required": true,
        "breakLine": true
      },
      "replacement_table_notice": {
        "type": "text",
        "label": "",
        "show_if": "incoming_value_to_replace.type=='replacement_table'",
        "val": "Line-break will be ignored in replacement table",
        "disabled": true,
        "width": "100%"
      },
      "use_replace_table_filter": {
        "type": "checkbox",
        "label": "Use Filter on \"Replace With\" Table",
        "show_if": "incoming_value_to_replace.type=='replacement_table' || (incoming_value_to_replace.type!='regex' && replace_with.value_type=='table')",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "replace_table_filter_option_box": {
        "type": "fieldset",
        "label": "\"Replace With\" Table Filter Options",
        "show_if": "use_replace_table_filter=='true' && (incoming_value_to_replace.type=='replacement_table' || (incoming_value_to_replace.type!='regex' && replace_with.value_type=='table'))",
        "repeat": false,
        "fields": {
          "replace_table_filter_option.filter": {
            "type": "fieldset",
            "label": "Add Filter Conditions on \"Replace With\" Table",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if" :  "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if" :  "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "replace_with.table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table_id": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table_id",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "replace_table_filter_option.apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record on \"Replace With\" Table",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "replace_table_filter_option_apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group on \"Replace With\" Table",
            "show_if": "replace_table_filter_option.apply_to_record=='false' && (incoming_value_to_replace.type!='replacement_table' && incoming_value_to_replace.type!='regex' && replace_with.value_type=='table')",
            "repeat": false,
            "fields": {
              "replace_table_filter_option.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "required": true,
                "width": "100%",
                "table": "replace_with.table_id",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          },
          "replacement_table_filter_option_apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group on \"Replace With\" Table",
            "show_if": "replace_table_filter_option.apply_to_record=='false' && incoming_value_to_replace.type=='replacement_table'",
            "repeat": false,
            "fields": {
              "replacement_table_filter_option.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "required": true,
                "width": "100%",
                "table": "replace_table.table_id",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      }
    }
  }
}
,
"/EmailByMenuOptions.json/EmailByMenuOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "Select Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.task_type": {
        "type": "hidden",
        "val": "write_email"
      },
      "options.to": {
        "type": "text",
        "label": "To",
        "required": true,
        "val": "",
        "placeholder": "user1@domain.com; user2@domain.com;",
        "width": "100%"
      },
      "options.add_cc": {
        "type": "checkbox",
        "label": "CC",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.cc": {
        "type": "text",
        "label": "CC",
        "show_if": "options.add_cc=='true'",
        "val": "",
        "placeholder": "ccuser1@domain.com; ccuser2@domain.com",
        "width": "100%",
        "breakLine": true
      },
      "options.add_bcc": {
        "type": "checkbox",
        "label": "BCC",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.bcc": {
        "type": "text",
        "label": "BCC",
        "show_if": "options.add_bcc=='true'",
        "val": "",
        "placeholder": "bccuser1@domain.com; bccuser1@domain.com",
        "width": "100%",
        "breakLine": true
      },
      "options.subject": {
        "type": "text",
        "label": "Subject",
        "required": true,
        "val": "",
        "placeholder": "Subject",
        "width": "100%"
      },
      "options.body": {
        "type": "textarea",
        "label": "Body",
        "val": "",
        "placeholder": "Text",
        "md_no_resize": true,
        "rows": 3,
        "width": "100%"
      },
      "options.add_table": {
        "type": "checkbox",
        "label": "Embed a Table",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.embed_mode": {
        "type": "select",
        "label": "Table Embed Type",
        "show_if": "options.add_table=='true'",
        "options": {
          "embed": {
            "label": "Embed"
          },
          "attach_csv_comma_separated": {
            "label": "Attach as csv (',' - separated)"
          },
          "attach_csv_semicolon_separated": {
            "label": "Attach as csv (';' - separated)"
          }
        },
        "val": "embed",
        "breakLine": true
      },
      "options.embed_table_footer": {
        "type": "text",
        "label": "Table Footer",
        "show_if": "options.add_table=='true'",
        "val": "",
        "style": "width: 100%"
      },
      "info3": {
        "type": "text",
        "label": "",
        "val": "This task only supports users logged in via Microsoft Login",
        "disabled": true,
        "style": "width: 100%"
      }
    }
  }
},
"/D3TableInfoSettings.json/D3TableInfoSettings.json": {
  "options.popup_or_table": {
    "type": "select",
    "label": "Type",
    "required": true,
    "options": {
      "popup": {
        "label": "Pop-Up"
      },
      "embedded": {
        "label": "Embedded"
      }
    },
    "val": "popup",
    "breakLine": true
  }
},
"/DatetimeOptions.json/DatetimeOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.convert_type": {
        "type": "select",
        "label": "Convert Type",
        "required": true,
        "options": {
          "complete_date": {
            "label": "Complete date"
          },
          "expand_date": {
            "label": "Expand date"
          },
          "convert_date": {
            "label": "Convert date"
          },
          "convert_date_range": {
            "label": "Convert date range"
          }
        },
        "val": "complete_date"
      },
      "options.date_convert_type": {
        "type": "select",
        "label": "Convert to",
        "show_if": "options.convert_type=='convert_date'",
        "required": true,
        "options": {
          "begin_of_month": {
            "label": "Begin of Month"
          },
          "end_of_month": {
            "label": "End of Month"
          },
          "hy_year": {
            "label": "HY Year"
          },
          "qrt_year": {
            "label": "Qrt Year"
          },
          "month_year": {
            "label": "Month Year"
          },
          "week_year": {
            "label": "Week Year"
          }
        },
        "val": "begin_of_month"
      },
      "options.date_range_convert_type": {
        "type": "select",
        "label": "Convert to",
        "show_if": "options.convert_type=='convert_date_range'",
        "required": true,
        "options": {
          "begin_of_month": {
            "label": "Begin of Month"
          },
          "end_of_month": {
            "label": "End of Month"
          },
          "begin_of_range": {
            "label": "Begin of Range"
          },
          "end_of_range": {
            "label": "End of Range"
          },
          "begin_of_quarter": {
            "label": "Begin of Quarter"
          },
          "end_of_quarter": {
            "label": "End of Quarter"
          }
        },
        "val": "begin_of_month",
        "breakLine": true
      },
      "options.output_in_new_column": {
        "type": "checkbox",
        "label": "Output in New Column",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "options.new_field_name": {
        "type": "text",
        "label": "New column name",
        "show_if": "options.output_in_new_column=='true'",
        "val": "GeneratedDate",
        "required": true,
        "minLength": 1,
        "maxLength": 255,
        "breakLine": true
      }
    }
  }
}
,
"/DCHealthOptions.json/DCHealthOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.all_countries": {
        "type": "hidden",
        "val": "false"
      },
      "options.stat_vars": {
        "type": "fieldset",
        "label": "Statistics data category(s)",
        "repeat": true,
        "fields": {
          "stat_var_name": {
            "type": "select",
            "label": "Statistics Data",
            "required": true,
            "options": {
              "FertilityRate_Person_Female": {
                "label": "Fertility Rate"
              },
              "LifeExpectancy_Person": {
                "label": "Life Expectancy"
              },
              "Count_BirthEvent_LiveBirth_AsFractionOf_Count_Person": {
                "label": "Number of live births occurring during the year, Per Capita"
              },
              "Count_Person_20To79Years_Diabetes_AsFractionOf_Count_Person_20To79Years": {
                "label": "Percentage of people ages 20-79 who have type 1 or type 2 diabetes"
              },
              "Count_Death": {
                "label": "Count of Mortality Event"
              },
              "Count_Person_15OrMoreYears_Smoking_AsFractionOf_Count_Person_15OrMoreYears": {
                "label": "15 Years or More, Smoking Population Per Capita 15 or More Years"
              },
              "Count_Person_Upto4Years_Overweight_AsFractionOf_Count_Person_Upto4Years": {
                "label": "4 Years or Less, Overweight Population Per Capita Upto 4 Years"
              }
            }
          },
          "per_capita": {
            "type": "checkbox",
            "label": "Per capita",
            "show_if": "false",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.output_as_chart": {
        "type": "checkbox",
        "label": "Output a Graph",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
}
,
"/StringLookupOptions.json/StringLookupOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.task_type": {
        "type": "select",
        "label": "Task Type",
        "required": true,
        "options": {
          "generate_lookup_table": {
            "label": "Generate Lookup-Table"
          },
          "apply_lookup_table": {
            "label": "Apply Lookup-Table"
          },
          "apply_regex_table": {
            "label": "Apply Regex-Table"
          },
          "apply_lookup_table_to_cells": {
            "label": "Apply Lookup-Table to Cells"
          },
          "apply_regex_table_to_cells": {
            "label": "Apply Regex-Table to Cells"
          }
        },
        "val": "generate_lookup_table"
      },
      "options.pattern_type": {
        "type": "hidden",
        "val": "duplicate_pattern"
      },
      "duplicate_option_box": {
        "type": "fieldset",
        "label": "Duplicate Patterns Option",
        "show_if": "options.task_type=='label_duplicates' || (options.task_type=='generate_lookup_table' && options.pattern_type=='duplicate_pattern')",
        "repeat": false,
        "fields": {
          "options.minimum_number_of_matching_characters": {
            "type": "text",
            "label": "Minimum Number of matching Characters",
            "val": "3",
            "required": true,
            "style": "min-width: 240px"
          },
          "options.minimum_number_of_duplicates": {
            "type": "text",
            "label": "Minimum Number of duplicates",
            "val": "2",
            "required": true,
            "style": "min-width: 240px",
            "breakLine": true
          }
        }
      },
      "number_range_option_box": {
        "type": "fieldset",
        "label": "Number Ranges Option",
        "show_if": "options.task_type=='generate_lookup_table' && options.pattern_type=='number_range'",
        "repeat": false,
        "fields": {
          "options.number_range.range_type": {
            "type": "select",
            "label": "Range Type",
            "required": true,
            "options": {
              "equal_interval": {
                "label": "N Equal Intervals"
              },
              "equal_range": {
                "label": "Equal Range"
              },
              "custom_range": {
                "label": "Custom Range"
              }
            },
            "val": "equal_interval"
          },
          "options.number_range.n_value": {
            "type": "text",
            "label": "N",
            "show_if": "options.number_range.range_type=='equal_interval'",
            "val": "3",
            "required": true
          },
          "options.number_range.range_value": {
            "type": "text",
            "label": "Range",
            "show_if": "options.number_range.range_type=='equal_range'",
            "val": "10",
            "required": true
          },
          "options.number_range.custom_ranges": {
            "type": "fieldset",
            "label": "Add Custom Range Pattern",
            "show_if": "options.number_range.range_type=='custom_range'",
            "repeat": true,
            "fields": {
              "pattern": {
                "type": "text",
                "label": "Pattern",
                "val": "0<=x<10",
                "required": true
              },
              "label": {
                "type": "text",
                "label": "Label",
                "val": "positive10",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          }
        }
      },
      "options.is_custom_lookup_table": {
        "type": "checkbox",
        "label": "Custom Lookup Table",
        "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells'",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "lookup_table_frame": {
        "type": "fieldset",
        "label": "Select Lookup Table",
        "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells'",
        "repeat": false,
        "fields": {
          "options.lookup_table_id": {
            "type": "select",
            "label": "Lookup Table",
            "show_if": "options.is_custom_lookup_table=='false'",
            "bind": "TABLES",
            "empty": "",
            "required": true,
            "breakLine": true
          },
          "options.custom_lookup_table": {
            "type": "fieldset",
            "label": "Custom Lookup Table",
            "show_if": "options.is_custom_lookup_table=='true'",
            "repeat": true,
            "fields": {
              "lookup": {
                "type": "text",
                "label": "Lookup",
                "val": "",
                "required": true
              },
              "label": {
                "type": "text",
                "label": "Label",
                "val": "",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.manual_select": {
            "type": "checkbox",
            "label": "Select manually",
            "show_if": "options.pattern_type=='duplicate_pattern' && options.is_custom_lookup_table=='false' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table')",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.apply_lookup_table__lookup_table_pattern_label_columns": {
            "type": "fieldset",
            "label": "Add Pattern column / Label column pairs",
            "show_if": "options.pattern_type=='duplicate_pattern' && options.is_custom_lookup_table=='false' && options.manual_select=='true' && options.task_type=='apply_lookup_table'",
            "repeat": true,
            "fields": {
              "pattern_column": {
                "type": "select",
                "label": "Pattern Column",
                "table": "options.lookup_table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "label_column": {
                "type": "select",
                "label": "Label Column",
                "table": "options.lookup_table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.apply_regex_table__lookup_table_pattern_column": {
            "type": "select",
            "label": "Pattern Column",
            "show_if": "options.pattern_type=='duplicate_pattern' && options.is_custom_lookup_table=='false' && options.manual_select=='true' && options.task_type=='apply_regex_table'",
            "table": "options.lookup_table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "options.apply_regex_table__lookup_table_label_columns": {
            "type": "select",
            "label": "Label Column(s)",
            "show_if": "options.pattern_type=='duplicate_pattern' && options.task_type=='apply_regex_table' && options.manual_select=='true'",
            "table": "options.lookup_table_id",
            "bind": "COLUMNS",
            "multiple": true,
            "required": true
          },
          "options.apply_regex_table__match_column_name": {
            "type": "text",
            "label": "Match Column Name",
            "show_if": "options.pattern_type=='duplicate_pattern' && options.task_type=='apply_regex_table' && options.manual_select=='true'",
            "val": "Match",
            "required": true
          },
          "options.apply_regex_table__full_match_column_name": {
            "type": "text",
            "label": "Full Match Column Name",
            "show_if": "options.pattern_type=='duplicate_pattern' && options.task_type=='apply_regex_table' && options.manual_select=='true'",
            "val": "Full-Match",
            "required": true
          },
          "options.partial_match": {
            "type": "checkbox",
            "label": "Partial Match",
            "show_if": "options.pattern_type=='duplicate_pattern' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_lookup_table_to_cells')",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "options.case_sensitive": {
            "type": "checkbox",
            "label": "Case Sensitive",
            "show_if": "options.pattern_type=='duplicate_pattern' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table' || options.task_type=='apply_regex_table_to_cells')",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.use_delimiter": {
            "type": "checkbox",
            "label": "Custom Delimiter",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px"
          },
          "options.delimiter": {
            "type": "text",
            "label": "Input Delimiter",
            "show_if": "options.use_delimiter=='true'",
            "val": ";",
            "required": true,
            "breakLine": true
          }
        }
      },
      "help_1": {
        "type": "textarea",
        "label": "",
        "show_if": "options.task_type=='apply_regex_table' || options.task_type=='apply_regex_table_to_cells'",
        "val": "To compile a regular expression you may e.g. use  regex101.com",
        "disabled": true,
        "style": "width: 100%"
      },
      "options.input_table.use_filter": {
        "type": "checkbox",
        "label": "Use Filter for Input table",
        "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "input_table_filter_box": {
        "type": "fieldset",
        "label": "Input Table Filter Options",
        "show_if": "options.input_table.use_filter=='true' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells')",
        "repeat": false,
        "fields": {
          "options.input_table.filter": {
            "type": "fieldset",
            "label": "Add Filter Conditions for Input table",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "input_table",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table_id": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table_id",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.input_table.apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record for Input table filter",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "input_table_apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group of Input table",
            "show_if": "options.input_table.apply_to_record=='false'",
            "repeat": false,
            "fields": {
              "options.input_table.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "required": true,
                "width": "100%",
                "table": "input_table",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      },
      "options.lookup_table.use_filter": {
        "type": "checkbox",
        "label": "Use Filter for Lookup table",
        "show_if": "options.is_custom_lookup_table=='false' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells')",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "lookup_table_filter_box": {
        "type": "fieldset",
        "label": "Lookup Table Filter Options",
        "show_if": "options.lookup_table.use_filter=='true' && options.is_custom_lookup_table=='false' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells')",
        "repeat": false,
        "fields": {
          "options.lookup_table.filter": {
            "type": "fieldset",
            "label": "Add Filter Conditions for Lookup table",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "options.lookup_table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table_id": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table_id",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.lookup_table.apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record for Lookup table filter",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "lookup_table_apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group of Lookup table",
            "show_if": "options.lookup_table.apply_to_record=='false'",
            "repeat": false,
            "fields": {
              "options.lookup_table.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "required": true,
                "width": "100%",
                "table": "options.lookup_table",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      },
      "options.input_table.apply_to_group_for_concatenation.enabled": {
        "type": "checkbox",
        "label": "Apply to Group for Rows Concatenation",
        "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "options.input_table.apply_to_group_for_concatenation.allow_group_lists": {
        "type": "checkbox",
        "label": "Allow Group-Lists",
        "show_if": "options.input_table.apply_to_group_for_concatenation.enabled=='true' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table')",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "options.input_table.apply_to_group_for_concatenation.group_column": {
        "type": "select",
        "label": "Select Group Column for Rows Concatenation",
        "show_if": "options.input_table.apply_to_group_for_concatenation.enabled=='true' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table')",
        "required": true,
        "width": "100%",
        "table": "table_id",
        "bind": "COLUMNS",
        "breakLine": true
      },
      "options.add_filename": {
        "type": "checkbox",
        "label": "Add File Name",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
}
,
"/CrosstabMultiHeaderOptions.json/CrosstabMultiHeaderOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Select Options",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "transpose_type": {
        "type": "hidden",
        "val": "crosstab"
      },
      "crosstab.group_data_by_these_values": {
        "type": "fieldset",
        "label": "Rows",
        "repeat": true,
        "fields": {
          "row": {
            "type": "select",
            "label": "Row",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "crosstab.change_column_headers": {
        "type": "fieldset",
        "label": "Columns",
        "repeat": true,
        "fields": {
          "column": {
            "type": "select",
            "label": "Column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "crosstab.values_for_new_columns": {
        "type": "select",
        "label": "Values",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "crosstab.values_set_format": {
        "type": "checkbox",
        "label": "Reformat Values",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "crosstab_values_format_frame": {
        "type": "fieldset",
        "label": "Values Formatting",
        "show_if": "crosstab.values_set_format=='true'",
        "repeat": false,
        "fields": {
          "crosstab.values.format__category": {
            "type": "select",
            "label": "Display Format",
            "required": true,
            "options": {
              "standard": {
                "label": "Standard"
              },
              "number": {
                "label": "Number"
              },
              "percentage": {
                "label": "Percentage"
              },
              "text": {
                "label": "Text"
              },
              "date": {
                "label": "Date"
              },
              "currency": {
                "label": "Currency"
              }
            },
            "val": "standard"
          },
          "crosstab.values.format__rounding": {
            "type": "select",
            "label": "Decimal Places for display",
            "show_if": "crosstab.values.format__category=='number' || crosstab.values.format__category=='percentage' || crosstab.values.format__category=='currency'",
            "required": true,
            "options": {
              "no_rounding": {
                "label": "No rounding"
              },
              "0": {
                "label": "0 digits"
              },
              "1": {
                "label": "1 digits"
              },
              "2": {
                "label": "2 digits"
              },
              "3": {
                "label": "3 digits"
              },
              "4": {
                "label": "4 digits"
              },
              "5": {
                "label": "5 digits"
              },
              "6": {
                "label": "6 digits"
              },
              "7": {
                "label": "7 digits"
              },
              "8": {
                "label": "8 digits"
              },
              "9": {
                "label": "9 digits"
              }
            },
            "val": "2"
          },
          "crosstab.values.format__use_1000_separator": {
            "type": "checkbox",
            "label": "Use 1000 Separator(,)",
            "show_if": "crosstab.values.format__category=='number' || crosstab.values.format__category=='percentage' || crosstab.values.format__category=='currency'",
            "val": "true",
            "isOn": "true",
            "isOff": "false"
          },
          "crosstab.values.format__currency_symbol": {
            "type": "select",
            "label": "Symbol",
            "show_if": "crosstab.values.format__category=='currency'",
            "required": true,
            "options": {
              "dollar": {
                "label": "$"
              },
              "euro": {
                "label": "€"
              },
              "pound": {
                "label": "£"
              },
              "yen": {
                "label": "¥ (Yen, currency of Japan)"
              },
              "colon": {
                "label": "₡ (Colón, currency of Costa Rica)"
              },
              "naira": {
                "label": "₦ (Naira, currency of Nigeria)"
              },
              "rupee": {
                "label": "₨ (Rupee, currency of India)"
              },
              "rupie": {
                "label": "₹ (Rupee, currency of India)"
              },
              "won": {
                "label": "₩ (Won, currency in South Korea and North Korea)"
              },
              "hebrew": {
                "label": "₪ (Currency of Israel)"
              },
              "dong": {
                "label": "₫ (Currency of Vietnam)"
              },
              "kip": {
                "label": "₭ (Kip, currency of Laos)"
              },
              "mongolia": {
                "label": "₮ (Currency of Mongolia)"
              },
              "peso": {
                "label": "₱ (Peso, currency of the Philippines)"
              },
              "guarani": {
                "label": "₲ (Guaraní, currency of Paraguay)"
              },
              "hryvnia": {
                "label": "₴ (Hryvnia, currency of Ukraine)"
              },
              "tenge": {
                "label": "₸ (Tenge, currency of Kazakhstan)"
              },
              "lira": {
                "label": "₺ (Lira, currency of Turkey)"
              },
              "manat": {
                "label": "₼ (Manat, currency of Azerbaijan)"
              },
              "rubles": {
                "label": "₽ (Rubles, currency of Russia)"
              },
              "lari": {
                "label": "₾ (Lari, currency of Georgia)"
              },
              "bitcoin": {
                "label": "₿ (Bitcoin, crypto currency)"
              }
            },
            "val": "dollar"
          },
          "crosstab.values.format__date_format": {
            "type": "select",
            "label": "Type",
            "show_if": "crosstab.values.format__category=='date'",
            "required": true,
            "options": {
              "mm/dd/yyyy": {
                "label": "3/14/2012"
              },
              "D, M dd, Y": {
                "label": "Wednesday, March 14, 2012"
              },
              "yyyy-mm-dd": {
                "label": "2012-03-14"
              },
              "m.dd.yyyy": {
                "label": "3.14.2012"
              },
              "m.dd.yy": {
                "label": "3.14.12"
              },
              "dd.m.yyyy": {
                "label": "14.3.2012"
              },
              "dd.m.yy": {
                "label": "14.3.12"
              },
              "M dd, Y": {
                "label": "March 14, 2012"
              },
              "dd-mm-yyyy": {
                "label": "14-03-2012"
              },
              "mm-dd-yyyy": {
                "label": "03-14-2012"
              },
              "dd-mm-yy": {
                "label": "14-03-12"
              },
              "mm-dd-yy": {
                "label": "03-14-12"
              }
            },
            "val": "mm/dd/yyyy",
            "breakLine": true
          }
        }
      },
      "crosstab.method_for_aggregating_values": {
        "type": "select",
        "label": "Method for Aggregating Values",
        "options": {
          "Concatenate": {
            "label": "Concatenate"
          },
          "First": {
            "label": "First"
          },
          "Last": {
            "label": "Last"
          },
          "Sum": {
            "label": "Sum"
          },
          "Average": {
            "label": "Average"
          },
          "Count": {
            "label": "Count"
          },
          "User Defined": {
            "label": "User Defined"
          }
        },
        "val": "Concatenate",
        "required": true
      },
      "crosstab.user_defined_str": {
        "type": "text",
        "label": "User Defined Value",
        "show_if": "crosstab.method_for_aggregating_values=='User Defined'",
        "val": "x",
        "trim": "false",
        "breakLine": true
      },
      "crosstab.separator": {
        "type": "text",
        "label": "Separator",
        "show_if": "method_for_aggregating_values=='Concatenate'",
        "val": ",",
        "trim": "false",
        "required": true,
        "breakLine": true
      }
    }
  }
},
"/TableTypeOptions.json/TableTypeOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Change Table Type",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "header_levels": {
        "type": "select",
        "label": "Column-Headers",
        "required": true,
        "options": {
          "keep": {
            "label": "Keep Current"
          },
          "0": {
            "label": "0 header levels"
          },
          "1": {
            "label": "1 header level"
          },
          "2": {
            "label": "2 header levels"
          },
          "3": {
            "label": "3 header levels"
          }
        },
        "val": "keep"
      },
      "label_levels": {
        "type": "select",
        "label": "Row-Labels",
        "required": true,
        "options": {
          "keep": {
            "label": "Keep Current"
          },
          "0": {
            "label": "0 label levels"
          },
          "1": {
            "label": "1 label level"
          },
          "2": {
            "label": "2 label levels"
          },
          "3": {
            "label": "3 label levels"
          }
        },
        "val": "keep",
        "breakLine": true
      }
    }
  }
}
,
"/FlowPermissionInput.json/FlowPermissionInput.json": {
  "input.table_or_flow": {
    "type": "hidden",
    "val": "set_flow_permissions"
  }
}
,
"/DCEconomicWorldDataOptions.json/DCEconomicWorldDataOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.group_by": {
        "type": "select",
        "label": "Group By",
        "required": true,
        "options": {
          "Region": {
            "label": "Region"
          },
          "Income Group": {
            "label": "Income Group"
          }
        },
        "val": "Region",
        "breakLine": true
      },
      "options.stat_var_name": {
        "type": "select",
        "label": "Statistics Data",
        "required": true,
        "options": {
          "Amount_EconomicActivity_GrossDomesticProduction_Nominal": {
            "label": "GDP"
          },
          "GrowthRate_Amount_EconomicActivity_GrossDomesticProduction": {
            "label": "Growth Rate of GDP"
          },
          "Amount_EconomicActivity_GrossNationalIncome_PurchasingPowerParity": {
            "label": "GNI (Purchasing Power Parity)"
          },
          "Count_Product_MobileCellularSubscription_AsFractionOf_Count_Person": {
            "label": "Mobile Subscriptions Per Capita"
          },
          "Amount_Debt_Government": {
            "label": "Debt With Government"
          },
          "Amount_Debt_Government_AsAFractionOfGrossDomesticProduction": {
            "label": "Debt With Government as Fraction of Gross Domestic Production"
          },
          "GiniIndex_EconomicActivity": {
            "label": "Gini Index of Economic Activity"
          },
          "Amount_EconomicActivity_ExpenditureActivity_MilitaryExpenditure_Government": {
            "label": "Military Expenditure, Government"
          },
          "Amount_EconomicActivity_ExpenditureActivity_MilitaryExpenditure_Government_AsFractionOf_Amount_EconomicActivity_GrossDomesticProduction_Nominal": {
            "label": "Military Expenditure, Government as Fraction of Economic Activity Gross Domestic Production Nominal"
          },
          "Amount_EconomicActivity_ExpenditureActivity_EducationExpenditure_Government_AsFractionOf_Amount_EconomicActivity_ExpenditureActivity_Government": {
            "label": "Education Expenditure, Government as Fraction of Economic Activity Expenditure Activity Government"
          },
          "Amount_EconomicActivity_ExpenditureActivity_EducationExpenditure_Government_AsFractionOf_Amount_EconomicActivity_GrossDomesticProduction_Nominal": {
            "label": "Education Expenditure, Government as Fraction of Economic Activity Gross Domestic Production Nominal"
          },
          "Amount_EconomicActivity_ExpenditureActivity_HealthcareExpenditure_AsFractionOf_Count_Person": {
            "label": "Expenditure Activity, Healthcare Expenditure Per Capita"
          },
          "Amount_EconomicActivity_ExpenditureActivity_TertiaryEducationExpenditure_Government_AsFractionOf_Amount_EconomicActivity_ExpenditureActivity_EducationExpenditure_Government": {
            "label": "Tertiary Education Expenditure, Government as Fraction of Economic Activity Expenditure Activity Education Expenditure Government"
          },
          "Amount_EconomicActivity_GrossValueAdded_RealValue": {
            "label": "Gross Value Added (Real Value)"
          },
          "Amount_EconomicActivity_GrossValueAdded_ISICAgricultureHuntingForestryFishing_RealValue": {
            "label": "Gross Value Added, Agriculture, Hunting, Forestry, Fishing (Real Value)"
          },
          "Amount_EconomicActivity_GrossValueAdded_ISICConstruction_RealValue": {
            "label": "Gross Value Added, Construction (Real Value)"
          },
          "Amount_EconomicActivity_GrossValueAdded_ISICManufacturing_RealValue": {
            "label": "Gross Value Added, Manufacturing (Real Value)"
          },
          "Amount_EconomicActivity_GrossValueAdded_ISICMiningManufacturingUtilities_RealValue": {
            "label": "Gross Value Added, Mining, Manufacturing, Utilities (Real Value)"
          },
          "Amount_EconomicActivity_GrossValueAdded_ISICTransportStorageCommunications_RealValue": {
            "label": "Gross Value Added, Transport, Storage And Communications (Real Value)"
          },
          "Amount_EconomicActivity_GrossValueAdded_ISICWholesaleRetailTradeRestaurantsHotels_RealValue": {
            "label": "Gross Value Added, Wholesale, Retail Trade, Restaurants And Hotels (Real Value)"
          },
          "Amount_Remittance_OutwardRemittance": {
            "label": "Outward Remittance"
          },
          "Amount_Remittance_InwardRemittance": {
            "label": "Inward Remittance"
          },
          "Amount_Remittance_InwardRemittance_AsFractionOf_Amount_EconomicActivity_GrossDomesticProduction_Nominal": {
            "label": "Inward Remittance as Fraction of Economic Activity Gross Domestic Production Nominal"
          },
          "Amount_Stock": {
            "label": "Stock"
          },
          "Amount_Stock_AsFractionOf_Amount_EconomicActivity_GrossDomesticProduction_Nominal": {
            "label": "Stock as Fraction of Economic Activity Gross Domestic Production Nominal"
          }
        },
        "val": "Amount_EconomicActivity_GrossDomesticProduction_Nominal"
      },
      "options.per_capita": {
        "type": "checkbox",
        "label": "Per capita",
        "show_if": "options.stat_var_name=='Amount_EconomicActivity_GrossDomesticProduction_Nominal'||options.stat_var_name=='Amount_EconomicActivity_GrossNationalIncome_PurchasingPowerParity'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.help_1": {
        "type": "textarea",
        "label": "",
        "show_if": "options.stat_var_name=='Amount_EconomicActivity_ExpenditureActivity_MilitaryExpenditure_Government_AsFractionOf_Amount_EconomicActivity_GrossDomesticProduction_Nominal'",
        "val": "Military Expenditure, Government as Fraction of Economic Activity Gross Domestic Production Nominal",
        "disabled": true,
        "md_no_resize": false,
        "rows": 2,
        "width": "100%"
      },
      "options.help_2": {
        "type": "textarea",
        "label": "",
        "show_if": "options.stat_var_name=='Amount_EconomicActivity_ExpenditureActivity_EducationExpenditure_Government_AsFractionOf_Amount_EconomicActivity_ExpenditureActivity_Government'",
        "val": "Education Expenditure, Government as Fraction of Economic Activity Expenditure Activity Government",
        "disabled": true,
        "md_no_resize": false,
        "rows": 2,
        "width": "100%"
      },
      "options.help_3": {
        "type": "textarea",
        "label": "",
        "show_if": "options.stat_var_name=='Amount_EconomicActivity_ExpenditureActivity_EducationExpenditure_Government_AsFractionOf_Amount_EconomicActivity_GrossDomesticProduction_Nominal'",
        "val": "Education Expenditure, Government as Fraction of Economic Activity Gross Domestic Production Nominal",
        "disabled": true,
        "md_no_resize": false,
        "rows": 2,
        "width": "100%"
      },
      "options.help_4": {
        "type": "textarea",
        "label": "",
        "show_if": "options.stat_var_name=='Amount_EconomicActivity_ExpenditureActivity_TertiaryEducationExpenditure_Government_AsFractionOf_Amount_EconomicActivity_ExpenditureActivity_EducationExpenditure_Government'",
        "val": "Tertiary Education Expenditure, Government as Fraction of Economic Activity Expenditure Activity Education Expenditure Government",
        "disabled": true,
        "md_no_resize": false,
        "rows": 2,
        "width": "100%"
      },
      "options.all_countries": {
        "type": "checkbox",
        "label": "All countries",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.output_as_chart": {
        "type": "checkbox",
        "label": "Output a Graph",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "options.graph_type": {
        "type": "select",
        "label": "Graph Type",
        "show_if": "options.output_as_chart=='true'",
        "required": true,
        "options": {
          "zoomable_sunburst": {
            "label": "Sunburst"
          },
          "treemap": {
            "label": "Treemap"
          }
        },
        "val": "zoomable_sunburst",
        "breakLine": true
      }
    }
  }
}
,
"/UploadOptions.json/UploadOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "output_config_frame": {
        "type": "fieldset",
        "label": "Output Configuration",
        "repeat": false,
        "fields": {
          "output.add_tag": {
            "type": "checkbox",
            "label": "Add Tag",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-right: 15px"
          },
          "output.tag_name": {
            "type": "text",
            "label": "Tag Name",
            "show_if": "output.add_tag=='true'",
            "required": true,
            "minLength": 1,
            "maxLength": 255,
            "val": "",
            "breakLine": true,
            "style": "margin-left: 15px"
          }
        }
      },
      "output.if_table_exist.type": {
        "type": "select",
        "label": "If existing",
        "val": "drop_if_exist",
        "options": {
          "drop_if_exist": {
            "label": "Create or Drop (if already existing)"
          },
          "error_if_exist": {
            "label": "Create New (throw error if existing)"
          },
          "error_if_not_exist": {
            "label": "Drop (throw error if not-existing)"
          },
          "append_all": {
            "label": "Append All"
          },
          "append_not_existing": {
            "label": "Append not existing"
          },
          "append_changes": {
            "label": "Append changes"
          }
        }
      },
      "output.if_table_exist.append_not_existing_cols": {
        "type": "select",
        "label": "Select Column(s)",
        "show_if": "output.if_table_exist.type=='append_not_existing'",
        "table": "input_table",
        "bind": "COLUMNS",
        "multiple": true,
        "required": true,
        "breakLine": true
      },
      "output.if_table_exist.append_changes__add_timestamp": {
        "type": "checkbox",
        "label": "Add Timestamp",
        "show_if": "output.if_table_exist.type=='append_changes'",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "output.if_table_exist.append_changes__timestamp_colname": {
        "type": "text",
        "label": "Timestamp column name",
        "show_if": "output.if_table_exist.type=='append_changes' && output.if_table_exist.append_changes__add_timestamp=='true'",
        "val": "Timestamp",
        "required": true,
        "breakLine": true
      },
      "output.if_table_exist.append_changes__add_row": {
        "type": "checkbox",
        "label": "Add Row",
        "show_if": "output.if_table_exist.type=='append_changes'",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "output.if_table_exist.append_changes__row_colname": {
        "type": "text",
        "label": "Row column name",
        "show_if": "output.if_table_exist.type=='append_changes' && output.if_table_exist.append_changes__add_row=='true'",
        "val": "Row",
        "required": true,
        "breakLine": true
      },
      "append_not_existing_info1": {
        "type": "text",
        "label": "",
        "show_if": "output.if_table_exist.type=='append_not_existing'",
        "val": "Appends rows only if the value of the",
        "disabled": true,
        "style": "width: 100%"
      },
      "append_not_existing_info2": {
        "type": "text",
        "label": "",
        "show_if": "output.if_table_exist.type=='append_not_existing'",
        "val": "selected column is new in the existing table.",
        "disabled": true,
        "style": "width: 100%"
      },
      "append_not_existing_info3": {
        "type": "text",
        "label": "",
        "show_if": "output.if_table_exist.type=='append_not_existing'",
        "val": "It is assumed that the selected column",
        "disabled": true,
        "style": "width: 100%"
      },
      "append_not_existing_info4": {
        "type": "text",
        "label": "",
        "show_if": "output.if_table_exist.type=='append_not_existing'",
        "val": "is found in the output and existing table",
        "disabled": true,
        "style": "width: 100%"
      }
    }
  }
}
,
"/AddPermissionOptions.json/AddPermissionOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.table_permission.set_or_delete": {
        "type": "select",
        "label": "Type",
        "show_if": "input.table_or_flow=='set_table_permissions'",
        "required": true,
        "options": {
          "set_permissions_by_user_list": {
            "label": "Set permissions by user list"
          },
          "set_permissions_by_user_table": {
            "label": "Set permissions by user table"
          },
          "delete_permissions": {
            "label": "Delete all permissions"
          }
        },
        "val": "set_permissions_by_user_list",
        "breakLine": true
      },
      "options.table_permission.emails": {
        "type": "text",
        "label": "Permitted Users (; separated list)",
        "show_if": "input.table_or_flow=='set_table_permissions' && options.table_permission.set_or_delete=='set_permissions_by_user_list'",
        "required": true,
        "width": "100%"
      },
      "users_table_id": {
        "type": "select",
        "label": "Select Users Table",
        "show_if": "input.table_or_flow=='set_table_permissions' && options.table_permission.set_or_delete=='set_permissions_by_user_table'",
        "bind": "TABLES",
        "empty": "",
        "required": true
      },
      "user_column": {
        "type": "select",
        "label": "Select Users Column",
        "show_if": "input.table_or_flow=='set_table_permissions' && options.table_permission.set_or_delete=='set_permissions_by_user_table'",
        "required": true,
        "table": "users_table_id",
        "bind": "COLUMNS",
        "breakLine": true
      },
      "options.table_permission.all_rows": {
        "type": "checkbox",
        "label": "Give permissions to users of all Rows",
        "show_if": "input.table_or_flow=='set_table_permissions' && options.table_permission.set_or_delete=='set_permissions_by_user_table'",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-right: 15px"
      },
      "user_rows": {
        "type": "select",
        "label": "User rows",
        "show_if": "input.table_or_flow=='set_table_permissions' && options.table_permission.set_or_delete=='set_permissions_by_user_table' && options.table_permission.all_rows=='false'",
        "multiple": true,
        "unique_values_only": true,
        "table": "users_table_id",
        "column_list": "user_column",
        "bind": "RECORDS",
        "required": true
      },
      "options.table_permission.permissions": {
        "type": "fieldset",
        "label": "Set Permissions",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "input.table_or_flow=='set_table_permissions' && (options.table_permission.set_or_delete=='set_permissions_by_user_list' || options.table_permission.set_or_delete=='set_permissions_by_user_table')",
        "repeat": true,
        "fields": {
          "rows_or_columns": {
            "type": "select",
            "label": "Type for Table",
            "required": true,
            "options": {
              "select_rows": {
                "label": "Select Row(s)"
              },
              "select_columns": {
                "label": "Select Column(s)"
              }
            },
            "val": "select_columns"
          },
          "rows": {
            "type": "select",
            "label": "Select Row(s)",
            "show_if": "this.rows_or_columns=='select_rows'",
            "table": "input.table_id",
            "bind": "LABELS",
            "multiple": true,
            "required": true
          },
          "columns": {
            "type": "select",
            "label": "Select Columns(s)",
            "show_if": "this.rows_or_columns=='select_columns'",
            "table": "input.table_id",
            "bind": "COLUMNS",
            "multiple": true,
            "required": true
          },
          "permission_type": {
            "type": "select",
            "label": "Permission Type",
            "required": true,
            "options": {
              "READ": {
                "label": "Read"
              },
              "WRITE": {
                "label": "Write"
              },
              "PASS_ON": {
                "label": "Pass-On"
              }
            },
            "val": "READ"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.flow_permission.set_or_delete": {
        "type": "select",
        "label": "Type of Action",
        "show_if": "input.table_or_flow=='set_flow_permissions'",
        "required": true,
        "options": {
          "set_permissions": {
            "label": "Set permissions"
          }
        },
        "val": "set_permissions",
        "breakLine": true
      },
      "options.flow_permission.emails": {
        "type": "text",
        "label": "Permitted Users (; separated list)",
        "show_if": "input.table_or_flow=='set_flow_permissions' && options.flow_permission.set_or_delete=='set_permissions'",
        "required": true,
        "width": "100%"
      },
      "options.flow_permission.permission_type": {
        "type": "select",
        "label": "Permission Type",
        "show_if": "input.table_or_flow=='set_flow_permissions' && options.flow_permission.set_or_delete=='set_permissions'",
        "required": true,
        "options": {
          "READ": {
            "label": "Read"
          },
          "WRITE": {
            "label": "Write"
          },
          "PASS_ON": {
            "label": "Pass-On"
          }
        },
        "val": "READ"
      }
    }
  }
}
,
"/ExportToGithubOptions.json/ExportToGithubOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.to": {
        "type": "hidden",
        "val": "file"
      },
      "options.webservice": {
        "type": "hidden",
        "val": "github"
      },
      "options.export_format": {
        "type": "select",
        "label": "Export Format",
        "options": {
          "csv_file": {
            "label": "Csv file(s)"
          },
          "word_by_word": {
            "label": "Word by Word"
          },
          "line_by_line": {
            "label": "Line by Line"
          },
          "JSON": {
            "label": "JSON"
          }
        },
        "val": "csv_file",
        "required": true,
        "breakLine": true
      },
      "options.if_duplicated": {
        "type": "select",
        "label": "If existing",
        "show_if": "options.webservice=='github'",
        "val": "drop_if_exist",
        "options": {
          "drop_if_exist": {
            "label": "Create or Drop (if already existing)"
          },
          "error_if_exist": {
            "label": "Create New (throw error if existing)"
          },
          "error_if_not_exist": {
            "label": "Drop (throw error if not-existing)"
          },
          "append": {
            "label": "Append"
          }
        },
        "breakLine": true
      },
      "options.export_series": {
        "type": "checkbox",
        "label": "Export Series",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.file_name_column": {
        "type": "select",
        "label": "Select File Name Column",
        "show_if": "options.export_series=='true'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true,
        "breakLine": true
      },
      "options.set_file_path_column": {
        "type": "checkbox",
        "label": "Export to specified path",
        "show_if": "options.export_series=='true'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.file_path_column": {
        "type": "select",
        "label": "Select File Path Column",
        "show_if": "options.export_series=='true' && options.set_file_path_column=='true'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true,
        "breakLine": true
      }
    }
  },
  "export_link_token_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px",
    "repeat": false,
    "fields": {
      "options.github_url": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test",
        "show_if": "options.webservice=='github'",
        "val": "",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.export_dir": {
        "type": "text",
        "label": "Enter dir e.g. /MyZippyDocFiles/SubDir/",
        "show_if": "options.webservice!='github'",
        "val": "/",
        "width": "100%",
        "breakLine": true
      },
      "options.github_token": {
        "type": "text",
        "label": "Specify the Github personal access token that has write permission:",
        "show_if": "options.webservice=='github'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.github_create_pr": {
        "type": "checkbox",
        "label": "Create pull request",
        "show_if": "options.webservice=='github'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.ms_one_drive_token": {
        "type": "text",
        "label": "Microsoft Graph API access token. You can get it here https://ms-oauth.herokuapp.com/",
        "show_if": "options.webservice=='ms_one_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.google_authorization_code": {
        "type": "text",
        "label": "Google OAuth Authorization Code with scope https://www.googleapis.com/auth/drive. You can get it here https://developers.google.com/oauthplayground/",
        "show_if": "options.webservice=='google_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox_authorization_code": {
        "type": "text",
        "label": "Dropbox Authorization Code. You can get it here https://www.dropbox.com/oauth2/authorize?client_id=9i7woztjp94jrkw&response_type=code",
        "show_if": "options.webservice=='dropbox'",
        "required": true,
        "width": "100%",
        "breakLine": true
      }
    }
  }
}
,
"/PersonnelPlanningOptions.json/PersonnelPlanningOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Select Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "task_label": {
        "type": "hidden",
        "val": "personnel_planning"
      },
      "options.type": {
        "type": "hidden",
        "val": "custom"
      },
      "options.custom.table": {
        "type": "fieldset",
        "label": "Planning Position",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "repeat": true,
        "fields": {
          "item": {
            "type": "text",
            "label": "Name",
            "val": "",
            "required": true
          },
          "position": {
            "type": "select",
            "label": "Position",
            "options": {
              "fix salary": {
                "label": "fix salary"
              },
              "bonus": {
                "label": "bonus"
              },
              "other compensation": {
                "label": "other compensation"
              }
            },
            "val": "fix salary",
            "required": true
          },
          "amount": {
            "type": "number",
            "label": "Amount",
            "val": 0,
            "required": true
          },
          "initial_date": {
            "type": "date",
            "label": "Initial Date",
            "val": "",
            "required": true
          },
          "periodicy": {
            "type": "select",
            "label": "Periodicy",
            "required": true,
            "options": {
              "One-Off": {
                "label": "One-Off"
              },
              "Daily": {
                "label": "Daily"
              },
              "Work-Daily": {
                "label": "Work-Daily"
              },
              "Weekly": {
                "label": "Weekly"
              },
              "Monthly": {
                "label": "Monthly"
              },
              "Quarterly": {
                "label": "Quarterly"
              },
              "Yearly": {
                "label": "Yearly"
              }
            },
            "val": "One-Off"
          },
          "growth": {
            "type": "number",
            "label": "Growth",
            "show_if": "this.periodicy!='One-Off'",
            "val": 0,
            "required": true
          },
          "growth_period": {
            "type": "select",
            "label": "Growth Period",
            "show_if": "this.periodicy!='One-Off'",
            "options": {
              "Weekly": {
                "label": "Weekly"
              },
              "Monthly": {
                "label": "Month on Month"
              },
              "Quarterly": {
                "label": "Quarter on Quarter"
              },
              "Yearly": {
                "label": "Year on Year"
              }
            },
            "val": "Weekly"
          },
          "growth_pattern": {
            "type": "select",
            "label": "Growth Pattern",
            "show_if": "this.periodicy!='One-Off'",
            "options": {
              "Compounding": {
                "label": "Compounding"
              },
              "Linear": {
                "label": "Linear"
              },
              "Jump-Fix": {
                "label": "Jump-Fix"
              }
            },
            "val": "Compounding"
          },
          "final_date": {
            "type": "date",
            "label": "Final Date",
            "show_if": "this.periodicy!='One-Off'",
            "val": ""
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.end_date": {
        "type": "date",
        "label": "End Date of Table",
        "show_if": "options.type=='process' || options.type=='custom'",
        "val": "",
        "required": true,
        "style": "width: 300px"
      }
    }
  }
},
"/SystemDataOptions.json/SystemDataOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.table_type": {
        "type": "select",
        "label": "System Table",
        "options": {
          "resource_consumption": {
            "label": "Resource Consumption"
          },
          "my_flows_log": {
            "label": "My Flows Log"
          },
          "my_flows": {
            "label": "My Flows"
          },
          "my_table_permissions": {
            "label": "My Table Permissions"
          },
          "my_tables": {
            "label": "My Tables"
          },
          "my_tasks_log": {
            "label": "My Tasks Log"
          }
        },
        "val": "resource_consumption",
        "required": true
      },
      "options.resource_consumption_cols": {
        "type": "select",
        "label": "Import Columns",
        "show_if": "options.table_type=='resource_consumption'",
        "multiple": true,
        "options": {
          "Year": {
            "label": "Year"
          },
          "Month": {
            "label": "Month"
          },
          "Runs (per Month)": {
            "label": "Runs (per Month)"
          },
          "Processing Time(MS)": {
            "label": "Processing Time(MS)"
          },
          "Max Storage Space(MBytes)": {
            "label": "Max Storage Space(MBytes)"
          },
          "Point Consumption": {
            "label": "Point Consumption"
          }
        },
        "val": ["Year","Month","Runs (per Month)","Processing Time(MS)","Max Storage Space(MBytes)","Point Consumption"],
        "required": true
      },
      "options.my_flows_log_cols": {
        "type": "select",
        "label": "Import Columns",
        "show_if": "options.table_type=='my_flows_log'",
        "multiple": true,
        "options": {
          "Flow": {
            "label": "Flow"
          },
          "Task ID": {
            "label": "Task ID"
          },
          "Task-Order-Number": {
            "label": "Task-Order-Number"
          },
          "Task-Name": {
            "label": "Task-Name"
          },
          "Task Add/Delete": {
            "label": "Task Add/Delete"
          },
          "Parameter-Settings Old": {
            "label": "Parameter-Settings Old"
          },
          "Parameter-Settings New": {
            "label": "Parameter-Settings New"
          },
          "Schedule Old": {
            "label": "Schedule Old"
          },
          "Schedule New": {
            "label": "Schedule New"
          },
          "Timestamp": {
            "label": "Timestamp"
          },
          "UserId": {
            "label": "UserId"
          },
          "TableId": {
            "label": "TableId"
          }
        },
        "val": ["Flow","Task ID","Task-Order-Number","Task-Name","Task Add/Delete","Parameter-Settings Old","Parameter-Settings New","Schedule Old","Schedule New","Timestamp","UserId","TableId"],
        "required": true
      },
      "options.my_flows_cols": {
        "type": "select",
        "label": "Import Columns",
        "show_if": "options.table_type=='my_flows'",
        "multiple": true,
        "options": {
          "FlowID": {
            "label": "FlowID"
          },
          "Flow-Name": {
            "label": "Flow-Name"
          },
          "Flow Schedule": {
            "label": "Flow Schedule"
          },
          "Task ID": {
            "label": "Task ID"
          },
          "Task-Order-Number": {
            "label": "Task-Order-Number"
          },
          "Task-Name": {
            "label": "Task-Name"
          },
          "Parameter-Settings (JSON)": {
            "label": "Parameter-Settings (JSON)"
          },
          "Task Schedule": {
            "label": "Task Schedule"
          },
          "Permissions": {
            "label": "Permissions"
          }
        },
        "val": ["FlowID","Flow-Name","Flow Schedule","Task ID","Task-Order-Number","Task-Name","Parameter-Settings (JSON)","Task Schedule","Permissions"],
        "required": true
      },
      "options.my_table_permissions_cols": {
        "type": "select",
        "label": "Import Columns",
        "show_if": "options.table_type=='my_table_permissions'",
        "multiple": true,
        "options": {
          "FlowID": {
            "label": "FlowID"
          },
          "TableID": {
            "label": "TableID"
          },
          "PermissionID": {
            "label": "PermissionID"
          },
          "Type": {
            "label": "Type"
          },
          "Users": {
            "label": "Users"
          },
          "Headers": {
            "label": "Headers"
          },
          "Labels": {
            "label": "Labels"
          }
        },
        "val": ["FlowID","TableID","PermissionID","Type","Users","Headers","Labels"],
        "required": true
      },
      "options.my_tables_cols": {
        "type": "select",
        "label": "Import Columns",
        "show_if": "options.table_type=='my_tables'",
        "multiple": true,
        "options": {
          "TableID": {
            "label": "TableID"
          },
          "Table-Name": {
            "label": "Table-Name"
          },
          "Header Names per Table": {
            "label": "Header Names per Table"
          },
          "Label Names per Table": {
            "label": "Label Names per Table"
          },
          "Corner Info per Table": {
            "label": "Corner Info per Table"
          },
          "Table Info": {
            "label": "Table Info"
          },
          "Permissions per Table": {
            "label": "Permissions per Table"
          },
          "Creation Time": {
            "label": "Creation Time"
          },
          "Created by": {
            "label": "Created by"
          },
          "Latest Change Timestamp": {
            "label": "Latest Change Timestamp"
          },
          "Table-Tags": {
            "label": "Table-Tags"
          }
        },
        "val": ["TableID","Table-Name","Header Names per Table","Label Names per Table","Corner Info per Table","Table Info","Permissions per Table","Creation Time","Created by","Latest Change Timestamp","Table-Tags"],
        "required": true
      },
      "options.my_tasks_log_cols": {
        "type": "select",
        "label": "Import Columns",
        "show_if": "options.table_type=='my_tasks_log'",
        "multiple": true,
        "options": {
          "Flow": {
            "label": "Flow"
          },
          "Task ID": {
            "label": "Task ID"
          },
          "Task-Order-Number": {
            "label": "Task-Order-Number"
          },
          "Task-Name": {
            "label": "Task-Name"
          },
          "Parameter-Settings (JSON)": {
            "label": "Parameter-Settings (JSON)"
          },
          "Timestamp": {
            "label": "Timestamp"
          },
          "Scheduled": {
            "label": "Scheduled"
          },
          "Success": {
            "label": "Success"
          },
          "Message": {
            "label": "Message"
          }
        },
        "val": ["Flow","Task ID","Task-Order-Number","Task-Name","Parameter-Settings (JSON)","Timestamp","Scheduled","Success","Message"],
        "required": true,
        "breakLine": true
      }
    }
  }
}
,
"/GetPermissionOptions.json/GetPermissionOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.table_or_flow": {
        "type": "select",
        "label": "Table or Flow",
        "options": {
          "table": {
            "label": "Table Permissions"
          },
          "flow": {
            "label": "Flow Permissions"
          }
        },
        "val": "table",
        "required": true,
        "breakLine": true
      }
    }
  }
},
"/VectorOptions.json/VectorOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Select Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "task_type": {
        "type": "select",
        "label": "Task Type",
        "required": true,
        "options": {
          "multiplication": {
            "label": "Multiplication"
          },
          "addition": {
            "label": "Addition"
          }
        },
        "val": "multiplication",
        "breakLine": true
      }
    }
  }
},
"/RangeLookupOptions.json/RangeLookupOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.task_type": {
        "type": "select",
        "label": "Task Type",
        "required": true,
        "options": {
          "generate_lookup_table": {
            "label": "Generate Lookup-Table"
          },
          "apply_lookup_table": {
            "label": "Apply Lookup-Table"
          },
          "apply_lookup_table_to_cells": {
            "label": "Apply Lookup-Table to Cells"
          }
        },
        "val": "generate_lookup_table"
      },
      "options.pattern_type": {
        "type": "hidden",
        "val": "number_range"
      },
      "duplicate_option_box": {
        "type": "fieldset",
        "label": "Duplicate Patterns Option",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.task_type=='label_duplicates' || (options.task_type=='generate_lookup_table' && options.pattern_type=='duplicate_pattern')",
        "repeat": false,
        "fields": {
          "options.minimum_number_of_matching_characters": {
            "type": "text",
            "label": "Minimum Number of matching Characters",
            "val": "3",
            "required": true,
            "style": "min-width: 240px"
          },
          "options.minimum_number_of_duplicates": {
            "type": "text",
            "label": "Minimum Number of duplicates",
            "val": "2",
            "required": true,
            "style": "min-width: 240px",
            "breakLine": true
          }
        }
      },
      "number_range_option_box": {
        "type": "fieldset",
        "label": "Number Ranges Option",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.task_type=='generate_lookup_table' && options.pattern_type=='number_range'",
        "repeat": false,
        "fields": {
          "options.number_range.range_type": {
            "type": "select",
            "label": "Range Type",
            "required": true,
            "options": {
              "equal_interval": {
                "label": "N Equal Intervals"
              },
              "equal_range": {
                "label": "Equal Range"
              },
              "custom_range": {
                "label": "Custom Range"
              }
            },
            "val": "equal_interval"
          },
          "options.number_range.n_value": {
            "type": "text",
            "label": "N",
            "show_if": "options.number_range.range_type=='equal_interval'",
            "val": "3",
            "required": true
          },
          "options.number_range.range_value": {
            "type": "text",
            "label": "Range",
            "show_if": "options.number_range.range_type=='equal_range'",
            "val": "10",
            "required": true
          },
          "options.number_range.custom_ranges": {
            "type": "fieldset",
            "label": "Add Custom Range Pattern",
            "style": "border-radius: 3px; border: 1px solid #ccc",
            "show_if": "options.number_range.range_type=='custom_range'",
            "repeat": true,
            "fields": {
              "pattern": {
                "type": "text",
                "label": "Pattern",
                "val": "0<=x<10",
                "required": true
              },
              "label": {
                "type": "text",
                "label": "Label",
                "val": "positive10",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          }
        }
      },
      "options.is_custom_lookup_table": {
        "type": "checkbox",
        "label": "Custom Lookup Table",
        "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells'",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "lookup_table_frame": {
        "type": "fieldset",
        "label": "",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells'",
        "repeat": false,
        "fields": {
          "options.lookup_table_id": {
            "type": "select",
            "label": "Lookup Table",
            "show_if": "options.is_custom_lookup_table=='false'",
            "bind": "TABLES",
            "empty": "",
            "required": true,
            "breakLine": true
          },
          "options.custom_lookup_table": {
            "type": "fieldset",
            "label": "Custom Lookup Table",
            "style": "border-radius: 3px; border: 1px solid #ccc",
            "show_if": "options.is_custom_lookup_table=='true'",
            "repeat": true,
            "fields": {
              "lookup": {
                "type": "text",
                "label": "Lookup",
                "placeholder": "10 < x <= 100",
                "val": "",
                "required": true
              },
              "label": {
                "type": "text",
                "label": "Label",
                "placeholder": "10 < x <= 100",
                "val": "",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.partial_match": {
            "type": "checkbox",
            "label": "Partial Match",
            "show_if": "options.pattern_type=='duplicate_pattern' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_lookup_table_to_cells')",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "options.case_sensitive": {
            "type": "checkbox",
            "label": "Case Sensitive",
            "show_if": "options.pattern_type=='duplicate_pattern' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_lookup_table_to_cells')",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.use_delimiter": {
            "type": "checkbox",
            "label": "Custom Delimiter",
            "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_lookup_table_to_cells'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px"
          },
          "options.delimiter": {
            "type": "text",
            "label": "Input Delimiter",
            "show_if": "options.use_delimiter=='true' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_lookup_table_to_cells')",
            "val": ";",
            "required": true,
            "breakLine": true
          }
        }
      },
      "options.input_table.use_filter": {
        "type": "checkbox",
        "label": "Use Filter for Input table",
        "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "input_table_filter_box": {
        "type": "fieldset",
        "label": "Input Table Filter Options",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.input_table.use_filter=='true' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells')",
        "repeat": false,
        "fields": {
          "options.input_table.filter": {
            "type": "fieldset",
            "label": "Add Filter Conditions for Input table",
            "style": "border-radius: 3px; border: 1px solid #ccc",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.input_table.apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record for Input table filter",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "input_table_apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group of Input table",
            "style": "border-radius: 3px; border: 1px solid #ccc",
            "show_if": "options.input_table.apply_to_record=='false'",
            "repeat": false,
            "fields": {
              "options.input_table.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "required": true,
                "width": "100%",
                "table": "table_id",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      },
      "options.lookup_table.use_filter": {
        "type": "checkbox",
        "label": "Use Filter for Lookup table",
        "show_if": "options.is_custom_lookup_table=='false' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells')",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "lookup_table_filter_box": {
        "type": "fieldset",
        "label": "Lookup Table Filter Options",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.lookup_table.use_filter=='true' && options.is_custom_lookup_table=='false' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table' || options.task_type=='apply_lookup_table_to_cells' || options.task_type=='apply_regex_table_to_cells')",
        "repeat": false,
        "fields": {
          "options.lookup_table.filter": {
            "type": "fieldset",
            "label": "Add Filter Conditions for Lookup table",
            "style": "border-radius: 3px; border: 1px solid #ccc",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "options.lookup_table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.lookup_table.apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record for Lookup table filter",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "lookup_table_apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group of Lookup table",
            "style": "border-radius: 3px; border: 1px solid #ccc",
            "show_if": "options.lookup_table.apply_to_record=='false'",
            "repeat": false,
            "fields": {
              "options.lookup_table.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "required": true,
                "width": "100%",
                "table": "options.lookup_table",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      },
      "options.input_table.apply_to_group_for_concatenation.enabled": {
        "type": "checkbox",
        "label": "Apply to Group for Rows Concatenation",
        "show_if": "options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "options.input_table.apply_to_group_for_concatenation.allow_group_lists": {
        "type": "checkbox",
        "label": "Allow Group-Lists",
        "show_if": "options.input_table.apply_to_group_for_concatenation.enabled=='true' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table')",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "options.input_table.apply_to_group_for_concatenation.group_column": {
        "type": "select",
        "label": "Select Group Column for Rows Concatenation",
        "show_if": "options.input_table.apply_to_group_for_concatenation.enabled=='true' && (options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table')",
        "required": true,
        "width": "100%",
        "table": "table_id",
        "bind": "COLUMNS",
        "breakLine": true
      },
      "options.add_filename": {
        "type": "checkbox",
        "label": "Add File Name",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
}
,
"/HolidayOptions.json/HolidayOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.is_generate_holiday_table": {
        "type": "hidden",
        "val": "generate_table"
      },
      "date_period_box": {
        "type": "fieldset",
        "label": "Select Date Period",
        "show_if": "options.is_generate_holiday_table=='generate_table'",
        "repeat": false,
        "fields": {
          "options.date_period_start": {
            "type": "select",
            "label": "Input start year",
            "options": {
              "1900": {
                "label": "1900"
              },
              "1901": {
                "label": "1901"
              },
              "1902": {
                "label": "1902"
              },
              "1903": {
                "label": "1903"
              },
              "1904": {
                "label": "1904"
              },
              "1905": {
                "label": "1905"
              },
              "1906": {
                "label": "1906"
              },
              "1907": {
                "label": "1907"
              },
              "1908": {
                "label": "1908"
              },
              "1909": {
                "label": "1909"
              },
              "1910": {
                "label": "1910"
              },
              "1911": {
                "label": "1911"
              },
              "1912": {
                "label": "1912"
              },
              "1913": {
                "label": "1913"
              },
              "1914": {
                "label": "1914"
              },
              "1915": {
                "label": "1915"
              },
              "1916": {
                "label": "1916"
              },
              "1917": {
                "label": "1917"
              },
              "1918": {
                "label": "1918"
              },
              "1919": {
                "label": "1919"
              },
              "1920": {
                "label": "1920"
              },
              "1921": {
                "label": "1921"
              },
              "1922": {
                "label": "1922"
              },
              "1923": {
                "label": "1923"
              },
              "1924": {
                "label": "1924"
              },
              "1925": {
                "label": "1925"
              },
              "1926": {
                "label": "1926"
              },
              "1927": {
                "label": "1927"
              },
              "1928": {
                "label": "1928"
              },
              "1929": {
                "label": "1929"
              },
              "1930": {
                "label": "1930"
              },
              "1931": {
                "label": "1931"
              },
              "1932": {
                "label": "1932"
              },
              "1933": {
                "label": "1933"
              },
              "1934": {
                "label": "1934"
              },
              "1935": {
                "label": "1935"
              },
              "1936": {
                "label": "1936"
              },
              "1937": {
                "label": "1937"
              },
              "1938": {
                "label": "1938"
              },
              "1939": {
                "label": "1939"
              },
              "1940": {
                "label": "1940"
              },
              "1941": {
                "label": "1941"
              },
              "1942": {
                "label": "1942"
              },
              "1943": {
                "label": "1943"
              },
              "1944": {
                "label": "1944"
              },
              "1945": {
                "label": "1945"
              },
              "1946": {
                "label": "1946"
              },
              "1947": {
                "label": "1947"
              },
              "1948": {
                "label": "1948"
              },
              "1949": {
                "label": "1949"
              },
              "1950": {
                "label": "1950"
              },
              "1951": {
                "label": "1951"
              },
              "1952": {
                "label": "1952"
              },
              "1953": {
                "label": "1953"
              },
              "1954": {
                "label": "1954"
              },
              "1955": {
                "label": "1955"
              },
              "1956": {
                "label": "1956"
              },
              "1957": {
                "label": "1957"
              },
              "1958": {
                "label": "1958"
              },
              "1959": {
                "label": "1959"
              },
              "1960": {
                "label": "1960"
              },
              "1961": {
                "label": "1961"
              },
              "1962": {
                "label": "1962"
              },
              "1963": {
                "label": "1963"
              },
              "1964": {
                "label": "1964"
              },
              "1965": {
                "label": "1965"
              },
              "1966": {
                "label": "1966"
              },
              "1967": {
                "label": "1967"
              },
              "1968": {
                "label": "1968"
              },
              "1969": {
                "label": "1969"
              },
              "1970": {
                "label": "1970"
              },
              "1971": {
                "label": "1971"
              },
              "1972": {
                "label": "1972"
              },
              "1973": {
                "label": "1973"
              },
              "1974": {
                "label": "1974"
              },
              "1975": {
                "label": "1975"
              },
              "1976": {
                "label": "1976"
              },
              "1977": {
                "label": "1977"
              },
              "1978": {
                "label": "1978"
              },
              "1979": {
                "label": "1979"
              },
              "1980": {
                "label": "1980"
              },
              "1981": {
                "label": "1981"
              },
              "1982": {
                "label": "1982"
              },
              "1983": {
                "label": "1983"
              },
              "1984": {
                "label": "1984"
              },
              "1985": {
                "label": "1985"
              },
              "1986": {
                "label": "1986"
              },
              "1987": {
                "label": "1987"
              },
              "1988": {
                "label": "1988"
              },
              "1989": {
                "label": "1989"
              },
              "1990": {
                "label": "1990"
              },
              "1991": {
                "label": "1991"
              },
              "1992": {
                "label": "1992"
              },
              "1993": {
                "label": "1993"
              },
              "1994": {
                "label": "1994"
              },
              "1995": {
                "label": "1995"
              },
              "1996": {
                "label": "1996"
              },
              "1997": {
                "label": "1997"
              },
              "1998": {
                "label": "1998"
              },
              "1999": {
                "label": "1999"
              },
              "2000": {
                "label": "2000"
              },
              "2001": {
                "label": "2001"
              },
              "2002": {
                "label": "2002"
              },
              "2003": {
                "label": "2003"
              },
              "2004": {
                "label": "2004"
              },
              "2005": {
                "label": "2005"
              },
              "2006": {
                "label": "2006"
              },
              "2007": {
                "label": "2007"
              },
              "2008": {
                "label": "2008"
              },
              "2009": {
                "label": "2009"
              },
              "2010": {
                "label": "2010"
              },
              "2011": {
                "label": "2011"
              },
              "2012": {
                "label": "2012"
              },
              "2013": {
                "label": "2013"
              },
              "2014": {
                "label": "2014"
              },
              "2015": {
                "label": "2015"
              },
              "2016": {
                "label": "2016"
              },
              "2017": {
                "label": "2017"
              },
              "2018": {
                "label": "2018"
              },
              "2019": {
                "label": "2019"
              },
              "2020": {
                "label": "2020"
              },
              "2021": {
                "label": "2021"
              },
              "2022": {
                "label": "2022"
              },
              "2023": {
                "label": "2023"
              },
              "2024": {
                "label": "2024"
              },
              "2025": {
                "label": "2025"
              },
              "2026": {
                "label": "2026"
              },
              "2027": {
                "label": "2027"
              },
              "2028": {
                "label": "2028"
              },
              "2029": {
                "label": "2029"
              },
              "2030": {
                "label": "2030"
              },
              "2031": {
                "label": "2031"
              },
              "2032": {
                "label": "2032"
              },
              "2033": {
                "label": "2033"
              },
              "2034": {
                "label": "2034"
              },
              "2035": {
                "label": "2035"
              },
              "2036": {
                "label": "2036"
              },
              "2037": {
                "label": "2037"
              },
              "2038": {
                "label": "2038"
              },
              "2039": {
                "label": "2039"
              },
              "2040": {
                "label": "2040"
              },
              "2041": {
                "label": "2041"
              },
              "2042": {
                "label": "2042"
              },
              "2043": {
                "label": "2043"
              },
              "2044": {
                "label": "2044"
              },
              "2045": {
                "label": "2045"
              },
              "2046": {
                "label": "2046"
              },
              "2047": {
                "label": "2047"
              },
              "2048": {
                "label": "2048"
              },
              "2049": {
                "label": "2049"
              },
              "2050": {
                "label": "2050"
              },
              "2051": {
                "label": "2051"
              },
              "2052": {
                "label": "2052"
              },
              "2053": {
                "label": "2053"
              },
              "2054": {
                "label": "2054"
              },
              "2055": {
                "label": "2055"
              },
              "2056": {
                "label": "2056"
              },
              "2057": {
                "label": "2057"
              },
              "2058": {
                "label": "2058"
              },
              "2059": {
                "label": "2059"
              },
              "2060": {
                "label": "2060"
              },
              "2061": {
                "label": "2061"
              },
              "2062": {
                "label": "2062"
              },
              "2063": {
                "label": "2063"
              },
              "2064": {
                "label": "2064"
              },
              "2065": {
                "label": "2065"
              },
              "2066": {
                "label": "2066"
              },
              "2067": {
                "label": "2067"
              },
              "2068": {
                "label": "2068"
              },
              "2069": {
                "label": "2069"
              },
              "2070": {
                "label": "2070"
              },
              "2071": {
                "label": "2071"
              },
              "2072": {
                "label": "2072"
              },
              "2073": {
                "label": "2073"
              },
              "2074": {
                "label": "2074"
              },
              "2075": {
                "label": "2075"
              },
              "2076": {
                "label": "2076"
              },
              "2077": {
                "label": "2077"
              },
              "2078": {
                "label": "2078"
              },
              "2079": {
                "label": "2079"
              },
              "2080": {
                "label": "2080"
              },
              "2081": {
                "label": "2081"
              },
              "2082": {
                "label": "2082"
              },
              "2083": {
                "label": "2083"
              },
              "2084": {
                "label": "2084"
              },
              "2085": {
                "label": "2085"
              },
              "2086": {
                "label": "2086"
              },
              "2087": {
                "label": "2087"
              },
              "2088": {
                "label": "2088"
              },
              "2089": {
                "label": "2089"
              },
              "2090": {
                "label": "2090"
              },
              "2091": {
                "label": "2091"
              },
              "2092": {
                "label": "2092"
              },
              "2093": {
                "label": "2093"
              },
              "2094": {
                "label": "2094"
              },
              "2095": {
                "label": "2095"
              },
              "2096": {
                "label": "2096"
              },
              "2097": {
                "label": "2097"
              },
              "2098": {
                "label": "2098"
              },
              "2099": {
                "label": "2099"
              },
              "2100": {
                "label": "2100"
              }
            },
            "val": "2021"
          },
          "options.date_period_end": {
            "type": "select",
            "label": "Input end year",
            "options": {
              "1900": {
                "label": "1900"
              },
              "1901": {
                "label": "1901"
              },
              "1902": {
                "label": "1902"
              },
              "1903": {
                "label": "1903"
              },
              "1904": {
                "label": "1904"
              },
              "1905": {
                "label": "1905"
              },
              "1906": {
                "label": "1906"
              },
              "1907": {
                "label": "1907"
              },
              "1908": {
                "label": "1908"
              },
              "1909": {
                "label": "1909"
              },
              "1910": {
                "label": "1910"
              },
              "1911": {
                "label": "1911"
              },
              "1912": {
                "label": "1912"
              },
              "1913": {
                "label": "1913"
              },
              "1914": {
                "label": "1914"
              },
              "1915": {
                "label": "1915"
              },
              "1916": {
                "label": "1916"
              },
              "1917": {
                "label": "1917"
              },
              "1918": {
                "label": "1918"
              },
              "1919": {
                "label": "1919"
              },
              "1920": {
                "label": "1920"
              },
              "1921": {
                "label": "1921"
              },
              "1922": {
                "label": "1922"
              },
              "1923": {
                "label": "1923"
              },
              "1924": {
                "label": "1924"
              },
              "1925": {
                "label": "1925"
              },
              "1926": {
                "label": "1926"
              },
              "1927": {
                "label": "1927"
              },
              "1928": {
                "label": "1928"
              },
              "1929": {
                "label": "1929"
              },
              "1930": {
                "label": "1930"
              },
              "1931": {
                "label": "1931"
              },
              "1932": {
                "label": "1932"
              },
              "1933": {
                "label": "1933"
              },
              "1934": {
                "label": "1934"
              },
              "1935": {
                "label": "1935"
              },
              "1936": {
                "label": "1936"
              },
              "1937": {
                "label": "1937"
              },
              "1938": {
                "label": "1938"
              },
              "1939": {
                "label": "1939"
              },
              "1940": {
                "label": "1940"
              },
              "1941": {
                "label": "1941"
              },
              "1942": {
                "label": "1942"
              },
              "1943": {
                "label": "1943"
              },
              "1944": {
                "label": "1944"
              },
              "1945": {
                "label": "1945"
              },
              "1946": {
                "label": "1946"
              },
              "1947": {
                "label": "1947"
              },
              "1948": {
                "label": "1948"
              },
              "1949": {
                "label": "1949"
              },
              "1950": {
                "label": "1950"
              },
              "1951": {
                "label": "1951"
              },
              "1952": {
                "label": "1952"
              },
              "1953": {
                "label": "1953"
              },
              "1954": {
                "label": "1954"
              },
              "1955": {
                "label": "1955"
              },
              "1956": {
                "label": "1956"
              },
              "1957": {
                "label": "1957"
              },
              "1958": {
                "label": "1958"
              },
              "1959": {
                "label": "1959"
              },
              "1960": {
                "label": "1960"
              },
              "1961": {
                "label": "1961"
              },
              "1962": {
                "label": "1962"
              },
              "1963": {
                "label": "1963"
              },
              "1964": {
                "label": "1964"
              },
              "1965": {
                "label": "1965"
              },
              "1966": {
                "label": "1966"
              },
              "1967": {
                "label": "1967"
              },
              "1968": {
                "label": "1968"
              },
              "1969": {
                "label": "1969"
              },
              "1970": {
                "label": "1970"
              },
              "1971": {
                "label": "1971"
              },
              "1972": {
                "label": "1972"
              },
              "1973": {
                "label": "1973"
              },
              "1974": {
                "label": "1974"
              },
              "1975": {
                "label": "1975"
              },
              "1976": {
                "label": "1976"
              },
              "1977": {
                "label": "1977"
              },
              "1978": {
                "label": "1978"
              },
              "1979": {
                "label": "1979"
              },
              "1980": {
                "label": "1980"
              },
              "1981": {
                "label": "1981"
              },
              "1982": {
                "label": "1982"
              },
              "1983": {
                "label": "1983"
              },
              "1984": {
                "label": "1984"
              },
              "1985": {
                "label": "1985"
              },
              "1986": {
                "label": "1986"
              },
              "1987": {
                "label": "1987"
              },
              "1988": {
                "label": "1988"
              },
              "1989": {
                "label": "1989"
              },
              "1990": {
                "label": "1990"
              },
              "1991": {
                "label": "1991"
              },
              "1992": {
                "label": "1992"
              },
              "1993": {
                "label": "1993"
              },
              "1994": {
                "label": "1994"
              },
              "1995": {
                "label": "1995"
              },
              "1996": {
                "label": "1996"
              },
              "1997": {
                "label": "1997"
              },
              "1998": {
                "label": "1998"
              },
              "1999": {
                "label": "1999"
              },
              "2000": {
                "label": "2000"
              },
              "2001": {
                "label": "2001"
              },
              "2002": {
                "label": "2002"
              },
              "2003": {
                "label": "2003"
              },
              "2004": {
                "label": "2004"
              },
              "2005": {
                "label": "2005"
              },
              "2006": {
                "label": "2006"
              },
              "2007": {
                "label": "2007"
              },
              "2008": {
                "label": "2008"
              },
              "2009": {
                "label": "2009"
              },
              "2010": {
                "label": "2010"
              },
              "2011": {
                "label": "2011"
              },
              "2012": {
                "label": "2012"
              },
              "2013": {
                "label": "2013"
              },
              "2014": {
                "label": "2014"
              },
              "2015": {
                "label": "2015"
              },
              "2016": {
                "label": "2016"
              },
              "2017": {
                "label": "2017"
              },
              "2018": {
                "label": "2018"
              },
              "2019": {
                "label": "2019"
              },
              "2020": {
                "label": "2020"
              },
              "2021": {
                "label": "2021"
              },
              "2022": {
                "label": "2022"
              },
              "2023": {
                "label": "2023"
              },
              "2024": {
                "label": "2024"
              },
              "2025": {
                "label": "2025"
              },
              "2026": {
                "label": "2026"
              },
              "2027": {
                "label": "2027"
              },
              "2028": {
                "label": "2028"
              },
              "2029": {
                "label": "2029"
              },
              "2030": {
                "label": "2030"
              },
              "2031": {
                "label": "2031"
              },
              "2032": {
                "label": "2032"
              },
              "2033": {
                "label": "2033"
              },
              "2034": {
                "label": "2034"
              },
              "2035": {
                "label": "2035"
              },
              "2036": {
                "label": "2036"
              },
              "2037": {
                "label": "2037"
              },
              "2038": {
                "label": "2038"
              },
              "2039": {
                "label": "2039"
              },
              "2040": {
                "label": "2040"
              },
              "2041": {
                "label": "2041"
              },
              "2042": {
                "label": "2042"
              },
              "2043": {
                "label": "2043"
              },
              "2044": {
                "label": "2044"
              },
              "2045": {
                "label": "2045"
              },
              "2046": {
                "label": "2046"
              },
              "2047": {
                "label": "2047"
              },
              "2048": {
                "label": "2048"
              },
              "2049": {
                "label": "2049"
              },
              "2050": {
                "label": "2050"
              },
              "2051": {
                "label": "2051"
              },
              "2052": {
                "label": "2052"
              },
              "2053": {
                "label": "2053"
              },
              "2054": {
                "label": "2054"
              },
              "2055": {
                "label": "2055"
              },
              "2056": {
                "label": "2056"
              },
              "2057": {
                "label": "2057"
              },
              "2058": {
                "label": "2058"
              },
              "2059": {
                "label": "2059"
              },
              "2060": {
                "label": "2060"
              },
              "2061": {
                "label": "2061"
              },
              "2062": {
                "label": "2062"
              },
              "2063": {
                "label": "2063"
              },
              "2064": {
                "label": "2064"
              },
              "2065": {
                "label": "2065"
              },
              "2066": {
                "label": "2066"
              },
              "2067": {
                "label": "2067"
              },
              "2068": {
                "label": "2068"
              },
              "2069": {
                "label": "2069"
              },
              "2070": {
                "label": "2070"
              },
              "2071": {
                "label": "2071"
              },
              "2072": {
                "label": "2072"
              },
              "2073": {
                "label": "2073"
              },
              "2074": {
                "label": "2074"
              },
              "2075": {
                "label": "2075"
              },
              "2076": {
                "label": "2076"
              },
              "2077": {
                "label": "2077"
              },
              "2078": {
                "label": "2078"
              },
              "2079": {
                "label": "2079"
              },
              "2080": {
                "label": "2080"
              },
              "2081": {
                "label": "2081"
              },
              "2082": {
                "label": "2082"
              },
              "2083": {
                "label": "2083"
              },
              "2084": {
                "label": "2084"
              },
              "2085": {
                "label": "2085"
              },
              "2086": {
                "label": "2086"
              },
              "2087": {
                "label": "2087"
              },
              "2088": {
                "label": "2088"
              },
              "2089": {
                "label": "2089"
              },
              "2090": {
                "label": "2090"
              },
              "2091": {
                "label": "2091"
              },
              "2092": {
                "label": "2092"
              },
              "2093": {
                "label": "2093"
              },
              "2094": {
                "label": "2094"
              },
              "2095": {
                "label": "2095"
              },
              "2096": {
                "label": "2096"
              },
              "2097": {
                "label": "2097"
              },
              "2098": {
                "label": "2098"
              },
              "2099": {
                "label": "2099"
              },
              "2100": {
                "label": "2100"
              }
            },
            "val": "2021"
          }
        }
      },
      "generate_country_box": {
        "type": "fieldset",
        "label": "Select country for generating holiday table",
        "show_if": "options.is_generate_holiday_table=='generate_table'",
        "repeat": false,
        "fields": {
          "options.generate_country": {
            "type": "select",
            "label": "Country",
            "required": true,
            "options": {
              "Germany": {
                "label": "Germany"
              }
            },
            "val": "Germany",
            "width": "100%"
          }
        }
      },
      "generate_state_box": {
        "type": "fieldset",
        "label": "Select state(s) for generating holiday table",
        "show_if": "options.is_generate_holiday_table=='generate_table'",
        "repeat": false,
        "fields": {
          "options.is_all_states": {
            "type": "checkbox",
            "label": "All states",
            "val": "true",
            "isOn": "true",
            "isOff": "false"
          },
          "options.generate_states": {
            "type": "select",
            "label": "State(s)",
            "show_if": "options.is_all_states=='false'",
            "required": true,
            "multiple": true,
            "options": {
              "Baden-Württemberg": {
                "label": "Baden-Württemberg"
              },
              "Bayern": {
                "label": "Bayern"
              },
              "Berlin": {
                "label": "Berlin"
              },
              "Brandenburg": {
                "label": "Brandenburg"
              },
              "Bremen": {
                "label": "Bremen"
              },
              "Hamburg": {
                "label": "Hamburg"
              },
              "Hessen": {
                "label": "Hessen"
              },
              "Mecklenburg-Vorpommern": {
                "label": "Mecklenburg-Vorpommern"
              },
              "Niedersachsen": {
                "label": "Niedersachsen"
              },
              "Nordrhein-Westfalen": {
                "label": "Nordrhein-Westfalen"
              },
              "Rheinland-Pfalz": {
                "label": "Rheinland-Pfalz"
              },
              "Saarland": {
                "label": "Saarland"
              },
              "Sachsen": {
                "label": "Sachsen"
              },
              "Sachsen-Anhalt": {
                "label": "Sachsen-Anhalt"
              },
              "Schleswig-Holstein": {
                "label": "Schleswig-Holstein"
              },
              "Thüringen": {
                "label": "Thüringen"
              }
            },
            "val": "",
            "width": "100%"
          }
        }
      },
      "date_box": {
        "type": "fieldset",
        "label": "Select Date",
        "show_if": "options.is_generate_holiday_table=='add_column'",
        "repeat": false,
        "fields": {
          "table_id": {
            "type": "select",
            "label": "Select Table",
            "bind": "TABLES",
            "empty": "",
            "required": true
          },
          "remove_input_table_after_processing": {
            "type": "hidden",
            "val": "false"
          },
          "is_word": {
            "type": "hidden",
            "val": "false"
          },
          "options.date_column": {
            "type": "select",
            "label": "Select date column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true,
            "breakLine": true
          }
        }
      },
      "country_box": {
        "type": "fieldset",
        "label": "Select Country",
        "show_if": "options.is_generate_holiday_table=='add_column'",
        "repeat": false,
        "fields": {
          "options.is_manual_country": {
            "type": "checkbox",
            "label": "Specify country manually",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.country_column": {
            "type": "select",
            "label": "Select country column",
            "show_if": "options.is_manual_country=='false'",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "options.country_manual": {
            "type": "select",
            "label": "Select country",
            "required": true,
            "show_if" :  "options.is_manual_country=='true'",
            "options": {
              "Germany": {
                "label": "Germany"
              }
            },
            "val": "Germany",
            "width": "100%",
            "breakLine": true
          }
        }
      },
      "state_box": {
        "type": "fieldset",
        "label": "Select State",
        "show_if": "options.is_generate_holiday_table=='add_column'",
        "repeat": false,
        "fields": {
          "options.is_manual_state": {
            "type": "checkbox",
            "label": "Specify state manually",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.state_column": {
            "type": "select",
            "label": "Select state column",
            "show_if": "options.is_manual_state=='false'",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "options.state_manual": {
            "type": "select",
            "label": "Select state",
            "required": true,
            "show_if" :  "options.is_manual_state=='true'",
            "options": {
              "Baden-Württemberg": {
                "label": "Baden-Württemberg"
              },
              "Bayern": {
                "label": "Bayern"
              },
              "Berlin": {
                "label": "Berlin"
              },
              "Brandenburg": {
                "label": "Brandenburg"
              },
              "Bremen": {
                "label": "Bremen"
              },
              "Hamburg": {
                "label": "Hamburg"
              },
              "Hessen": {
                "label": "Hessen"
              },
              "Mecklenburg-Vorpommern": {
                "label": "Mecklenburg-Vorpommern"
              },
              "Niedersachsen": {
                "label": "Niedersachsen"
              },
              "Nordrhein-Westfalen": {
                "label": "Nordrhein-Westfalen"
              },
              "Rheinland-Pfalz": {
                "label": "Rheinland-Pfalz"
              },
              "Saarland": {
                "label": "Saarland"
              },
              "Sachsen": {
                "label": "Sachsen"
              },
              "Sachsen-Anhalt": {
                "label": "Sachsen-Anhalt"
              },
              "Schleswig-Holstein": {
                "label": "Schleswig-Holstein"
              },
              "Thüringen": {
                "label": "Thüringen"
              }
            },
            "val": "Berlin",
            "width": "100%"
          }
        }
      }
    }
  },
  "output": {
    "type": "fieldset",
    "label": "Define Output Table",
    "repeat": false,
    "fields": {
      "output.prefix_rule": {
        "type": "select",
        "label": "Prefix",
        "show_if": "options.is_generate_holiday_table=='add_column' && output.core_rule!='auto'",
        "val": "empty",
        "options": {
          "empty": {
            "label": "-"
          },
          "script_name": {
            "label": "Task Name"
          },
          "date_string_type1": {
            "label": "Date: dd_mm_yyyy"
          },
          "date_string_type2": {
            "label": "Date: yyyy_mm_dd"
          },
          "time_string": {
            "label": "Time: h_min_sec"
          },
          "datetime_string": {
            "label": "Date_Time"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.prefix_text": {
        "type": "text",
        "label": "Prefix Text",
        "show_if": "options.is_generate_holiday_table=='add_column' && output.prefix_rule=='custom' && output.core_rule!='auto'",
        "minLength": 1,
        "maxLength": 31,
        "val": ""
      },
      "output.core_delimiter": {
        "type": "text",
        "label": "Delimiter",
        "show_if": "options.is_generate_holiday_table=='add_column' && output.core_rule!='auto' && output.prefix_rule!='empty'",
        "val": "_",
        "width": "50px"
      },
      "output.core_rule": {
        "type": "select",
        "label": "Table Name",
        "show_if": "options.is_generate_holiday_table=='add_column'",
        "val": "auto",
        "options": {
          "auto": {
            "label": "Auto"
          },
          "input_table_name": {
            "label": "Input Table Name"
          },
          "script_name": {
            "label": "Task Name"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.core_text": {
        "type": "text",
        "label": "Output Table Name",
        "show_if": "options.is_generate_holiday_table=='add_column' && output.core_rule=='custom'",
        "required": true,
        "minLength": 1,
        "maxLength": 31,
        "val": ""
      },
      "output.suffix_delimiter": {
        "type": "text",
        "label": "Delimiter",
        "show_if": "options.is_generate_holiday_table=='add_column' && output.core_rule!='auto'",
        "val": "_",
        "width": "50px"
      },
      "output.suffix_rule": {
        "type": "select",
        "label": "Suffix",
        "show_if": "options.is_generate_holiday_table=='add_column' && output.core_rule!='auto'",
        "val": "script_name",
        "options": {
          "empty": {
            "label": "-"
          },
          "script_name": {
            "label": "Task Name"
          },
          "date_string_type1": {
            "label": "Date: dd_mm_yyyy"
          },
          "date_string_type2": {
            "label": "Date: yyyy_mm_dd"
          },
          "time_string": {
            "label": "Time: h_min_sec"
          },
          "datetime_string": {
            "label": "Date_Time"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.suffix_text": {
        "type": "text",
        "label": "Suffix Text",
        "show_if": "options.is_generate_holiday_table=='add_column' && output.suffix_rule=='custom' && output.core_rule!='auto'",
        "minLength": 1,
        "maxLength": 31,
        "val": "",
        "breakLine": true
      },
      "output.generate_prefix_rule": {
        "type": "select",
        "label": "Prefix",
        "show_if": "options.is_generate_holiday_table=='generate_table' && output.generate_core_rule!='auto'",
        "val": "empty",
        "options": {
          "empty": {
            "label": "-"
          },
          "script_name": {
            "label": "Task Name"
          },
          "date_string_type1": {
            "label": "Date: dd_mm_yyyy"
          },
          "date_string_type2": {
            "label": "Date: yyyy_mm_dd"
          },
          "time_string": {
            "label": "Time: h_min_sec"
          },
          "datetime_string": {
            "label": "Date_Time"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.generate_prefix_text": {
        "type": "text",
        "label": "Prefix Text",
        "show_if": "options.is_generate_holiday_table=='generate_table' && output.generate_prefix_rule=='custom' && output.generate_core_rule!='auto'",
        "minLength": 1,
        "maxLength": 31,
        "val": ""
      },
      "output.generate_core_delimiter": {
        "type": "text",
        "label": "Delimiter",
        "show_if": "options.is_generate_holiday_table=='generate_table' && output.generate_core_rule!='auto' && output.generate_prefix_rule!='empty'",
        "val": "_",
        "width": "50px"
      },
      "output.generate_core_rule": {
        "type": "select",
        "label": "Table Name",
        "show_if": "options.is_generate_holiday_table=='generate_table'",
        "val": "auto",
        "options": {
          "auto": {
            "label": "Auto"
          },
          "script_name": {
            "label": "Task Name"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.generate_core_text": {
        "type": "text",
        "label": "Output Table Name",
        "show_if": "options.is_generate_holiday_table=='generate_table' && output.generate_core_rule=='custom'",
        "required": true,
        "minLength": 1,
        "maxLength": 31,
        "val": ""
      },
      "output.generate_suffix_delimiter": {
        "type": "text",
        "label": "Delimiter",
        "show_if": "options.is_generate_holiday_table=='generate_table' && output.generate_core_rule!='auto'",
        "val": "_",
        "width": "50px"
      },
      "output.generate_suffix_rule": {
        "type": "select",
        "label": "Suffix",
        "show_if": "options.is_generate_holiday_table=='generate_table' && output.generate_core_rule!='auto'",
        "val": "script_name",
        "options": {
          "empty": {
            "label": "-"
          },
          "script_name": {
            "label": "Task Name"
          },
          "date_string_type1": {
            "label": "Date: dd_mm_yyyy"
          },
          "date_string_type2": {
            "label": "Date: yyyy_mm_dd"
          },
          "time_string": {
            "label": "Time: h_min_sec"
          },
          "datetime_string": {
            "label": "Date_Time"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.generate_suffix_text": {
        "type": "text",
        "label": "Suffix Text",
        "show_if": "options.is_generate_holiday_table=='generate_table' && output.generate_suffix_rule=='custom' && output.generate_core_rule!='auto'",
        "minLength": 1,
        "maxLength": 31,
        "val": "",
        "breakLine": true
      },
      "output.timezone": {
        "type": "select",
        "label": "Timezone",
        "show_if": "options.is_generate_holiday_table=='add_column' && output.core_rule!='auto' && (output.prefix_rule=='date_string_type1' || output.prefix_rule=='date_string_type2' || output.prefix_rule=='time_string' || output.prefix_rule=='datetime_string' || output.core_rule=='date_string_type1' || output.core_rule=='date_string_type2' || output.core_rule=='time_string' || output.core_rule=='datetime_string' || output.suffix_rule=='date_string_type1' || output.suffix_rule=='date_string_type2' || output.suffix_rule=='time_string' || output.suffix_rule=='datetime_string')",
        "val": "Europe/Berlin",
        "required": true,
        "options": {
          "America/Adak": {
            "label": "Adak, Gambier"
          },
          "Australia/Adelaide": {
            "label": "Adelaide, Broken_Hill, Darwin"
          },
          "America/Anchorage": {
            "label": "Anchorage, Juneau, Sitka"
          },
          "Pacific/Apia": {
            "label": "Apia, Asau, Mulifanua, Afega, Leulumoega"
          },
          "Pacific/Enderbury": {
            "label": "Apia, Fiji, Tongatapu"
          },
          "Antarctica/McMurdo": {
            "label": "Auckland, Casey, Davis"
          },
          "Pacific/Auckland": {
            "label": "Auckland, Wellington, Christchurch"
          },
          "Asia/Bangkok": {
            "label": "Bangkok, Jakarta, Novosibirsk"
          },
          "Europe/Berlin": {
            "label": "Berlin, Paris, Amsterdam"
          },
          "Australia/Perth": {
            "label": "Brunei, Singapore, Perth"
          },
          "Atlantic/Cape_Verde": {
            "label": "Cape_Verde,Praia, Mindelo, Santa Maria"
          },
          "America/Belize": {
            "label": "Costa_Rica, El_Salvador, Denver"
          },
          "Antarctica/Vostok": {
            "label": "Dhaka, Bishkek, Omsk"
          },
          "Europe/Astrakhan": {
            "label": "Dubai, Baku, Tbilisi"
          },
          "Australia/Eucla": {
            "label": "Eucla"
          },
          "Pacific/Honolulu": {
            "label": "Honolulu, Rarotonga, Tahiti"
          },
          "Asia/Kabul": {
            "label": "Kabul, Kandahār, Mazār-e Sharīf, Herāt, Jalālābād"
          },
          "Asia/Aqtau": {
            "label": "Karachi, Tashkent, Maldives"
          },
          "Asia/Kathmandu": {
            "label": "Kathmandu,Pokhara, Pātan, Biratnagar"
          },
          "Pacific/Kiritimati": {
            "label": "Kiritimati"
          },
          "Asia/Colombo": {
            "label": "Kolkata, Colombo,Jaffna, Negombo"
          },
          "Europe/Guernsey": {
            "label": "London. Dublin, Lisbon"
          },
          "Australia/Lord_Howe": {
            "label": "Lord_Howe"
          },
          "America/Creston": {
            "label": "Los_Angeles, Vancouver, Hermosillo"
          },
          "Pacific/Marquesas": {
            "label": "Marquesas,Taiohae"
          },
          "America/Cayman": {
            "label": "Mexico_City, Panama, Chicago"
          },
          "Pacific/Niue": {
            "label": "Midway, Niue, Pago_Pago"
          },
          "Europe/Mariehamn": {
            "label": "Moscow, Istanbul, Qatar"
          },
          "Asia/Kolkata": {
            "label": "Mumbai, Delhi, Bengaluru, Kolkata, Chennai"
          },
          "America/Miquelon": {
            "label": "Noronha, Nuuk, Miquelon"
          },
          "America/Danmarkshavn": {
            "label": "Reykjavik, Dakar, Casablanca"
          },
          "Pacific/Bougainville": {
            "label": "Sakhalin, Norfolk, Bougainville"
          },
          "America/Araguaina": {
            "label": "Sao_Paulo, Buenos_Aires, Montevideo"
          },
          "America/St_Johns": {
            "label": "St_Johns,Mount Pearl, Corner Brook"
          },
          "Asia/Tehran": {
            "label": "Tehran, Mashhad, Isfahan, Karaj, Tabriz"
          },
          "Asia/Tokyo": {
            "label": "Tokyo, Seoul, Jayapura"
          },
          "America/New_York": {
            "label": "Toronto, Santiago, New_York"
          },
          "Australia/Sydney": {
            "label": "Vladivostok, Sydney, Brisbane"
          },
          "Asia/Yangon": {
            "label": "Yangon, Cocos,Mandalay, Nay Pyi Taw, Mawlamyine"
          },
          "Indian/Cocos": {
            "label": "Yangon, Cocos,West Island"
          }
        },
        "breakLine": true
      },
      "output.generate_timezone": {
        "type": "select",
        "label": "Timezone",
        "show_if": "options.is_generate_holiday_table=='generate_table' && output.core_rule!='auto' && (output.prefix_rule=='date_string_type1' || output.prefix_rule=='date_string_type2' || output.prefix_rule=='time_string' || output.prefix_rule=='datetime_string' || output.core_rule=='date_string_type1' || output.core_rule=='date_string_type2' || output.core_rule=='time_string' || output.core_rule=='datetime_string' || output.suffix_rule=='date_string_type1' || output.suffix_rule=='date_string_type2' || output.suffix_rule=='time_string' || output.suffix_rule=='datetime_string')",
        "val": "Europe/Berlin",
        "required": true,
        "options": {
          "America/Adak": {
            "label": "Adak, Gambier"
          },
          "Australia/Adelaide": {
            "label": "Adelaide, Broken_Hill, Darwin"
          },
          "America/Anchorage": {
            "label": "Anchorage, Juneau, Sitka"
          },
          "Pacific/Apia": {
            "label": "Apia, Asau, Mulifanua, Afega, Leulumoega"
          },
          "Pacific/Enderbury": {
            "label": "Apia, Fiji, Tongatapu"
          },
          "Antarctica/McMurdo": {
            "label": "Auckland, Casey, Davis"
          },
          "Pacific/Auckland": {
            "label": "Auckland, Wellington, Christchurch"
          },
          "Asia/Bangkok": {
            "label": "Bangkok, Jakarta, Novosibirsk"
          },
          "Europe/Berlin": {
            "label": "Berlin, Paris, Amsterdam"
          },
          "Australia/Perth": {
            "label": "Brunei, Singapore, Perth"
          },
          "Atlantic/Cape_Verde": {
            "label": "Cape_Verde,Praia, Mindelo, Santa Maria"
          },
          "America/Belize": {
            "label": "Costa_Rica, El_Salvador, Denver"
          },
          "Antarctica/Vostok": {
            "label": "Dhaka, Bishkek, Omsk"
          },
          "Europe/Astrakhan": {
            "label": "Dubai, Baku, Tbilisi"
          },
          "Australia/Eucla": {
            "label": "Eucla"
          },
          "Pacific/Honolulu": {
            "label": "Honolulu, Rarotonga, Tahiti"
          },
          "Asia/Kabul": {
            "label": "Kabul, Kandahār, Mazār-e Sharīf, Herāt, Jalālābād"
          },
          "Asia/Aqtau": {
            "label": "Karachi, Tashkent, Maldives"
          },
          "Asia/Kathmandu": {
            "label": "Kathmandu,Pokhara, Pātan, Biratnagar"
          },
          "Pacific/Kiritimati": {
            "label": "Kiritimati"
          },
          "Asia/Colombo": {
            "label": "Kolkata, Colombo,Jaffna, Negombo"
          },
          "Europe/Guernsey": {
            "label": "London. Dublin, Lisbon"
          },
          "Australia/Lord_Howe": {
            "label": "Lord_Howe"
          },
          "America/Creston": {
            "label": "Los_Angeles, Vancouver, Hermosillo"
          },
          "Pacific/Marquesas": {
            "label": "Marquesas,Taiohae"
          },
          "America/Cayman": {
            "label": "Mexico_City, Panama, Chicago"
          },
          "Pacific/Niue": {
            "label": "Midway, Niue, Pago_Pago"
          },
          "Europe/Mariehamn": {
            "label": "Moscow, Istanbul, Qatar"
          },
          "Asia/Kolkata": {
            "label": "Mumbai, Delhi, Bengaluru, Kolkata, Chennai"
          },
          "America/Miquelon": {
            "label": "Noronha, Nuuk, Miquelon"
          },
          "America/Danmarkshavn": {
            "label": "Reykjavik, Dakar, Casablanca"
          },
          "Pacific/Bougainville": {
            "label": "Sakhalin, Norfolk, Bougainville"
          },
          "America/Araguaina": {
            "label": "Sao_Paulo, Buenos_Aires, Montevideo"
          },
          "America/St_Johns": {
            "label": "St_Johns,Mount Pearl, Corner Brook"
          },
          "Asia/Tehran": {
            "label": "Tehran, Mashhad, Isfahan, Karaj, Tabriz"
          },
          "Asia/Tokyo": {
            "label": "Tokyo, Seoul, Jayapura"
          },
          "America/New_York": {
            "label": "Toronto, Santiago, New_York"
          },
          "Australia/Sydney": {
            "label": "Vladivostok, Sydney, Brisbane"
          },
          "Asia/Yangon": {
            "label": "Yangon, Cocos,Mandalay, Nay Pyi Taw, Mawlamyine"
          },
          "Indian/Cocos": {
            "label": "Yangon, Cocos,West Island"
          }
        },
        "breakLine": true
      },
      "output.select_output_columns": {
        "type": "checkbox",
        "label": "Select Output Columns",
        "show_if": "options.is_generate_holiday_table=='add_column'",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "output_columns": {
        "type": "fieldset",
        "label": "Select OutputColumns",
        "show_if": "options.is_generate_holiday_table=='add_column' && output.select_output_columns=='true'",
        "repeat": true,
        "fields": {
          "field_name": {
            "type": "select",
            "label": "Select Column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "order": {
            "type": "select",
            "label": "Order",
            "options": {
              "-": {
                "label": "-"
              },
              "asc": {
                "label": "Asc"
              },
              "desc": {
                "label": "Desc"
              }
            },
            "val": "-"
          },
          "is_rename": {
            "type": "checkbox",
            "label": "Rename",
            "val": "false",
            "isOn": "true",
            "isOff": "false"
          },
          "rename": {
            "show_if": "this.is_rename == 'true'",
            "type": "text",
            "required": true,
            "minLength": 1,
            "maxLength": 255,
            "label": "New Column Name",
            "style": "margin-left: 10px"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        },
        "breakLine": true,
        "style": "margin-bottom: 20px"
      },
      "output.add_tag": {
        "type": "checkbox",
        "label": "Add Tag",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-right: 15px"
      },
      "output.tag_name": {
        "type": "text",
        "label": "Tag Name",
        "show_if": "output.add_tag=='true'",
        "required": true,
        "minLength": 1,
        "maxLength": 255,
        "val": "",
        "breakLine": true,
        "style": "margin-left: 15px"
      }
    }
  }
}
,
"/FlowOverviewOptions.json/FlowOverviewOptions.json": {
  "task_symbol": {
    "type": "hidden",
    "val": "flow_overview"
  }
}
,
"/UniqueOutput.json/UniqueOutput.json": {
  "output.output_table_types": {
    "type": "select",
    "label": "Output Table Type(s)",
    "required": true,
    "options": {
      "unique": {
        "label": "Unique Table"
      },
      "duplicates": {
        "label": "Duplicates Table"
      }
    },
    "multiple": true,
    "val": ["unique"],
    "breakLine": true
  },
  "output.unify_output_table": {
    "type": "checkbox",
    "label": "Unify output tables",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  },
  "output.standard_ending": {
    "type": "checkbox",
    "label": "Standard Ending",
    "show_if": "output.unify_output_table == 'false'",
    "val": "true",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  },
  "output.unique_ending": {
    "type": "text",
    "label": "Unique Output Ending",
    "show_if": "output.unify_output_table == 'false' && output.standard_ending == 'false'",
    "val": "_u",
    "style": "width: 160px; margin-left: 10px"
  },
  "output.duplicates_ending": {
    "type": "text",
    "label": "Duplicates Output Ending",
    "show_if": "output.unify_output_table == 'false' && output.standard_ending == 'false'",
    "val": "_d",
    "style": "width: 160px; margin-left: 10px",
    "breakLine": true
  }
},
"/Convert2TextOptions.json/Convert2TextOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.text_col": {
        "type": "select",
        "label": "Text column",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true,
        "breakLine": true
      },
      "options.apply_section_by_section": {
        "type": "checkbox",
        "label": "Apply Section by Section",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "section_cols_frame": {
        "type": "fieldset",
        "label": "Select Section Column(s)",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.apply_section_by_section=='true'",
        "repeat": false,
        "fields": {
          "options.section_cols__all_but_selected": {
            "type": "checkbox",
            "label": "All but selected",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.section_cols": {
            "type": "select",
            "label": "Section column(s)",
            "table": "table_id",
            "bind": "COLUMNS",
            "multiple": true
          }
        }
      }
    }
  }
}
,
"/CurveGeneratorOptions.json/CurveGeneratorOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.standard.start": {
        "type": "hidden",
        "val": "1"
      },
      "options.standard.multiplier_at_maximum_impact_level": {
        "type": "text",
        "label": "Maximum Value",
        "val": "2",
        "required": true
      },
      "options.standard.maximum": {
        "type": "text",
        "label": "Maximum Period",
        "val": "50",
        "required": true
      },
      "options.standard.multiplier_end_value": {
        "type": "text",
        "label": "End Value",
        "show_if": "options.standard.end_value_equals_initial_value=='no'",
        "val": "1",
        "required": true
      },
      "options.standard.end": {
        "type": "text",
        "label": "End Period",
        "val": "100",
        "required": true,
        "breakLine": true
      },
      "options.standard.end_value_equals_initial_value": {
        "type": "checkbox",
        "label": "Initial Value and End Value equals 1",
        "width": "100%",
        "val": "yes",
        "isOn": "yes",
        "isOff": "no",
        "breakLine": true
      },
      "options.standard.maximum_plateau": {
        "type": "checkbox",
        "label": "Maximum Plateau",
        "width": "100%",
        "val": "yes",
        "isOn": "yes",
        "isOff": "no",
        "breakLine": true
      },
      "options.standard.no_of_periods_prior_defined_maximum_point": {
        "type": "text",
        "label": "No of periods prior defined maximum point",
        "show_if": "options.standard.maximum_plateau=='yes'",
        "val": "0",
        "style": "width: 250px"
      },
      "options.standard.no_of_periods_post_defined_maximum_point": {
        "type": "text",
        "label": "No of periods post defined maximum point",
        "show_if": "options.standard.maximum_plateau=='yes'",
        "val": "0",
        "style": "width: 250px",
        "breakLine": true
      },
      "options.standard.left_slope": {
        "type": "select",
        "label": "Left Slope",
        "options": {
          "vertical": {
            "label": "Vertical"
          },
          "linear": {
            "label": "Linear"
          },
          "standard_distribution": {
            "label": "Standard Distribution"
          }
        },
        "val": "standard_distribution"
      },
      "options.standard.use_auto_calculated_sigma_for_left_slope": {
        "type": "checkbox",
        "label": "Auto calculated left sigma",
        "show_if": "options.standard.left_slope=='standard_distribution'",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "options.standard.left_slope_sigma": {
        "type": "text",
        "label": "Left Slope Sigma",
        "show_if": "options.standard.left_slope=='standard_distribution' && options.standard.use_auto_calculated_sigma_for_left_slope=='false'",
        "val": "",
        "breakLine": true
      },
      "options.standard.right_slope": {
        "type": "select",
        "label": "Right Slope",
        "required": true,
        "options": {
          "vertical": {
            "label": "Vertical"
          },
          "linear": {
            "label": "Linear"
          },
          "standard_distribution": {
            "label": "Standard Distribution"
          }
        },
        "val": "standard_distribution"
      },
      "options.standard.use_auto_calculated_sigma_for_right_slope": {
        "type": "checkbox",
        "label": "Auto calculated right sigma",
        "show_if": "options.standard.right_slope=='standard_distribution'",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "options.standard.right_slope_sigma": {
        "type": "text",
        "label": "Right Slope Sigma",
        "show_if": "options.standard.right_slope=='standard_distribution' && options.standard.use_auto_calculated_sigma_for_right_slope=='false'",
        "val": "",
        "breakLine": true
      }
    }
  }
}
,
"/UpdateTaskTemplateOptions.json/UpdateTaskTemplateOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.update_entity": {
        "type": "checkbox",
        "label": "Update script menu",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.table_id": {
        "type": "select",
        "label": "Script Entity JSON table",
        "show_if": "options.update_entity=='true'",
        "bind": "TABLES",
        "required": true,
        "breakLine": true
      },
      "help_1": {
        "type": "text",
        "label": "",
        "show_if": "options.update_entity=='true'",
        "val": "You may get base table with `Get Task Template` task",
        "disabled": true,
        "width": "100%",
        "breakLine": true
      },
      "options.update_publish_type": {
        "type": "checkbox",
        "label": "Update publish type",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.publish_type": {
        "type": "select",
        "label": "Publish Type",
        "show_if": "options.update_publish_type=='true'",
        "options": {
          "private": {
            "label": "As private task"
          },
          "public": {
            "label": "As public task"
          }
        },
        "val": "private",
        "required": true,
        "breakLine": true
      }
    }
  }
}
,
"/TransformSelectOutputColumn.json/TransformSelectOutputColumn.json": {
  "output.select_output_columns": {
    "type": "checkbox",
    "label": "Select Output Columns",
    "show_if": "options.type=='transform_group' && output.custom_options=='true'",
    "val": "false",
    "isOn": "true",
    "isOff": "false"
  },
  "output_columns": {
    "type": "fieldset",
    "label": "Select OutputColumns",
    "show_if": "options.type=='transform_group' && output.custom_options=='true' && output.select_output_columns=='true'",
    "repeat": true,
    "fields": {
      "field_name": {
        "type": "select",
        "label": "Select Column",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "is_rename": {
        "type": "checkbox",
        "label": "Rename",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "rename": {
        "show_if": "this.is_rename == 'true'",
        "type": "text",
        "required": true,
        "minLength": 1,
        "maxLength": 255,
        "label": "New Column Name",
        "style": "margin-left: 10px"
      },
      "delete": {
        "type": "button",
        "label": "Delete",
        "function": "DELETE_ROW"
      }
    },
    "breakLine": true,
    "style": "margin-bottom: 20px"
  }
},
"/FindOptions.json/FindOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "add_column": {
        "type": "text",
        "label": "Column name for match status",
        "val": "Match",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "do_not_duplicate": {
        "type": "checkbox",
        "label": "Don't duplicate same matches",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "use_custom_delimiter": {
        "type": "checkbox",
        "label": "Custom delimiter",
        "show_if": "do_not_duplicate=='false'",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "custom_delimiter": {
        "type": "text",
        "label": "Custom delimiter",
        "show_if": "use_custom_delimiter=='true'",
        "val": ";",
        "required": true,
        "breakLine": true
      },
      "filter_box": {
        "type": "fieldset",
        "label": "Filter Options",
        "repeat": false,
        "fields": {
          "filter": {
            "type": "fieldset",
            "label": "Select Conditions for Match",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if" :  "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "show_if" :  "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'IS NULL' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table_id": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table_id",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group",
            "show_if": "apply_to_record=='false'",
            "repeat": false,
            "fields": {
              "apply_to_group_columns__all_but_selected": {
                "type": "checkbox",
                "label": "All but selected",
                "val": "false",
                "isOn": "true",
                "isOff": "false",
                "breakLine": true
              },
              "apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "width": "100%",
                "table": "table_id",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      }
    }
  }
}
,
"/ColByColOptions.json/ColByColOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.position": {
        "type": "select",
        "label": "Select Position",
        "required": true,
        "show_if": "table_type=='header_only'",
        "options": {
          "add_rows_below_selected_row": {
            "label": "Add rows below"
          },
          "add_rows_above_selected_row": {
            "label": "Add rows above"
          },
          "add_rows_at_table_end": {
            "label": "Add rows at table end"
          },
          "add_single_row_at_table_end": {
            "label": "Add single row at table end"
          },
          "add_row_after_each_group": {
            "label": "Add row after each group"
          }
        },
        "val": "add_rows_below_selected_row",
        "breakLine": true
      },
      "options.group_column": {
        "type": "select",
        "label": "Group Column",
        "show_if": "table_type=='header_only' && options.position=='add_row_after_each_group'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true,
        "breakLine": true
      },
      "options.use_filter": {
        "type": "checkbox",
        "label": "Use Filter",
        "show_if": "table_type=='header_only' && (options.position=='add_rows_below_selected_row' || options.position=='add_rows_above_selected_row' || options.position=='add_rows_at_table_end')",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true,
        "style": "margin-top: 10px"
      },
      "filter_box": {
        "type": "fieldset",
        "label": "Filter Options",
        "show_if": "table_type=='header_only' && options.use_filter=='true' && (options.position=='add_rows_below_selected_row' || options.position=='add_rows_above_selected_row' || options.position=='add_rows_at_table_end')",
        "repeat": false,
        "fields": {
          "options.filter": {
            "type": "fieldset",
            "label": "Add Filter Conditions",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group",
            "show_if": "options.apply_to_record=='false'",
            "repeat": false,
            "fields": {
              "options.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "required": true,
                "width": "100%",
                "table": "table_id",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      },
      "options.add_rows": {
        "type": "fieldset",
        "label": "New Rows Option",
        "repeat": true,
        "fields": {
          "new_row_name": {
            "type": "text",
            "label": "New Row Name",
            "val": ""
          },
          "function_type": {
            "type": "select",
            "label": "Task Type",
            "show_if": "false",
            "required": true,
            "options": {
              "multi_column_functions": {
                "label": "Multi-Column"
              },
              "multi_row_functions": {
                "label": "Multi-Row"
              }
            },
            "val": "multi_column_functions"
          },
          "multi_column_functions__function": {
            "type": "select",
            "label": "Select Function",
            "show_if": "this.function_type=='multi_column_functions'",
            "required": true,
            "options": {
              "absolute_growth": {
                "label": "Absolute Growth"
              },
              "relative_growth": {
                "label": "Relative Growth"
              },
              "trailing_average": {
                "label": "Trailing Average"
              },
              "index_growth": {
                "label": "Index Growth"
              },
              "compound_growth": {
                "label": "Compound Growth"
              },
              "discount_rate": {
                "label": "Discount Rate"
              },
              "quota": {
                "label": "Quota"
              }
            },
            "val": "absolute_growth"
          },
          "multi_row_functions__function": {
            "type": "select",
            "label": "Select Function",
            "show_if": "this.function_type=='multi_row_functions'",
            "required": true,
            "options": {
              "sum": {
                "label": "Sum"
              },
              "average": {
                "label": "Average"
              },
              "median": {
                "label": "Median"
              },
              "standard_deviation": {
                "label": "Standard Deviation"
              },
              "variance": {
                "label": "Variance"
              },
              "product": {
                "label": "Product"
              },
              "quota": {
                "label": "Quota"
              }
            },
            "val": "sum"
          },
          "multi_column_functions__sel_labels": {
            "type": "select",
            "label": "Select Rows(s)",
            "show_if": "table_type!='header_only' && this.function_type=='multi_column_functions' && (this.multi_column_functions__function=='absolute_growth' || this.multi_column_functions__function=='relative_growth' || this.multi_column_functions__function=='trailing_average' || this.multi_column_functions__function=='index_growth' || this.multi_column_functions__function=='compound_growth' || this.multi_column_functions__function=='discount_rate')",
            "required": true,
            "table": "table_id",
            "multiple": true,
            "bind": "LABELS"
          },
          "multi_column_functions__n_value": {
            "type": "text",
            "label": "N (positive integer)",
            "show_if": "this.function_type=='multi_column_functions' && (this.multi_column_functions__function=='trailing_average' || this.multi_column_functions__function=='index_growth' || this.multi_column_functions__function=='compound_growth')",
            "val": "1",
            "required": true
          },
          "multi_column_functions__discount_rate__rate": {
            "type": "text",
            "label": "Input Rate",
            "show_if": "this.function_type=='multi_column_functions' && this.multi_column_functions__function=='discount_rate'",
            "val": "1",
            "required": true
          },
          "multi_column_functions__discount_rate__starting_column": {
            "type": "select",
            "label": "Starting column",
            "show_if": "this.function_type=='multi_column_functions' && this.multi_column_functions__function=='discount_rate'",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "multi_column_functions__sel_label_a": {
            "type": "select",
            "label": "Select Label A",
            "show_if": "table_type!='header_only' && this.function_type=='multi_column_functions' && this.multi_column_functions__function=='quota'",
            "required": true,
            "table": "table_id",
            "bind": "LABELS"
          },
          "multi_column_functions__sel_label_b": {
            "type": "select",
            "label": "Select Label B",
            "show_if": "table_type!='header_only' && this.function_type=='multi_column_functions' && this.multi_column_functions__function=='quota'",
            "required": true,
            "table": "table_id",
            "bind": "LABELS"
          },
          "multi_row_functions__sel_label_a": {
            "type": "select",
            "label": "Select Label A",
            "show_if": "table_type!='header_only' && this.function_type=='multi_row_functions' && this.multi_row_functions__function=='quota'",
            "required": true,
            "table": "table_id",
            "bind": "LABELS"
          },
          "multi_row_functions__sel_label_b": {
            "type": "select",
            "label": "Select Label B",
            "show_if": "table_type!='header_only' && this.function_type=='multi_row_functions' && this.multi_row_functions__function=='quota'",
            "required": true,
            "table": "table_id",
            "bind": "LABELS",
            "breakLine": true
          },
          "position": {
            "type": "select",
            "label": "Position",
            "show_if": "table_type!='header_only'",
            "required": true,
            "options": {
              "bottom": {
                "label": "BOTTOM"
              },
              "top": {
                "label": "TOP"
              },
              "above": {
                "label": "ABOVE"
              },
              "below": {
                "label": "BELOW"
              }
            },
            "val": "bottom"
          },
          "positioning_row": {
            "type": "select",
            "label": "Positioning Row",
            "show_if": "table_type!='header_only' && (this.position=='above' || this.position=='below')",
            "required": true,
            "table": "table_id",
            "bind": "LABELS"
          },
          "multi_column_functions__sel_row_a": {
            "type": "select",
            "label": "Select Row A",
            "show_if": "table_type=='header_only' && this.multi_column_functions__function=='quota' && this.function_type=='multi_column_functions'",
            "required": true,
            "options": {
              "row-1": {
                "label": "Row-1"
              },
              "row-2": {
                "label": "Row-2"
              },
              "row-3": {
                "label": "Row-3"
              },
              "row-4": {
                "label": "Row-4"
              },
              "row-5": {
                "label": "Row-5"
              },
              "row-6": {
                "label": "Row-6"
              },
              "row-7": {
                "label": "Row-7"
              },
              "row-8": {
                "label": "Row-8"
              },
              "row-9": {
                "label": "Row-9"
              },
              "row-10": {
                "label": "Row-10"
              },
              "row-11": {
                "label": "Row-11"
              },
              "row-12": {
                "label": "Row-12"
              },
              "row-13": {
                "label": "Row-13"
              },
              "row-14": {
                "label": "Row-14"
              },
              "row-15": {
                "label": "Row-15"
              },
              "row-16": {
                "label": "Row-16"
              },
              "row-17": {
                "label": "Row-17"
              },
              "row-18": {
                "label": "Row-18"
              },
              "row-19": {
                "label": "Row-19"
              },
              "row-20": {
                "label": "Row-20"
              },
              "row+1": {
                "label": "Row+1"
              },
              "row+2": {
                "label": "Row+2"
              },
              "row+3": {
                "label": "Row+3"
              },
              "row+4": {
                "label": "Row+4"
              },
              "row+5": {
                "label": "Row+5"
              },
              "row+6": {
                "label": "Row+6"
              },
              "row+7": {
                "label": "Row+7"
              },
              "row+8": {
                "label": "Row+8"
              },
              "row+9": {
                "label": "Row+9"
              },
              "row+10": {
                "label": "Row+10"
              },
              "row+11": {
                "label": "Row+11"
              },
              "row+12": {
                "label": "Row+12"
              },
              "row+13": {
                "label": "Row+13"
              },
              "row+14": {
                "label": "Row+14"
              },
              "row+15": {
                "label": "Row+15"
              },
              "row+16": {
                "label": "Row+16"
              },
              "row+17": {
                "label": "Row+17"
              },
              "row+18": {
                "label": "Row+18"
              },
              "row+19": {
                "label": "Row+19"
              },
              "row+20": {
                "label": "Row+20"
              }
            },
            "val": "row-1"
          },
          "multi_column_functions__sel_row_b": {
            "type": "select",
            "label": "Select Row B",
            "show_if": "table_type=='header_only' && this.multi_column_functions__function=='quota' && this.function_type=='multi_column_functions'",
            "required": true,
            "options": {
              "row-1": {
                "label": "Row-1"
              },
              "row-2": {
                "label": "Row-2"
              },
              "row-3": {
                "label": "Row-3"
              },
              "row-4": {
                "label": "Row-4"
              },
              "row-5": {
                "label": "Row-5"
              },
              "row-6": {
                "label": "Row-6"
              },
              "row-7": {
                "label": "Row-7"
              },
              "row-8": {
                "label": "Row-8"
              },
              "row-9": {
                "label": "Row-9"
              },
              "row-10": {
                "label": "Row-10"
              },
              "row-11": {
                "label": "Row-11"
              },
              "row-12": {
                "label": "Row-12"
              },
              "row-13": {
                "label": "Row-13"
              },
              "row-14": {
                "label": "Row-14"
              },
              "row-15": {
                "label": "Row-15"
              },
              "row-16": {
                "label": "Row-16"
              },
              "row-17": {
                "label": "Row-17"
              },
              "row-18": {
                "label": "Row-18"
              },
              "row-19": {
                "label": "Row-19"
              },
              "row-20": {
                "label": "Row-20"
              },
              "row+1": {
                "label": "Row+1"
              },
              "row+2": {
                "label": "Row+2"
              },
              "row+3": {
                "label": "Row+3"
              },
              "row+4": {
                "label": "Row+4"
              },
              "row+5": {
                "label": "Row+5"
              },
              "row+6": {
                "label": "Row+6"
              },
              "row+7": {
                "label": "Row+7"
              },
              "row+8": {
                "label": "Row+8"
              },
              "row+9": {
                "label": "Row+9"
              },
              "row+10": {
                "label": "Row+10"
              },
              "row+11": {
                "label": "Row+11"
              },
              "row+12": {
                "label": "Row+12"
              },
              "row+13": {
                "label": "Row+13"
              },
              "row+14": {
                "label": "Row+14"
              },
              "row+15": {
                "label": "Row+15"
              },
              "row+16": {
                "label": "Row+16"
              },
              "row+17": {
                "label": "Row+17"
              },
              "row+18": {
                "label": "Row+18"
              },
              "row+19": {
                "label": "Row+19"
              },
              "row+20": {
                "label": "Row+20"
              }
            },
            "val": "row-1"
          },
          "format__category": {
            "type": "select",
            "label": "Display Format",
            "required": true,
            "options": {
              "standard": {
                "label": "Standard"
              },
              "number": {
                "label": "Number"
              },
              "percentage": {
                "label": "Percentage"
              },
              "text": {
                "label": "Text"
              },
              "date": {
                "label": "Date"
              },
              "currency": {
                "label": "Currency"
              }
            },
            "val": "standard"
          },
          "format__rounding": {
            "type": "select",
            "label": "Decimal Places for display",
            "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
            "required": true,
            "options": {
              "no_rounding": {
                "label": "No rounding"
              },
              "0": {
                "label": "0 digits"
              },
              "1": {
                "label": "1 digits"
              },
              "2": {
                "label": "2 digits"
              },
              "3": {
                "label": "3 digits"
              },
              "4": {
                "label": "4 digits"
              },
              "5": {
                "label": "5 digits"
              },
              "6": {
                "label": "6 digits"
              },
              "7": {
                "label": "7 digits"
              },
              "8": {
                "label": "8 digits"
              },
              "9": {
                "label": "9 digits"
              }
            },
            "val": "no_rounding"
          },
          "format__use_1000_separator": {
            "type": "checkbox",
            "label": "Use 1000 Separator(.)",
            "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
            "val": "false",
            "isOn": "true",
            "isOff": "false"
          },
          "format__currency_symbol": {
            "type": "select",
            "label": "Symbol",
            "show_if": "this.format__category=='currency'",
            "required": true,
            "options": {
              "dollar": {
                "label": "$"
              },
              "euro": {
                "label": "€"
              },
              "pound": {
                "label": "£"
              },
              "yen": {
                "label": "¥ (Yen, currency of Japan)"
              },
              "colon": {
                "label": "₡ (Colón, currency of Costa Rica)"
              },
              "naira": {
                "label": "₦ (Naira, currency of Nigeria)"
              },
              "rupee": {
                "label": "₨ (Rupee, currency of India)"
              },
              "rupie": {
                "label": "₹ (Rupee, currency of India)"
              },
              "won": {
                "label": "₩ (Won, currency in South Korea and North Korea)"
              },
              "hebrew": {
                "label": "₪ (Currency of Israel)"
              },
              "dong": {
                "label": "₫ (Currency of Vietnam)"
              },
              "kip": {
                "label": "₭ (Kip, currency of Laos)"
              },
              "mongolia": {
                "label": "₮ (Currency of Mongolia)"
              },
              "peso": {
                "label": "₱ (Peso, currency of the Philippines)"
              },
              "guarani": {
                "label": "₲ (Guaraní, currency of Paraguay)"
              },
              "hryvnia": {
                "label": "₴ (Hryvnia, currency of Ukraine)"
              },
              "tenge": {
                "label": "₸ (Tenge, currency of Kazakhstan)"
              },
              "lira": {
                "label": "₺ (Lira, currency of Turkey)"
              },
              "manat": {
                "label": "₼ (Manat, currency of Azerbaijan)"
              },
              "rubles": {
                "label": "₽ (Rubles, currency of Russia)"
              },
              "lari": {
                "label": "₾ (Lari, currency of Georgia)"
              },
              "bitcoin": {
                "label": "₿ (Bitcoin, crypto currency)"
              }
            },
            "val": "dollar"
          },
          "format__date_format": {
            "type": "select",
            "label": "Type",
            "show_if": "this.format__category=='date'",
            "required": true,
            "options": {
              "mm/dd/yyyy": {
                "label": "3/14/2012"
              },
              "D, M dd, Y": {
                "label": "Wednesday, March 14, 2012"
              },
              "yyyy-mm-dd": {
                "label": "2012-03-14"
              },
              "m.dd.yyyy": {
                "label": "3.14.2012"
              },
              "m.dd.yy": {
                "label": "3.14.12"
              },
              "dd.m.yyyy": {
                "label": "14.3.2012"
              },
              "dd.m.yy": {
                "label": "14.3.12"
              },
              "M dd, Y": {
                "label": "March 14, 2012"
              },
              "dd-mm-yyyy": {
                "label": "14-03-2012"
              },
              "mm-dd-yyyy": {
                "label": "03-14-2012"
              },
              "dd-mm-yy": {
                "label": "14-03-12"
              },
              "mm-dd-yy": {
                "label": "03-14-12"
              }
            },
            "val": "mm/dd/yyyy"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      }
    }
  }
}
,
"/SplitOptions.json/SplitOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.split_method": {
        "type": "select",
        "label": "Split method",
        "required": true,
        "options": {
          "standard": {
            "label": "Standard"
          },
          "regex": {
            "label": "RegEx"
          }
        },
        "val": "standard"
      },
      "options.split_type": {
        "type": "select",
        "label": "Split type",
        "required": true,
        "options": {
          "split_to_columns": {
            "label": "Split to Columns"
          },
          "split_to_rows": {
            "label": "Split to Rows"
          }
        },
        "val": "split_to_columns"
      },
      "options.standard_delimiter": {
        "type": "select",
        "label": "Split Delimiter",
        "show_if": "options.split_method=='standard'",
        "required": true,
        "options": {
          "tabs": {
            "label": "Tabs"
          },
          "space": {
            "label": "Space"
          },
          "whitespace": {
            "label": "Whitespace"
          },
          "linebreak": {
            "label": "Line break"
          },
          "punctuation": {
            "label": "Punctuation"
          },
          "punctuation_whitespace": {
            "label": "Punctuation and Whitespace"
          },
          "custom": {
            "label": "Custom"
          }
        },
        "val": "punctuation"
      },
      "options.delimiter": {
        "type": "text",
        "label": "Split Delimiter",
        "show_if": "options.split_method=='standard' && options.standard_delimiter=='custom'",
        "val": ",",
        "trim": "false",
        "required": true,
        "breakLine": true
      },
      "format_frame": {
        "type": "fieldset",
        "label": "Format to Parse for Split",
        "show_if": "options.split_method=='regex'",
        "repeat": false,
        "fields": {
          "options.format_to_convert.regular_expression": {
            "type": "text",
            "label": "Parse Regular Expression ( ex: ([a-z]+)\\s([a-z]+) )",
            "val": "[a-z]+\\s[a-z]+",
            "required": true,
            "width": "100%",
            "trim": "false",
            "breakLine": true
          },
          "options.format_to_convert.case_insensitive": {
            "type": "checkbox",
            "label": "Case Insensitive",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          }
        }
      },
      "options.n_multi_n": {
        "type": "checkbox",
        "label": "N x N split if multiple columns are selected",
        "show_if": "options.split_type=='split_to_rows'",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
}
,
"/FlexmonsterColumnOptions.json/FlexmonsterColumnOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "show_if": "options.configure_manual=='true'",
    "repeat": false,
    "fields": {
      "options.type": {
        "type": "hidden",
        "val": "column_chart"
      },
      "options.chart_type": {
        "type": "hidden",
        "val": "column"
      },
      "options.add_column_cols": {
        "type": "checkbox",
        "label": "by Category",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.column_cols": {
        "type": "fieldset",
        "label": "Category column(s)",
        "show_if": "options.add_column_cols=='true'",
        "repeat": true,
        "fields": {
          "column_col": {
            "type": "select",
            "label": "Category column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "is_date": {
            "type": "checkbox",
            "label": "Is Date",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.row_cols": {
        "type": "fieldset",
        "label": "Series column(s)",
        "repeat": true,
        "fields": {
          "row_col": {
            "type": "select",
            "label": "Series column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "is_date": {
            "type": "checkbox",
            "label": "Is Date",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.measure_cols": {
        "type": "fieldset",
        "label": "Value column(s)",
        "repeat": true,
        "fields": {
          "measure_col": {
            "type": "select",
            "label": "Value Column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "aggregation": {
            "type": "select",
            "label": "Aggregation Function",
            "options": {
              "sum": {
                "label": "Sum"
              },
              "count": {
                "label": "Count"
              },
              "distinctcount": {
                "label": "Distinct Count"
              },
              "average": {
                "label": "Average"
              },
              "median": {
                "label": "Median"
              },
              "product": {
                "label": "Product"
              },
              "min": {
                "label": "Min"
              },
              "max": {
                "label": "Max"
              },
              "stdevp": {
                "label": "Population Standard Deviation"
              },
              "stdevs": {
                "label": "Sample Standard Deviation"
              },
              "percent": {
                "label": "Percent"
              }
            },
            "val": "sum",
            "required": true,
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      }
    }
  }
}
,
"/PayStripeInput.json/PayStripeInput.json": {
  "input": {
    "type": "fieldset",
    "label": "Select Input Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "table_id": {
        "type": "select",
        "label": "Select Table",
        "bind": "TABLES",
        "empty": "",
        "required": true,
        "breakLine": true
      },
      "remove_input_table_after_processing": {
        "type": "hidden",
        "val": "false"
      },
      "is_word": {
        "type": "hidden",
        "val": "false"
      },
      "help_text_stripe_charge": {
        "type": "text",
        "label": "",
        "show_if": "options.provider=='stripe' && options.type=='charge'",
        "val": "Table Structure ( Customer ID | Currency | Amount | Description )",
        "disabled": true,
        "width": "100%"
      },
      "help_text_stripe_transfer": {
        "type": "text",
        "label": "",
        "show_if": "options.provider=='stripe' && options.type=='transfer'",
        "val": "Table Structure ( Connected Account  ID | Currency | Amount )",
        "disabled": true,
        "width": "100%"
      }
    }
  }
}
,
"/ImportFromFileOutput.json/ImportFromFileOutput.json": {
  "output": {
    "type": "fieldset",
    "label": "Define Output Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "output.custom_text": {
        "type": "text",
        "label": "Output Table Name",
        "show_if": "options.use_filename_as_output_table_name=='false' && (output.custom_options=='false' || (output.custom_options=='true' && output.compose_table_name=='false'))",
        "minLength": 1,
        "val": "",
        "width": "100%",
        "breakLine": true
      },
      "options.use_filename_as_output_table_name": {
        "type": "checkbox",
        "label": "Use filename as table name",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "output.custom_options": {
        "type": "checkbox",
        "label": "Output Options",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "output.compose_table_name": {
        "type": "checkbox",
        "label": "Compose Table Name",
        "show_if": "options.use_filename_as_output_table_name=='false' && output.custom_options=='true'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "compose_table_name_frame": {
        "type": "fieldset",
        "label": "Compose Output Table Name",
        "show_if": "options.use_filename_as_output_table_name=='false' && output.custom_options=='true' && output.compose_table_name=='true'",
        "repeat": false,
        "fields": {
          "output.prefix_rule": {
            "type": "select",
            "label": "Prefix",
            "show_if": "output.compose_table_name=='true'",
            "val": "empty",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.prefix_text": {
            "type": "text",
            "label": "Prefix Text",
            "show_if": "output.compose_table_name=='true' && output.prefix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "output.core_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "show_if": "output.compose_table_name=='true' && output.prefix_rule!='empty'",
            "val": "_",
            "width": "50px"
          },
          "output.core_rule": {
            "type": "select",
            "label": "Table Name",
            "show_if": "output.compose_table_name=='true'",
            "val": "script_name",
            "options": {
              "script_name": {
                "label": "Task Name"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.core_text": {
            "type": "text",
            "label": "Main Table Name",
            "show_if": "output.compose_table_name=='true' && output.core_rule=='custom'",
            "required": true,
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "output.suffix_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "show_if": "output.compose_table_name=='true'",
            "val": "_",
            "width": "50px"
          },
          "output.suffix_rule": {
            "type": "select",
            "label": "Suffix",
            "show_if": "output.compose_table_name=='true'",
            "val": "script_name",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.suffix_text": {
            "type": "text",
            "label": "Suffix Text",
            "show_if": "output.compose_table_name=='true' && output.suffix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": "",
            "breakLine": true
          },
          "output.timezone": {
            "type": "select",
            "label": "Timezone",
            "show_if": "output.compose_table_name=='true' && (output.prefix_rule=='date_string_type1' || output.prefix_rule=='date_string_type2' || output.prefix_rule=='time_string' || output.prefix_rule=='datetime_string' || output.suffix_rule=='date_string_type1' || output.suffix_rule=='date_string_type2' || output.suffix_rule=='time_string' || output.suffix_rule=='datetime_string')",
            "val": "Europe/Berlin",
            "required": true,
            "options": {
              "America/Adak": {
                "label": "Adak, Gambier"
              },
              "Australia/Adelaide": {
                "label": "Adelaide, Broken_Hill, Darwin"
              },
              "America/Anchorage": {
                "label": "Anchorage, Juneau, Sitka"
              },
              "Pacific/Apia": {
                "label": "Apia, Asau, Mulifanua, Afega, Leulumoega"
              },
              "Pacific/Enderbury": {
                "label": "Apia, Fiji, Tongatapu"
              },
              "Antarctica/McMurdo": {
                "label": "Auckland, Casey, Davis"
              },
              "Pacific/Auckland": {
                "label": "Auckland, Wellington, Christchurch"
              },
              "Asia/Bangkok": {
                "label": "Bangkok, Jakarta, Novosibirsk"
              },
              "Europe/Berlin": {
                "label": "Berlin, Paris, Amsterdam"
              },
              "Australia/Perth": {
                "label": "Brunei, Singapore, Perth"
              },
              "Atlantic/Cape_Verde": {
                "label": "Cape_Verde,Praia, Mindelo, Santa Maria"
              },
              "America/Belize": {
                "label": "Costa_Rica, El_Salvador, Denver"
              },
              "Antarctica/Vostok": {
                "label": "Dhaka, Bishkek, Omsk"
              },
              "Europe/Astrakhan": {
                "label": "Dubai, Baku, Tbilisi"
              },
              "Australia/Eucla": {
                "label": "Eucla"
              },
              "Pacific/Honolulu": {
                "label": "Honolulu, Rarotonga, Tahiti"
              },
              "Asia/Kabul": {
                "label": "Kabul, Kandahār, Mazār-e Sharīf, Herāt, Jalālābād"
              },
              "Asia/Aqtau": {
                "label": "Karachi, Tashkent, Maldives"
              },
              "Asia/Kathmandu": {
                "label": "Kathmandu,Pokhara, Pātan, Biratnagar"
              },
              "Pacific/Kiritimati": {
                "label": "Kiritimati"
              },
              "Asia/Colombo": {
                "label": "Kolkata, Colombo,Jaffna, Negombo"
              },
              "Europe/Guernsey": {
                "label": "London. Dublin, Lisbon"
              },
              "Australia/Lord_Howe": {
                "label": "Lord_Howe"
              },
              "America/Creston": {
                "label": "Los_Angeles, Vancouver, Hermosillo"
              },
              "Pacific/Marquesas": {
                "label": "Marquesas,Taiohae"
              },
              "America/Cayman": {
                "label": "Mexico_City, Panama, Chicago"
              },
              "Pacific/Niue": {
                "label": "Midway, Niue, Pago_Pago"
              },
              "Europe/Mariehamn": {
                "label": "Moscow, Istanbul, Qatar"
              },
              "Asia/Kolkata": {
                "label": "Mumbai, Delhi, Bengaluru, Kolkata, Chennai"
              },
              "America/Miquelon": {
                "label": "Noronha, Nuuk, Miquelon"
              },
              "America/Danmarkshavn": {
                "label": "Reykjavik, Dakar, Casablanca"
              },
              "Pacific/Bougainville": {
                "label": "Sakhalin, Norfolk, Bougainville"
              },
              "America/Araguaina": {
                "label": "Sao_Paulo, Buenos_Aires, Montevideo"
              },
              "America/St_Johns": {
                "label": "St_Johns,Mount Pearl, Corner Brook"
              },
              "Asia/Tehran": {
                "label": "Tehran, Mashhad, Isfahan, Karaj, Tabriz"
              },
              "Asia/Tokyo": {
                "label": "Tokyo, Seoul, Jayapura"
              },
              "America/New_York": {
                "label": "Toronto, Santiago, New_York"
              },
              "Australia/Sydney": {
                "label": "Vladivostok, Sydney, Brisbane"
              },
              "Asia/Yangon": {
                "label": "Yangon, Cocos,Mandalay, Nay Pyi Taw, Mawlamyine"
              },
              "Indian/Cocos": {
                "label": "Yangon, Cocos,West Island"
              }
            },
            "breakLine": true
          }
        }
      }
    }
  }
},
"/DatetimeInput.json/DatetimeInput.json": {
  "options.field_to_convert": {
    "type": "select",
    "label": "Column to convert",
    "table": "table_id",
    "bind": "COLUMNS",
    "required": true,
    "width": "100%"
  }
},
"/FindReplaceOutput.json/FindReplaceOutput.json": {
  "include_imputed_value_indicator_field": {
    "type": "checkbox",
    "label": "Add Matching Column",
    "val": "false",
    "isOn": "true",
    "isOff": "false"
  },
  "include_imputed_value_indicator_suffix": {
    "type": "text",
    "label": "New Column Suffix",
    "show_if": "include_imputed_value_indicator_field=='true'",
    "val": "_Match",
    "required": true,
    "breakLine": true
  },
  "output_imputed_values_as_seperated_field": {
    "type": "checkbox",
    "label": "Output in New Column",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  }
},
"/PdfReProCustomOptions.json/PdfReProCustomOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.script_name": {
        "type": "hidden",
        "val": "PdfReProCustom"
      },
      "options.type": {
        "type": "select",
        "label": "Task Type",
        "options": {
          "get_placeholders_of_all_templates": {
            "label": "Get Placeholders of all Templates"
          },
          "get_placeholders_of_template": {
            "label": "Get Placeholders of a Template"
          },
          "create": {
            "label": "Create PDF and export to cloud"
          }
        },
        "val": "get_placeholders_of_all_templates",
        "required": true,
        "breakLine": true
      },
      "options.where_to_create": {
        "type": "select",
        "label": "Where to create",
        "options": {
          "only_open_in_browser": {
            "label": "Only open PDF in browser"
          },
          "only_export_to_cloud": {
            "label": "Only export to cloud"
          },
          "both_export_to_cloud_and_open_in_browser": {
            "label": "Both export to cloud and open pdf in browser"
          }
        },
        "val": "only_open_in_browser",
        "required": true,
        "breakLine": true
      },
      "options.configure_by_table_help": {
        "type": "text",
        "label": "",
        "show_if": "options.type=='create'",
        "val": "Table Structure ( Template ID | Placeholder | Replace-Text )",
        "disabled": true,
        "width": "100%"
      },
      "options.table_id": {
        "type": "select",
        "label": "Select Table",
        "show_if": "options.type=='create'",
        "bind": "TABLES",
        "empty": "",
        "required": true,
        "breakLine": true
      },
      "pdfrepro_credential_box": {
        "type": "fieldset",
        "label": "Your own PDFrePRO account API Key",
        "repeat": false,
        "fields": {
          "options.pdfrepro_credentials.api_key": {
            "type": "text",
            "label": "API Key",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "options.pdfrepro_credentials.shared_key": {
            "type": "text",
            "label": "Shared Key",
            "required": true,
            "width": "100%",
            "breakLine": true
          }
        }
      },
      "options.template_id": {
        "type": "text",
        "label": "Template ID",
        "show_if": "options.type=='get_placeholders_of_template'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.webservice": {
        "type": "select",
        "label": "Select Webservice",
        "show_if": "options.type=='create'",
        "options": {
          "ms_one_drive": {
            "label": "Microsoft OneDrive"
          },
          "dropbox": {
            "label": "Dropbox"
          },
          "google_drive": {
            "label": "Google Drive"
          }
        },
        "val": "ms_one_drive",
        "required": true,
        "breakLine": true
      },
      "export_link_token_frame": {
        "type": "fieldset",
        "label": "Export Link",
        "show_if": "options.type=='create'",
        "repeat": false,
        "fields": {
          "options.github_url": {
            "type": "text",
            "label": "Enter link e.g. https://github.com/zippydoc/test",
            "show_if": "options.webservice=='github'",
            "val": "",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "options.export_dir": {
            "type": "text",
            "label": "Enter dir e.g. /MyZippyDocFiles/SubDir/",
            "show_if": "options.webservice!='github'",
            "val": "",
            "width": "100%",
            "breakLine": true
          },
          "options.github_token": {
            "type": "text",
            "label": "Specify the Github personal access token that has write permission:",
            "show_if": "options.webservice=='github'",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "options.google_authorization_code": {
            "type": "text",
            "label": "Google OAuth Authorization Code with scope https://www.googleapis.com/auth/drive. You can get it here https://developers.google.com/oauthplayground/",
            "show_if": "options.webservice=='google_drive'",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "options.dropbox_authorization_code": {
            "type": "text",
            "label": "Dropbox Authorization Code. You can get it here https://www.dropbox.com/oauth2/authorize?client_id=9i7woztjp94jrkw&response_type=code",
            "show_if": "options.webservice=='dropbox'",
            "required": true,
            "width": "100%",
            "breakLine": true
          }
        }
      }
    }
  }
},
"/ImportDirFromOneDriveOptions.json/ImportDirFromOneDriveOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.from": {
        "type": "hidden",
        "val": "web"
      },
      "options.webservice": {
        "type": "hidden",
        "val": "ms_one_drive"
      },
      "options.output_format": {
        "type": "select",
        "label": "Select Type",
        "options": {
          "csv_table": {
            "label": "CSV-Table"
          },
          "line_by_line": {
            "label": "Line by Line"
          },
          "word_by_word": {
            "label": "Text"
          },
          "JSON": {
            "label": "JSON"
          },
          "file_list": {
            "label": "File List"
          }
        },
        "val": "csv_table",
        "required": true
      },
      "options.word_pattern_type": {
        "type": "select",
        "label": "Word Pattern",
        "show_if": "options.output_format=='word_by_word' && options.specify_word_pattern=='true'",
        "options": {
          "regex": {
            "label": "Regular Expression"
          }
        },
        "val": "regex",
        "required": true
      },
      "options.word_pattern_regex": {
        "type": "text",
        "label": "Regular Expression",
        "show_if": "options.output_format=='word_by_word' && options.specify_word_pattern=='true' && options.word_pattern_type=='regex'",
        "required": true,
        "val": "[a-z][1-9]",
        "breakLine": true
      },
      "options.column_setting": {
        "type": "checkbox",
        "label": "Column Settings",
        "show_if": "options.output_format!='file_list'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "column_setting_frame": {
        "type": "fieldset",
        "label": "Column Settings",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.output_format!='file_list' && options.column_setting=='true'",
        "repeat": false,
        "fields": {
          "options.add_row_column": {
            "type": "checkbox",
            "label": "Add Row Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_word_count_column": {
            "type": "checkbox",
            "label": "Add 'Word Count' Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_word_nonword_column": {
            "type": "checkbox",
            "label": "Add 'Word & Non-Word' Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_section_column": {
            "type": "checkbox",
            "label": "Add Section Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "section_column_types_frame": {
            "type": "fieldset",
            "label": "Section Column Types",
            "style": "border-radius: 3px; border: 1px solid #ccc",
            "show_if": "options.output_format=='word_by_word' && options.add_section_column=='true'",
            "repeat": false,
            "fields": {
              "options.section_columns.add_paragraph_section_column": {
                "type": "checkbox",
                "label": "Paragraph",
                "val": "false",
                "isOn": "true",
                "isOff": "false",
                "breakLine": true
              },
              "options.section_columns.add_custom_section_column": {
                "type": "checkbox",
                "label": "Custom Section Delimiter",
                "val": "false",
                "isOn": "true",
                "isOff": "false"
              },
              "options.section_columns.custom_delimiter": {
                "type": "text",
                "label": "Delimiter(1 character)",
                "show_if": "options.section_columns.add_custom_section_column=='true'",
                "maxLength": 1,
                "required": true,
                "breakLine": true
              },
              "options.section_columns.add_brackets_punctuation_section_column": {
                "type": "checkbox",
                "label": "Brackets and Punctuation",
                "val": "false",
                "isOn": "true",
                "isOff": "false",
                "style": "margin-right: 15px"
              },
              "options.section_columns.brackets_punctuation_section_column_type": {
                "type": "select",
                "label": "Brackets Type",
                "show_if": "options.section_columns.add_brackets_punctuation_section_column=='true'",
                "options": {
                  "nesting_structure": {
                    "label": "Nesting Structure"
                  },
                  "inner_bracket": {
                    "label": "Inner Bracket"
                  },
                  "brackets_only": {
                    "label": "Brackets Only"
                  },
                  "show_all": {
                    "label": "Show All"
                  }
                },
                "val": "show_all",
                "required": true,
                "breakLine": true
              }
            }
          },
          "options.add_filename_column": {
            "type": "checkbox",
            "label": "Add Column for File Name",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "options.add_filepath_column": {
            "type": "checkbox",
            "label": "Add Column for File Path",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          }
        }
      },
      "options.is_cloud_dir": {
        "type": "hidden",
        "val": "true"
      },
      "if_dir_frame": {
        "type": "fieldset",
        "label": "Directory Import Options",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.output_format!='file_list' && options.is_cloud_dir=='true'",
        "repeat": false,
        "fields": {
          "options.unify_in_one_table": {
            "type": "checkbox",
            "label": "Unify in one table",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.suffix": {
            "type": "select",
            "label": "Output tables suffix",
            "show_if": "options.unify_in_one_table=='false'",
            "options": {
              "number": {
                "label": "Number"
              },
              "filename": {
                "label": "Filename"
              }
            },
            "val": "number",
            "required": true,
            "breakLine": true
          },
          "options.include_subdir": {
            "type": "checkbox",
            "label": "Include Subdirectories",
            "show_if": "options.output_format!='file_list' && options.is_cloud_dir=='true'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true,
            "style": "margin-top: 10px"
          }
        }
      },
      "options.file_list.include_subdir": {
        "type": "checkbox",
        "label": "Include Subdirectories",
        "show_if": "options.output_format=='file_list'",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true,
        "style": "margin-top: 10px"
      },
      "options.file_list.add_change_date_column": {
        "type": "checkbox",
        "label": "Add Change Date Column",
        "show_if": "options.output_format=='file_list'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  },
  "import_link_token_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.link_csv_file": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test/blob/main/example.csv",
        "show_if": "options.webservice=='github' && options.is_cloud_dir=='false' && options.output_format=='csv_table'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.link_text_file": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test/blob/main/example.txt(json, csv, etc)",
        "show_if": "options.webservice=='github' && options.is_cloud_dir=='false' && options.output_format!='csv_table' && options.output_format!='file_list'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.one_drive.file_path": {
        "type": "text",
        "label": "Enter path to file e.g. ZippyDoc/Subdir1/test.txt",
        "show_if": "options.webservice=='ms_one_drive' && options.output_format!='file_list' && options.is_cloud_dir=='false'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox.file_path": {
        "type": "text",
        "label": "Enter path to file e.g. ZippyDoc/Subdir1/test.txt",
        "show_if": "options.webservice=='dropbox' && options.output_format!='file_list' && options.is_cloud_dir=='false'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dir_path_filter": {
        "type": "fieldset",
        "label": "Import Path and File Filter",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.output_format=='file_list' || options.is_cloud_dir=='true'",
        "repeat": true,
        "fields": {
          "github__link_directory": {
            "type": "text",
            "label": "Enter link e.g. https://github.com/zippydoc/test",
            "show_if": "options.webservice=='github'",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "one_drive__dir_path": {
            "type": "text",
            "label": "Enter path to dir e.g. ZippyDoc/Subdir1",
            "show_if": "options.webservice=='ms_one_drive'",
            "width": "100%",
            "breakLine": true
          },
          "dropbox__dir_path": {
            "type": "text",
            "label": "Enter path to dir e.g. ZippyDoc/Subdir1",
            "show_if": "options.webservice=='dropbox'",
            "width": "100%",
            "breakLine": true
          },
          "google_drive__dir_path": {
            "type": "text",
            "label": "Enter path to dir",
            "show_if": "options.webservice=='google_drive'",
            "width": "100%",
            "breakLine": true
          },
          "dir_filter__filter_type": {
            "type": "select",
            "label": "Filter Type",
            "options": {
              "all": {
                "label": "All"
              },
              "contains": {
                "label": "Contains"
              },
              "starts_with": {
                "label": "Starts With"
              },
              "ends_with": {
                "label": "Ends With"
              },
              "regex": {
                "label": "Regular Expression"
              }
            },
            "val": "all",
            "required": true
          },
          "dir_filter__filter_string": {
            "type": "text",
            "label": "Filter",
            "show_if": "this.dir_filter__filter_type!='all'",
            "required": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.is_github_private": {
        "type": "checkbox",
        "label": "Github repository is private",
        "show_if": "options.webservice=='github'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "options.github_token": {
        "type": "text",
        "label": "Github personal access token",
        "show_if": "options.webservice=='github' && options.is_github_private=='true'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox.auth_code": {
        "type": "text",
        "label": "Dropbox Authorization Code",
        "show_if": "options.webservice=='dropbox'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.google_drive.access_token": {
        "type": "text",
        "label": "Google Drive Access Token",
        "show_if": "options.webservice=='google_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      }
    }
  }
}
,
"/RenameTableOptions.json/RenameTableOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "rename_columns": {
        "type": "checkbox",
        "label": "Rename Columns",
        "show_if": "false",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "columns": {
        "type": "fieldset",
        "label": "Select Columns",
        "repeat": true,
        "fields": {
          "field_name": {
            "type": "select",
            "label": "Select Column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "rename": {
            "show_if": "this.field_name != ''",
            "type": "text",
            "required": true,
            "minLength": 1,
            "maxLength": 255,
            "label": "Rename to"
          },
          "delete": {
            "show_if": "this.field_name != ''",
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        },
        "breakLine": true
      },
      "rename_rows": {
        "type": "checkbox",
        "label": "Rename Labels",
        "show_if": "false",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px"
      },
      "rows": {
        "type": "fieldset",
        "label": "Select Labels",
        "show_if": "$table_id.numOfLabel >= 1",
        "repeat": true,
        "fields": {
          "label_name": {
            "type": "select",
            "label": "Select Label",
            "table": "table_id",
            "bind": "LABELS",
            "required": true
          },
          "rename": {
            "show_if": "this.label_name != ''",
            "type": "text",
            "required": true,
            "minLength": 1,
            "maxLength": 255,
            "label": "Rename to"
          },
          "delete": {
            "show_if": "this.label_name != ''",
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        },
        "breakLine": true
      }
    }
  }
}
,
"/DCEnergyWorldDataOptions.json/DCEnergyWorldDataOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.group_by": {
        "type": "select",
        "label": "Group By",
        "required": true,
        "options": {
          "Region": {
            "label": "Region"
          },
          "Income Group": {
            "label": "Income Group"
          }
        },
        "val": "Region",
        "breakLine": true
      },
      "options.stat_var_name": {
        "type": "select",
        "label": "Statistics Data",
        "required": true,
        "options": {
          "Annual_Consumption_Electricity": {
            "label": "Annual Consumption of Electricity"
          },
          "Annual_Exports_Electricity": {
            "label": "Annual Exports of Electricity"
          },
          "Annual_Generation_Electricity": {
            "label": "Net generation, all fuels, all sectors, annual"
          },
          "Annual_Imports_Electricity": {
            "label": "Annual Imports of Electricity"
          },
          "Annual_Loss_Electricity": {
            "label": "Annual Loss of Electricity"
          },
          "Annual_Consumption_Electricity_Agriculture": {
            "label": "Annual Consumption for Agriculture"
          },
          "Annual_Consumption_Electricity_ChemicalPetrochemicalIndustry": {
            "label": "Annual Consumption for Chemical Petrochemical Industry"
          },
          "Annual_Consumption_Electricity_CommerceAndPublicServices": {
            "label": "Annual Consumption for Commerce And Public Services"
          },
          "Annual_Consumption_Electricity_ConstructionIndustry": {
            "label": "Annual Consumption for Construction Industry"
          },
          "Annual_Consumption_Electricity_FoodAndTobaccoIndustry": {
            "label": "Annual Consumption for Food And Tobacco Industry"
          },
          "Annual_Consumption_Electricity_Households": {
            "label": "Annual Consumption for Households"
          },
          "Annual_Consumption_Electricity_IronSteel": {
            "label": "Annual Consumption for Iron Steel"
          },
          "Annual_Consumption_Electricity_MachineryIndustry": {
            "label": "Annual Consumption for Machinery Industry"
          },
          "Annual_Consumption_Electricity_Manufacturing": {
            "label": "Annual Consumption for Manufacturing"
          },
          "Annual_Consumption_Electricity_MiningAndQuarryingIndustry": {
            "label": "Annual Consumption for Mining And Quarrying Industry"
          },
          "Annual_Consumption_Electricity_NonFerrousMetalsIndustry": {
            "label": "Annual Consumption for Non Ferrous Metals Industry"
          },
          "Annual_Consumption_Electricity_NonMetallicMineralsIndustry": {
            "label": "Annual Consumption for Non Metallic Minerals Industry"
          },
          "Annual_Consumption_Electricity_PaperPulpPrintIndustry": {
            "label": "Annual Consumption for Paper Pulp Print Industry"
          },
          "Annual_Consumption_Electricity_RailTransport": {
            "label": "Annual Consumption for Rail Transport"
          },
          "Annual_Consumption_Electricity_RoadTransport": {
            "label": "Annual Consumption for Road Transport"
          },
          "Annual_Consumption_Electricity_TextileAndLeatherIndustry": {
            "label": "Annual Consumption for Textile And Leather Industry"
          },
          "Annual_Consumption_Electricity_TransportEquipmentIndustry": {
            "label": "Annual Consumption for Transport Equipment Industry"
          },
          "Annual_Consumption_Electricity_TransportIndustry": {
            "label": "Annual Consumption for Transport Industry"
          },
          "Annual_Consumption_Electricity_OtherIndustry": {
            "label": "Annual Consumption for UN_Other Industry"
          },
          "Annual_Consumption_Electricity_OtherManufacturingIndustry": {
            "label": "Annual Consumption for UN_Other Manufacturing Industry"
          },
          "Annual_Consumption_Electricity_OtherSector": {
            "label": "Annual Consumption for UN_Other Sector"
          },
          "Annual_Consumption_Electricity_WoodAndWoodProductsIndustry": {
            "label": "Annual Consumption for Wood And Wood Products Industry"
          },
          "Annual_Consumption_Electricity_BriquettingPlants_EnergyIndustryOwnUse": {
            "label": "Annual Consumption for Briquetting Plants, Energy Industry Own Use"
          },
          "Annual_Consumption_Electricity_CoalMines_EnergyIndustryOwnUse": {
            "label": "Annual Consumption for Coal Mines, Energy Industry Own Use"
          },
          "Annual_Consumption_Electricity_CokeOvens_EnergyIndustryOwnUse": {
            "label": "Annual Consumption for Coke Ovens, Energy Industry Own Use"
          },
          "Annual_Consumption_Electricity_ElectricityGeneration_EnergyIndustryOwnUse": {
            "label": "Annual Consumption for Electricity Generation, Energy Industry Own Use"
          },
          "Annual_Consumption_Electricity_EnergyIndustry_EnergyIndustryOwnUse": {
            "label": "Annual Consumption for Energy Industry, Energy Industry Own Use"
          },
          "Annual_Consumption_Electricity_GasWorks_EnergyIndustryOwnUse": {
            "label": "Annual Consumption for Gas Works, Energy Industry Own Use"
          },
          "Annual_Consumption_Electricity_Industry_EnergyIndustryOwnUse": {
            "label": "Annual Consumption for Industry, Energy Industry Own Use"
          },
          "Annual_Consumption_Electricity_NuclearFuelProcessing_EnergyIndustryOwnUse": {
            "label": "Annual Consumption for Nuclear Fuel Processing, Energy Industry Own Use"
          },
          "Annual_Consumption_Electricity_OilGasExtraction_EnergyIndustryOwnUse": {
            "label": "Annual Consumption for Oil Gas Extraction, Energy Industry Own Use"
          },
          "Annual_Consumption_Electricity_OilRefineries_EnergyIndustryOwnUse": {
            "label": "Annual Consumption for Oil Refineries, Energy Industry Own Use"
          },
          "Annual_Consumption_Electricity_PumpStoragePlants_EnergyIndustryOwnUse": {
            "label": "Annual Consumption for Pump Storage Plants, Energy Industry Own Use"
          },
          "Annual_Generation_Electricity_BioGas_ThermalElectricity": {
            "label": "Annual Generation From Bio Gas, Thermal Electricity"
          },
          "Annual_Consumption_Energy_Agriculture_SolarThermal": {
            "label": "Annual Consumption of Agriculture, Solar Thermal"
          },
          "Annual_Consumption_Energy_BriquettingPlants_Heat_EnergyIndustryOwnUse": {
            "label": "Annual Consumption of Briquetting Plants, Heat, Energy Industry Own Use"
          },
          "Annual_Consumption_Energy_ChemicalPetrochemicalIndustry_Heat": {
            "label": "Annual Consumption of Chemical Petrochemical Industry, Heat"
          },
          "Annual_Consumption_Energy_CoalMines_Heat_EnergyIndustryOwnUse": {
            "label": "Annual Consumption of Coal Mines, Heat, Energy Industry Own Use"
          },
          "Annual_Consumption_Energy_CokeOvens_Heat_EnergyIndustryOwnUse": {
            "label": "Annual Consumption of Coke Ovens, Heat, Energy Industry Own Use"
          },
          "Annual_Consumption_Energy_CommerceAndPublicServices_Geothermal": {
            "label": "Annual Consumption of Commerce And Public Services, Geothermal"
          },
          "Annual_Consumption_Energy_CommerceAndPublicServices_Heat": {
            "label": "Annual Consumption of Commerce And Public Services, Heat"
          },
          "Annual_Consumption_Energy_CommerceAndPublicServices_SolarThermal": {
            "label": "Annual Consumption of Commerce And Public Services, Solar Thermal"
          },
          "Annual_Consumption_Energy_ElectricityGeneration_Heat_EnergyIndustryOwnUse": {
            "label": "Annual Consumption of Electricity Generation, Heat, Energy Industry Own Use"
          },
          "Annual_Consumption_Energy_EnergyIndustry_Heat_EnergyIndustryOwnUse": {
            "label": "Annual Consumption of Energy Industry, Heat, Energy Industry Own Use"
          },
          "Annual_Consumption_Energy_FoodAndTobaccoIndustry_Heat": {
            "label": "Annual Consumption of Food And Tobacco Industry, Heat"
          },
          "Annual_Consumption_Energy_GasWorks_Heat_EnergyIndustryOwnUse": {
            "label": "Annual Consumption of Gas Works, Heat, Energy Industry Own Use"
          },
          "Annual_Consumption_Energy_Households_Geothermal": {
            "label": "Annual Consumption of Households, Geothermal"
          },
          "Annual_Consumption_Energy_Households_Heat": {
            "label": "Annual Consumption of Households, Heat"
          },
          "Annual_Consumption_Energy_Households_SolarThermal": {
            "label": "Annual Consumption of Households, Solar Thermal"
          },
          "Annual_Consumption_Energy_IronSteel_Heat": {
            "label": "Annual Consumption of Iron Steel, Heat"
          },
          "Annual_Consumption_Energy_MachineryIndustry_Heat": {
            "label": "Annual Consumption of Machinery Industry, Heat"
          },
          "Annual_Consumption_Energy_MachineryIndustry_SolarThermal": {
            "label": "Annual Consumption of Machinery Industry, Solar Thermal"
          },
          "Annual_Consumption_Energy_Manufacturing_Heat": {
            "label": "Annual Consumption of Manufacturing, Heat"
          },
          "Annual_Consumption_Energy_Manufacturing_SolarThermal": {
            "label": "Annual Consumption of Manufacturing, Solar Thermal"
          },
          "Annual_Consumption_Energy_MiningAndQuarryingIndustry_Heat": {
            "label": "Annual Consumption of Mining And Quarrying Industry, Heat"
          },
          "Annual_Consumption_Energy_NonFerrousMetalsIndustry_Heat": {
            "label": "Annual Consumption of Non Ferrous Metals Industry, Heat"
          },
          "Annual_Consumption_Energy_NonFerrousMetalsIndustry_SolarThermal": {
            "label": "Annual Consumption of Non Ferrous Metals Industry, Solar Thermal"
          },
          "Annual Consumption of Non Ferrous Metals Industry, Solar Thermal": {
            "label": "Annual Consumption of Non Metallic Minerals Industry, Heat"
          },
          "Annual_Consumption_Energy_OilGasExtraction_Heat_EnergyIndustryOwnUse": {
            "label": "Annual Consumption of Oil Gas Extraction, Heat, Energy Industry Own Use"
          },
          "Annual_Consumption_Energy_OilRefineries_Heat_EnergyIndustryOwnUse": {
            "label": "Annual Consumption of Oil Refineries, Heat, Energy Industry Own Use"
          },
          "Annual_Consumption_Energy_OilRefineries_Refinery_FuelTransformation": {
            "label": "Annual Consumption of Oil Refineries, Refinery, Fuel Transformation"
          },
          "Annual_Consumption_Energy_PaperPulpPrintIndustry_Heat": {
            "label": "Annual Consumption of Paper Pulp Print Industry, Heat"
          },
          "Annual_Consumption_Energy_TextileAndLeatherIndustry_Heat": {
            "label": "Annual Consumption of Textile And Leather Industry, Heat"
          },
          "Annual_Consumption_Energy_TransportEquipmentIndustry_Heat\n": {
            "label": "Annual Consumption of Transport Equipment Industry, Heat"
          },
          "Annual_Consumption_Energy_TransportEquipmentIndustry_SolarThermal": {
            "label": "Annual Consumption of Transport Equipment Industry, Solar Thermal"
          },
          "Annual_Consumption_Energy_OtherIndustry_Heat": {
            "label": "Annual Consumption of UN_Other Industry, Heat"
          },
          "Annual_Consumption_Energy_OtherManufacturingIndustry_Heat": {
            "label": "Annual Consumption of UN_Other Manufacturing Industry, Heat"
          },
          "Annual_Consumption_Energy_OtherManufacturingIndustry_SolarThermal": {
            "label": "Annual Consumption of UN_Other Manufacturing Industry, Solar Thermal"
          },
          "Annual_Consumption_Energy_OtherSector_Geothermal": {
            "label": "Annual Consumption of UN_Other Sector, Geothermal"
          },
          "Annual_Consumption_Energy_OtherSector_Heat": {
            "label": "Annual Consumption of UN_Other Sector, Heat"
          },
          "Annual_Consumption_Energy_OtherSector_SolarThermal": {
            "label": "Annual Consumption of UN_Other Sector, Solar Thermal"
          },
          "Annual_Consumption_Energy_WoodAndWoodProductsIndustry_Heat": {
            "label": "Annual Consumption of Wood And Wood Products Industry, Heat"
          }
        },
        "val": "Annual_Consumption_Electricity"
      },
      "options.per_capita": {
        "type": "checkbox",
        "label": "Per capita",
        "show_if": "false",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.all_countries": {
        "type": "checkbox",
        "label": "All countries",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.output_as_chart": {
        "type": "checkbox",
        "label": "Output a Graph",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "options.graph_type": {
        "type": "select",
        "label": "Graph Type",
        "show_if": "options.output_as_chart=='true'",
        "required": true,
        "options": {
          "zoomable_sunburst": {
            "label": "Sunburst"
          },
          "treemap": {
            "label": "Treemap"
          }
        },
        "val": "zoomable_sunburst",
        "breakLine": true
      }
    }
  }
}
,
"/HolidayUsedSource.json/HolidayUsedSource.json": {
  "holiday_calendar_info_frame": {
    "type": "fieldset",
    "label": "Used Source Table",
    "repeat": false,
    "fields": {
      "holiday_calendar_table": {
        "type": "text",
        "label": "Holiday Calendar Table",
        "val": "Holiday Calendar",
        "disabled": true
      }
    }
  }
},
"/PlanningIfTableExist.json/PlanningIfTableExist.json": {
  "output.if_table_exist.type": {
    "type": "select",
    "label": "If existing",
    "show_if": "options.output_type=='table_output'",
    "val": "drop_if_exist",
    "options": {
      "drop_if_exist": {
        "label": "Create or Drop (if already existing)"
      },
      "error_if_exist": {
        "label": "Create New (throw error if existing)"
      },
      "error_if_not_exist": {
        "label": "Drop (throw error if not-existing)"
      },
      "append_all": {
        "label": "Append All"
      },
      "append_not_existing": {
        "label": "Append not existing"
      },
      "append_changes": {
        "label": "Append changes"
      }
    }
  },
  "output.if_table_exist.append_not_existing_cols": {
    "type": "select",
    "label": "Select Column(s)",
    "show_if": "output.if_table_exist.type=='append_not_existing'",
    "table": "table_id",
    "bind": "COLUMNS",
    "multiple": true,
    "required": true,
    "breakLine": true
  },
  "output.if_table_exist.append_changes__add_timestamp": {
    "type": "checkbox",
    "label": "Add Timestamp",
    "show_if": "output.if_table_exist.type=='append_changes'",
    "val": "false",
    "isOn": "true",
    "isOff": "false"
  },
  "output.if_table_exist.append_changes__timestamp_colname": {
    "type": "text",
    "label": "Timestamp column name",
    "show_if": "output.if_table_exist.type=='append_changes' && output.if_table_exist.append_changes__add_timestamp=='true'",
    "val": "Timestamp",
    "required": true,
    "style": "margin-left: 15px",
    "breakLine": true
  },
  "output.if_table_exist.append_changes__add_row": {
    "type": "checkbox",
    "label": "Add Row",
    "show_if": "output.if_table_exist.type=='append_changes'",
    "val": "false",
    "isOn": "true",
    "isOff": "false"
  },
  "output.if_table_exist.append_changes__row_colname": {
    "type": "text",
    "label": "Row column name",
    "show_if": "output.if_table_exist.type=='append_changes' && output.if_table_exist.append_changes__add_row=='true'",
    "val": "Row",
    "required": true,
    "style": "margin-left: 15px",
    "breakLine": true
  },
  "append_not_existing_info": {
    "type": "textarea",
    "label": "",
    "show_if": "output.if_table_exist.type=='append_not_existing'",
    "val": "Appends rows only if the value of the selected column is new in the existing table. It is assumed that the selected column is found in the output and existing table",
    "disabled": true,
    "style": "width: 100%"
  }
}
,
"/DCClimateWorldDataYears1.json/DCClimateWorldDataYears1.json": {
  "options.sel_year": {
    "type": "select",
    "label": "Select year",
    "show_if": "options.stat_var_name=='Amount_Emissions_CarbonDioxide_PerCapita' || options.stat_var_name=='Count_EarthquakeEvent' || options.stat_var_name=='Count_EarthquakeEvent_M3To4' || options.stat_var_name=='Count_EarthquakeEvent_M3Onwards' || options.stat_var_name=='Count_EarthquakeEvent_M4To5' || options.stat_var_name=='Count_EarthquakeEvent_M4Onwards' || options.stat_var_name=='Count_EarthquakeEvent_M5To6' || options.stat_var_name=='Count_EarthquakeEvent_M5Onwards' || options.stat_var_name=='Max_Temperature' || options.stat_var_name=='DifferenceAcrossModels_Max_Temperature' || options.stat_var_name=='Min_Temperature' || options.stat_var_name=='DifferenceAcrossModels_Min_Temperature' || options.stat_var_name=='PrecipitationRate' || options.stat_var_name=='DifferenceAcrossModels_PrecipitationRate' || options.stat_var_name=='DifferenceRelativeToBaseDate1990_Max_Temperature' || options.stat_var_name=='DifferenceRelativeToBaseDate1990_Min_Temperature' || options.stat_var_name=='DifferenceRelativeToBaseDate1990_PrecipitationRate'",
    "required": true,
    "options": {
      "1960": {
        "label": "1960"
      },
      "1961": {
        "label": "1961"
      },
      "1962": {
        "label": "1962"
      },
      "1963": {
        "label": "1963"
      },
      "1964": {
        "label": "1964"
      },
      "1965": {
        "label": "1965"
      },
      "1966": {
        "label": "1966"
      },
      "1967": {
        "label": "1967"
      },
      "1968": {
        "label": "1968"
      },
      "1969": {
        "label": "1969"
      },
      "1970": {
        "label": "1970"
      },
      "1971": {
        "label": "1971"
      },
      "1972": {
        "label": "1972"
      },
      "1973": {
        "label": "1973"
      },
      "1974": {
        "label": "1974"
      },
      "1975": {
        "label": "1975"
      },
      "1976": {
        "label": "1976"
      },
      "1977": {
        "label": "1977"
      },
      "1978": {
        "label": "1978"
      },
      "1979": {
        "label": "1979"
      },
      "1980": {
        "label": "1980"
      },
      "1981": {
        "label": "1981"
      },
      "1982": {
        "label": "1982"
      },
      "1983": {
        "label": "1983"
      },
      "1984": {
        "label": "1984"
      },
      "1985": {
        "label": "1985"
      },
      "1986": {
        "label": "1986"
      },
      "1987": {
        "label": "1987"
      },
      "1988": {
        "label": "1988"
      },
      "1989": {
        "label": "1989"
      },
      "1990": {
        "label": "1990"
      },
      "1991": {
        "label": "1991"
      },
      "1992": {
        "label": "1992"
      },
      "1993": {
        "label": "1993"
      },
      "1994": {
        "label": "1994"
      },
      "1995": {
        "label": "1995"
      },
      "1996": {
        "label": "1996"
      },
      "1997": {
        "label": "1997"
      },
      "1998": {
        "label": "1998"
      },
      "1999": {
        "label": "1999"
      },
      "2000": {
        "label": "2000"
      },
      "2001": {
        "label": "2001"
      },
      "2002": {
        "label": "2002"
      },
      "2003": {
        "label": "2003"
      },
      "2004": {
        "label": "2004"
      },
      "2005": {
        "label": "2005"
      },
      "2006": {
        "label": "2006"
      },
      "2007": {
        "label": "2007"
      },
      "2008": {
        "label": "2008"
      },
      "2009": {
        "label": "2009"
      },
      "2010": {
        "label": "2010"
      },
      "2011": {
        "label": "2011"
      },
      "2012": {
        "label": "2012"
      },
      "2013": {
        "label": "2013"
      },
      "2014": {
        "label": "2014"
      },
      "2015": {
        "label": "2015"
      },
      "2016": {
        "label": "2016"
      },
      "2017": {
        "label": "2017"
      },
      "2018": {
        "label": "2018"
      },
      "2019": {
        "label": "2019"
      },
      "2020": {
        "label": "2020"
      },
      "2021": {
        "label": "2021"
      }
    },
    "val": "2020",
    "breakLine": true
  }
},
"/TemplateOptions.json/TemplateOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.add_columns": {
        "type": "fieldset",
        "label": "Retrieve Columns",
        "repeat": true,
        "fields": {
          "first_new_column_name": {
            "type": "text",
            "label": "Column Name",
            "show_if" :  "$index == 0",
            "val": ""
          },
          "new_column_name": {
            "type": "text",
            "label": "Column Name",
            "show_if" :  "$index > 0",
            "val": ""
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      }
    }
  }
}
,
"/ImpactCurveOptions.json/ImpactCurveOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.type": {
        "type": "select",
        "label": "Type",
        "options": {
          "standard": {
            "label": "Generate Standard Impact Curve"
          },
          "custom": {
            "label": "Generate Custom Impact Curve"
          },
          "apply": {
            "label": "Apply Impact Curve"
          }
        },
        "val": "standard",
        "breakLine": true
      },
      "options.standard.start": {
        "type": "text",
        "label": "Initial Period",
        "show_if": "options.type=='standard' && options.standard.end_value_equals_initial_value=='no'",
        "val": "1",
        "required": true
      },
      "options.standard.maximum": {
        "type": "text",
        "label": "Maximum Period",
        "show_if": "options.type=='standard'",
        "val": "50",
        "required": true
      },
      "options.standard.end": {
        "type": "text",
        "label": "End Period",
        "show_if": "options.type=='standard'",
        "val": "100",
        "required": true,
        "breakLine": true
      },
      "options.standard.multiplier_at_maximum_impact_level": {
        "type": "text",
        "label": "Multiplier At Maximum Impact Level",
        "show_if": "options.type=='standard'",
        "width": "100%",
        "val": "2",
        "required": true,
        "breakLine": true
      },
      "options.standard.end_value_equals_initial_value": {
        "type": "checkbox",
        "label": "End Value Equals Initial Value",
        "show_if": "options.type=='standard'",
        "width": "100%",
        "val": "yes",
        "isOn": "yes",
        "isOff": "no",
        "breakLine": true
      },
      "options.standard.multiplier_end_value": {
        "type": "text",
        "label": "Multiplier End Value",
        "width": "100%",
        "show_if": "options.type=='standard' && options.standard.end_value_equals_initial_value=='no'",
        "val": "",
        "breakLine": true
      },
      "options.standard.maximum_plateau": {
        "type": "checkbox",
        "label": "Maximum Plateau",
        "show_if": "options.type=='standard'",
        "width": "100%",
        "val": "yes",
        "isOn": "yes",
        "isOff": "no",
        "breakLine": true
      },
      "options.standard.no_of_periods_prior_defined_maximum_point": {
        "type": "text",
        "label": "No of periods prior defined maximum point",
        "show_if": "options.type=='standard' && options.standard.maximum_plateau=='yes'",
        "val": "0",
        "style": "width: 250px"
      },
      "options.standard.no_of_periods_post_defined_maximum_point": {
        "type": "text",
        "label": "No of periods post defined maximum point",
        "show_if": "options.type=='standard' && options.standard.maximum_plateau=='yes'",
        "val": "0",
        "style": "width: 250px",
        "breakLine": true
      },
      "options.standard.left_slope": {
        "type": "select",
        "label": "Left Slope",
        "show_if": "options.type=='standard'",
        "options": {
          "vertical": {
            "label": "Vertical"
          },
          "linear": {
            "label": "Linear"
          },
          "standard_distribution": {
            "label": "Standard Distribution"
          }
        },
        "val": "standard_distribution"
      },
      "options.standard.use_auto_calculated_sigma_for_left_slope": {
        "type": "checkbox",
        "label": "Auto calculated left sigma",
        "show_if": "options.type=='standard' && options.standard.left_slope=='standard_distribution'",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "options.standard.left_slope_sigma": {
        "type": "text",
        "label": "Left Slope Sigma",
        "show_if": "options.type=='standard' && options.standard.left_slope=='standard_distribution' && options.standard.use_auto_calculated_sigma_for_left_slope=='false'",
        "val": ""
      },
      "options.standard.right_slope": {
        "type": "select",
        "label": "Right Slope",
        "show_if": "options.type=='standard'",
        "required": true,
        "options": {
          "vertical": {
            "label": "Vertical"
          },
          "linear": {
            "label": "Linear"
          },
          "standard_distribution": {
            "label": "Standard Distribution"
          }
        },
        "val": "standard_distribution"
      },
      "options.standard.use_auto_calculated_sigma_for_right_slope": {
        "type": "checkbox",
        "label": "Auto calculated right sigma",
        "show_if": "options.type=='standard' && options.standard.right_slope=='standard_distribution'",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "options.standard.right_slope_sigma": {
        "type": "text",
        "label": "Right Slope Sigma",
        "show_if": "options.type=='standard' && options.standard.right_slope=='standard_distribution' && options.standard.use_auto_calculated_sigma_for_right_slope=='false'",
        "val": "",
        "breakLine": true
      },
      "options.standard.event_name": {
        "type": "text",
        "label": "Event Name",
        "show_if": "options.type=='standard'",
        "val": "Event"
      },
      "options.custom.event_table_id": {
        "type": "select",
        "label": "Event Table",
        "show_if": "options.type=='custom'",
        "bind": "TABLES",
        "empty": "",
        "required": true,
        "breakLine": true
      },
      "options.custom.event_date_column": {
        "type": "select",
        "label": "Event Date Column",
        "show_if": "options.type=='custom'",
        "required": true,
        "table": "options.custom.event_table_id",
        "bind": "COLUMNS"
      },
      "options.custom.event_name_column": {
        "type": "select",
        "label": "Event Name Column",
        "show_if": "options.type=='custom'",
        "required": true,
        "table": "options.custom.event_table_id",
        "bind": "COLUMNS"
      },
      "options.custom.event_name": {
        "type": "text",
        "label": "Event Name",
        "show_if": "options.type=='custom'",
        "val": "Weekend",
        "required": true,
        "breakLine": true
      },
      "options.custom.base_period": {
        "type": "select",
        "label": "Base Period",
        "show_if": "options.type=='custom'",
        "required": true,
        "options": {
          "months": {
            "label": "Prior N Months"
          },
          "weeks": {
            "label": "Prior N Weeks"
          },
          "days": {
            "label": "Prior N Days"
          }
        },
        "val": "days"
      },
      "options.custom.base_period_n": {
        "type": "text",
        "label": "N",
        "show_if": "options.type=='custom'",
        "val": "5",
        "required": true,
        "breakLine": true
      },
      "options.custom.leading_impact_days": {
        "type": "text",
        "label": "Leading Impact Periods",
        "show_if": "options.type=='custom'",
        "val": "0",
        "required": true
      },
      "options.custom.trailing_impact_days": {
        "type": "text",
        "label": "Trailing Impact Periods",
        "show_if": "options.type=='custom'",
        "val": "0",
        "required": true,
        "breakLine": true
      },
      "options.custom.value_column": {
        "type": "select",
        "label": "Value Column",
        "show_if": "options.type=='custom'",
        "required": true,
        "table": "options.custom.event_table_id",
        "bind": "COLUMNS",
        "breakLine": true
      },
      "options.custom.average": {
        "type": "hidden",
        "val": "true"
      },
      "options.apply.event_name": {
        "type": "text",
        "label": "Event Name",
        "show_if": "options.type=='apply'",
        "val": "Weekend",
        "required": true,
        "breakLine": true
      },
      "apply_event_table_box": {
        "type": "fieldset",
        "label": "Select Event Table",
        "show_if": "options.type=='apply'",
        "repeat": false,
        "fields": {
          "options.apply.event_table_id": {
            "type": "select",
            "label": "Event Table",
            "bind": "TABLES",
            "empty": "",
            "required": true,
            "breakLine": true
          },
          "options.apply.event_table_event_date_column": {
            "type": "select",
            "label": "Event Date Column",
            "required": true,
            "table": "options.apply.event_table_id",
            "bind": "COLUMNS"
          },
          "options.apply.event_table_event_name_column": {
            "type": "select",
            "label": "Event Name Column",
            "required": true,
            "table": "options.apply.event_table_id",
            "bind": "COLUMNS"
          },
          "options.apply.event_table_value_column": {
            "type": "select",
            "label": "Value Column",
            "required": true,
            "table": "options.apply.event_table_id",
            "bind": "COLUMNS",
            "breakLine": true
          }
        }
      },
      "apply_impact_table_box": {
        "type": "fieldset",
        "label": "Select Impact Table",
        "show_if": "options.type=='apply'",
        "repeat": false,
        "fields": {
          "options.apply.impact_table_id": {
            "type": "select",
            "label": "Impact Table",
            "bind": "TABLES",
            "empty": "",
            "required": true,
            "breakLine": true
          },
          "options.apply.on_average": {
            "type": "hidden",
            "val": "true"
          },
          "options.apply.impact_table_event_date_column": {
            "type": "select",
            "label": "Event Date Column",
            "required": true,
            "table": "options.apply.impact_table_id",
            "bind": "COLUMNS"
          },
          "options.apply.impact_table_event_name_column": {
            "type": "select",
            "label": "Event Name Column",
            "required": true,
            "table": "options.apply.impact_table_id",
            "bind": "COLUMNS"
          },
          "options.apply.impact_table_impact_column": {
            "type": "select",
            "label": "Impact Column",
            "required": true,
            "table": "options.apply.impact_table_id",
            "bind": "COLUMNS",
            "breakLine": true
          }
        }
      }
    }
  }
}
,
"/JoinMultipleOptions.json/JoinMultipleOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "join_type": {
        "type": "select",
        "label": "Detect join column(s)",
        "options": {
          "step_by_step": {
            "label": "by common columns of two tables and join step by step"
          },
          "batch_join": {
            "label": "by common columns of all tables"
          }
        },
        "val": "step_by_step",
        "breakLine": true
      }
    }
  }
}
,
"/FormattingOutput.json/FormattingOutput.json": {
  "output": {
    "type": "fieldset",
    "label": "Define Output Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "create_new_table=='true'",
    "repeat": false,
    "fields": {
      "output.custom_text": {
        "type": "text",
        "label": "Output Table Name",
        "show_if": "output.custom_options=='false' || (output.custom_options=='true' && output.compose_table_name=='false')",
        "minLength": 1,
        "val": "",
        "width": "100%",
        "breakLine": true
      },
      "output.custom_options": {
        "type": "checkbox",
        "label": "Output Options",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "output.compose_table_name": {
        "type": "checkbox",
        "label": "Compose Table Name",
        "show_if": "output.custom_options=='true'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "compose_table_name_frame": {
        "type": "fieldset",
        "label": "Compose Output Table Name",
        "show_if": "output.custom_options=='true' && output.compose_table_name=='true'",
        "repeat": false,
        "fields": {
          "output.prefix_rule": {
            "type": "select",
            "label": "Prefix",
            "show_if": "output.compose_table_name=='true'",
            "val": "empty",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.prefix_text": {
            "type": "text",
            "label": "Prefix Text",
            "show_if": "output.compose_table_name=='true' && output.prefix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "output.core_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "show_if": "output.compose_table_name=='true' && output.prefix_rule!='empty'",
            "val": "_",
            "width": "50px"
          },
          "output.core_rule": {
            "type": "select",
            "label": "Table Name",
            "show_if": "output.compose_table_name=='true'",
            "val": "input_table_name",
            "options": {
              "input_table_name": {
                "label": "Input Table Name"
              },
              "script_name": {
                "label": "Task Name"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.core_text": {
            "type": "text",
            "label": "Main Table Name",
            "show_if": "output.compose_table_name=='true' && output.core_rule=='custom'",
            "required": true,
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "output.suffix_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "show_if": "output.compose_table_name=='true'",
            "val": "_",
            "width": "50px"
          },
          "output.suffix_rule": {
            "type": "select",
            "label": "Suffix",
            "show_if": "output.compose_table_name=='true'",
            "val": "script_name",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.suffix_text": {
            "type": "text",
            "label": "Suffix Text",
            "show_if": "output.compose_table_name=='true' && output.suffix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": "",
            "breakLine": true
          },
          "output.timezone": {
            "type": "select",
            "label": "Timezone",
            "show_if": "output.compose_table_name=='true' && (output.prefix_rule=='date_string_type1' || output.prefix_rule=='date_string_type2' || output.prefix_rule=='time_string' || output.prefix_rule=='datetime_string' || output.suffix_rule=='date_string_type1' || output.suffix_rule=='date_string_type2' || output.suffix_rule=='time_string' || output.suffix_rule=='datetime_string')",
            "val": "Europe/Berlin",
            "required": true,
            "options": {
              "America/Adak": {
                "label": "Adak, Gambier"
              },
              "Australia/Adelaide": {
                "label": "Adelaide, Broken_Hill, Darwin"
              },
              "America/Anchorage": {
                "label": "Anchorage, Juneau, Sitka"
              },
              "Pacific/Apia": {
                "label": "Apia, Asau, Mulifanua, Afega, Leulumoega"
              },
              "Pacific/Enderbury": {
                "label": "Apia, Fiji, Tongatapu"
              },
              "Antarctica/McMurdo": {
                "label": "Auckland, Casey, Davis"
              },
              "Pacific/Auckland": {
                "label": "Auckland, Wellington, Christchurch"
              },
              "Asia/Bangkok": {
                "label": "Bangkok, Jakarta, Novosibirsk"
              },
              "Europe/Berlin": {
                "label": "Berlin, Paris, Amsterdam"
              },
              "Australia/Perth": {
                "label": "Brunei, Singapore, Perth"
              },
              "Atlantic/Cape_Verde": {
                "label": "Cape_Verde,Praia, Mindelo, Santa Maria"
              },
              "America/Belize": {
                "label": "Costa_Rica, El_Salvador, Denver"
              },
              "Antarctica/Vostok": {
                "label": "Dhaka, Bishkek, Omsk"
              },
              "Europe/Astrakhan": {
                "label": "Dubai, Baku, Tbilisi"
              },
              "Australia/Eucla": {
                "label": "Eucla"
              },
              "Pacific/Honolulu": {
                "label": "Honolulu, Rarotonga, Tahiti"
              },
              "Asia/Kabul": {
                "label": "Kabul, Kandahār, Mazār-e Sharīf, Herāt, Jalālābād"
              },
              "Asia/Aqtau": {
                "label": "Karachi, Tashkent, Maldives"
              },
              "Asia/Kathmandu": {
                "label": "Kathmandu,Pokhara, Pātan, Biratnagar"
              },
              "Pacific/Kiritimati": {
                "label": "Kiritimati"
              },
              "Asia/Colombo": {
                "label": "Kolkata, Colombo,Jaffna, Negombo"
              },
              "Europe/Guernsey": {
                "label": "London. Dublin, Lisbon"
              },
              "Australia/Lord_Howe": {
                "label": "Lord_Howe"
              },
              "America/Creston": {
                "label": "Los_Angeles, Vancouver, Hermosillo"
              },
              "Pacific/Marquesas": {
                "label": "Marquesas,Taiohae"
              },
              "America/Cayman": {
                "label": "Mexico_City, Panama, Chicago"
              },
              "Pacific/Niue": {
                "label": "Midway, Niue, Pago_Pago"
              },
              "Europe/Mariehamn": {
                "label": "Moscow, Istanbul, Qatar"
              },
              "Asia/Kolkata": {
                "label": "Mumbai, Delhi, Bengaluru, Kolkata, Chennai"
              },
              "America/Miquelon": {
                "label": "Noronha, Nuuk, Miquelon"
              },
              "America/Danmarkshavn": {
                "label": "Reykjavik, Dakar, Casablanca"
              },
              "Pacific/Bougainville": {
                "label": "Sakhalin, Norfolk, Bougainville"
              },
              "America/Araguaina": {
                "label": "Sao_Paulo, Buenos_Aires, Montevideo"
              },
              "America/St_Johns": {
                "label": "St_Johns,Mount Pearl, Corner Brook"
              },
              "Asia/Tehran": {
                "label": "Tehran, Mashhad, Isfahan, Karaj, Tabriz"
              },
              "Asia/Tokyo": {
                "label": "Tokyo, Seoul, Jayapura"
              },
              "America/New_York": {
                "label": "Toronto, Santiago, New_York"
              },
              "Australia/Sydney": {
                "label": "Vladivostok, Sydney, Brisbane"
              },
              "Asia/Yangon": {
                "label": "Yangon, Cocos,Mandalay, Nay Pyi Taw, Mawlamyine"
              },
              "Indian/Cocos": {
                "label": "Yangon, Cocos,West Island"
              }
            },
            "breakLine": true
          }
        }
      }
    }
  }
},
"/PeriodicySelectOutputColumn.json/PeriodicySelectOutputColumn.json": {
  "output.select_output_columns": {
    "type": "checkbox",
    "label": "Select Output Columns",
    "show_if": "options.task_symbol=='periodicy_by_table' && output.custom_options=='true'",
    "val": "false",
    "isOn": "true",
    "isOff": "false"
  },
  "output_columns": {
    "type": "fieldset",
    "label": "Select OutputColumns",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "options.task_symbol=='periodicy_by_table' && output.custom_options=='true' && output.select_output_columns=='true'",
    "repeat": true,
    "fields": {
      "field_name": {
        "type": "select",
        "label": "Select Column",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "order": {
        "type": "select",
        "label": "Order",
        "options": {
          "-": {
            "label": "-"
          },
          "asc": {
            "label": "Asc"
          },
          "desc": {
            "label": "Desc"
          }
        },
        "val": "-"
      },
      "is_rename": {
        "type": "checkbox",
        "label": "Rename",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "rename": {
        "show_if": "this.is_rename == 'true'",
        "type": "text",
        "required": true,
        "minLength": 1,
        "maxLength": 255,
        "label": "New Column Name",
        "style": "margin-left: 10px"
      },
      "format__category": {
        "type": "select",
        "label": "Display Format",
        "required": true,
        "options": {
          "standard": {
            "label": "Standard"
          },
          "number": {
            "label": "Number"
          },
          "percentage": {
            "label": "Percentage"
          },
          "text": {
            "label": "Text"
          },
          "date": {
            "label": "Date"
          },
          "currency": {
            "label": "Currency"
          }
        },
        "val": "standard"
      },
      "format__rounding": {
        "type": "select",
        "label": "Decimal Places for display",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "required": true,
        "options": {
          "no_rounding": {
            "label": "No rounding"
          },
          "0": {
            "label": "0 digits"
          },
          "1": {
            "label": "1 digits"
          },
          "2": {
            "label": "2 digits"
          },
          "3": {
            "label": "3 digits"
          },
          "4": {
            "label": "4 digits"
          },
          "5": {
            "label": "5 digits"
          },
          "6": {
            "label": "6 digits"
          },
          "7": {
            "label": "7 digits"
          },
          "8": {
            "label": "8 digits"
          },
          "9": {
            "label": "9 digits"
          }
        },
        "val": "2"
      },
      "format__use_1000_separator": {
        "type": "checkbox",
        "label": "Use 1000 Separator(.)",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-right: 15px"
      },
      "format__currency_symbol": {
        "type": "select",
        "label": "Symbol",
        "show_if": "this.format__category=='currency'",
        "required": true,
        "options": {
          "dollar": {
            "label": "$"
          },
          "euro": {
            "label": "€"
          },
          "pound": {
            "label": "£"
          },
          "yen": {
            "label": "¥ (Yen, currency of Japan)"
          },
          "colon": {
            "label": "₡ (Colón, currency of Costa Rica)"
          },
          "naira": {
            "label": "₦ (Naira, currency of Nigeria)"
          },
          "rupee": {
            "label": "₨ (Rupee, currency of India)"
          },
          "rupie": {
            "label": "₹ (Rupee, currency of India)"
          },
          "won": {
            "label": "₩ (Won, currency in South Korea and North Korea)"
          },
          "hebrew": {
            "label": "₪ (Currency of Israel)"
          },
          "dong": {
            "label": "₫ (Currency of Vietnam)"
          },
          "kip": {
            "label": "₭ (Kip, currency of Laos)"
          },
          "mongolia": {
            "label": "₮ (Currency of Mongolia)"
          },
          "peso": {
            "label": "₱ (Peso, currency of the Philippines)"
          },
          "guarani": {
            "label": "₲ (Guaraní, currency of Paraguay)"
          },
          "hryvnia": {
            "label": "₴ (Hryvnia, currency of Ukraine)"
          },
          "tenge": {
            "label": "₸ (Tenge, currency of Kazakhstan)"
          },
          "lira": {
            "label": "₺ (Lira, currency of Turkey)"
          },
          "manat": {
            "label": "₼ (Manat, currency of Azerbaijan)"
          },
          "rubles": {
            "label": "₽ (Rubles, currency of Russia)"
          },
          "lari": {
            "label": "₾ (Lari, currency of Georgia)"
          },
          "bitcoin": {
            "label": "₿ (Bitcoin, crypto currency)"
          }
        },
        "val": "dollar"
      },
      "format__date_format": {
        "type": "select",
        "label": "Type",
        "show_if": "this.format__category=='date'",
        "required": true,
        "options": {
          "mm/dd/yyyy": {
            "label": "3/14/2012"
          },
          "D, M dd, Y": {
            "label": "Wednesday, March 14, 2012"
          },
          "yyyy-mm-dd": {
            "label": "2012-03-14"
          },
          "m.dd.yyyy": {
            "label": "3.14.2012"
          },
          "m.dd.yy": {
            "label": "3.14.12"
          },
          "dd.m.yyyy": {
            "label": "14.3.2012"
          },
          "dd.m.yy": {
            "label": "14.3.12"
          },
          "M dd, Y": {
            "label": "March 14, 2012"
          },
          "dd-mm-yyyy": {
            "label": "14-03-2012"
          },
          "mm-dd-yyyy": {
            "label": "03-14-2012"
          },
          "dd-mm-yy": {
            "label": "14-03-12"
          },
          "mm-dd-yy": {
            "label": "03-14-12"
          }
        },
        "val": "mm/dd/yyyy",
        "breakLine": true
      },
      "delete": {
        "type": "button",
        "label": "Delete",
        "function": "DELETE_ROW"
      }
    },
    "breakLine": true,
    "style": "margin-bottom: 20px"
  }
},
"/FlexmonsterInput.json/FlexmonsterInput.json": {
  "input": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "table_id": {
        "type": "select",
        "label": "Select Table",
        "bind": "TABLES",
        "empty": "",
        "required": true,
        "breakLine": true
      },
      "remove_input_table_after_processing": {
        "type": "hidden",
        "val": "false"
      },
      "is_word": {
        "type": "hidden",
        "val": "false"
      },
      "options.configure_manual": {
        "type": "checkbox",
        "label": "Configure manually",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
}
,
"/FindReplaceOptions.json/FindReplaceOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "incoming_value_to_replace.type": {
        "type": "select",
        "label": "Incoming Value",
        "options": {
          "user_specified_value": {
            "label": "Equals"
          },
          "begins_with": {
            "label": "Begins with"
          },
          "ends_with": {
            "label": "Ends with"
          },
          "empty": {
            "label": "Empty"
          },
          "regex": {
            "label": "Regular Expression"
          }
        },
        "val": "user_specified_value",
        "style": "min-width: 190px"
      },
      "incoming_value_to_replace.value": {
        "type": "text",
        "label": "Incoming Value To Replace",
        "required": true,
        "show_if": "incoming_value_to_replace.type=='user_specified_value' || incoming_value_to_replace.type=='begins_with' || incoming_value_to_replace.type=='ends_with'",
        "trim": "false",
        "val": "",
        "style": "min-width: 170px"
      },
      "incoming_value_to_replace.regex": {
        "type": "text",
        "label": "Regular Expression",
        "required": true,
        "show_if": "incoming_value_to_replace.type=='regex'",
        "val": "(.*),(.*),(.*)\\s(\\d{5})(-\\d{4})?",
        "style": "min-width: 200px"
      },
      "replace_table.table_id": {
        "type": "select",
        "label": "Replacement Table",
        "show_if": "incoming_value_to_replace.type=='replacement_table'",
        "bind": "TABLES",
        "required": true
      },
      "replace_table.find_column": {
        "type": "select",
        "label": "Select Find Column",
        "show_if": "incoming_value_to_replace.type=='replacement_table'",
        "table": "replace_table.table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "replace_table.replace_with_column": {
        "type": "select",
        "label": "Select Replace with Column",
        "show_if": "incoming_value_to_replace.type=='replacement_table'",
        "table": "replace_table.table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "incoming_value_to_replace.partial_match": {
        "type": "select",
        "label": "Partial Match",
        "show_if": "incoming_value_to_replace.type=='user_specified_value' || incoming_value_to_replace.type=='replacement_table'",
        "options": {
          "full_match": {
            "label": "Full match"
          },
          "full_and_partial_match": {
            "label": "Full and partial match"
          },
          "partial_match_only": {
            "label": "Partial match only"
          }
        },
        "val": "full_and_partial_match"
      },
      "replace_with.value_type": {
        "type": "select",
        "label": "Replace With",
        "show_if": "incoming_value_to_replace.type!='regex' && incoming_value_to_replace.type!='replacement_table'",
        "options": {
          "user_specified_value": {
            "label": "Custom Value"
          },
          "average": {
            "label": "Column Average"
          },
          "median": {
            "label": "Column Median"
          },
          "mode": {
            "label": "Column Mode"
          },
          "sum": {
            "label": "Column Sum"
          },
          "table": {
            "label": "Table Column"
          }
        },
        "val": "user_specified_value",
        "style": "min-width: 190px"
      },
      "replace_with.value": {
        "type": "text",
        "label": "Replace With Value",
        "show_if": "incoming_value_to_replace.type!='regex' && replace_with.value_type=='user_specified_value' && incoming_value_to_replace.type!='replacement_table'",
        "trim": "false",
        "val": ""
      },
      "replace_with.regex_value": {
        "type": "text",
        "label": "Replace With Value",
        "show_if": "incoming_value_to_replace.type=='regex' && incoming_value_to_replace.type!='replacement_table'",
        "val": "\\4: \\2, \\3"
      },
      "replace_with.table_id": {
        "type": "select",
        "label": "Select Table",
        "show_if": "incoming_value_to_replace.type!='regex' && replace_with.value_type=='table' && incoming_value_to_replace.type!='replacement_table'",
        "bind": "TABLES",
        "required": true
      },
      "replace_with.column": {
        "type": "select",
        "label": "Select Column",
        "show_if": "incoming_value_to_replace.type!='regex' && replace_with.value_type=='table' && incoming_value_to_replace.type!='replacement_table'",
        "table": "replace_with.table_id",
        "bind": "COLUMNS",
        "required": true,
        "breakLine": true
      },
      "replacement_table_notice": {
        "type": "text",
        "label": "",
        "show_if": "incoming_value_to_replace.type=='replacement_table'",
        "val": "Line-break will be ignored in replacement table",
        "disabled": true,
        "width": "100%"
      },
      "use_filter": {
        "type": "checkbox",
        "label": "Use Filter",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "filter_options_box": {
        "type": "fieldset",
        "label": "Filter Options",
        "show_if": "use_filter=='true'",
        "repeat": false,
        "fields": {
          "filter": {
            "type": "fieldset",
            "label": "Add Filter Conditions",
            "show_if": "use_filter=='true'",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if" :  "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if" :  "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table_id": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table_id",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group",
            "show_if": "apply_to_record=='false'",
            "repeat": false,
            "fields": {
              "apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "required": true,
                "width": "100%",
                "table": "table_id",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      },
      "use_replace_table_filter": {
        "type": "checkbox",
        "label": "Use Filter on \"Replace With\" Table",
        "show_if": "incoming_value_to_replace.type=='replacement_table' || (incoming_value_to_replace.type!='regex' && replace_with.value_type=='table')",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "replace_table_filter_option_box": {
        "type": "fieldset",
        "label": "\"Replace With\" Table Filter Options",
        "show_if": "use_replace_table_filter=='true' && (incoming_value_to_replace.type=='replacement_table' || (incoming_value_to_replace.type!='regex' && replace_with.value_type=='table'))",
        "repeat": false,
        "fields": {
          "replace_table_filter_option.filter": {
            "type": "fieldset",
            "label": "Add Filter Conditions on \"Replace With\" Table",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if" :  "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if" :  "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "replace_with.table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table_id": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table_id",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "replace_table_filter_option.apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record on \"Replace With\" Table",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "replace_table_filter_option_apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group on \"Replace With\" Table",
            "show_if": "replace_table_filter_option.apply_to_record=='false' && (incoming_value_to_replace.type!='replacement_table' && incoming_value_to_replace.type!='regex' && replace_with.value_type=='table')",
            "repeat": false,
            "fields": {
              "replace_table_filter_option.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "required": true,
                "width": "100%",
                "table": "replace_with.table_id",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          },
          "replacement_table_filter_option_apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group on \"Replace With\" Table",
            "show_if": "replace_table_filter_option.apply_to_record=='false' && incoming_value_to_replace.type=='replacement_table'",
            "repeat": false,
            "fields": {
              "replacement_table_filter_option.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "required": true,
                "width": "100%",
                "table": "replace_table.table_id",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      }
    }
  }
}
,
"/ImportFromDbOptions.json/ImportFromDbOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.from": {
        "type": "hidden",
        "val": "database"
      },
      "postgresql_db_credential_box": {
        "type": "fieldset",
        "label": "Database Connection Credentials",
        "repeat": false,
        "fields": {
          "options.dbms": {
            "type": "select",
            "label": "Select DBMS",
            "options": {
              "postgresql": {
                "label": "PostgreSQL"
              },
              "mysql": {
                "label": "MySQL"
              },
              "sql_server": {
                "label": "MS SQL Server"
              },
              "oracle": {
                "label": "Oracle"
              }
            },
            "val": "postgresql",
            "required": true,
            "breakLine": true
          },
          "options.host": {
            "type": "text",
            "label": "Host",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "options.user": {
            "type": "text",
            "label": "User",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "options.password": {
            "type": "password",
            "label": "Password",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "options.database": {
            "type": "text",
            "label": "Database",
            "required": true,
            "width": "100%",
            "breakLine": true
          }
        }
      },
      "options.schema_name_to_import": {
        "type": "text",
        "label": "Schema name that includes table to import",
        "show_if": "options.dbms=='postgresql' || options.dbms=='sql_server' || options.dbms=='oracle'",
        "required": true,
        "val": "public",
        "width": "100%",
        "breakLine": true
      },
      "options.table_name_to_import": {
        "type": "text",
        "label": "Table name to import",
        "required": true,
        "width": "100%",
        "breakLine": true
      }
    }
  }
}
,
"/WorldPopulationOptions.json/WorldPopulationOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.chart_type": {
        "type": "hidden",
        "val": "zoomable_sunburst"
      },
      "options.group_by": {
        "type": "select",
        "label": "Group By",
        "required": true,
        "options": {
          "Region": {
            "label": "Region"
          },
          "Income Group": {
            "label": "Income Group"
          }
        },
        "val": "Region"
      },
      "options.measure": {
        "type": "select",
        "label": "Measure",
        "required": true,
        "options": {
          "population_2020": {
            "label": "Population 2020"
          },
          "gdp_2020_in_usd": {
            "label": "GDP 2020 in USD"
          }
        },
        "val": "population_2020",
        "breakLine": true
      },
      "options.output_as_chart": {
        "type": "checkbox",
        "label": "Output a graph",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "options.graph_type": {
        "type": "select",
        "label": "Graph Type",
        "show_if": "options.output_as_chart=='true'",
        "required": true,
        "options": {
          "zoomable_sunburst": {
            "label": "Sunburst"
          },
          "tidy_tree": {
            "label": "Tree"
          },
          "treemap": {
            "label": "Treemap"
          }
        },
        "val": "zoomable_sunburst",
        "breakLine": true
      },
      "options.configure_input_table": {
        "type": "checkbox",
        "label": "Configure input table",
        "show_if": "options.output_as_chart=='true'",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      }
    }
  }
}
,
"/DCEmploymentWorldDataOptions.json/DCEmploymentWorldDataOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.group_by": {
        "type": "select",
        "label": "Group By",
        "required": true,
        "options": {
          "Region": {
            "label": "Region"
          },
          "Income Group": {
            "label": "Income Group"
          }
        },
        "val": "Region",
        "breakLine": true
      },
      "options.stat_var_name": {
        "type": "select",
        "label": "Statistics Data",
        "required": true,
        "options": {
          "UnemploymentRate_Person": {
            "label": "Unemployment Rate"
          },
          "Count_Person_InLaborForce": {
            "label": "In Labor Force Population"
          },
          "Count_Person_15To64Years_InLaborForce_AsFractionOf_Count_Person_15To64Years": {
            "label": "15 - 64 Years, in Labor Force Population Per Capita 15 To 64 Years"
          },
          "Count_Person_15To64Years_Female_InLaborForce_AsFractionOf_Count_Person_15To64Years_Female": {
            "label": "15 - 64 Years, in Labor Force, Female Population Per Capita 15 To 64 Years Female"
          },
          "Count_Person_15To64Years_Male_InLaborForce_AsFractionOf_Count_Person_15To64Years_Male": {
            "label": "15 - 64 Years, in Labor Force, Male Population Per Capita 15 To 64 Years Male"
          },
          "Count_Person_15OrMoreYears_InLaborForce_Female_AsFractionOf_Count_Person_InLaborForce": {
            "label": "15 Years or More, in Labor Force, Female Population Per Capita in Labor Force"
          }
        },
        "val": "UnemploymentRate_Person"
      },
      "options.per_capita": {
        "type": "checkbox",
        "label": "Per capita",
        "show_if": "false",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.all_countries": {
        "type": "checkbox",
        "label": "All countries",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.output_as_chart": {
        "type": "checkbox",
        "label": "Output a Graph",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "options.graph_type": {
        "type": "select",
        "label": "Graph Type",
        "show_if": "options.output_as_chart=='true'",
        "required": true,
        "options": {
          "zoomable_sunburst": {
            "label": "Sunburst"
          },
          "treemap": {
            "label": "Treemap"
          }
        },
        "val": "zoomable_sunburst",
        "breakLine": true
      }
    }
  }
}
,
"/RenameTableInput.json/RenameTableInput.json": {
  "rename_table": {
    "type": "text",
    "label": "Rename to",
    "minLength": 1,
    "val": "",
    "breakLine": true
  }
},
"/ExportToGDriveOptions.json/ExportToGDriveOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Select Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.to": {
        "type": "hidden",
        "val": "file"
      },
      "options.webservice": {
        "type": "hidden",
        "val": "google_drive"
      },
      "options.export_format": {
        "type": "select",
        "label": "Export Format",
        "options": {
          "csv_file": {
            "label": "Csv file(s)"
          },
          "word_by_word": {
            "label": "Word by Word"
          },
          "line_by_line": {
            "label": "Line by Line"
          }
        },
        "val": "csv_file",
        "required": true,
        "breakLine": true
      },
      "options.if_duplicated": {
        "type": "select",
        "label": "If existing",
        "show_if": "options.webservice=='github'",
        "val": "drop_if_exist",
        "options": {
          "drop_if_exist": {
            "label": "Create or Drop (if already existing)"
          },
          "error_if_exist": {
            "label": "Create New (throw error if existing)"
          },
          "error_if_not_exist": {
            "label": "Drop (throw error if not-existing)"
          },
          "append": {
            "label": "Append"
          }
        },
        "breakLine": true
      },
      "options.export_series": {
        "type": "checkbox",
        "label": "Export Series",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.file_name_column": {
        "type": "select",
        "label": "Select File Name Column",
        "show_if": "options.export_series=='true'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true,
        "breakLine": true
      },
      "options.set_file_path_column": {
        "type": "checkbox",
        "label": "Export to specified path",
        "show_if": "options.export_series=='true'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.file_path_column": {
        "type": "select",
        "label": "Select File Path Column",
        "show_if": "options.export_series=='true' && options.set_file_path_column=='true'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true,
        "breakLine": true
      }
    }
  },
  "export_link_token_frame": {
    "type": "fieldset",
    "label": "Export Link",
    "repeat": false,
    "fields": {
      "options.github_url": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test",
        "show_if": "options.webservice=='github'",
        "val": "",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.export_dir": {
        "type": "text",
        "label": "Enter dir e.g. /MyZippyDocFiles/SubDir/",
        "show_if": "options.webservice!='github'",
        "val": "/",
        "width": "100%",
        "breakLine": true
      },
      "options.github_token": {
        "type": "text",
        "label": "Specify the Github personal access token that has write permission:",
        "show_if": "options.webservice=='github'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.github_create_pr": {
        "type": "checkbox",
        "label": "Create pull request",
        "show_if": "options.webservice=='github'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.ms_one_drive_token": {
        "type": "text",
        "label": "Microsoft Graph API access token. You can get it here https://ms-oauth.herokuapp.com/",
        "show_if": "options.webservice=='ms_one_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.google_authorization_code": {
        "type": "text",
        "label": "Google OAuth Authorization Code with scope https://www.googleapis.com/auth/drive. You can get it here https://developers.google.com/oauthplayground/",
        "show_if": "options.webservice=='google_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox_authorization_code": {
        "type": "text",
        "label": "Dropbox Authorization Code. You can get it here https://www.dropbox.com/oauth2/authorize?client_id=9i7woztjp94jrkw&response_type=code",
        "show_if": "options.webservice=='dropbox'",
        "required": true,
        "width": "100%",
        "breakLine": true
      }
    }
  }
},
"/FindGroupOptions.json/FindGroupOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Find Group Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "group_column": {
        "type": "select",
        "label": "Select Group Column",
        "required": true,
        "table": "table_id",
        "bind": "COLUMNS",
        "multiple": false
      },
      "item_column": {
        "type": "select",
        "label": "Select Item Column",
        "required": true,
        "table": "table_id",
        "bind": "COLUMNS",
        "multiple": false,
        "breakLine": true
      },
      "min_group_count": {
        "type": "number",
        "label": "Min Group Count",
        "required": true,
        "val": 3
      },
      "min_group_size": {
        "type": "number",
        "label": "Min Group Size",
        "required": true,
        "val": 1,
        "breakLine": true
      },
      "ordered": {
        "type": "select",
        "label": "Ordered / Unordered",
        "required": true,
        "options": {
          "ordered": {
            "label": "Ordered"
          },
          "unordered": {
            "label": "Unordered"
          }
        },
        "val": "unordered"
      },
      "item_order": {
        "type": "select",
        "label": "Order",
        "required": true,
        "options": {
          "no": {
            "label": "-"
          },
          "ascending": {
            "label": "Ascending"
          },
          "descending": {
            "label": "Descending"
          }
        },
        "val": "no",
        "breakLine": true,
        "show_if": "ordered == 'unordered'"
      },
      "output_type": {
        "type": "select",
        "label": "Output Type",
        "required": true,
        "options": {
          "item_group_list": {
            "label": "List of found groups"
          },
          "item_group_column": {
            "label": "Allocate found groups"
          }
        },
        "val": "item_group_list",
        "breakLine": true
      }
    }
  }
}
,
"/D3BarChartOptions.json/D3BarChartOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.chart_type": {
        "type": "hidden",
        "val": "bar_chart"
      },
      "options.configure_manual": {
        "type": "hidden",
        "val": "true"
      },
      "options.x_axis_col": {
        "type": "select",
        "label": "X-axis column",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "options.value_col": {
        "type": "select",
        "label": "Value column",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      }
    }
  }
}
,
"/PlanningOutputSettingTickbox.json/PlanningOutputSettingTickbox.json": {
  "output.output_and_setting": {
    "type": "checkbox",
    "label": "Output and Settings",
    "show_if": "options.output_type=='table_output' || (options.output_type=='pdf_planning_package' && options.where_to_create=='only_export_to_cloud')",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  }
}
,
"/ExportOptions_backup.json/ExportOptions_backup.json": {
  "options": {
    "type": "fieldset",
    "label": "Select Options",
    "repeat": false,
    "fields": {
      "options.to": {
        "type": "select",
        "label": "Type",
        "options": {
          "database": {
            "label": "Export to database"
          },
          "file": {
            "label": "Export to file"
          },
          "mytask": {
            "label": "Export MyTask"
          }
        },
        "val": "database",
        "required": true
      },
      "options.export_series": {
        "type": "checkbox",
        "label": "Export Series",
        "show_if": "options.to=='file'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.file_name_column": {
        "type": "select",
        "label": "Select File Name Column",
        "show_if": "options.to=='file' && options.export_series=='true'",
        "table": "input_table",
        "bind": "COLUMNS",
        "required": true,
        "breakLine": true
      },
      "postgresql_db_credential_box": {
        "type": "fieldset",
        "label": "Database Connection Credentials",
        "show_if": "options.to=='database'",
        "repeat": false,
        "fields": {
          "options.dbms": {
            "type": "select",
            "label": "Select DBMS",
            "options": {
              "postgresql": {
                "label": "PostgreSQL"
              },
              "mysql": {
                "label": "MySQL"
              },
              "sql_server": {
                "label": "MS SQL Server"
              },
              "oracle": {
                "label": "Oracle"
              }
            },
            "val": "postgresql",
            "required": true,
            "breakLine": true
          },
          "options.postgresql_credential.user": {
            "type": "text",
            "label": "User",
            "show_if": "options.dbms=='postgresql'",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "options.postgresql_credential.password": {
            "type": "text",
            "label": "Password",
            "show_if": "options.dbms=='postgresql'",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "options.postgresql_credential.host": {
            "type": "text",
            "label": "Host",
            "show_if": "options.dbms=='postgresql'",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "options.postgresql_credential.database": {
            "type": "text",
            "label": "Database",
            "show_if": "options.dbms=='postgresql'",
            "required": true,
            "width": "100%",
            "breakLine": true
          }
        }
      },
      "options.schema_name_to_export": {
        "type": "text",
        "label": "Schema name to export into",
        "show_if": "options.to=='database' && options.dbms=='postgresql'",
        "required": true,
        "val": "public",
        "width": "100%",
        "breakLine": true
      },
      "options.webservice": {
        "type": "select",
        "label": "Select Webservice",
        "show_if": "options.to=='file' || options.to=='mytask'",
        "options": {
          "github": {
            "label": "Github"
          }
        },
        "val": "github",
        "required": true
      },
      "options.export_format": {
        "type": "select",
        "label": "Export Format",
        "show_if": "options.to=='file'",
        "options": {
          "csv_file": {
            "label": "Csv file(s)"
          },
          "word_by_word": {
            "label": "Word by Word"
          },
          "line_by_line": {
            "label": "Line by Line"
          }
        },
        "val": "csv_file",
        "required": true,
        "breakLine": true
      },
      "options.github_token": {
        "type": "text",
        "label": "Specify the github personal access token that has write permission:",
        "show_if": "options.to=='file' || options.to=='mytask'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.github_url": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test",
        "show_if": "options.to=='file' || options.to=='mytask'",
        "val": "https://github.com/zippydoc/public-tables",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.if_duplicated": {
        "type": "select",
        "label": "If duplicated",
        "val": "drop_if_exist",
        "options": {
          "drop_if_exist": {
            "label": "Create or Drop (if already existing)"
          },
          "error_if_exist": {
            "label": "Create New (throw error if existing)"
          },
          "error_if_not_exist": {
            "label": "Drop (throw error if not-existing)"
          },
          "append": {
            "label": "Append"
          }
        }
      },
      "options.export_task_name": {
        "type": "text",
        "label": "Input Task Name",
        "show_if": "options.to=='mytask'",
        "required": true,
        "val": "Flow6_Task1_AddColumns",
        "width": "100%",
        "breakLine": true
      }
    }
  }
},
"/AutofillInput.json/AutofillInput.json": {
  "input": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "tables": {
        "type": "fieldset",
        "label": "Select Lookup Table(s)",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "repeat": true,
        "fields": {
          "table_id": {
            "type": "select",
            "label": "Lookup Table",
            "bind": "TABLES",
            "required": true
          },
          "lookup_header_column": {
            "type": "select",
            "label": "Header Column",
            "table": "this.table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "lookup_value_column": {
            "type": "select",
            "label": "Value Column",
            "table": "this.table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "lookup_mapping_column": {
            "type": "select",
            "label": "Mapping Column",
            "table": "this.table_id",
            "bind": "COLUMNS"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.treatment": {
        "type": "select",
        "label": "Treatment of multiple occurances",
        "required": true,
        "options": {
          "sum": {
            "label": "Sum"
          },
          "min": {
            "label": "Min"
          },
          "max": {
            "label": "Max"
          },
          "shortest": {
            "label": "Shortest"
          },
          "longest": {
            "label": "Longest"
          },
          "first": {
            "label": "First"
          },
          "last": {
            "label": "Last"
          },
          "concatenate": {
            "label": "Concatenate"
          }
        },
        "val": "sum",
        "style": "min-width: 200px"
      },
      "options.treatment_delimiter": {
        "type": "text",
        "label": "Delimiter",
        "show_if": "options.treatment=='concatenate'",
        "required": true,
        "minLength": 1,
        "maxLength": 255,
        "val": ";",
        "breakLine": true
      }
    }
  }
}
,
"/DCEmploymentOptions.json/DCEmploymentOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.all_countries": {
        "type": "hidden",
        "val": "false"
      },
      "options.stat_vars": {
        "type": "fieldset",
        "label": "Statistics data category(s)",
        "repeat": true,
        "fields": {
          "stat_var_name": {
            "type": "select",
            "label": "Employment Data",
            "required": true,
            "options": {
              "UnemploymentRate_Person": {
                "label": "Unemployment Rate"
              },
              "Count_Person_InLaborForce": {
                "label": "In Labor Force Population"
              },
              "Count_Person_15To64Years_InLaborForce_AsFractionOf_Count_Person_15To64Years": {
                "label": "15 - 64 Years, in Labor Force Population Per Capita 15 To 64 Years"
              },
              "Count_Person_15To64Years_Female_InLaborForce_AsFractionOf_Count_Person_15To64Years_Female": {
                "label": "15 - 64 Years, in Labor Force, Female Population Per Capita 15 To 64 Years Female"
              },
              "Count_Person_15To64Years_Male_InLaborForce_AsFractionOf_Count_Person_15To64Years_Male": {
                "label": "15 - 64 Years, in Labor Force, Male Population Per Capita 15 To 64 Years Male"
              },
              "Count_Person_15OrMoreYears_InLaborForce_Female_AsFractionOf_Count_Person_InLaborForce": {
                "label": "15 Years or More, in Labor Force, Female Population Per Capita in Labor Force"
              }
            }
          },
          "per_capita": {
            "type": "checkbox",
            "label": "Per capita",
            "show_if": "false",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.output_as_chart": {
        "type": "checkbox",
        "label": "Output a Graph",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
}
,
"/UnionOptions.json/UnionOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.union_type": {
        "type": "select",
        "label": "Select Union Type",
        "val": "auto_config_by_name",
        "options": {
          "auto_config_by_name": {
            "label": "Auto Config By Name"
          },
          "auto_config_by_position": {
            "label": "Auto Config By Position"
          }
        }
      },
      "options.field_output_type": {
        "type": "select",
        "label": "Column Output Type",
        "show_if": "options.union_type=='auto_config_by_name' || options.union_type=='auto_config_by_position'",
        "val": "output_all_fields",
        "options": {
          "output_all_fields": {
            "label": "Output All Columns"
          },
          "output_common_fields": {
            "label": "Output Common Columns"
          }
        },
        "breakLine": true
      },
      "options.add_table_name_column": {
        "type": "checkbox",
        "label": "Add Table name column",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
}
,
"/PeriodicyByMenuOptions.json/PeriodicyByMenuOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Select Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.task_symbol": {
        "type": "hidden",
        "val": "periodicy_by_menu"
      },
      "options.custom.table": {
        "type": "fieldset",
        "label": "Planning Position",
        "repeat": true,
        "fields": {
          "item": {
            "type": "text",
            "label": "Item",
            "val": "",
            "required": true
          },
          "position": {
            "type": "text",
            "label": "Position",
            "val": "",
            "required": true,
            "breakLine": true
          },
          "amount": {
            "type": "number",
            "label": "Amount",
            "val": 0,
            "required": true
          },
          "initial_date": {
            "type": "date",
            "label": "Initial Date",
            "val": "",
            "required": true
          },
          "periodicy": {
            "type": "select",
            "label": "Periodicy",
            "required": true,
            "options": {
              "One-Off": {
                "label": "One-Off"
              },
              "Daily": {
                "label": "Daily"
              },
              "Weekly": {
                "label": "Weekly"
              },
              "Monthly": {
                "label": "Monthly"
              },
              "Quarterly": {
                "label": "Quarterly"
              },
              "Yearly": {
                "label": "Yearly"
              }
            },
            "val": "One-Off"
          },
          "growth": {
            "type": "number",
            "label": "Growth in %",
            "show_if": "this.periodicy!='One-Off'",
            "val": 0,
            "required": true
          },
          "growth_period": {
            "type": "select",
            "label": "Growth Period",
            "show_if": "this.periodicy!='One-Off'",
            "options": {
              "Weekly": {
                "label": "Weekly"
              },
              "Monthly": {
                "label": "Month on Month"
              },
              "Quarterly": {
                "label": "Quarter on Quarter"
              },
              "Yearly": {
                "label": "Year on Year"
              }
            },
            "val": "Weekly"
          },
          "growth_pattern": {
            "type": "select",
            "label": "Growth Pattern",
            "show_if": "this.periodicy!='One-Off'",
            "options": {
              "Linear": {
                "label": "Linear"
              },
              "Compounding": {
                "label": "Compounding"
              },
              "Jump-Fix": {
                "label": "Jump-Fix"
              }
            },
            "val": "Compounding"
          },
          "final_date": {
            "type": "date",
            "label": "Final Date",
            "show_if": "this.periodicy!='One-Off'",
            "val": ""
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.end_date": {
        "type": "date",
        "label": "End Date of Table",
        "val": "",
        "required": true,
        "style": "width: 300px"
      }
    }
  }
},
"/DCClimateOptions.json/DCClimateOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.all_countries": {
        "type": "hidden",
        "val": "false"
      },
      "options.stat_vars": {
        "type": "fieldset",
        "label": "Statistics data category(s)",
        "repeat": true,
        "fields": {
          "stat_var_name": {
            "type": "select",
            "label": "Climate Data",
            "required": true,
            "options": {
              "Amount_Emissions_CarbonDioxide_PerCapita": {
                "label": "CO2 Emissions Per Capita"
              },
              "Count_EarthquakeEvent": {
                "label": "Count of Earthquake Event"
              },
              "Count_EarthquakeEvent_M3To4": {
                "label": "Count of Earthquake Event of 3 - 4 Magnitude"
              },
              "Count_EarthquakeEvent_M3Onwards": {
                "label": "Count of Earthquake Event of 3 Magnitude or More"
              },
              "Count_EarthquakeEvent_M4To5": {
                "label": "Count of Earthquake Event of 4 - 5 Magnitude"
              },
              "Count_EarthquakeEvent_M4Onwards": {
                "label": "Count of Earthquake Event of 4 Magnitude or More"
              },
              "Count_EarthquakeEvent_M5To6": {
                "label": "Count of Earthquake Event of 5 - 6 Magnitude"
              },
              "Count_EarthquakeEvent_M5Onwards": {
                "label": "Count of Earthquake Event of 5 Magnitude or More"
              },
              "Max_Temperature": {
                "label": "Max Temperature"
              },
              "DifferenceAcrossModels_Max_Temperature": {
                "label": "Max Temperature (Difference Across Models)"
              },
              "Min_Temperature": {
                "label": "Min Temperature"
              },
              "DifferenceAcrossModels_Min_Temperature": {
                "label": "Min Temperature (Difference Across Models)"
              },
              "PrecipitationRate": {
                "label": "Precipitation Rate"
              },
              "DifferenceAcrossModels_PrecipitationRate": {
                "label": "Precipitation Rate (Difference Across Models)"
              },
              "Max_Temperature_RCP45": {
                "label": "Max Temperature Based on RCP 4.5"
              },
              "DifferenceAcrossModels_Max_Temperature_RCP45": {
                "label": "Max Temperature Based on RCP 4.5 (Difference Across Models)"
              },
              "Min_Temperature_RCP45": {
                "label": "Min Temperature Based on RCP 4.5"
              },
              "DifferenceAcrossModels_Min_Temperature_RCP45": {
                "label": "Min Temperature Based on RCP 4.5 (Difference Across Models)"
              },
              "PrecipitationRate_RCP45": {
                "label": "Precipitation Rate Based on RCP 4.5"
              },
              "DifferenceAcrossModels_PrecipitationRate_RCP45": {
                "label": "Precipitation Rate Based on RCP 4.5 (Difference Across Models)"
              },
              "DifferenceRelativeToBaseDate2006_Max_Temperature_RCP45": {
                "label": "Max Temperature Relative To 2006, RCP 4.5 (Difference Relative To Base Date)"
              },
              "DifferenceRelativeToBaseDate2006_Min_Temperature_RCP45": {
                "label": "Min Temperature Relative To 2006, RCP 4.5 (Difference Relative To Base Date)"
              },
              "DifferenceRelativeToBaseDate2006_PrecipitationRate_RCP45": {
                "label": "Precipitation Rate Relative To 2006, RCP 4.5 (Difference Relative To Base Date)"
              },
              "Max_Temperature_RCP85": {
                "label": "Max Temperature Based on RCP 8.5"
              },
              "DifferenceAcrossModels_Max_Temperature_RCP85": {
                "label": "Max Temperature Based on RCP 8.5 (Difference Across Models)"
              },
              "Min_Temperature_RCP85": {
                "label": "Min Temperature Based on RCP 8.5"
              },
              "DifferenceAcrossModels_Min_Temperature_RCP85": {
                "label": "Min Temperature Based on RCP 8.5 (Difference Across Models)"
              },
              "PrecipitationRate_RCP85": {
                "label": "Precipitation Rate Based on RCP 8.5"
              },
              "DifferenceAcrossModels_PrecipitationRate_RCP85": {
                "label": "Precipitation Rate Based on RCP 8.5 (Difference Across Models)"
              },
              "DifferenceRelativeToBaseDate2006_Max_Temperature_RCP85": {
                "label": "Max Temperature Relative To 2006, RCP 8.5 (Difference Relative To Base Date)"
              },
              "DifferenceRelativeToBaseDate2006_Min_Temperature_RCP85": {
                "label": "Min Temperature Relative To 2006, RCP 8.5 (Difference Relative To Base Date)"
              },
              "DifferenceRelativeToBaseDate2006_PrecipitationRate_RCP85": {
                "label": "Precipitation Rate Relative To 2006, RCP 8.5 (Difference Relative To Base Date)"
              },
              "DifferenceRelativeToBaseDate1990_Max_Temperature": {
                "label": "Max Temperature Relative To 1990 (Difference Relative To Base Date)"
              },
              "DifferenceRelativeToBaseDate1990_Min_Temperature": {
                "label": "Min Temperature Relative To 1990 (Difference Relative To Base Date)"
              },
              "DifferenceRelativeToBaseDate1990_PrecipitationRate": {
                "label": "Precipitation Rate Relative To 1990 (Difference Relative To Base Date)"
              }
            }
          },
          "per_capita": {
            "type": "checkbox",
            "label": "Per capita",
            "show_if": "false",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "help_1": {
            "type": "textarea",
            "label": "",
            "show_if": "this.stat_var_name=='Count_Person_ResidingLessThan5MetersAboveSeaLevel_AsFractionOf_Count_Person'",
            "val": "Percentage of the total population living in areas where the elevation is 5 meters or less. Center for International Earth Science Information Network (CIESIN)/Columbia University. 2013. Urban-Rural Population and Land Area Estimates Version 2. Palisades, NY: NASA Socioeconomic Data and Applications Center (SEDAC). http://sedac.ciesin.columbia.edu/data/set/lecz-urban-rural-population-land-area-estimates-v2.",
            "md_no_resize": false,
            "rows": 6,
            "disabled": true,
            "width": "100%"
          },
          "help_2": {
            "type": "text",
            "label": "",
            "show_if": "this.stat_var_name=='Max_Temperature_RCP45' || this.stat_var_name=='DifferenceAcrossModels_Max_Temperature_RCP45' || this.stat_var_name=='DifferenceRelativeToBaseDate2006_Max_Temperature_RCP45'",
            "val": "Maximum near-surface air temperature under RCP4.5 emissions scenario",
            "disabled": true,
            "width": "100%"
          },
          "help_3": {
            "type": "text",
            "label": "",
            "show_if": "this.stat_var_name=='Min_Temperature_RCP45' || this.stat_var_name=='DifferenceAcrossModels_Min_Temperature_RCP45' || this.stat_var_name=='DifferenceRelativeToBaseDate2006_Min_Temperature_RCP45'",
            "val": "Minimum near-surface air temperature under RCP4.5 emissions scenario",
            "disabled": true,
            "width": "100%"
          },
          "help_4": {
            "type": "text",
            "label": "",
            "show_if": "this.stat_var_name=='PrecipitationRate_RCP45' || this.stat_var_name=='DifferenceAcrossModels_PrecipitationRate_RCP45' || this.stat_var_name=='DifferenceRelativeToBaseDate2006_PrecipitationRate_RCP45'",
            "val": "Precipitation rate at surface projected under RCP4.5 emissions scenario",
            "disabled": true,
            "width": "100%"
          },
          "help_5": {
            "type": "text",
            "label": "",
            "show_if": "this.stat_var_name=='Max_Temperature_RCP85' || this.stat_var_name=='DifferenceAcrossModels_Max_Temperature_RCP85' || this.stat_var_name=='DifferenceRelativeToBaseDate2006_Max_Temperature_RCP85'",
            "val": "Maximum near-surface air temperature under RCP8.5 emissions scenario",
            "disabled": true,
            "width": "100%"
          },
          "help_6": {
            "type": "text",
            "label": "",
            "show_if": "this.stat_var_name=='Min_Temperature_RCP85' || this.stat_var_name=='DifferenceAcrossModels_Min_Temperature_RCP85' || this.stat_var_name=='DifferenceRelativeToBaseDate2006_Min_Temperature_RCP85'",
            "val": "Minimum near-surface air temperature under RCP8.5 emissions scenario",
            "disabled": true,
            "width": "100%"
          },
          "help_7": {
            "type": "text",
            "label": "",
            "show_if": "this.stat_var_name=='PrecipitationRate_RCP85' || this.stat_var_name=='DifferenceAcrossModels_PrecipitationRate_RCP85' || this.stat_var_name=='DifferenceRelativeToBaseDate2006_PrecipitationRate_RCP85'",
            "val": "Precipitation rate at surface projected under RCP8.5 emissions scenario",
            "disabled": true,
            "width": "100%"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.output_as_chart": {
        "type": "checkbox",
        "label": "Output a Graph",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
}
,
"/GetFormatOptions.json/GetFormatOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "for_multispan": {
        "type": "checkbox",
        "label": "All details for multispan headers/labels",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "output_type": {
        "type": "select",
        "label": "Output Type",
        "required": true,
        "options": {
          "format_information": {
            "label": "Format Information"
          },
          "apply_to_table": {
            "label": "Apply to Table"
          }
        },
        "val": "format_information"
      }
    }
  }
}
,
"/MultiColumnOptions.json/MultiColumnOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.task": {
        "type": "hidden",
        "val": "multi_column"
      },
      "options.add_columns": {
        "type": "fieldset",
        "label": "Add New Columns",
        "repeat": true,
        "fields": {
          "new_column_name": {
            "type": "text",
            "label": "New Column Name",
            "val": "",
            "breakLine": true
          },
          "multi_column_functions__function": {
            "type": "select",
            "label": "Function",
            "required": true,
            "options": {
              "sum": {
                "label": "Sum"
              },
              "average": {
                "label": "Average"
              },
              "median": {
                "label": "Median"
              },
              "max": {
                "label": "Max"
              },
              "min": {
                "label": "Min"
              },
              "standard_deviation": {
                "label": "Standard Deviation"
              },
              "product": {
                "label": "Product"
              },
              "quota": {
                "label": "Quota"
              },
              "absolute_growth": {
                "label": "Absolute Growth"
              },
              "relative_growth": {
                "label": "Relative Growth"
              },
              "compound_growth": {
                "label": "Compound Growth"
              },
              "static_value": {
                "label": "Static Value"
              },
              "numeric_formula": {
                "label": "Numeric Formula"
              },
              "text_formula": {
                "label": "Text Formula"
              }
            },
            "val": "sum"
          },
          "multi_column_functions__sel_columns": {
            "type": "select",
            "label": "Select Column(s)",
            "show_if": "this.multi_column_functions__function=='sum' || this.multi_column_functions__function=='average' || this.multi_column_functions__function=='median' || this.multi_column_functions__function=='max' || this.multi_column_functions__function=='min' || this.multi_column_functions__function=='standard_deviation' || this.multi_column_functions__function=='product'",
            "table": "table_id",
            "bind": "COLUMNS",
            "multiple": true,
            "breakLine": true
          },
          "multi_column_functions__column_a": {
            "type": "select",
            "label": "Select Column A",
            "show_if": "this.multi_column_functions__function=='quota' || this.multi_column_functions__function=='absolute_growth' || this.multi_column_functions__function=='relative_growth' || this.multi_column_functions__function=='compound_growth'",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "multi_column_functions__column_b": {
            "type": "select",
            "label": "Select Column B",
            "show_if": "this.multi_column_functions__function=='quota' || this.multi_column_functions__function=='absolute_growth' || this.multi_column_functions__function=='relative_growth' || this.multi_column_functions__function=='compound_growth'",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "multi_column_functions__n_value": {
            "type": "text",
            "label": "N (positive integer)",
            "show_if": "this.multi_column_functions__function=='compound_growth'",
            "val": "1",
            "required": true
          },
          "multi_column_functions__static_value__type": {
            "type": "select",
            "label": "Static Value Type",
            "show_if": "this.multi_column_functions__function=='static_value'",
            "required": true,
            "options": {
              "custom": {
                "label": "Custom"
              },
              "input_table_name": {
                "label": "Input Table Name"
              },
              "output_table_name": {
                "label": "Output Table Name"
              }
            },
            "val": "custom"
          },
          "static_value": {
            "type": "text",
            "label": "Input Value",
            "show_if": "this.multi_column_functions__function=='static_value' && this.multi_column_functions__static_value__type=='custom'",
            "val": "",
            "width": "100%"
          },
          "numeric_formula": {
            "type": "text",
            "label": "Input Formula, e.g. [Column1] + 2 * ([Row-1:Column3] - [Column1])",
            "show_if": "this.multi_column_functions__function=='numeric_formula'",
            "val": "",
            "width": "100%"
          },
          "text_formula": {
            "type": "text",
            "label": "Input Formula, e.g. [firstName] + ' ' + [lastName] + ' ' + [Row-1:Column3]",
            "show_if": "this.multi_column_functions__function=='text_formula'",
            "val": "",
            "width": "100%"
          },
          "use_multi_row": {
            "type": "checkbox",
            "label": "Multi-Row Options",
            "show_if": "this.multi_column_functions__function=='numeric_formula' || this.multi_column_functions__function=='text_formula'",
            "val": "false",
            "isOn": "true",
            "isOff": "false"
          },
          "if_row_not_exist": {
            "type": "select",
            "label": "If referred row not exist",
            "show_if": "this.use_multi_row=='true' && (this.multi_column_functions__function=='numeric_formula' || this.multi_column_functions__function=='text_formula')",
            "required": true,
            "options": {
              "empty": {
                "label": "Empty or 0"
              },
              "closest": {
                "label": "Closest Row Value"
              }
            },
            "val": "empty"
          },
          "refer_row_type": {
            "type": "select",
            "label": "Refer row type",
            "show_if": "this.multi_column_functions__function=='numeric_formula' && this.use_multi_row=='true'",
            "required": true,
            "options": {
              "non_cumulative": {
                "label": "non cumulative"
              },
              "cumulative": {
                "label": "cumulative"
              }
            },
            "val": "cumulative",
            "breakLine": true
          },
          "format__category": {
            "type": "select",
            "label": "Display Format",
            "required": true,
            "options": {
              "standard": {
                "label": "Standard"
              },
              "number": {
                "label": "Number"
              },
              "percentage": {
                "label": "Percentage"
              },
              "text": {
                "label": "Text"
              },
              "date": {
                "label": "Date"
              },
              "currency": {
                "label": "Currency"
              }
            },
            "val": "standard"
          },
          "format__rounding": {
            "type": "select",
            "label": "Decimal Places for display",
            "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
            "required": true,
            "options": {
              "no_rounding": {
                "label": "No rounding"
              },
              "0": {
                "label": "0 digits"
              },
              "1": {
                "label": "1 digits"
              },
              "2": {
                "label": "2 digits"
              },
              "3": {
                "label": "3 digits"
              },
              "4": {
                "label": "4 digits"
              },
              "5": {
                "label": "5 digits"
              },
              "6": {
                "label": "6 digits"
              },
              "7": {
                "label": "7 digits"
              },
              "8": {
                "label": "8 digits"
              },
              "9": {
                "label": "9 digits"
              }
            },
            "val": "2"
          },
          "format__use_1000_separator": {
            "type": "checkbox",
            "label": "Use 1000 Separator(.)",
            "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
            "val": "true",
            "isOn": "true",
            "isOff": "false"
          },
          "format__currency_symbol": {
            "type": "select",
            "label": "Symbol",
            "show_if": "this.format__category=='currency'",
            "required": true,
            "options": {
              "dollar": {
                "label": "$"
              },
              "euro": {
                "label": "€"
              },
              "pound": {
                "label": "£"
              },
              "yen": {
                "label": "¥ (Yen, currency of Japan)"
              },
              "colon": {
                "label": "₡ (Colón, currency of Costa Rica)"
              },
              "naira": {
                "label": "₦ (Naira, currency of Nigeria)"
              },
              "rupee": {
                "label": "₨ (Rupee, currency of India)"
              },
              "rupie": {
                "label": "₹ (Rupee, currency of India)"
              },
              "won": {
                "label": "₩ (Won, currency in South Korea and North Korea)"
              },
              "hebrew": {
                "label": "₪ (Currency of Israel)"
              },
              "dong": {
                "label": "₫ (Currency of Vietnam)"
              },
              "kip": {
                "label": "₭ (Kip, currency of Laos)"
              },
              "mongolia": {
                "label": "₮ (Currency of Mongolia)"
              },
              "peso": {
                "label": "₱ (Peso, currency of the Philippines)"
              },
              "guarani": {
                "label": "₲ (Guaraní, currency of Paraguay)"
              },
              "hryvnia": {
                "label": "₴ (Hryvnia, currency of Ukraine)"
              },
              "tenge": {
                "label": "₸ (Tenge, currency of Kazakhstan)"
              },
              "lira": {
                "label": "₺ (Lira, currency of Turkey)"
              },
              "manat": {
                "label": "₼ (Manat, currency of Azerbaijan)"
              },
              "rubles": {
                "label": "₽ (Rubles, currency of Russia)"
              },
              "lari": {
                "label": "₾ (Lari, currency of Georgia)"
              },
              "bitcoin": {
                "label": "₿ (Bitcoin, crypto currency)"
              }
            },
            "val": "dollar"
          },
          "format__date_format": {
            "type": "select",
            "label": "Type",
            "show_if": "this.format__category=='date'",
            "required": true,
            "options": {
              "mm/dd/yyyy": {
                "label": "3/14/2012"
              },
              "D, M dd, Y": {
                "label": "Wednesday, March 14, 2012"
              },
              "yyyy-mm-dd": {
                "label": "2012-03-14"
              },
              "m.dd.yyyy": {
                "label": "3.14.2012"
              },
              "m.dd.yy": {
                "label": "3.14.12"
              },
              "dd.m.yyyy": {
                "label": "14.3.2012"
              },
              "dd.m.yy": {
                "label": "14.3.12"
              },
              "M dd, Y": {
                "label": "March 14, 2012"
              },
              "dd-mm-yyyy": {
                "label": "14-03-2012"
              },
              "mm-dd-yyyy": {
                "label": "03-14-2012"
              },
              "dd-mm-yy": {
                "label": "14-03-12"
              },
              "mm-dd-yy": {
                "label": "03-14-12"
              }
            },
            "val": "mm/dd/yyyy",
            "breakLine": true
          },
          "group_counter__inc_dec_curly_bracket": {
            "type": "checkbox",
            "label": "Increase/Decrease with {}",
            "show_if": "this.task_type=='group_counter'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "group_counter__inc_dec_square_bracket": {
            "type": "checkbox",
            "label": "Increase/Decrease with []",
            "show_if": "this.task_type=='group_counter'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "group_counter__inc_dec_parenthesis": {
            "type": "checkbox",
            "label": "Increase/Decrease with ()",
            "show_if": "this.task_type=='group_counter'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "group_counter__custom": {
            "type": "checkbox",
            "label": "Customized Group Counter",
            "show_if": "this.task_type=='group_counter'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "group_counter__column": {
            "type": "select",
            "label": "Column",
            "show_if": "this.task_type=='group_counter' && this.group_counter__custom=='true'",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "group_counter__type": {
            "type": "select",
            "label": "When",
            "show_if": "this.task_type=='group_counter' && this.group_counter__custom=='true'",
            "required": true,
            "options": {
              "starts_with": {
                "label": "STARTS WITH"
              },
              "ends_with": {
                "label": "ENDS WITH"
              },
              "starts_with_regex": {
                "label": "STARTS WITH REGEX"
              },
              "ends_with_regex": {
                "label": "ENDS WITH REGEX"
              }
            },
            "val": "starts_with"
          },
          "group_counter__value": {
            "type": "text",
            "label": "Input Value",
            "show_if": "this.task_type=='group_counter' && this.group_counter__custom=='true'",
            "val": ".",
            "breakLine": true
          },
          "group_counter__label": {
            "type": "text",
            "label": "Input Label",
            "show_if": "this.task_type=='group_counter' && this.group_counter__custom=='true'",
            "val": "sentence",
            "breakLine": true
          },
          "group_counter__if_end_of_string_start_labeling_with_next_record": {
            "type": "checkbox",
            "label": "If End-Of-String start labeling with next record",
            "show_if": "this.task_type=='group_counter' && this.group_counter__custom=='true' && (this.group_counter__type=='starts_with' || this.group_counter__type=='starts_with_regex')",
            "val": "true",
            "isOn": "true",
            "isOff": "false"
          },
          "group_counter__if_begin_of_string_start_labeling_with_previous_record": {
            "type": "checkbox",
            "label": "If Begin-Of-String start labeling with previous record",
            "show_if": "this.task_type=='group_counter' && this.group_counter__custom=='true' && (this.group_counter__type=='ends_with' || this.group_counter__type=='ends_with_regex')",
            "val": "true",
            "isOn": "true",
            "isOff": "false"
          },
          "group_counter__always_include": {
            "type": "checkbox",
            "label": "Always include",
            "show_if": "this.task_type=='group_counter' && this.group_counter__custom=='true'",
            "val": "true",
            "isOn": "true",
            "isOff": "false"
          },
          "apply_to_group__enabled": {
            "type": "checkbox",
            "label": "Apply to Group",
            "show_if": "this.multi_column_functions__function!='static_value'",
            "val": "false",
            "isOn": "true",
            "isOff": "false"
          },
          "apply_to_group__group_columns": {
            "type": "select",
            "label": "Group Column(s)",
            "show_if": "this.apply_to_group__enabled == 'true' && this.multi_column_functions__function!='static_value'",
            "table": "table_id",
            "bind": "COLUMNS",
            "multiple": true,
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.use_filter": {
        "type": "checkbox",
        "label": "Use Filter",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "filter_box": {
        "type": "fieldset",
        "label": "Filter Options",
        "show_if": "options.use_filter=='true'",
        "repeat": false,
        "fields": {
          "options.filter": {
            "type": "fieldset",
            "label": "Add Filter Conditions",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if" :  "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if" :  "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group",
            "show_if": "options.apply_to_record=='false'",
            "repeat": false,
            "fields": {
              "options.apply_to_group_columns__all_but_selected": {
                "type": "checkbox",
                "label": "All but selected",
                "val": "false",
                "isOn": "true",
                "isOff": "false",
                "breakLine": true
              },
              "options.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "width": "100%",
                "table": "table_id",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      }
    }
  }
}
,
"/TestFrameRepeatOptions.json/TestFrameRepeatOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Repeat frame",
    "repeat": true,
    "fields": {
      "internal_frame1": {
        "type": "fieldset",
        "label": "Internal frame 1",
        "repeat": false,
        "fields": {
          "variable1": {
            "type": "select",
            "label": "Variable 1",
            "options": {
              "Revenues": {
                "label": "Revenues"
              },
              "Depretiation & Amortisation": {
                "label": "Depretiation & Amortisation"
              }
            },
            "val": "Revenues",
            "required": true
          }
        }
      },
      "internal_frame2": {
        "type": "fieldset",
        "label": "Internal frame 2",
        "repeat": false,
        "fields": {
          "variable2": {
            "type": "text",
            "label": "Variable 2",
            "val": "",
            "required": true
          }
        }
      },
      "delete": {
        "type": "button",
        "label": "Delete",
        "function": "DELETE_ROW"
      }
    }
  }
},
"/EmailFilterOptions.json/EmailFilterOptions.json": {
  "embed_table_frame": {
    "type": "fieldset",
    "label": "Embed Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "options.add_table=='true'",
    "repeat": false,
    "fields": {
      "options.embed_table_id": {
        "type": "select",
        "label": "Select Table",
        "bind": "TABLES",
        "empty": "",
        "required": true,
        "breakLine": true
      },
      "options.apply_filter": {
        "type": "checkbox",
        "label": "Apply Filter",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  },
  "filter_frame": {
    "type": "fieldset",
    "label": "Filter for Embed Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "options.add_table=='true' && options.apply_filter=='true'",
    "repeat": false,
    "fields": {
      "options.do_not_send_email_if_empty_table": {
        "type": "checkbox",
        "label": "Don't send e-mail if filter returns empty table",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.filter": {
        "type": "fieldset",
        "label": "Add Filter Conditions",
        "repeat": true,
        "fields": {
          "initial_op": {
            "type": "select",
            "label": "Select Logic Operator",
            "required": true,
            "show_if" :  "$index == 0",
            "options": {
              "if": {
                "label": "IF"
              },
              "if_not": {
                "label": "IF NOT"
              }
            },
            "val": "if"
          },
          "op": {
            "type": "select",
            "label": "Select Logic Operator",
            "required": true,
            "show_if" :  "$index > 0",
            "options": {
              "and": {
                "label": "AND"
              },
              "or": {
                "label": "OR"
              },
              "and_not": {
                "label": "AND NOT"
              },
              "or_not": {
                "label": "OR NOT"
              }
            },
            "val": "and"
          },
          "column": {
            "type": "select",
            "label": "Select Column",
            "table": "options.embed_table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "condition": {
            "type": "select",
            "label": "Select Operator",
            "required": true,
            "options": {
              "CONTAINS": {
                "label": "CONTAINS"
              },
              "CONTAINED IN STRING": {
                "label": "CONTAINED IN"
              },
              "STARTS WITH": {
                "label": "STARTS WITH"
              },
              "ENDS WITH": {
                "label": "ENDS WITH"
              },
              "=": {
                "label": "EQUAL"
              },
              ">": {
                "label": "GREATER THAN"
              },
              ">=": {
                "label": "GREATER OR EQUAL"
              },
              "<": {
                "label": "SMALLER THAN"
              },
              "<=": {
                "label": "SMALLER OR EQUAL"
              },
              "EMPTY": {
                "label": "IS EMPTY"
              },
              "BLANK": {
                "label": "IS BLANK"
              },
              "IS NULL": {
                "label": "IS NULL"
              },
              "IS TRUE": {
                "label": "IS TRUE"
              },
              "IS FALSE": {
                "label": "IS FALSE"
              },
              "REGEX MATCH": {
                "label": "REGEX MATCH"
              },
              "CONTAINED IN TABLE": {
                "label": "IN TABLE"
              },
              "IN REGEX TABLE": {
                "label": "IN REGEX TABLE"
              },
              "DATE": {
                "label": "DATE"
              }
            },
            "val": "CONTAINS"
          },
          "date_condition": {
            "type": "select",
            "label": "Select Date Operator",
            "required": true,
            "show_if": "this.condition == 'DATE'",
            "options": {
              "<": {
                "label": "PRIOR"
              },
              "<=": {
                "label": "PRIOR OR EQUAL"
              },
              "=": {
                "label": "EQUAL"
              },
              ">": {
                "label": "AFTER"
              },
              ">=": {
                "label": "AFTER OR EQUAL"
              }
            },
            "val": "="
          },
          "compare_with": {
            "type": "select",
            "label": "Compare with",
            "required": true,
            "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
            "options": {
              "custom_value": {
                "label": "Custom value"
              },
              "column_value": {
                "label": "Column value"
              }
            },
            "val": "custom_value"
          },
          "self_compare_column": {
            "type": "select",
            "label": "Select Compare Column",
            "table": "table_id",
            "bind": "COLUMNS",
            "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
            "required": true
          },
          "date_value": {
            "type": "date",
            "label": "Select Date",
            "show_if": "this.condition=='DATE'",
            "val": "",
            "required": true
          },
          "value": {
            "type": "text",
            "label": "Input Value",
            "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
            "val": "",
            "required": true
          },
          "case_sensitive": {
            "type": "select",
            "label": "Select Case Sensitive",
            "required": true,
            "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "options": {
              "yes": {
                "label": "Case Sensitive"
              },
              "no": {
                "label": "Case Insensitive"
              }
            },
            "val": "yes"
          },
          "compare_table_id": {
            "type": "select",
            "label": "Select Table",
            "bind": "TABLES",
            "empty": "",
            "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "required": true
          },
          "compare_column": {
            "type": "select",
            "label": "Select Column",
            "table": "this.compare_table_id",
            "bind": "COLUMNS",
            "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "required": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.apply_to_record": {
        "type": "checkbox",
        "label": "Apply to Record",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "apply_to_group_box": {
        "type": "fieldset",
        "label": "Apply to Group",
        "show_if": "options.apply_to_record=='false'",
        "repeat": false,
        "fields": {
          "options.apply_to_group_columns__all_but_selected": {
            "type": "checkbox",
            "label": "All but selected",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.apply_to_group_columns": {
            "type": "select",
            "label": "Select Group Column(s)",
            "width": "100%",
            "table": "options.embed_table_id",
            "multiple": true,
            "bind": "COLUMNS",
            "breakLine": true
          }
        }
      }
    }
  }
},
"/ImportDirFromGDriveOptions.json/ImportDirFromGDriveOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Select Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.from": {
        "type": "hidden",
        "val": "web"
      },
      "options.webservice": {
        "type": "hidden",
        "val": "google_drive"
      },
      "options.output_format": {
        "type": "select",
        "label": "Select Type",
        "options": {
          "csv_table": {
            "label": "CSV-Table"
          },
          "line_by_line": {
            "label": "Line by Line"
          },
          "word_by_word": {
            "label": "Text"
          },
          "file_list": {
            "label": "File List"
          }
        },
        "val": "csv_table",
        "required": true
      },
      "options.word_pattern_type": {
        "type": "select",
        "label": "Word Pattern",
        "show_if": "options.output_format=='word_by_word' && options.specify_word_pattern=='true'",
        "options": {
          "regex": {
            "label": "Regular Expression"
          }
        },
        "val": "regex",
        "required": true
      },
      "options.word_pattern_regex": {
        "type": "text",
        "label": "Regular Expression",
        "show_if": "options.output_format=='word_by_word' && options.specify_word_pattern=='true' && options.word_pattern_type=='regex'",
        "required": true,
        "val": "[a-z][1-9]",
        "breakLine": true
      },
      "options.column_setting": {
        "type": "checkbox",
        "label": "Column Settings",
        "show_if": "options.output_format!='file_list'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "column_setting_frame": {
        "type": "fieldset",
        "label": "Column Settings",
        "show_if": "options.output_format!='file_list' && options.column_setting=='true'",
        "repeat": false,
        "fields": {
          "options.add_row_column": {
            "type": "checkbox",
            "label": "Add Row Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_word_count_column": {
            "type": "checkbox",
            "label": "Add 'Word Count' Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_word_nonword_column": {
            "type": "checkbox",
            "label": "Add 'Word & Non-Word' Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_section_column": {
            "type": "checkbox",
            "label": "Add Section Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "section_column_types_frame": {
            "type": "fieldset",
            "label": "Section Column Types",
            "show_if": "options.output_format=='word_by_word' && options.add_section_column=='true'",
            "repeat": false,
            "fields": {
              "options.section_columns.add_paragraph_section_column": {
                "type": "checkbox",
                "label": "Paragraph",
                "val": "false",
                "isOn": "true",
                "isOff": "false",
                "breakLine": true
              },
              "options.section_columns.add_custom_section_column": {
                "type": "checkbox",
                "label": "Custom Section Delimiter",
                "val": "false",
                "isOn": "true",
                "isOff": "false"
              },
              "options.section_columns.custom_delimiter": {
                "type": "text",
                "label": "Delimiter(1 character)",
                "show_if": "options.section_columns.add_custom_section_column=='true'",
                "maxLength": 1,
                "required": true,
                "breakLine": true
              },
              "options.section_columns.add_brackets_punctuation_section_column": {
                "type": "checkbox",
                "label": "Brackets and Punctuation",
                "val": "false",
                "isOn": "true",
                "isOff": "false"
              },
              "options.section_columns.brackets_punctuation_section_column_type": {
                "type": "select",
                "label": "Brackets Type",
                "show_if": "options.section_columns.add_brackets_punctuation_section_column=='true'",
                "options": {
                  "nesting_structure": {
                    "label": "Nesting Structure"
                  },
                  "inner_bracket": {
                    "label": "Inner Bracket"
                  },
                  "brackets_only": {
                    "label": "Brackets Only"
                  },
                  "show_all": {
                    "label": "Show All"
                  }
                },
                "val": "show_all",
                "required": true,
                "breakLine": true
              }
            }
          },
          "options.add_filename_column": {
            "type": "checkbox",
            "label": "Add Column for File Name",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "options.add_filepath_column": {
            "type": "checkbox",
            "label": "Add Column for File Path",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          }
        }
      },
      "options.is_cloud_dir": {
        "type": "hidden",
        "val": "true"
      },
      "if_dir_frame": {
        "type": "fieldset",
        "label": "Directory Import Options",
        "show_if": "options.output_format!='file_list' && options.is_cloud_dir=='true'",
        "repeat": false,
        "fields": {
          "options.unify_in_one_table": {
            "type": "checkbox",
            "label": "Unify in one table",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.suffix": {
            "type": "select",
            "label": "Output tables suffix",
            "show_if": "options.unify_in_one_table=='false'",
            "options": {
              "number": {
                "label": "Number"
              },
              "filename": {
                "label": "Filename"
              }
            },
            "val": "number",
            "required": true,
            "breakLine": true
          },
          "options.include_subdir": {
            "type": "checkbox",
            "label": "Include Subdirectories",
            "show_if": "options.output_format!='file_list' && options.is_cloud_dir=='true'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true,
            "style": "margin-top: 10px"
          }
        }
      },
      "options.file_list.include_subdir": {
        "type": "checkbox",
        "label": "Include Subdirectories",
        "show_if": "options.output_format=='file_list'",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true,
        "style": "margin-top: 10px"
      },
      "options.file_list.add_change_date_column": {
        "type": "checkbox",
        "label": "Add Change Date Column",
        "show_if": "options.output_format=='file_list'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  },
  "import_link_token_frame": {
    "type": "fieldset",
    "label": "Import Link",
    "repeat": false,
    "fields": {
      "options.link_csv_file": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test/blob/main/example.csv",
        "show_if": "options.webservice=='github' && options.is_cloud_dir=='false' && options.output_format=='csv_table'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.link_text_file": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test/blob/main/example.txt(json, csv, etc)",
        "show_if": "options.webservice=='github' && options.is_cloud_dir=='false' && options.output_format!='csv_table' && options.output_format!='file_list'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.one_drive.file_path": {
        "type": "text",
        "label": "Enter path to file e.g. ZippyDoc/Subdir1/test.txt",
        "show_if": "options.webservice=='ms_one_drive' && options.output_format!='file_list' && options.is_cloud_dir=='false'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox.file_path": {
        "type": "text",
        "label": "Enter path to file e.g. ZippyDoc/Subdir1/test.txt",
        "show_if": "options.webservice=='dropbox' && options.output_format!='file_list' && options.is_cloud_dir=='false'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dir_path_filter": {
        "type": "fieldset",
        "label": "Import Path and File Filter",
        "show_if": "options.output_format=='file_list' || options.is_cloud_dir=='true'",
        "repeat": true,
        "fields": {
          "github__link_directory": {
            "type": "text",
            "label": "Enter link e.g. https://github.com/zippydoc/test",
            "show_if": "options.webservice=='github'",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "one_drive__dir_path": {
            "type": "text",
            "label": "Enter path to dir e.g. ZippyDoc/Subdir1",
            "show_if": "options.webservice=='ms_one_drive'",
            "width": "100%",
            "breakLine": true
          },
          "dropbox__dir_path": {
            "type": "text",
            "label": "Enter path to dir e.g. ZippyDoc/Subdir1",
            "show_if": "options.webservice=='dropbox'",
            "width": "100%",
            "breakLine": true
          },
          "google_drive__dir_path": {
            "type": "text",
            "label": "Enter path to dir",
            "show_if": "options.webservice=='google_drive'",
            "width": "100%",
            "breakLine": true
          },
          "dir_filter__filter_type": {
            "type": "select",
            "label": "Filter Type",
            "options": {
              "all": {
                "label": "All"
              },
              "contains": {
                "label": "Contains"
              },
              "starts_with": {
                "label": "Starts With"
              },
              "ends_with": {
                "label": "Ends With"
              },
              "regex": {
                "label": "Regular Expression"
              }
            },
            "val": "all",
            "required": true
          },
          "dir_filter__filter_string": {
            "type": "text",
            "label": "Filter",
            "show_if": "this.dir_filter__filter_type!='all'",
            "required": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.is_github_private": {
        "type": "checkbox",
        "label": "Github repository is private",
        "show_if": "options.webservice=='github'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "options.github_token": {
        "type": "text",
        "label": "Github personal access token",
        "show_if": "options.webservice=='github' && options.is_github_private=='true'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.one_drive.access_token": {
        "type": "text",
        "label": "One Drive Access Token",
        "show_if": "options.webservice=='ms_one_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox.auth_code": {
        "type": "text",
        "label": "Dropbox Authorization Code",
        "show_if": "options.webservice=='dropbox'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.google_drive.access_token": {
        "type": "text",
        "label": "Google Drive Access Token",
        "show_if": "options.webservice=='google_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      }
    }
  }
}
,
"/DCEnergyOptions.json/DCEnergyOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.all_countries": {
        "type": "hidden",
        "val": "false"
      },
      "options.stat_vars": {
        "type": "fieldset",
        "label": "Statistics data category(s)",
        "repeat": true,
        "fields": {
          "stat_var_name": {
            "type": "select",
            "label": "Energy Data",
            "required": true,
            "options": {
              "Annual_Consumption_Electricity": {
                "label": "Annual Consumption of Electricity"
              },
              "Annual_Exports_Electricity": {
                "label": "Annual Exports of Electricity"
              },
              "Annual_Generation_Electricity": {
                "label": "Net generation, all fuels, all sectors, annual"
              },
              "Annual_Imports_Electricity": {
                "label": "Annual Imports of Electricity"
              },
              "Annual_Loss_Electricity": {
                "label": "Annual Loss of Electricity"
              },
              "Annual_Consumption_Electricity_Agriculture": {
                "label": "Annual Consumption for Agriculture"
              },
              "Annual_Consumption_Electricity_ChemicalPetrochemicalIndustry": {
                "label": "Annual Consumption for Chemical Petrochemical Industry"
              },
              "Annual_Consumption_Electricity_CommerceAndPublicServices": {
                "label": "Annual Consumption for Commerce And Public Services"
              },
              "Annual_Consumption_Electricity_ConstructionIndustry": {
                "label": "Annual Consumption for Construction Industry"
              },
              "Annual_Consumption_Electricity_FoodAndTobaccoIndustry": {
                "label": "Annual Consumption for Food And Tobacco Industry"
              },
              "Annual_Consumption_Electricity_Households": {
                "label": "Annual Consumption for Households"
              },
              "Annual_Consumption_Electricity_IronSteel": {
                "label": "Annual Consumption for Iron Steel"
              },
              "Annual_Consumption_Electricity_MachineryIndustry": {
                "label": "Annual Consumption for Machinery Industry"
              },
              "Annual_Consumption_Electricity_Manufacturing": {
                "label": "Annual Consumption for Manufacturing"
              },
              "Annual_Consumption_Electricity_MiningAndQuarryingIndustry": {
                "label": "Annual Consumption for Mining And Quarrying Industry"
              },
              "Annual_Consumption_Electricity_NonFerrousMetalsIndustry": {
                "label": "Annual Consumption for Non Ferrous Metals Industry"
              },
              "Annual_Consumption_Electricity_NonMetallicMineralsIndustry": {
                "label": "Annual Consumption for Non Metallic Minerals Industry"
              },
              "Annual_Consumption_Electricity_PaperPulpPrintIndustry": {
                "label": "Annual Consumption for Paper Pulp Print Industry"
              },
              "Annual_Consumption_Electricity_RailTransport": {
                "label": "Annual Consumption for Rail Transport"
              },
              "Annual_Consumption_Electricity_RoadTransport": {
                "label": "Annual Consumption for Road Transport"
              },
              "Annual_Consumption_Electricity_TextileAndLeatherIndustry": {
                "label": "Annual Consumption for Textile And Leather Industry"
              },
              "Annual_Consumption_Electricity_TransportEquipmentIndustry": {
                "label": "Annual Consumption for Transport Equipment Industry"
              },
              "Annual_Consumption_Electricity_TransportIndustry": {
                "label": "Annual Consumption for Transport Industry"
              },
              "Annual_Consumption_Electricity_OtherIndustry": {
                "label": "Annual Consumption for UN_Other Industry"
              },
              "Annual_Consumption_Electricity_OtherManufacturingIndustry": {
                "label": "Annual Consumption for UN_Other Manufacturing Industry"
              },
              "Annual_Consumption_Electricity_OtherSector": {
                "label": "Annual Consumption for UN_Other Sector"
              },
              "Annual_Consumption_Electricity_WoodAndWoodProductsIndustry": {
                "label": "Annual Consumption for Wood And Wood Products Industry"
              },
              "Annual_Consumption_Electricity_BriquettingPlants_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Briquetting Plants, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_CoalMines_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Coal Mines, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_CokeOvens_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Coke Ovens, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_ElectricityGeneration_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Electricity Generation, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_EnergyIndustry_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Energy Industry, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_GasWorks_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Gas Works, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_Industry_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Industry, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_NuclearFuelProcessing_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Nuclear Fuel Processing, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_OilGasExtraction_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Oil Gas Extraction, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_OilRefineries_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Oil Refineries, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_PumpStoragePlants_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Pump Storage Plants, Energy Industry Own Use"
              },
              "Annual_Generation_Electricity_BioGas_ThermalElectricity": {
                "label": "Annual Generation From Bio Gas, Thermal Electricity"
              },
              "Annual_Consumption_Energy_Agriculture_SolarThermal": {
                "label": "Annual Consumption of Agriculture, Solar Thermal"
              },
              "Annual_Consumption_Energy_BriquettingPlants_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Briquetting Plants, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_ChemicalPetrochemicalIndustry_Heat": {
                "label": "Annual Consumption of Chemical Petrochemical Industry, Heat"
              },
              "Annual_Consumption_Energy_CoalMines_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Coal Mines, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_CokeOvens_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Coke Ovens, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_CommerceAndPublicServices_Geothermal": {
                "label": "Annual Consumption of Commerce And Public Services, Geothermal"
              },
              "Annual_Consumption_Energy_CommerceAndPublicServices_Heat": {
                "label": "Annual Consumption of Commerce And Public Services, Heat"
              },
              "Annual_Consumption_Energy_CommerceAndPublicServices_SolarThermal": {
                "label": "Annual Consumption of Commerce And Public Services, Solar Thermal"
              },
              "Annual_Consumption_Energy_ElectricityGeneration_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Electricity Generation, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_EnergyIndustry_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Energy Industry, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_FoodAndTobaccoIndustry_Heat": {
                "label": "Annual Consumption of Food And Tobacco Industry, Heat"
              },
              "Annual_Consumption_Energy_GasWorks_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Gas Works, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_Households_Geothermal": {
                "label": "Annual Consumption of Households, Geothermal"
              },
              "Annual_Consumption_Energy_Households_Heat": {
                "label": "Annual Consumption of Households, Heat"
              },
              "Annual_Consumption_Energy_Households_SolarThermal": {
                "label": "Annual Consumption of Households, Solar Thermal"
              },
              "Annual_Consumption_Energy_IronSteel_Heat": {
                "label": "Annual Consumption of Iron Steel, Heat"
              },
              "Annual_Consumption_Energy_MachineryIndustry_Heat": {
                "label": "Annual Consumption of Machinery Industry, Heat"
              },
              "Annual_Consumption_Energy_MachineryIndustry_SolarThermal": {
                "label": "Annual Consumption of Machinery Industry, Solar Thermal"
              },
              "Annual_Consumption_Energy_Manufacturing_Heat": {
                "label": "Annual Consumption of Manufacturing, Heat"
              },
              "Annual_Consumption_Energy_Manufacturing_SolarThermal": {
                "label": "Annual Consumption of Manufacturing, Solar Thermal"
              },
              "Annual_Consumption_Energy_MiningAndQuarryingIndustry_Heat": {
                "label": "Annual Consumption of Mining And Quarrying Industry, Heat"
              },
              "Annual_Consumption_Energy_NonFerrousMetalsIndustry_Heat": {
                "label": "Annual Consumption of Non Ferrous Metals Industry, Heat"
              },
              "Annual_Consumption_Energy_NonFerrousMetalsIndustry_SolarThermal": {
                "label": "Annual Consumption of Non Ferrous Metals Industry, Solar Thermal"
              },
              "Annual Consumption of Non Ferrous Metals Industry, Solar Thermal": {
                "label": "Annual Consumption of Non Metallic Minerals Industry, Heat"
              },
              "Annual_Consumption_Energy_OilGasExtraction_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Oil Gas Extraction, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_OilRefineries_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Oil Refineries, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_OilRefineries_Refinery_FuelTransformation": {
                "label": "Annual Consumption of Oil Refineries, Refinery, Fuel Transformation"
              },
              "Annual_Consumption_Energy_PaperPulpPrintIndustry_Heat": {
                "label": "Annual Consumption of Paper Pulp Print Industry, Heat"
              },
              "Annual_Consumption_Energy_TextileAndLeatherIndustry_Heat": {
                "label": "Annual Consumption of Textile And Leather Industry, Heat"
              },
              "Annual_Consumption_Energy_TransportEquipmentIndustry_Heat\n": {
                "label": "Annual Consumption of Transport Equipment Industry, Heat"
              },
              "Annual_Consumption_Energy_TransportEquipmentIndustry_SolarThermal": {
                "label": "Annual Consumption of Transport Equipment Industry, Solar Thermal"
              },
              "Annual_Consumption_Energy_OtherIndustry_Heat": {
                "label": "Annual Consumption of UN_Other Industry, Heat"
              },
              "Annual_Consumption_Energy_OtherManufacturingIndustry_Heat": {
                "label": "Annual Consumption of UN_Other Manufacturing Industry, Heat"
              },
              "Annual_Consumption_Energy_OtherManufacturingIndustry_SolarThermal": {
                "label": "Annual Consumption of UN_Other Manufacturing Industry, Solar Thermal"
              },
              "Annual_Consumption_Energy_OtherSector_Geothermal": {
                "label": "Annual Consumption of UN_Other Sector, Geothermal"
              },
              "Annual_Consumption_Energy_OtherSector_Heat": {
                "label": "Annual Consumption of UN_Other Sector, Heat"
              },
              "Annual_Consumption_Energy_OtherSector_SolarThermal": {
                "label": "Annual Consumption of UN_Other Sector, Solar Thermal"
              },
              "Annual_Consumption_Energy_WoodAndWoodProductsIndustry_Heat": {
                "label": "Annual Consumption of Wood And Wood Products Industry, Heat"
              }
            }
          },
          "per_capita": {
            "type": "checkbox",
            "label": "Per capita",
            "show_if": "false",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "help_Count_Person_ResidingLessThan5MetersAboveSeaLevel_AsFractionOf_Count_Person": {
            "type": "textarea",
            "label": "",
            "show_if": "this.stat_var_name=='Count_Person_ResidingLessThan5MetersAboveSeaLevel_AsFractionOf_Count_Person'",
            "val": "Percentage of the total population living in areas where the elevation is 5 meters or less. Center for International Earth Science Information Network (CIESIN)/Columbia University. 2013. Urban-Rural Population and Land Area Estimates Version 2. Palisades, NY: NASA Socioeconomic Data and Applications Center (SEDAC). http://sedac.ciesin.columbia.edu/data/set/lecz-urban-rural-population-land-area-estimates-v2.",
            "md_no_resize": false,
            "rows": 6,
            "disabled": true,
            "width": "100%"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.output_as_chart": {
        "type": "checkbox",
        "label": "Output a Graph",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
}
,
"/TransformOptions.json/TransformOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.type": {
        "type": "radio",
        "val": "transform_group",
        "show_if": "false",
        "values": {
          "transform_group": "Transform Group"
        },
        "breakLine": true
      },
      "options.group_label_direction": {
        "type": "select",
        "label": "Transform Direction",
        "required": true,
        "options": {
          "group_to_label": {
            "label": "Group to Label"
          },
          "label_to_group": {
            "label": "Label to Group"
          }
        },
        "val": "group_to_label"
      },
      "options.group_column": {
        "type": "select",
        "label": "Group Column",
        "show_if": "options.group_label_direction=='group_to_label'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "options.group_column_name": {
        "type": "text",
        "label": "Group Column Name",
        "show_if": "options.group_label_direction=='label_to_group'",
        "val": "Group",
        "required": true,
        "breakLine": true
      }
    }
  }
}
,
"/D3EnglishGrammarOptions.json/D3EnglishGrammarOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.task_symbol": {
        "type": "hidden",
        "val": "english_grammar"
      },
      "options.output_as_chart": {
        "type": "checkbox",
        "label": "Output a graph",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.chart_type": {
        "type": "select",
        "label": "Tree Type",
        "show_if": "options.output_as_chart=='true'",
        "required": true,
        "options": {
          "collapsible_tree": {
            "label": "Collapsible Tree"
          },
          "tidy_tree": {
            "label": "Tidy Tree"
          }
        },
        "val": "collapsible_tree",
        "breakLine": true
      }
    }
  }
}
,
"/ChatGPTSelectTables.json/ChatGPTSelectTables.json": {
  "input": {
    "type": "fieldset",
    "label": "Select Input Table",
    "show_if": "options.is_feed_input_table=='true'",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "configure_input_tables": {
        "type": "select",
        "label": "Select Source",
        "options": {
          "zippydoc_table": {
            "label": "Flow Table"
          },
          "search_tables": {
            "label": "Search Tables"
          }
        },
        "val": "zippydoc_table"
      },
      "search_tables__types": {
        "type": "select",
        "label": "Select Source",
        "show_if": "configure_input_tables=='search_tables'",
        "options": {
          "owned_tables": {
            "label": "Owned tables"
          },
          "shared_tables": {
            "label": "Shared tables"
          },
          "published_tables": {
            "label": "Published tables"
          }
        },
        "multiple": true,
        "val": ["owned_tables"]
      },
      "tables": {
        "type": "fieldset",
        "label": "Select Tables",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "configure_input_tables=='zippydoc_table'",
        "repeat": true,
        "fields": {
          "table_id": {
            "type": "select",
            "label": "Select Table",
            "bind": "TABLES"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "input_table_condition": {
        "type": "fieldset",
        "label": "Search Tables",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "configure_input_tables=='search_tables'",
        "repeat": true,
        "fields": {
          "initial_op": {
            "type": "select",
            "label": "Logic Operator",
            "required": true,
            "show_if" :  "$index == 0",
            "options": {
              "if": {
                "label": "IF"
              },
              "if_not": {
                "label": "IF NOT"
              }
            },
            "val": "if"
          },
          "op": {
            "type": "select",
            "label": "Logic Operator",
            "required": true,
            "show_if" :  "$index > 0",
            "options": {
              "and": {
                "label": "AND"
              },
              "or": {
                "label": "OR"
              },
              "and_not": {
                "label": "AND NOT"
              },
              "or_not": {
                "label": "OR NOT"
              }
            },
            "val": "and"
          },
          "type": {
            "type": "select",
            "label": "Type",
            "required": true,
            "options": {
              "Table Name": {
                "label": "Table Name"
              },
              "Tags": {
                "label": "Tags"
              }
            },
            "val": "Table Name"
          },
          "condition": {
            "type": "select",
            "label": "Operator",
            "required": true,
            "options": {
              "CONTAINS": {
                "label": "CONTAINS"
              },
              "CONTAINED IN STRING": {
                "label": "CONTAINED IN"
              },
              "STARTS WITH": {
                "label": "STARTS WITH"
              },
              "ENDS WITH": {
                "label": "ENDS WITH"
              },
              "=": {
                "label": "EQUAL"
              },
              "REGEX MATCH": {
                "label": "REGEX MATCH"
              }
            },
            "val": "CONTAINS"
          },
          "value": {
            "type": "text",
            "label": "Input Value",
            "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "val": "",
            "required": true
          },
          "case_sensitive": {
            "type": "select",
            "label": "Case Sensitive",
            "required": true,
            "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "options": {
              "yes": {
                "label": "Case Sensitive"
              },
              "no": {
                "label": "Case Insensitive"
              }
            },
            "val": "yes"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      }
    }
  }
},
"/ImportFileFromDropboxOptions.json/ImportFileFromDropboxOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Select Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.from": {
        "type": "hidden",
        "val": "web"
      },
      "options.webservice": {
        "type": "hidden",
        "val": "dropbox"
      },
      "options.output_format": {
        "type": "select",
        "label": "Select Type",
        "options": {
          "csv_table": {
            "label": "CSV-Table"
          },
          "line_by_line": {
            "label": "Line by Line"
          },
          "word_by_word": {
            "label": "Text"
          }
        },
        "val": "csv_table",
        "required": true
      },
      "options.word_pattern_type": {
        "type": "select",
        "label": "Word Pattern",
        "show_if": "options.output_format=='word_by_word' && options.specify_word_pattern=='true'",
        "options": {
          "regex": {
            "label": "Regular Expression"
          }
        },
        "val": "regex",
        "required": true
      },
      "options.word_pattern_regex": {
        "type": "text",
        "label": "Regular Expression",
        "show_if": "options.output_format=='word_by_word' && options.specify_word_pattern=='true' && options.word_pattern_type=='regex'",
        "required": true,
        "val": "[a-z][1-9]",
        "breakLine": true
      },
      "options.column_setting": {
        "type": "checkbox",
        "label": "Column Settings",
        "show_if": "options.output_format!='file_list'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "column_setting_frame": {
        "type": "fieldset",
        "label": "Column Settings",
        "show_if": "options.output_format!='file_list' && options.column_setting=='true'",
        "repeat": false,
        "fields": {
          "options.add_row_column": {
            "type": "checkbox",
            "label": "Add Row Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_word_count_column": {
            "type": "checkbox",
            "label": "Add 'Word Count' Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_word_nonword_column": {
            "type": "checkbox",
            "label": "Add 'Word & Non-Word' Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_section_column": {
            "type": "checkbox",
            "label": "Add Section Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "section_column_types_frame": {
            "type": "fieldset",
            "label": "Section Column Types",
            "show_if": "options.output_format=='word_by_word' && options.add_section_column=='true'",
            "repeat": false,
            "fields": {
              "options.section_columns.add_paragraph_section_column": {
                "type": "checkbox",
                "label": "Paragraph",
                "val": "false",
                "isOn": "true",
                "isOff": "false",
                "breakLine": true
              },
              "options.section_columns.add_custom_section_column": {
                "type": "checkbox",
                "label": "Custom Section Delimiter",
                "val": "false",
                "isOn": "true",
                "isOff": "false"
              },
              "options.section_columns.custom_delimiter": {
                "type": "text",
                "label": "Delimiter(1 character)",
                "show_if": "options.section_columns.add_custom_section_column=='true'",
                "maxLength": 1,
                "required": true,
                "breakLine": true
              },
              "options.section_columns.add_brackets_punctuation_section_column": {
                "type": "checkbox",
                "label": "Brackets and Punctuation",
                "val": "false",
                "isOn": "true",
                "isOff": "false"
              },
              "options.section_columns.brackets_punctuation_section_column_type": {
                "type": "select",
                "label": "Brackets Type",
                "show_if": "options.section_columns.add_brackets_punctuation_section_column=='true'",
                "options": {
                  "nesting_structure": {
                    "label": "Nesting Structure"
                  },
                  "inner_bracket": {
                    "label": "Inner Bracket"
                  },
                  "brackets_only": {
                    "label": "Brackets Only"
                  },
                  "show_all": {
                    "label": "Show All"
                  }
                },
                "val": "show_all",
                "required": true,
                "breakLine": true
              }
            }
          },
          "options.add_filename_column": {
            "type": "checkbox",
            "label": "Add Column for File Name",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "options.add_filepath_column": {
            "type": "checkbox",
            "label": "Add Column for File Path",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          }
        }
      },
      "options.is_cloud_dir": {
        "type": "hidden",
        "val": "false"
      },
      "if_dir_frame": {
        "type": "fieldset",
        "label": "Directory Import Options",
        "show_if": "options.output_format!='file_list' && options.is_cloud_dir=='true'",
        "repeat": false,
        "fields": {
          "options.unify_in_one_table": {
            "type": "checkbox",
            "label": "Unify in one table",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.suffix": {
            "type": "select",
            "label": "Output tables suffix",
            "show_if": "options.unify_in_one_table=='false'",
            "options": {
              "number": {
                "label": "Number"
              },
              "filename": {
                "label": "Filename"
              }
            },
            "val": "number",
            "required": true,
            "breakLine": true
          },
          "options.include_subdir": {
            "type": "checkbox",
            "label": "Include Subdirectories",
            "show_if": "options.output_format!='file_list' && options.is_cloud_dir=='true'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true,
            "style": "margin-top: 10px"
          }
        }
      },
      "options.file_list.include_subdir": {
        "type": "checkbox",
        "label": "Include Subdirectories",
        "show_if": "options.output_format=='file_list'",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true,
        "style": "margin-top: 10px"
      },
      "options.file_list.add_change_date_column": {
        "type": "checkbox",
        "label": "Add Change Date Column",
        "show_if": "options.output_format=='file_list'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  },
  "import_link_token_frame": {
    "type": "fieldset",
    "label": "Import Link",
    "repeat": false,
    "fields": {
      "options.link_csv_file": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test/blob/main/example.csv",
        "show_if": "options.webservice=='github' && options.is_cloud_dir=='false' && options.output_format=='csv_table'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.link_text_file": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test/blob/main/example.txt(json, csv, etc)",
        "show_if": "options.webservice=='github' && options.is_cloud_dir=='false' && options.output_format!='csv_table' && options.output_format!='file_list'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.one_drive.file_path": {
        "type": "text",
        "label": "Enter path to file e.g. ZippyDoc/Subdir1/test.txt",
        "show_if": "options.webservice=='ms_one_drive' && options.output_format!='file_list' && options.is_cloud_dir=='false'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox.file_path": {
        "type": "text",
        "label": "Enter path to file e.g. ZippyDoc/Subdir1/test.txt",
        "show_if": "options.webservice=='dropbox' && options.output_format!='file_list' && options.is_cloud_dir=='false'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dir_path_filter": {
        "type": "fieldset",
        "label": "Import Path and File Filter",
        "show_if": "options.output_format=='file_list' || options.is_cloud_dir=='true'",
        "repeat": true,
        "fields": {
          "github__link_directory": {
            "type": "text",
            "label": "Enter link e.g. https://github.com/zippydoc/test",
            "show_if": "options.webservice=='github'",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "one_drive__dir_path": {
            "type": "text",
            "label": "Enter path to dir e.g. ZippyDoc/Subdir1",
            "show_if": "options.webservice=='ms_one_drive'",
            "width": "100%",
            "breakLine": true
          },
          "dropbox__dir_path": {
            "type": "text",
            "label": "Enter path to dir e.g. ZippyDoc/Subdir1",
            "show_if": "options.webservice=='dropbox'",
            "width": "100%",
            "breakLine": true
          },
          "google_drive__dir_path": {
            "type": "text",
            "label": "Enter path to dir",
            "show_if": "options.webservice=='google_drive'",
            "width": "100%",
            "breakLine": true
          },
          "dir_filter__filter_type": {
            "type": "select",
            "label": "Filter Type",
            "options": {
              "all": {
                "label": "All"
              },
              "contains": {
                "label": "Contains"
              },
              "starts_with": {
                "label": "Starts With"
              },
              "ends_with": {
                "label": "Ends With"
              },
              "regex": {
                "label": "Regular Expression"
              }
            },
            "val": "all",
            "required": true
          },
          "dir_filter__filter_string": {
            "type": "text",
            "label": "Filter",
            "show_if": "this.dir_filter__filter_type!='all'",
            "required": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.is_github_private": {
        "type": "checkbox",
        "label": "Github repository is private",
        "show_if": "options.webservice=='github'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "options.github_token": {
        "type": "text",
        "label": "Github personal access token",
        "show_if": "options.webservice=='github' && options.is_github_private=='true'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.one_drive.access_token": {
        "type": "text",
        "label": "One Drive Access Token",
        "show_if": "options.webservice=='ms_one_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox.auth_code": {
        "type": "text",
        "label": "Dropbox Authorization Code",
        "show_if": "options.webservice=='dropbox'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.google_drive.access_token": {
        "type": "text",
        "label": "Google Drive Access Token",
        "show_if": "options.webservice=='google_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      }
    }
  }
}
,
"/ScheduleOptions.json/ScheduleOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": true,
    "fields": {
      "input_task": {
        "type": "select",
        "label": "Select Task",
        "bind": "TASKS",
        "empty": "",
        "required": true
      },
      "waiting_time": {
        "type": "number",
        "label": "Waiting time (sec)",
        "val": 0,
        "required": true
      },
      "delete": {
        "type": "button",
        "label": "Delete",
        "function": "DELETE_ROW"
      }
    }
  }
}
,
"/D3SunburstOptions.json/D3SunburstOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "show_if": "options.configure_manual=='true'",
    "repeat": false,
    "fields": {
      "options.chart_type": {
        "type": "hidden",
        "val": "zoomable_sunburst"
      },
      "options.group_cols": {
        "type": "fieldset",
        "label": "Select Group Column(s) in Order",
        "repeat": true,
        "fields": {
          "group_col": {
            "type": "select",
            "label": "Group column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.value_col": {
        "type": "select",
        "label": "Select Value Column",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      }
    }
  }
}
,
"/ImportFileFromOneDriveOptions.json/ImportFileFromOneDriveOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.from": {
        "type": "hidden",
        "val": "web"
      },
      "options.webservice": {
        "type": "hidden",
        "val": "ms_one_drive"
      },
      "options.output_format": {
        "type": "select",
        "label": "Select Type",
        "options": {
          "csv_table": {
            "label": "CSV-Table"
          },
          "line_by_line": {
            "label": "Line by Line"
          },
          "word_by_word": {
            "label": "Text"
          },
          "JSON": {
            "label": "JSON"
          }
        },
        "val": "csv_table",
        "required": true
      },
      "options.semicolon_separated": {
        "type": "checkbox",
        "label": "Semicolon separated",
        "show_if": "options.webservice=='ms_one_drive' && options.output_format=='csv_table'",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "options.word_pattern_type": {
        "type": "select",
        "label": "Word Pattern",
        "show_if": "options.output_format=='word_by_word' && options.specify_word_pattern=='true'",
        "options": {
          "regex": {
            "label": "Regular Expression"
          }
        },
        "val": "regex",
        "required": true
      },
      "options.word_pattern_regex": {
        "type": "text",
        "label": "Regular Expression",
        "show_if": "options.output_format=='word_by_word' && options.specify_word_pattern=='true' && options.word_pattern_type=='regex'",
        "required": true,
        "val": "[a-z][1-9]",
        "breakLine": true
      },
      "options.column_setting": {
        "type": "checkbox",
        "label": "Column Settings",
        "show_if": "options.output_format!='file_list'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "column_setting_frame": {
        "type": "fieldset",
        "label": "Column Settings",
        "show_if": "options.output_format!='file_list' && options.column_setting=='true'",
        "repeat": false,
        "fields": {
          "options.add_row_column": {
            "type": "checkbox",
            "label": "Add Row Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_word_count_column": {
            "type": "checkbox",
            "label": "Add 'Word Count' Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_word_nonword_column": {
            "type": "checkbox",
            "label": "Add 'Word & Non-Word' Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_section_column": {
            "type": "checkbox",
            "label": "Add Section Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "section_column_types_frame": {
            "type": "fieldset",
            "label": "Section Column Types",
            "show_if": "options.output_format=='word_by_word' && options.add_section_column=='true'",
            "repeat": false,
            "fields": {
              "options.section_columns.add_paragraph_section_column": {
                "type": "checkbox",
                "label": "Paragraph",
                "val": "false",
                "isOn": "true",
                "isOff": "false",
                "breakLine": true
              },
              "options.section_columns.add_custom_section_column": {
                "type": "checkbox",
                "label": "Custom Section Delimiter",
                "val": "false",
                "isOn": "true",
                "isOff": "false"
              },
              "options.section_columns.custom_delimiter": {
                "type": "text",
                "label": "Delimiter(1 character)",
                "show_if": "options.section_columns.add_custom_section_column=='true'",
                "maxLength": 1,
                "required": true,
                "breakLine": true
              },
              "options.section_columns.add_brackets_punctuation_section_column": {
                "type": "checkbox",
                "label": "Brackets and Punctuation",
                "val": "false",
                "isOn": "true",
                "isOff": "false"
              },
              "options.section_columns.brackets_punctuation_section_column_type": {
                "type": "select",
                "label": "Brackets Type",
                "show_if": "options.section_columns.add_brackets_punctuation_section_column=='true'",
                "options": {
                  "nesting_structure": {
                    "label": "Nesting Structure"
                  },
                  "inner_bracket": {
                    "label": "Inner Bracket"
                  },
                  "brackets_only": {
                    "label": "Brackets Only"
                  },
                  "show_all": {
                    "label": "Show All"
                  }
                },
                "val": "show_all",
                "required": true,
                "breakLine": true
              }
            }
          },
          "options.add_filename_column": {
            "type": "checkbox",
            "label": "Add Column for File Name",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "options.add_filepath_column": {
            "type": "checkbox",
            "label": "Add Column for File Path",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          }
        }
      },
      "options.is_cloud_dir": {
        "type": "hidden",
        "val": "false"
      },
      "if_dir_frame": {
        "type": "fieldset",
        "label": "Directory Import Options",
        "show_if": "options.output_format!='file_list' && options.is_cloud_dir=='true'",
        "repeat": false,
        "fields": {
          "options.unify_in_one_table": {
            "type": "checkbox",
            "label": "Unify in one table",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.suffix": {
            "type": "select",
            "label": "Output tables suffix",
            "show_if": "options.unify_in_one_table=='false'",
            "options": {
              "number": {
                "label": "Number"
              },
              "filename": {
                "label": "Filename"
              }
            },
            "val": "number",
            "required": true,
            "breakLine": true
          },
          "options.include_subdir": {
            "type": "checkbox",
            "label": "Include Subdirectories",
            "show_if": "options.output_format!='file_list' && options.is_cloud_dir=='true'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true,
            "style": "margin-top: 10px"
          }
        }
      },
      "options.file_list.include_subdir": {
        "type": "checkbox",
        "label": "Include Subdirectories",
        "show_if": "options.output_format=='file_list'",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true,
        "style": "margin-top: 10px"
      },
      "options.file_list.add_change_date_column": {
        "type": "checkbox",
        "label": "Add Change Date Column",
        "show_if": "options.output_format=='file_list'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  },
  "import_link_token_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px",
    "repeat": false,
    "fields": {
      "options.link_csv_file": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test/blob/main/example.csv",
        "show_if": "options.webservice=='github' && options.is_cloud_dir=='false' && options.output_format=='csv_table'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.link_text_file": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test/blob/main/example.txt(json, csv, etc)",
        "show_if": "options.webservice=='github' && options.is_cloud_dir=='false' && options.output_format!='csv_table' && options.output_format!='file_list'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.one_drive.file_path": {
        "type": "text",
        "label": "Enter path to file e.g. ZippyDoc/Subdir1/test.txt",
        "show_if": "options.webservice=='ms_one_drive' && options.output_format!='file_list' && options.is_cloud_dir=='false'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox.file_path": {
        "type": "text",
        "label": "Enter path to file e.g. ZippyDoc/Subdir1/test.txt",
        "show_if": "options.webservice=='dropbox' && options.output_format!='file_list' && options.is_cloud_dir=='false'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dir_path_filter": {
        "type": "fieldset",
        "label": "Import Path and File Filter",
        "show_if": "options.output_format=='file_list' || options.is_cloud_dir=='true'",
        "repeat": true,
        "fields": {
          "github__link_directory": {
            "type": "text",
            "label": "Enter link e.g. https://github.com/zippydoc/test",
            "show_if": "options.webservice=='github'",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "one_drive__dir_path": {
            "type": "text",
            "label": "Enter path to dir e.g. ZippyDoc/Subdir1",
            "show_if": "options.webservice=='ms_one_drive'",
            "width": "100%",
            "breakLine": true
          },
          "dropbox__dir_path": {
            "type": "text",
            "label": "Enter path to dir e.g. ZippyDoc/Subdir1",
            "show_if": "options.webservice=='dropbox'",
            "width": "100%",
            "breakLine": true
          },
          "google_drive__dir_path": {
            "type": "text",
            "label": "Enter path to dir",
            "show_if": "options.webservice=='google_drive'",
            "width": "100%",
            "breakLine": true
          },
          "dir_filter__filter_type": {
            "type": "select",
            "label": "Filter Type",
            "options": {
              "all": {
                "label": "All"
              },
              "contains": {
                "label": "Contains"
              },
              "starts_with": {
                "label": "Starts With"
              },
              "ends_with": {
                "label": "Ends With"
              },
              "regex": {
                "label": "Regular Expression"
              }
            },
            "val": "all",
            "required": true
          },
          "dir_filter__filter_string": {
            "type": "text",
            "label": "Filter",
            "show_if": "this.dir_filter__filter_type!='all'",
            "required": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.is_github_private": {
        "type": "checkbox",
        "label": "Github repository is private",
        "show_if": "options.webservice=='github'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "options.github_token": {
        "type": "text",
        "label": "Github personal access token",
        "show_if": "options.webservice=='github' && options.is_github_private=='true'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox.auth_code": {
        "type": "text",
        "label": "Dropbox Authorization Code",
        "show_if": "options.webservice=='dropbox'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.google_drive.access_token": {
        "type": "text",
        "label": "Google Drive Access Token",
        "show_if": "options.webservice=='google_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      }
    }
  }
}
,
"/AddRowOptions.json/AddRowOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.position": {
        "type": "select",
        "label": "Select Position",
        "show_if": "$table_id.numOfLabel >= 1",
        "required": true,
        "options": {
          "add_rows_at_table_end": {
            "label": "Add row on bottom"
          },
          "add_row_on_top": {
            "label": "Add row on top"
          },
          "add_rows_above_selected_row": {
            "label": "Add row above selection"
          },
          "add_rows_below_selected_row": {
            "label": "Add row below selection"
          },
          "add_row_after_each_group": {
            "label": "Add row after each group"
          }
        },
        "val": "add_rows_at_table_end",
        "breakLine": true
      },
      "options.group_column": {
        "type": "select",
        "label": "Group Column",
        "show_if": "$table_id.numOfLabel < 1 && options.position=='add_row_after_each_group'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true,
        "breakLine": true
      },
      "options.use_filter": {
        "type": "select",
        "label": "Select Type",
        "show_if": "false",
        "required": true,
        "options": {
          "false": {
            "label": "Add one row for each table row"
          },
          "true": {
            "label": "Add one row for each specified row"
          }
        },
        "val": "false",
        "breakLine": true,
        "style": "margin-top: 10px"
      },
      "filter_box": {
        "type": "fieldset",
        "label": "Filter Options",
        "show_if": "options.use_filter=='true' && $table_id.numOfLabel < 1",
        "repeat": false,
        "fields": {
          "options.filter": {
            "type": "fieldset",
            "label": "Add Filter Conditions",
            "repeat": true,
            "fields": {
              "initial_op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index == 0",
                "options": {
                  "if": {
                    "label": "IF"
                  },
                  "if_not": {
                    "label": "IF NOT"
                  }
                },
                "val": "if"
              },
              "op": {
                "type": "select",
                "label": "Select Logic Operator",
                "required": true,
                "show_if": "$index > 0",
                "options": {
                  "and": {
                    "label": "AND"
                  },
                  "or": {
                    "label": "OR"
                  },
                  "and_not": {
                    "label": "AND NOT"
                  },
                  "or_not": {
                    "label": "OR NOT"
                  }
                },
                "val": "and"
              },
              "column": {
                "type": "select",
                "label": "Select Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "required": true
              },
              "condition": {
                "type": "select",
                "label": "Select Operator",
                "required": true,
                "options": {
                  "CONTAINS": {
                    "label": "CONTAINS"
                  },
                  "CONTAINED IN STRING": {
                    "label": "CONTAINED IN"
                  },
                  "STARTS WITH": {
                    "label": "STARTS WITH"
                  },
                  "ENDS WITH": {
                    "label": "ENDS WITH"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "GREATER THAN"
                  },
                  ">=": {
                    "label": "GREATER OR EQUAL"
                  },
                  "<": {
                    "label": "SMALLER THAN"
                  },
                  "<=": {
                    "label": "SMALLER OR EQUAL"
                  },
                  "EMPTY": {
                    "label": "IS EMPTY"
                  },
                  "BLANK": {
                    "label": "IS BLANK"
                  },
                  "IS NULL": {
                    "label": "IS NULL"
                  },
                  "IS TRUE": {
                    "label": "IS TRUE"
                  },
                  "IS FALSE": {
                    "label": "IS FALSE"
                  },
                  "REGEX MATCH": {
                    "label": "REGEX MATCH"
                  },
                  "CONTAINED IN TABLE": {
                    "label": "IN TABLE"
                  },
                  "IN REGEX TABLE": {
                    "label": "IN REGEX TABLE"
                  },
                  "DATE": {
                    "label": "DATE"
                  }
                },
                "val": "CONTAINS"
              },
              "date_condition": {
                "type": "select",
                "label": "Select Date Operator",
                "required": true,
                "show_if": "this.condition == 'DATE'",
                "options": {
                  "<": {
                    "label": "PRIOR"
                  },
                  "<=": {
                    "label": "PRIOR OR EQUAL"
                  },
                  "=": {
                    "label": "EQUAL"
                  },
                  ">": {
                    "label": "AFTER"
                  },
                  ">=": {
                    "label": "AFTER OR EQUAL"
                  }
                },
                "val": "="
              },
              "compare_with": {
                "type": "select",
                "label": "Compare with",
                "required": true,
                "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
                "options": {
                  "custom_value": {
                    "label": "Custom value"
                  },
                  "column_value": {
                    "label": "Column value"
                  }
                },
                "val": "custom_value"
              },
              "self_compare_column": {
                "type": "select",
                "label": "Select Compare Column",
                "table": "table_id",
                "bind": "COLUMNS",
                "show_if": "this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
                "required": true
              },
              "date_value": {
                "type": "date",
                "label": "Select Date",
                "show_if": "this.condition=='DATE'",
                "val": "",
                "required": true
              },
              "value": {
                "type": "text",
                "label": "Input Value",
                "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
                "val": "",
                "required": true
              },
              "case_sensitive": {
                "type": "select",
                "label": "Select Case Sensitive",
                "required": true,
                "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "options": {
                  "yes": {
                    "label": "Case Sensitive"
                  },
                  "no": {
                    "label": "Case Insensitive"
                  }
                },
                "val": "yes"
              },
              "compare_table": {
                "type": "select",
                "label": "Select Table",
                "bind": "TABLES",
                "empty": "",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "compare_column": {
                "type": "select",
                "label": "Select Column",
                "table": "this.compare_table",
                "bind": "COLUMNS",
                "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
                "required": true
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          },
          "options.apply_to_record": {
            "type": "checkbox",
            "label": "Apply to Record",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "apply_to_group_box": {
            "type": "fieldset",
            "label": "Apply to Group",
            "show_if": "options.apply_to_record=='false'",
            "repeat": false,
            "fields": {
              "options.apply_to_group_columns": {
                "type": "select",
                "label": "Select Group Columns",
                "required": true,
                "width": "100%",
                "table": "table_id",
                "multiple": true,
                "bind": "COLUMNS",
                "breakLine": true
              }
            }
          }
        }
      },
      "options.add_rows": {
        "type": "fieldset",
        "label": "New Row Option",
        "repeat": true,
        "fields": {
          "new_row_name": {
            "type": "text",
            "label": "New Row Name",
            "show_if": "$table_id.numOfLabel >= 1",
            "val": ""
          },
          "function_type": {
            "type": "select",
            "label": "Task Type",
            "show_if": "false",
            "required": true,
            "options": {
              "multi_column_functions": {
                "label": "Multi-Column"
              },
              "multi_row_functions": {
                "label": "Multi-Row"
              }
            },
            "val": "multi_row_functions"
          },
          "multi_row_functions__function": {
            "type": "select",
            "label": "Select Functions",
            "show_if": "$table_id.numOfLabel >= 1",
            "required": true,
            "options": {
              "sum": {
                "label": "Sum"
              },
              "average": {
                "label": "Average"
              },
              "median": {
                "label": "Median"
              },
              "standard_deviation": {
                "label": "Standard Deviation"
              },
              "variance": {
                "label": "Variance"
              },
              "product": {
                "label": "Product"
              },
              "quota": {
                "label": "Quota"
              }
            },
            "val": "sum"
          },
          "multi_row_functions__function_use_filter": {
            "type": "select",
            "label": "Select Functions",
            "show_if": "$table_id.numOfLabel < 1",
            "required": true,
            "options": {
              "sum": {
                "label": "Sum"
              },
              "average": {
                "label": "Average"
              },
              "median": {
                "label": "Median"
              },
              "standard_deviation": {
                "label": "Standard Deviation"
              },
              "variance": {
                "label": "Variance"
              },
              "product": {
                "label": "Product"
              }
            },
            "val": "sum"
          },
          "multi_row_functions__sel_labels": {
            "type": "select",
            "label": "Select Rows(s)",
            "show_if": "$table_id.numOfLabel >= 1 && this.multi_row_functions__function!='quota'",
            "required": true,
            "table": "table_id",
            "multiple": true,
            "bind": "LABELS"
          },
          "multi_row_functions__sel_rows": {
            "type": "select",
            "label": "Select Rows",
            "show_if": "false",
            "required": true,
            "options": {
              "row-1": {
                "label": "Row-1"
              },
              "row-2": {
                "label": "Row-2"
              },
              "row-3": {
                "label": "Row-3"
              },
              "row-4": {
                "label": "Row-4"
              },
              "row-5": {
                "label": "Row-5"
              },
              "row-6": {
                "label": "Row-6"
              },
              "row-7": {
                "label": "Row-7"
              },
              "row-8": {
                "label": "Row-8"
              },
              "row-9": {
                "label": "Row-9"
              },
              "row-10": {
                "label": "Row-10"
              },
              "row+1": {
                "label": "Row+1"
              },
              "row+2": {
                "label": "Row+2"
              },
              "row+3": {
                "label": "Row+3"
              },
              "row+4": {
                "label": "Row+4"
              },
              "row+5": {
                "label": "Row+5"
              },
              "row+6": {
                "label": "Row+6"
              },
              "row+7": {
                "label": "Row+7"
              },
              "row+8": {
                "label": "Row+8"
              },
              "row+9": {
                "label": "Row+9"
              },
              "row+10": {
                "label": "Row+10"
              }
            },
            "multiple": true,
            "val": "row-1"
          },
          "multi_row_functions__sel_label_a": {
            "type": "select",
            "label": "Select Label A",
            "show_if": "$table_id.numOfLabel >= 1 && this.multi_row_functions__function=='quota'",
            "required": true,
            "table": "table_id",
            "bind": "LABELS"
          },
          "multi_row_functions__sel_label_b": {
            "type": "select",
            "label": "Select Label B",
            "show_if": "$table_id.numOfLabel >= 1 && this.multi_row_functions__function=='quota'",
            "required": true,
            "table": "table_id",
            "bind": "LABELS",
            "breakLine": true
          },
          "position": {
            "type": "select",
            "label": "Position",
            "show_if": "$table_id.numOfLabel >= 1",
            "required": true,
            "options": {
              "bottom": {
                "label": "BOTTOM"
              },
              "top": {
                "label": "TOP"
              },
              "above": {
                "label": "ABOVE"
              },
              "below": {
                "label": "BELOW"
              }
            },
            "val": "bottom"
          },
          "positioning_row": {
            "type": "select",
            "label": "Positioning Row",
            "show_if": "$table_id.numOfLabel >= 1 && (this.position=='above' || this.position=='below')",
            "required": true,
            "table": "table_id",
            "bind": "LABELS"
          },
          "format__category": {
            "type": "select",
            "label": "Display Format",
            "show_if": "$table_id.numOfLabel >= 1",
            "required": true,
            "options": {
              "standard": {
                "label": "Standard"
              },
              "number": {
                "label": "Number"
              },
              "percentage": {
                "label": "Percentage"
              },
              "text": {
                "label": "Text"
              },
              "date": {
                "label": "Date"
              },
              "currency": {
                "label": "Currency"
              }
            },
            "val": "standard"
          },
          "format__rounding": {
            "type": "select",
            "label": "Decimal Places for display",
            "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
            "required": true,
            "options": {
              "no_rounding": {
                "label": "No rounding"
              },
              "0": {
                "label": "0 digits"
              },
              "1": {
                "label": "1 digits"
              },
              "2": {
                "label": "2 digits"
              },
              "3": {
                "label": "3 digits"
              },
              "4": {
                "label": "4 digits"
              },
              "5": {
                "label": "5 digits"
              },
              "6": {
                "label": "6 digits"
              },
              "7": {
                "label": "7 digits"
              },
              "8": {
                "label": "8 digits"
              },
              "9": {
                "label": "9 digits"
              }
            },
            "val": "no_rounding"
          },
          "format__use_1000_separator": {
            "type": "checkbox",
            "label": "Use 1000 Separator(.)",
            "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
            "val": "false",
            "isOn": "true",
            "isOff": "false"
          },
          "format__currency_symbol": {
            "type": "select",
            "label": "Symbol",
            "show_if": "this.format__category=='currency'",
            "required": true,
            "options": {
              "dollar": {
                "label": "$"
              },
              "euro": {
                "label": "€"
              },
              "pound": {
                "label": "£"
              },
              "yen": {
                "label": "¥ (Yen, currency of Japan)"
              },
              "colon": {
                "label": "₡ (Colón, currency of Costa Rica)"
              },
              "naira": {
                "label": "₦ (Naira, currency of Nigeria)"
              },
              "rupee": {
                "label": "₨ (Rupee, currency of India)"
              },
              "rupie": {
                "label": "₹ (Rupee, currency of India)"
              },
              "won": {
                "label": "₩ (Won, currency in South Korea and North Korea)"
              },
              "hebrew": {
                "label": "₪ (Currency of Israel)"
              },
              "dong": {
                "label": "₫ (Currency of Vietnam)"
              },
              "kip": {
                "label": "₭ (Kip, currency of Laos)"
              },
              "mongolia": {
                "label": "₮ (Currency of Mongolia)"
              },
              "peso": {
                "label": "₱ (Peso, currency of the Philippines)"
              },
              "guarani": {
                "label": "₲ (Guaraní, currency of Paraguay)"
              },
              "hryvnia": {
                "label": "₴ (Hryvnia, currency of Ukraine)"
              },
              "tenge": {
                "label": "₸ (Tenge, currency of Kazakhstan)"
              },
              "lira": {
                "label": "₺ (Lira, currency of Turkey)"
              },
              "manat": {
                "label": "₼ (Manat, currency of Azerbaijan)"
              },
              "rubles": {
                "label": "₽ (Rubles, currency of Russia)"
              },
              "lari": {
                "label": "₾ (Lari, currency of Georgia)"
              },
              "bitcoin": {
                "label": "₿ (Bitcoin, crypto currency)"
              }
            },
            "val": "dollar"
          },
          "format__date_format": {
            "type": "select",
            "label": "Type",
            "show_if": "this.format__category=='date'",
            "required": true,
            "options": {
              "mm/dd/yyyy": {
                "label": "3/14/2012"
              },
              "D, M dd, Y": {
                "label": "Wednesday, March 14, 2012"
              },
              "yyyy-mm-dd": {
                "label": "2012-03-14"
              },
              "m.dd.yyyy": {
                "label": "3.14.2012"
              },
              "m.dd.yy": {
                "label": "3.14.12"
              },
              "dd.m.yyyy": {
                "label": "14.3.2012"
              },
              "dd.m.yy": {
                "label": "14.3.12"
              },
              "M dd, Y": {
                "label": "March 14, 2012"
              },
              "dd-mm-yyyy": {
                "label": "14-03-2012"
              },
              "mm-dd-yyyy": {
                "label": "03-14-2012"
              },
              "dd-mm-yy": {
                "label": "14-03-12"
              },
              "mm-dd-yy": {
                "label": "03-14-12"
              }
            },
            "val": "mm/dd/yyyy"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.add_new_row": {
        "type": "checkbox",
        "label": "Add Label",
        "show_if": "$table_id.numOfLabel < 1",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "options.new_row_label": {
        "type": "text",
        "label": "Label Name",
        "show_if": "$table_id.numOfLabel < 1 && options.add_new_row == 'true'",
        "val": ""
      },
      "options.new_sel_column": {
        "type": "select",
        "label": "Select Column",
        "show_if": "$table_id.numOfLabel < 1 && options.add_new_row == 'true'",
        "required": true,
        "table": "table_id",
        "multiple": false,
        "bind": "COLUMNS",
        "breakLine": true
      },
      "options.insert_on_top": {
        "type": "checkbox",
        "label": "Insert on Top",
        "show_if": "$table_id.numOfLabel < 1",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      }
    }
  }
}
,
"/DCCOVID19Options.json/DCCOVID19Options.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.all_countries": {
        "type": "hidden",
        "val": "false"
      },
      "options.stat_vars": {
        "type": "fieldset",
        "label": "Statistics data category(s)",
        "repeat": true,
        "fields": {
          "stat_var_name": {
            "type": "select",
            "label": "Category",
            "required": true,
            "options": {
              "CumulativeCount_Vaccine_COVID_19_Administered": {
                "label": "Cumulative Count of COVID_19, Vaccine Administered"
              },
              "IncrementalCount_Vaccine_COVID_19_Administered": {
                "label": "Incremental Count of COVID_19, Vaccine Administered"
              },
              "CumulativeCount_MedicalTest_ConditionCOVID_19": {
                "label": "Cumulative Count of COVID_19"
              },
              "IncrementalCount_MedicalTest_ConditionCOVID_19": {
                "label": "Incremental Count of COVID_19"
              },
              "CumulativeCount_MedicalTest_COVID_19_PCR": {
                "label": "Cumulative Count of COVID_19, COVID-19 PCRTest"
              },
              "IncrementalCount_MedicalTest_COVID_19_PCR": {
                "label": "Incremental Count of COVID_19, COVID-19 PCRTest"
              },
              "CumulativeCount_MedicalConditionIncident_COVID_19_ConfirmedCase": {
                "label": "Cumulative Count of Confirmed Case"
              },
              "IncrementalCount_MedicalConditionIncident_COVID_19_ConfirmedCase": {
                "label": "Incremental Count of Confirmed Case"
              },
              "CumulativeCount_MedicalConditionIncident_COVID_19_PatientDeceased": {
                "label": "Cumulative Count of Patient Deceased"
              },
              "IncrementalCount_MedicalConditionIncident_COVID_19_PatientDeceased": {
                "label": "Incremental Count of Patient Deceased"
              },
              "Count_MedicalConditionIncident_COVID_19_PatientHospitalized": {
                "label": "Count of Patient Hospitalized"
              },
              "Count_MedicalConditionIncident_COVID_19_PatientInICU": {
                "label": "Count of Patient in ICU"
              },
              "dc/n9rqwq8d3lcx3": {
                "label": "Covid 19 Mobility Trend of Grocery Store & Pharmacy"
              },
              "dc/0ny9m7k0lzmn5": {
                "label": "Covid 19 Mobility Trend of Local Business"
              },
              "dc/p49ghylpwz93f": {
                "label": "Covid 19 Mobility Trend of Park"
              },
              "dc/7fmnve6yyc508": {
                "label": "Covid 19 Mobility Trend of Residence"
              },
              "dc/qdbhwwr88yhl7": {
                "label": "Covid 19 Mobility Trend of Transport Hub"
              },
              "dc/tbbjnf9bk96yh": {
                "label": "Covid 19 Mobility Trend of Workplace"
              }
            }
          },
          "per_capita": {
            "type": "checkbox",
            "label": "Per capita",
            "show_if": "false",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.output_as_chart": {
        "type": "checkbox",
        "label": "Output a Graph",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
}
,
"/CopyOptions.json/CopyOptions.json": {
  "apply_to_table": {
    "type": "checkbox",
    "label": "Copy Table",
    "val": "true",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  },
  "selection": {
    "type": "fieldset",
    "label": "Select Columns/Rows",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "show_if": "apply_to_table == 'false'",
    "fields": {
    }
  }
}
,
"/PeriodicyByTableOptions.json/PeriodicyByTableOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Select Periodicy Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.task_symbol": {
        "type": "hidden",
        "val": "periodicy_by_table"
      },
      "options.standard_table": {
        "type": "checkbox",
        "label": "Standard Periodicy Table",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "options.initial_date": {
        "type": "select",
        "label": "Initial Date",
        "show_if": "options.standard_table=='false'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "options.period": {
        "type": "select",
        "label": "Periodicy (e.g. Monthly, Quarterly)",
        "show_if": "options.standard_table=='false'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "options.final_date": {
        "type": "select",
        "label": "Final Date",
        "show_if": "options.standard_table=='false'",
        "table": "table_id",
        "bind": "COLUMNS",
        "breakLine": true
      },
      "options.volume": {
        "type": "select",
        "label": "Amount",
        "show_if": "options.standard_table=='false'",
        "table": "table_id",
        "bind": "COLUMNS"
      },
      "options.growth": {
        "type": "select",
        "label": "Growth",
        "show_if": "options.standard_table=='false'",
        "table": "table_id",
        "bind": "COLUMNS"
      },
      "options.growth_period": {
        "type": "select",
        "label": "Growth Period",
        "show_if": "options.standard_table=='false'",
        "options": {
          "selected_period": {
            "label": "Equal to Periodicy"
          },
          "week_on_week": {
            "label": "Week on Week"
          },
          "month_on_month": {
            "label": "Month on Month"
          },
          "quarter_on_quarter": {
            "label": "Quarter on Quarter"
          },
          "year_on_year": {
            "label": "Year on Year"
          },
          "column": {
            "label": "Select Column"
          }
        },
        "val": "selected_period"
      },
      "options.growth_period_column": {
        "type": "select",
        "label": "Growth Period Column",
        "show_if": "options.standard_table=='false' && options.growth_period=='column'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true,
        "breakLine": true
      },
      "options.use_growth_pattern_column": {
        "type": "checkbox",
        "label": "Use Growth Pattern",
        "show_if": "options.standard_table=='false'",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "options.growth_pattern_column": {
        "type": "select",
        "label": "Growth Pattern",
        "show_if": "options.standard_table=='false' && options.use_growth_pattern_column=='true'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true,
        "breakLine": true
      },
      "options.end_date": {
        "type": "date",
        "label": "End Date of Table",
        "val": "",
        "required": true,
        "style": "width: 300px"
      }
    }
  }
},
"/D3SunburstTableInfoSettingsBackup.json/D3SunburstTableInfoSettingsBackup.json": {
  "options.popup_or_table": {
    "type": "select",
    "label": "Type",
    "required": true,
    "options": {
      "popup": {
        "label": "Pop-Up"
      },
      "embedded": {
        "label": "Embedded"
      }
    },
    "val": "popup",
    "breakLine": true
  },
  "output.set_table_info": {
    "type": "checkbox",
    "label": "Set Display Type",
    "show_if": "options.popup_or_table=='embedded'",
    "val": "false",
    "isOn": "true",
    "isOff": "false"
  },
  "output.table_info": {
    "type": "select",
    "label": "Output Type",
    "show_if": "options.popup_or_table=='embedded' && output.set_table_info=='true'",
    "options": {
      "simple_table": {
        "label": "Table"
      },
      "D3": {
        "label": "D3"
      },
      "Flexmonster": {
        "label": "Flexmonster"
      },
      "PDF": {
        "label": "PDF"
      }
    },
    "val": "D3",
    "required": true,
    "breakLine": true
  }
},
"/ChatGPTOptions.json/ChatGPTOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.is_feed_input_table": {
        "type": "checkbox",
        "label": "Feed Input table",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.is_chat_statements_table": {
        "type": "checkbox",
        "label": "Chat Statements Table",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.chats": {
        "type": "fieldset",
        "label": "Input Chats",
        "show_if": "options.is_chat_statements_table=='false'",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "repeat": true,
        "fields": {
          "item": {
            "type": "textarea",
            "label": "Chat",
            "rows": 2,
            "val": "",
            "placeholder": "What is the longest value in the first column?",
            "width": "100%"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.chat_table.table_id": {
        "type": "select",
        "label": "Select Chat Input Table",
        "show_if": "options.is_chat_statements_table=='true'",
        "required": true,
        "bind": "TABLES"
      },
      "options.chat_table.chat_col": {
        "type": "select",
        "label": "Select column of Chat",
        "show_if": "options.is_chat_statements_table=='true'",
        "required": true,
        "table": "options.chat_table.table_id",
        "bind": "COLUMNS",
        "style": "min-width: 200px",
        "breakLine": true
      },
      "options.is_table_output": {
        "type": "checkbox",
        "label": "Is table output",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.is_custom_output_table_columns": {
        "type": "checkbox",
        "label": "Customize output table columns tile",
        "show_if": "options.is_table_output=='true'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.custom_output_table_columns": {
        "type": "fieldset",
        "label": "Add output yable columns tile",
        "show_if": "options.is_table_output=='true' && options.is_custom_output_table_columns=='true'",
        "repeat": true,
        "fields": {
          "column_title": {
            "type": "text",
            "label": "Column Title",
            "required": true,
            "val": "",
            "width": "100%"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.how_to_output_table": {
        "type": "select",
        "label": "How to output table",
        "required": true,
        "options": {
          "create_new_table": {
            "label": "Create new output table"
          },
          "update_input_table": {
            "label": "Directly update input table"
          }
        },
        "val": "create_new_table",
        "breakLine": true
      },
      "options.use_own_openai_key": {
        "type": "checkbox",
        "label": "Use my own OpenAI API Key",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.openai_key": {
        "type": "text",
        "label": "OpenAI API Key",
        "show_if": "options.use_own_openai_key == 'true'",
        "required": true,
        "val": "",
        "width": "100%",
        "breakLine": true
      }
    }
  }
}
,
"/ImportDirFromGithubOptions.json/ImportDirFromGithubOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.from": {
        "type": "hidden",
        "val": "web"
      },
      "options.webservice": {
        "type": "hidden",
        "val": "github"
      },
      "options.output_format": {
        "type": "select",
        "label": "Select Type",
        "options": {
          "csv_table": {
            "label": "CSV-Table"
          },
          "line_by_line": {
            "label": "Line by Line"
          },
          "word_by_word": {
            "label": "Text"
          },
          "JSON": {
            "label": "JSON"
          },
          "file_list": {
            "label": "File List"
          }
        },
        "val": "csv_table",
        "required": true
      },
      "options.word_pattern_type": {
        "type": "select",
        "label": "Word Pattern",
        "show_if": "options.output_format=='word_by_word' && options.specify_word_pattern=='true'",
        "options": {
          "regex": {
            "label": "Regular Expression"
          }
        },
        "val": "regex",
        "required": true
      },
      "options.word_pattern_regex": {
        "type": "text",
        "label": "Regular Expression",
        "show_if": "options.output_format=='word_by_word' && options.specify_word_pattern=='true' && options.word_pattern_type=='regex'",
        "required": true,
        "val": "[a-z][1-9]",
        "breakLine": true
      },
      "options.column_setting": {
        "type": "checkbox",
        "label": "Column Settings",
        "show_if": "options.output_format!='file_list'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "column_setting_frame": {
        "type": "fieldset",
        "label": "Column Settings",
        "show_if": "options.output_format!='file_list' && options.column_setting=='true'",
        "repeat": false,
        "fields": {
          "options.add_row_column": {
            "type": "checkbox",
            "label": "Add Row Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_word_count_column": {
            "type": "checkbox",
            "label": "Add 'Word Count' Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_word_nonword_column": {
            "type": "checkbox",
            "label": "Add 'Word & Non-Word' Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.add_section_column": {
            "type": "checkbox",
            "label": "Add Section Column",
            "show_if": "options.output_format=='word_by_word'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "section_column_types_frame": {
            "type": "fieldset",
            "label": "Section Column Types",
            "show_if": "options.output_format=='word_by_word' && options.add_section_column=='true'",
            "repeat": false,
            "fields": {
              "options.section_columns.add_paragraph_section_column": {
                "type": "checkbox",
                "label": "Paragraph",
                "val": "false",
                "isOn": "true",
                "isOff": "false",
                "breakLine": true
              },
              "options.section_columns.add_custom_section_column": {
                "type": "checkbox",
                "label": "Custom Section Delimiter",
                "val": "false",
                "isOn": "true",
                "isOff": "false"
              },
              "options.section_columns.custom_delimiter": {
                "type": "text",
                "label": "Delimiter(1 character)",
                "show_if": "options.section_columns.add_custom_section_column=='true'",
                "maxLength": 1,
                "required": true,
                "breakLine": true
              },
              "options.section_columns.add_brackets_punctuation_section_column": {
                "type": "checkbox",
                "label": "Brackets and Punctuation",
                "val": "false",
                "isOn": "true",
                "isOff": "false"
              },
              "options.section_columns.brackets_punctuation_section_column_type": {
                "type": "select",
                "label": "Brackets Type",
                "show_if": "options.section_columns.add_brackets_punctuation_section_column=='true'",
                "options": {
                  "nesting_structure": {
                    "label": "Nesting Structure"
                  },
                  "inner_bracket": {
                    "label": "Inner Bracket"
                  },
                  "brackets_only": {
                    "label": "Brackets Only"
                  },
                  "show_all": {
                    "label": "Show All"
                  }
                },
                "val": "show_all",
                "required": true,
                "breakLine": true
              }
            }
          },
          "options.add_filename_column": {
            "type": "checkbox",
            "label": "Add Column for File Name",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "style": "margin-top: 10px",
            "breakLine": true
          },
          "options.add_filepath_column": {
            "type": "checkbox",
            "label": "Add Column for File Path",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          }
        }
      },
      "options.is_cloud_dir": {
        "type": "hidden",
        "val": "true"
      },
      "if_dir_frame": {
        "type": "fieldset",
        "label": "Directory Import Options",
        "show_if": "options.output_format!='file_list' && options.is_cloud_dir=='true'",
        "repeat": false,
        "fields": {
          "options.unify_in_one_table": {
            "type": "checkbox",
            "label": "Unify in one table",
            "val": "true",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.suffix": {
            "type": "select",
            "label": "Output tables suffix",
            "show_if": "options.unify_in_one_table=='false'",
            "options": {
              "number": {
                "label": "Number"
              },
              "filename": {
                "label": "Filename"
              }
            },
            "val": "number",
            "required": true,
            "breakLine": true
          },
          "options.include_subdir": {
            "type": "checkbox",
            "label": "Include Subdirectories",
            "show_if": "options.output_format!='file_list' && options.is_cloud_dir=='true'",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true,
            "style": "margin-top: 10px"
          }
        }
      },
      "options.file_list.include_subdir": {
        "type": "checkbox",
        "label": "Include Subdirectories",
        "show_if": "options.output_format=='file_list'",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true,
        "style": "margin-top: 10px"
      },
      "options.file_list.add_change_date_column": {
        "type": "checkbox",
        "label": "Add Change Date Column",
        "show_if": "options.output_format=='file_list'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  },
  "import_link_token_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px",
    "repeat": false,
    "fields": {
      "options.link_csv_file": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test/blob/main/example.csv",
        "show_if": "options.webservice=='github' && options.is_cloud_dir=='false' && options.output_format=='csv_table'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.link_text_file": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test/blob/main/example.txt(json, csv, etc)",
        "show_if": "options.webservice=='github' && options.is_cloud_dir=='false' && options.output_format!='csv_table' && options.output_format!='file_list'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.one_drive.file_path": {
        "type": "text",
        "label": "Enter path to file e.g. ZippyDoc/Subdir1/test.txt",
        "show_if": "options.webservice=='ms_one_drive' && options.output_format!='file_list' && options.is_cloud_dir=='false'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox.file_path": {
        "type": "text",
        "label": "Enter path to file e.g. ZippyDoc/Subdir1/test.txt",
        "show_if": "options.webservice=='dropbox' && options.output_format!='file_list' && options.is_cloud_dir=='false'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dir_path_filter": {
        "type": "fieldset",
        "label": "Import Path and File Filter",
        "show_if": "options.output_format=='file_list' || options.is_cloud_dir=='true'",
        "repeat": true,
        "fields": {
          "github__link_directory": {
            "type": "text",
            "label": "Enter link e.g. https://github.com/zippydoc/test",
            "show_if": "options.webservice=='github'",
            "required": true,
            "width": "100%",
            "breakLine": true
          },
          "one_drive__dir_path": {
            "type": "text",
            "label": "Enter path to dir e.g. ZippyDoc/Subdir1",
            "show_if": "options.webservice=='ms_one_drive'",
            "width": "100%",
            "breakLine": true
          },
          "dropbox__dir_path": {
            "type": "text",
            "label": "Enter path to dir e.g. ZippyDoc/Subdir1",
            "show_if": "options.webservice=='dropbox'",
            "width": "100%",
            "breakLine": true
          },
          "google_drive__dir_path": {
            "type": "text",
            "label": "Enter path to dir",
            "show_if": "options.webservice=='google_drive'",
            "width": "100%",
            "breakLine": true
          },
          "dir_filter__filter_type": {
            "type": "select",
            "label": "Filter Type",
            "options": {
              "all": {
                "label": "All"
              },
              "contains": {
                "label": "Contains"
              },
              "starts_with": {
                "label": "Starts With"
              },
              "ends_with": {
                "label": "Ends With"
              },
              "regex": {
                "label": "Regular Expression"
              }
            },
            "val": "all",
            "required": true
          },
          "dir_filter__filter_string": {
            "type": "text",
            "label": "Filter",
            "show_if": "this.dir_filter__filter_type!='all'",
            "required": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.is_github_private": {
        "type": "checkbox",
        "label": "Github repository is private",
        "show_if": "options.webservice=='github'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "options.github_token": {
        "type": "text",
        "label": "Github personal access token",
        "show_if": "options.webservice=='github' && options.is_github_private=='true'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.one_drive.access_token": {
        "type": "text",
        "label": "One Drive Access Token",
        "show_if": "options.webservice=='ms_one_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox.auth_code": {
        "type": "text",
        "label": "Dropbox Authorization Code",
        "show_if": "options.webservice=='dropbox'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.google_drive.access_token": {
        "type": "text",
        "label": "Google Drive Access Token",
        "show_if": "options.webservice=='google_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      }
    }
  }
}
,
"/AppendInput.json/AppendInput.json": {
  "input": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "target_table.table_id": {
        "type": "select",
        "label": "Left Table",
        "bind": "TABLES"
      },
      "target_table.remove_input_table_after_processing": {
        "type": "hidden",
        "val": "false"
      },
      "target_table.is_word": {
        "type": "hidden",
        "val": "false"
      },
      "source_table.table_id": {
        "type": "select",
        "label": "Right Table",
        "bind": "TABLES",
        "breakLine": true
      },
      "source_table.remove_input_table_after_processing": {
        "type": "hidden",
        "val": "false"
      },
      "source_table.is_word": {
        "type": "hidden",
        "val": "false"
      }
    }
  }
}
,
"/WebAccessOptions.json/WebAccessOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.type": {
        "type": "radio",
        "label": "",
        "required": true,
        "values": {
          "embed_code": "Generate Embed-Code",
          "api_key": "Generate API-KEY"
        },
        "val": "embed_code",
        "breakLine": true
      },
      "options.embed_code.framework": {
        "type": "select",
        "label": "Select Frontend Framework",
        "required": true,
        "show_if": "options.type=='embed_code'",
        "options": {
          "jquery": {
            "label": "jQuery"
          },
          "react": {
            "label": "React (Coming soon...)"
          },
          "vue": {
            "label": "Vue (Coming soon...)"
          },
          "angular": {
            "label": "Angular (Coming soon...)"
          }
        },
        "val": "jquery",
        "style": "width: 200px"
      },
      "options.embed_code.use_datatable": {
        "type": "checkbox",
        "label": "Use Theme",
        "show_if": "options.type=='embed_code'",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
},
"/RunFlowOptions.json/RunFlowOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.is_output_tables_of_selected_flow": {
        "type": "checkbox",
        "label": "Output Table(s) of Selected Flow",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.output_tables_of_selected_flow": {
        "type": "fieldset",
        "label": "Output table(s) of selected Flow",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.is_output_tables_of_selected_flow=='true'",
        "repeat": true,
        "fields": {
          "position": {
            "type": "select",
            "label": "Bottom Up Table Position",
            "required": true,
            "options": {
              "1": {
                "label": "Position 1"
              },
              "2": {
                "label": "Position 2"
              },
              "3": {
                "label": "Position 3"
              },
              "4": {
                "label": "Position 4"
              },
              "5": {
                "label": "Position 5"
              },
              "6": {
                "label": "Position 6"
              },
              "7": {
                "label": "Position 7"
              },
              "8": {
                "label": "Position 8"
              },
              "9": {
                "label": "Position 9"
              },
              "10": {
                "label": "Position 10"
              }
            },
            "val": "1",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.manual_config": {
        "type": "hidden",
        "val": "false"
      },
      "options.input_tables_map": {
        "type": "fieldset",
        "label": "Input Tables Mapping",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "replace_first_table_of_selected_flow=='true' && options.manual_config=='true'",
        "repeat": true,
        "fields": {
          "caller_input_table": {
            "type": "select",
            "label": "Caller Input Table",
            "bind": "TABLES",
            "empty": "",
            "required": true
          },
          "callee_input_table": {
            "type": "select",
            "label": "Callee Input Table",
            "bind": "TABLES",
            "empty": "",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "note1": {
        "type": "textarea",
        "label": "",
        "show_if": "options.manual_config=='true'",
        "val": "Ensure, that the relevant column name(s) of the target table(s) flow table(s) match",
        "disabled": true,
        "width": "100%"
      },
      "options.output_tables_map": {
        "type": "fieldset",
        "label": "Output Tables Mapping",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.manual_config=='true'",
        "repeat": true,
        "fields": {
          "caller_output_table": {
            "type": "select",
            "label": "Caller Output Table",
            "bind": "TABLES",
            "empty": "",
            "required": true
          },
          "callee_output_table": {
            "type": "select",
            "label": "Callee Output Table",
            "bind": "TABLES",
            "empty": "",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      }
    }
  }
}
,
"/FlexmonsterScatterOptions.json/FlexmonsterScatterOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "show_if": "options.configure_manual=='true'",
    "repeat": false,
    "fields": {
      "options.type": {
        "type": "hidden",
        "val": "scatter_chart"
      },
      "options.chart_type": {
        "type": "hidden",
        "val": "scatter"
      },
      "options.add_column_cols": {
        "type": "checkbox",
        "label": "by Category",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.column_cols": {
        "type": "fieldset",
        "label": "Category column(s)",
        "show_if": "options.add_column_cols=='true'",
        "repeat": true,
        "fields": {
          "column_col": {
            "type": "select",
            "label": "Category column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "is_date": {
            "type": "checkbox",
            "label": "Is Date",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.row_cols": {
        "type": "fieldset",
        "label": "Series column(s)",
        "repeat": true,
        "fields": {
          "row_col": {
            "type": "select",
            "label": "Series column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "is_date": {
            "type": "checkbox",
            "label": "Is Date",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.measure_cols": {
        "type": "fieldset",
        "label": "Value column(s)",
        "repeat": true,
        "fields": {
          "measure_col": {
            "type": "select",
            "label": "Value Column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "aggregation": {
            "type": "select",
            "label": "Aggregation Function",
            "options": {
              "sum": {
                "label": "Sum"
              },
              "count": {
                "label": "Count"
              },
              "distinctcount": {
                "label": "Distinct Count"
              },
              "average": {
                "label": "Average"
              },
              "median": {
                "label": "Median"
              },
              "product": {
                "label": "Product"
              },
              "min": {
                "label": "Min"
              },
              "max": {
                "label": "Max"
              },
              "stdevp": {
                "label": "Population Standard Deviation"
              },
              "stdevs": {
                "label": "Sample Standard Deviation"
              },
              "percent": {
                "label": "Percent"
              }
            },
            "val": "sum",
            "required": true,
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      }
    }
  }
}
,
"/DCScatterPlotOptions.json/DCScatterPlotOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.all_countries": {
        "type": "hidden",
        "val": "false"
      },
      "first_stat_var_frame": {
        "type": "fieldset",
        "label": "Pick 1st statistical variable",
        "repeat": false,
        "fields": {
          "options.first_stat_var__category": {
            "type": "select",
            "label": "Category",
            "required": true,
            "options": {
              "climate": {
                "label": "Climate"
              },
              "covid19": {
                "label": "COVID-19"
              },
              "crime": {
                "label": "Crime"
              },
              "demographics": {
                "label": "Demographics"
              },
              "economic": {
                "label": "Economic"
              },
              "education": {
                "label": "Education"
              },
              "employment": {
                "label": "Employment"
              },
              "energy": {
                "label": "Energy"
              },
              "health": {
                "label": "Health"
              }
            },
            "val": "climate"
          },
          "options.first_stat_var__climate__stat_var_name": {
            "type": "select",
            "label": "Statistical variable",
            "show_if": "options.first_stat_var__category=='climate'",
            "required": true,
            "options": {
              "Amount_Emissions_CarbonDioxide_PerCapita": {
                "label": "CO2 Emissions Per Capita"
              },
              "Count_EarthquakeEvent": {
                "label": "Count of Earthquake Event"
              },
              "Count_EarthquakeEvent_M3To4": {
                "label": "Count of Earthquake Event of 3 - 4 Magnitude"
              },
              "Count_EarthquakeEvent_M3Onwards": {
                "label": "Count of Earthquake Event of 3 Magnitude or More"
              },
              "Count_EarthquakeEvent_M4To5": {
                "label": "Count of Earthquake Event of 4 - 5 Magnitude"
              },
              "Count_EarthquakeEvent_M4Onwards": {
                "label": "Count of Earthquake Event of 4 Magnitude or More"
              },
              "Count_EarthquakeEvent_M5To6": {
                "label": "Count of Earthquake Event of 5 - 6 Magnitude"
              },
              "Count_EarthquakeEvent_M5Onwards": {
                "label": "Count of Earthquake Event of 5 Magnitude or More"
              }
            },
            "val": "Amount_Emissions_CarbonDioxide_PerCapita"
          },
          "options.first_stat_var__crime__stat_var_name": {
            "type": "select",
            "label": "Statistical variable",
            "show_if": "options.first_stat_var__category=='crime'",
            "required": true,
            "options": {
              "Count_CriminalActivities_MurderAndNonNegligentManslaughter_AsFractionOf_Count_Person": {
                "label": "Count of Murder And Non Negligent Manslaughter Per Capita"
              },
              "Count_CriminalActivities_MurderAndNonNegligentManslaughter_Female_AsFractionOf_Count_Person_Female": {
                "label": "Count of Female Murder And Non Negligent Manslaughter Per Female Capita"
              },
              "Count_CriminalActivities_MurderAndNonNegligentManslaughter_Male_AsFractionOf_Count_Person_Male": {
                "label": "Count of Male Murder And Non Negligent Manslaughter Per Male Capita"
              }
            },
            "val": "Count_CriminalActivities_MurderAndNonNegligentManslaughter_AsFractionOf_Count_Person"
          },
          "options.first_stat_var__demographics__stat_var_name": {
            "type": "select",
            "label": "Statistical variable",
            "show_if": "options.first_stat_var__category=='demographics'",
            "required": true,
            "options": {
              "Count_Person": {
                "label": "Population"
              },
              "GrowthRate_Count_Person": {
                "label": "Population Growth Rate"
              },
              "Count_Person_PerArea": {
                "label": "Population Density"
              },
              "Count_Person_IsInternetUser_PerCapita": {
                "label": "Percent of Internet Users"
              },
              "Count_Person_ResidingLessThan5MetersAboveSeaLevel_AsFractionOf_Count_Person": {
                "label": "Percent of Population Living in Areas Below 5 Meters Elevation"
              },
              "Count_Person_Rural": {
                "label": "Rural Population"
              },
              "Count_Person_Urban": {
                "label": "Urban Population"
              }
            },
            "val": "Count_Person"
          },
          "options.first_stat_var__economic__stat_var_name": {
            "type": "select",
            "label": "Statistical variable",
            "show_if": "options.first_stat_var__category=='economic'",
            "required": true,
            "options": {
              "Amount_EconomicActivity_GrossDomesticProduction_Nominal": {
                "label": "GDP"
              },
              "GrowthRate_Amount_EconomicActivity_GrossDomesticProduction": {
                "label": "Growth Rate of GDP"
              },
              "Amount_EconomicActivity_GrossNationalIncome_PurchasingPowerParity": {
                "label": "GNI (Purchasing Power Parity)"
              },
              "Count_Product_MobileCellularSubscription_AsFractionOf_Count_Person": {
                "label": "Mobile Subscriptions Per Capita"
              },
              "Amount_Debt_Government": {
                "label": "Debt With Government"
              },
              "Amount_Debt_Government_AsAFractionOfGrossDomesticProduction": {
                "label": "Debt With Government as Fraction of GDP"
              },
              "GiniIndex_EconomicActivity": {
                "label": "Gini Index of Economic Activity"
              },
              "Amount_EconomicActivity_ExpenditureActivity_MilitaryExpenditure_Government": {
                "label": "Military Expenditure, Government"
              },
              "Amount_EconomicActivity_ExpenditureActivity_MilitaryExpenditure_Government_AsFractionOf_Amount_EconomicActivity_GrossDomesticProduction_Nominal": {
                "label": "Military Expenditure, Government as Fraction of Economic Activity Gross Domestic Production Nominal"
              },
              "Amount_EconomicActivity_ExpenditureActivity_EducationExpenditure_Government_AsFractionOf_Amount_EconomicActivity_ExpenditureActivity_Government": {
                "label": "Education Expenditure, Government as Fraction of Economic Activity Expenditure Activity Government"
              },
              "Amount_EconomicActivity_ExpenditureActivity_EducationExpenditure_Government_AsFractionOf_Amount_EconomicActivity_GrossDomesticProduction_Nominal": {
                "label": "Education Expenditure, Government as Fraction of Economic Activity Gross Domestic Production Nominal"
              },
              "Amount_EconomicActivity_ExpenditureActivity_HealthcareExpenditure_AsFractionOf_Count_Person": {
                "label": "Healthcare Expenditure Per Capita"
              },
              "Amount_EconomicActivity_ExpenditureActivity_TertiaryEducationExpenditure_Government_AsFractionOf_Amount_EconomicActivity_ExpenditureActivity_EducationExpenditure_Government": {
                "label": "Tertiary Education Expenditure, Government as Fraction of Economic Activity Expenditure Activity Education Expenditure Government"
              },
              "Amount_EconomicActivity_GrossValueAdded_RealValue": {
                "label": "Gross Value Added (Real Value)"
              },
              "Amount_EconomicActivity_GrossValueAdded_ISICAgricultureHuntingForestryFishing_RealValue": {
                "label": "Gross Value Added, Agriculture, Hunting, Forestry, Fishing (Real Value)"
              },
              "Amount_EconomicActivity_GrossValueAdded_ISICConstruction_RealValue": {
                "label": "Gross Value Added, Construction (Real Value)"
              },
              "Amount_EconomicActivity_GrossValueAdded_ISICManufacturing_RealValue": {
                "label": "Gross Value Added, Manufacturing (Real Value)"
              },
              "Amount_EconomicActivity_GrossValueAdded_ISICMiningManufacturingUtilities_RealValue": {
                "label": "Gross Value Added, Mining, Manufacturing, Utilities (Real Value)"
              },
              "Amount_EconomicActivity_GrossValueAdded_ISICTransportStorageCommunications_RealValue": {
                "label": "Gross Value Added, Transport, Storage And Communications (Real Value)"
              },
              "Amount_EconomicActivity_GrossValueAdded_ISICWholesaleRetailTradeRestaurantsHotels_RealValue": {
                "label": "Gross Value Added, Wholesale, Retail Trade, Restaurants And Hotels (Real Value)"
              },
              "Amount_Remittance_OutwardRemittance": {
                "label": "Outward Remittance"
              },
              "Amount_Remittance_InwardRemittance": {
                "label": "Inward Remittance"
              },
              "Amount_Remittance_InwardRemittance_AsFractionOf_Amount_EconomicActivity_GrossDomesticProduction_Nominal": {
                "label": "Inward Remittance as Fraction of Economic Activity GDP"
              },
              "Amount_Stock": {
                "label": "Stock"
              },
              "Amount_Stock_AsFractionOf_Amount_EconomicActivity_GrossDomesticProduction_Nominal": {
                "label": "Stock as Fraction of Economic Activity GDP"
              }
            },
            "val": "Amount_EconomicActivity_GrossDomesticProduction_Nominal"
          },
          "options.first_stat_var__education__stat_var_name": {
            "type": "select",
            "label": "Statistical variable",
            "show_if": "options.first_stat_var__category=='education'",
            "required": true,
            "options": {
              "Count_Person_25OrMoreYears_BachelorsDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears": {
                "label": "Bachelors Degree or Higher Population Per Capita 25 or More Years"
              },
              "Count_Person_25OrMoreYears_Female_BachelorsDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears_Female": {
                "label": "Bachelors Degree or Higher, Female Population Per Capita 25 or More Years Female"
              },
              "Count_Person_25OrMoreYears_Male_BachelorsDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears_Male": {
                "label": "Bachelors Degree or Higher, Male Population Per Capita 25 or More Years Male"
              },
              "Count_Person_25OrMoreYears_DoctorateDegree_AsFractionOf_Count_Person_25OrMoreYears": {
                "label": "Doctorate Degree Population Per Capita 25 or More Years"
              },
              "Count_Person_25OrMoreYears_Female_DoctorateDegree_AsFractionOf_Count_Person_25OrMoreYears_Female": {
                "label": "Doctorate Degree, Female Population Per Capita 25 or More Years Female"
              },
              "Count_Person_25OrMoreYears_Male_DoctorateDegree_AsFractionOf_Count_Person_25OrMoreYears_Male": {
                "label": "Doctorate Degree, Male Population Per Capita 25 or More Years Male"
              },
              "Count_Person_25OrMoreYears_MastersDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears": {
                "label": "Masters Degree or Higher Population Per Capita 25 or More Years"
              },
              "Count_Person_25OrMoreYears_Female_MastersDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears_Female": {
                "label": "Masters Degree or Higher, Female Population Per Capita 25 or More Years Female"
              },
              "Count_Person_25OrMoreYears_Male_MastersDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears_Male": {
                "label": "Masters Degree or Higher, Male Population Per Capita 25 or More Years Male"
              },
              "Count_Person_25OrMoreYears_TertiaryEducation_AsFractionOf_Count_Person_25OrMoreYears": {
                "label": "Tertiary Education Population Per Capita 25 or More Years"
              },
              "Count_Person_25OrMoreYears_Female_TertiaryEducation_AsFractionOf_Count_Person_25OrMoreYears_Female": {
                "label": "Tertiary Education, Female Population Per Capita 25 or More Years Female"
              },
              "Count_Person_25OrMoreYears_Male_TertiaryEducation_AsFractionOf_Count_Person_25OrMoreYears_Male": {
                "label": "Tertiary Education, Male Population Per Capita 25 or More Years Male"
              }
            },
            "val": "Count_Person_25OrMoreYears_BachelorsDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears"
          },
          "options.first_stat_var__employment__stat_var_name": {
            "type": "select",
            "label": "Statistical variable",
            "show_if": "options.first_stat_var__category=='employment'",
            "required": true,
            "options": {
              "UnemploymentRate_Person": {
                "label": "Unemployment Rate"
              },
              "Count_Person_InLaborForce": {
                "label": "In Labor Force Population"
              },
              "Count_Person_15To64Years_InLaborForce_AsFractionOf_Count_Person_15To64Years": {
                "label": "15 - 64 Years, in Labor Force Population Per Capita 15 To 64 Years"
              },
              "Count_Person_15To64Years_Female_InLaborForce_AsFractionOf_Count_Person_15To64Years_Female": {
                "label": "15 - 64 Years, in Labor Force, Female Population Per Capita 15 To 64 Years Female"
              },
              "Count_Person_15To64Years_Male_InLaborForce_AsFractionOf_Count_Person_15To64Years_Male": {
                "label": "15 - 64 Years, in Labor Force, Male Population Per Capita 15 To 64 Years Male"
              },
              "Count_Person_15OrMoreYears_InLaborForce_Female_AsFractionOf_Count_Person_InLaborForce": {
                "label": "15 Years or More, in Labor Force, Female Population Per Capita in Labor Force"
              }
            },
            "val": "UnemploymentRate_Person"
          },
          "options.first_stat_var__energy__stat_var_name": {
            "type": "select",
            "label": "Statistical variable",
            "show_if": "options.first_stat_var__category=='energy'",
            "required": true,
            "options": {
              "Annual_Consumption_Electricity": {
                "label": "Annual Consumption of Electricity"
              },
              "Annual_Exports_Electricity": {
                "label": "Annual Exports of Electricity"
              },
              "Annual_Generation_Electricity": {
                "label": "Net generation, all fuels, all sectors, annual"
              },
              "Annual_Imports_Electricity": {
                "label": "Annual Imports of Electricity"
              },
              "Annual_Loss_Electricity": {
                "label": "Annual Loss of Electricity"
              },
              "Annual_Consumption_Electricity_Agriculture": {
                "label": "Annual Consumption for Agriculture"
              },
              "Annual_Consumption_Electricity_ChemicalPetrochemicalIndustry": {
                "label": "Annual Consumption for Chemical Petrochemical Industry"
              },
              "Annual_Consumption_Electricity_CommerceAndPublicServices": {
                "label": "Annual Consumption for Commerce And Public Services"
              },
              "Annual_Consumption_Electricity_ConstructionIndustry": {
                "label": "Annual Consumption for Construction Industry"
              },
              "Annual_Consumption_Electricity_FoodAndTobaccoIndustry": {
                "label": "Annual Consumption for Food And Tobacco Industry"
              },
              "Annual_Consumption_Electricity_Households": {
                "label": "Annual Consumption for Households"
              },
              "Annual_Consumption_Electricity_IronSteel": {
                "label": "Annual Consumption for Iron Steel"
              },
              "Annual_Consumption_Electricity_MachineryIndustry": {
                "label": "Annual Consumption for Machinery Industry"
              },
              "Annual_Consumption_Electricity_Manufacturing": {
                "label": "Annual Consumption for Manufacturing"
              },
              "Annual_Consumption_Electricity_MiningAndQuarryingIndustry": {
                "label": "Annual Consumption for Mining And Quarrying Industry"
              },
              "Annual_Consumption_Electricity_NonFerrousMetalsIndustry": {
                "label": "Annual Consumption for Non Ferrous Metals Industry"
              },
              "Annual_Consumption_Electricity_NonMetallicMineralsIndustry": {
                "label": "Annual Consumption for Non Metallic Minerals Industry"
              },
              "Annual_Consumption_Electricity_PaperPulpPrintIndustry": {
                "label": "Annual Consumption for Paper Pulp Print Industry"
              },
              "Annual_Consumption_Electricity_RailTransport": {
                "label": "Annual Consumption for Rail Transport"
              },
              "Annual_Consumption_Electricity_RoadTransport": {
                "label": "Annual Consumption for Road Transport"
              },
              "Annual_Consumption_Electricity_TextileAndLeatherIndustry": {
                "label": "Annual Consumption for Textile And Leather Industry"
              },
              "Annual_Consumption_Electricity_TransportEquipmentIndustry": {
                "label": "Annual Consumption for Transport Equipment Industry"
              },
              "Annual_Consumption_Electricity_TransportIndustry": {
                "label": "Annual Consumption for Transport Industry"
              },
              "Annual_Consumption_Electricity_OtherIndustry": {
                "label": "Annual Consumption for UN_Other Industry"
              },
              "Annual_Consumption_Electricity_OtherManufacturingIndustry": {
                "label": "Annual Consumption for UN_Other Manufacturing Industry"
              },
              "Annual_Consumption_Electricity_OtherSector": {
                "label": "Annual Consumption for UN_Other Sector"
              },
              "Annual_Consumption_Electricity_WoodAndWoodProductsIndustry": {
                "label": "Annual Consumption for Wood And Wood Products Industry"
              },
              "Annual_Consumption_Electricity_BriquettingPlants_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Briquetting Plants, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_CoalMines_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Coal Mines, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_CokeOvens_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Coke Ovens, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_ElectricityGeneration_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Electricity Generation, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_EnergyIndustry_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Energy Industry, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_GasWorks_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Gas Works, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_Industry_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Industry, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_NuclearFuelProcessing_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Nuclear Fuel Processing, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_OilGasExtraction_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Oil Gas Extraction, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_OilRefineries_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Oil Refineries, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_PumpStoragePlants_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Pump Storage Plants, Energy Industry Own Use"
              },
              "Annual_Generation_Electricity_BioGas_ThermalElectricity": {
                "label": "Annual Generation From Bio Gas, Thermal Electricity"
              },
              "Annual_Consumption_Energy_Agriculture_SolarThermal": {
                "label": "Annual Consumption of Agriculture, Solar Thermal"
              },
              "Annual_Consumption_Energy_BriquettingPlants_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Briquetting Plants, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_ChemicalPetrochemicalIndustry_Heat": {
                "label": "Annual Consumption of Chemical Petrochemical Industry, Heat"
              },
              "Annual_Consumption_Energy_CoalMines_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Coal Mines, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_CokeOvens_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Coke Ovens, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_CommerceAndPublicServices_Geothermal": {
                "label": "Annual Consumption of Commerce And Public Services, Geothermal"
              },
              "Annual_Consumption_Energy_CommerceAndPublicServices_Heat": {
                "label": "Annual Consumption of Commerce And Public Services, Heat"
              },
              "Annual_Consumption_Energy_CommerceAndPublicServices_SolarThermal": {
                "label": "Annual Consumption of Commerce And Public Services, Solar Thermal"
              },
              "Annual_Consumption_Energy_ElectricityGeneration_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Electricity Generation, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_EnergyIndustry_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Energy Industry, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_FoodAndTobaccoIndustry_Heat": {
                "label": "Annual Consumption of Food And Tobacco Industry, Heat"
              },
              "Annual_Consumption_Energy_GasWorks_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Gas Works, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_Households_Geothermal": {
                "label": "Annual Consumption of Households, Geothermal"
              },
              "Annual_Consumption_Energy_Households_Heat": {
                "label": "Annual Consumption of Households, Heat"
              },
              "Annual_Consumption_Energy_Households_SolarThermal": {
                "label": "Annual Consumption of Households, Solar Thermal"
              },
              "Annual_Consumption_Energy_IronSteel_Heat": {
                "label": "Annual Consumption of Iron Steel, Heat"
              },
              "Annual_Consumption_Energy_MachineryIndustry_Heat": {
                "label": "Annual Consumption of Machinery Industry, Heat"
              },
              "Annual_Consumption_Energy_MachineryIndustry_SolarThermal": {
                "label": "Annual Consumption of Machinery Industry, Solar Thermal"
              },
              "Annual_Consumption_Energy_Manufacturing_Heat": {
                "label": "Annual Consumption of Manufacturing, Heat"
              },
              "Annual_Consumption_Energy_Manufacturing_SolarThermal": {
                "label": "Annual Consumption of Manufacturing, Solar Thermal"
              },
              "Annual_Consumption_Energy_MiningAndQuarryingIndustry_Heat": {
                "label": "Annual Consumption of Mining And Quarrying Industry, Heat"
              },
              "Annual_Consumption_Energy_NonFerrousMetalsIndustry_Heat": {
                "label": "Annual Consumption of Non Ferrous Metals Industry, Heat"
              },
              "Annual_Consumption_Energy_NonFerrousMetalsIndustry_SolarThermal": {
                "label": "Annual Consumption of Non Ferrous Metals Industry, Solar Thermal"
              },
              "Annual Consumption of Non Ferrous Metals Industry, Solar Thermal": {
                "label": "Annual Consumption of Non Metallic Minerals Industry, Heat"
              },
              "Annual_Consumption_Energy_OilGasExtraction_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Oil Gas Extraction, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_OilRefineries_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Oil Refineries, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_OilRefineries_Refinery_FuelTransformation": {
                "label": "Annual Consumption of Oil Refineries, Refinery, Fuel Transformation"
              },
              "Annual_Consumption_Energy_PaperPulpPrintIndustry_Heat": {
                "label": "Annual Consumption of Paper Pulp Print Industry, Heat"
              },
              "Annual_Consumption_Energy_TextileAndLeatherIndustry_Heat": {
                "label": "Annual Consumption of Textile And Leather Industry, Heat"
              },
              "Annual_Consumption_Energy_TransportEquipmentIndustry_Heat\n": {
                "label": "Annual Consumption of Transport Equipment Industry, Heat"
              },
              "Annual_Consumption_Energy_TransportEquipmentIndustry_SolarThermal": {
                "label": "Annual Consumption of Transport Equipment Industry, Solar Thermal"
              },
              "Annual_Consumption_Energy_OtherIndustry_Heat": {
                "label": "Annual Consumption of UN_Other Industry, Heat"
              },
              "Annual_Consumption_Energy_OtherManufacturingIndustry_Heat": {
                "label": "Annual Consumption of UN_Other Manufacturing Industry, Heat"
              },
              "Annual_Consumption_Energy_OtherManufacturingIndustry_SolarThermal": {
                "label": "Annual Consumption of UN_Other Manufacturing Industry, Solar Thermal"
              },
              "Annual_Consumption_Energy_OtherSector_Geothermal": {
                "label": "Annual Consumption of UN_Other Sector, Geothermal"
              },
              "Annual_Consumption_Energy_OtherSector_Heat": {
                "label": "Annual Consumption of UN_Other Sector, Heat"
              },
              "Annual_Consumption_Energy_OtherSector_SolarThermal": {
                "label": "Annual Consumption of UN_Other Sector, Solar Thermal"
              },
              "Annual_Consumption_Energy_WoodAndWoodProductsIndustry_Heat": {
                "label": "Annual Consumption of Wood And Wood Products Industry, Heat"
              }
            },
            "val": "Annual_Consumption_Electricity"
          },
          "options.first_stat_var__health__stat_var_name": {
            "type": "select",
            "label": "Statistical variable",
            "show_if": "options.first_stat_var__category=='health'",
            "required": true,
            "options": {
              "FertilityRate_Person_Female": {
                "label": "Fertility Rate"
              },
              "LifeExpectancy_Person": {
                "label": "Life Expectancy"
              },
              "Count_BirthEvent_LiveBirth_AsFractionOf_Count_Person": {
                "label": "Number of live births occurring during the year, Per Capita"
              },
              "Count_Person_20To79Years_Diabetes_AsFractionOf_Count_Person_20To79Years": {
                "label": "Percentage of people ages 20-79 who have type 1 or type 2 diabetes"
              },
              "Count_Death": {
                "label": "Count of Mortality Event"
              },
              "Count_Person_15OrMoreYears_Smoking_AsFractionOf_Count_Person_15OrMoreYears": {
                "label": "15 Years or More, Smoking Population Per Capita 15 or More Years"
              },
              "Count_Person_Upto4Years_Overweight_AsFractionOf_Count_Person_Upto4Years": {
                "label": "4 Years or Less, Overweight Population Per Capita Upto 4 Years"
              }
            },
            "val": "FertilityRate_Person_Female"
          }
        }
      },
      "second_stat_var_frame": {
        "type": "fieldset",
        "label": "Pick 2nd statistical variable",
        "repeat": false,
        "fields": {
          "options.second_stat_var__category": {
            "type": "select",
            "label": "Category",
            "required": true,
            "options": {
              "climate": {
                "label": "Climate"
              },
              "covid19": {
                "label": "COVID-19"
              },
              "crime": {
                "label": "Crime"
              },
              "demographics": {
                "label": "Demographics"
              },
              "economic": {
                "label": "Economic"
              },
              "education": {
                "label": "Education"
              },
              "employment": {
                "label": "Employment"
              },
              "energy": {
                "label": "Energy"
              },
              "health": {
                "label": "Health"
              }
            },
            "val": "demographics"
          },
          "options.second_stat_var__climate__stat_var_name": {
            "type": "select",
            "label": "Statistical variable",
            "show_if": "options.second_stat_var__category=='climate'",
            "required": true,
            "options": {
              "Amount_Emissions_CarbonDioxide_PerCapita": {
                "label": "CO2 Emissions Per Capita"
              },
              "Count_EarthquakeEvent": {
                "label": "Count of Earthquake Event"
              },
              "Count_EarthquakeEvent_M3To4": {
                "label": "Count of Earthquake Event of 3 - 4 Magnitude"
              },
              "Count_EarthquakeEvent_M3Onwards": {
                "label": "Count of Earthquake Event of 3 Magnitude or More"
              },
              "Count_EarthquakeEvent_M4To5": {
                "label": "Count of Earthquake Event of 4 - 5 Magnitude"
              },
              "Count_EarthquakeEvent_M4Onwards": {
                "label": "Count of Earthquake Event of 4 Magnitude or More"
              },
              "Count_EarthquakeEvent_M5To6": {
                "label": "Count of Earthquake Event of 5 - 6 Magnitude"
              },
              "Count_EarthquakeEvent_M5Onwards": {
                "label": "Count of Earthquake Event of 5 Magnitude or More"
              }
            },
            "val": "Amount_Emissions_CarbonDioxide_PerCapita"
          },
          "options.second_stat_var__crime__stat_var_name": {
            "type": "select",
            "label": "Statistical variable",
            "show_if": "options.second_stat_var__category=='crime'",
            "required": true,
            "options": {
              "Count_CriminalActivities_MurderAndNonNegligentManslaughter_AsFractionOf_Count_Person": {
                "label": "Count of Murder And Non Negligent Manslaughter Per Capita"
              },
              "Count_CriminalActivities_MurderAndNonNegligentManslaughter_Female_AsFractionOf_Count_Person_Female": {
                "label": "Count of Female Murder And Non Negligent Manslaughter Per Female Capita"
              },
              "Count_CriminalActivities_MurderAndNonNegligentManslaughter_Male_AsFractionOf_Count_Person_Male": {
                "label": "Count of Male Murder And Non Negligent Manslaughter Per Male Capita"
              }
            },
            "val": "Count_CriminalActivities_MurderAndNonNegligentManslaughter_AsFractionOf_Count_Person"
          },
          "options.second_stat_var__demographics__stat_var_name": {
            "type": "select",
            "label": "Statistical variable",
            "show_if": "options.second_stat_var__category=='demographics'",
            "required": true,
            "options": {
              "Count_Person": {
                "label": "Population"
              },
              "GrowthRate_Count_Person": {
                "label": "Population Growth Rate"
              },
              "Count_Person_PerArea": {
                "label": "Population Density"
              },
              "Count_Person_IsInternetUser_PerCapita": {
                "label": "Percent of Internet Users"
              },
              "Count_Person_ResidingLessThan5MetersAboveSeaLevel_AsFractionOf_Count_Person": {
                "label": "Percent of Population Living in Areas Below 5 Meters Elevation"
              },
              "Count_Person_Rural": {
                "label": "Rural Population"
              },
              "Count_Person_Urban": {
                "label": "Urban Population"
              }
            },
            "val": "Count_Person"
          },
          "options.second_stat_var__economic__stat_var_name": {
            "type": "select",
            "label": "Statistical variable",
            "show_if": "options.second_stat_var__category=='economic'",
            "required": true,
            "options": {
              "Amount_EconomicActivity_GrossDomesticProduction_Nominal": {
                "label": "GDP"
              },
              "GrowthRate_Amount_EconomicActivity_GrossDomesticProduction": {
                "label": "Growth Rate of GDP"
              },
              "Amount_EconomicActivity_GrossNationalIncome_PurchasingPowerParity": {
                "label": "GNI (Purchasing Power Parity)"
              },
              "Count_Product_MobileCellularSubscription_AsFractionOf_Count_Person": {
                "label": "Mobile Subscriptions Per Capita"
              },
              "Amount_Debt_Government": {
                "label": "Debt With Government"
              },
              "Amount_Debt_Government_AsAFractionOfGrossDomesticProduction": {
                "label": "Debt With Government as Fraction of GDP"
              },
              "GiniIndex_EconomicActivity": {
                "label": "Gini Index of Economic Activity"
              },
              "Amount_EconomicActivity_ExpenditureActivity_MilitaryExpenditure_Government": {
                "label": "Military Expenditure, Government"
              },
              "Amount_EconomicActivity_ExpenditureActivity_MilitaryExpenditure_Government_AsFractionOf_Amount_EconomicActivity_GrossDomesticProduction_Nominal": {
                "label": "Military Expenditure, Government as Fraction of Economic Activity Gross Domestic Production Nominal"
              },
              "Amount_EconomicActivity_ExpenditureActivity_EducationExpenditure_Government_AsFractionOf_Amount_EconomicActivity_ExpenditureActivity_Government": {
                "label": "Education Expenditure, Government as Fraction of Economic Activity Expenditure Activity Government"
              },
              "Amount_EconomicActivity_ExpenditureActivity_EducationExpenditure_Government_AsFractionOf_Amount_EconomicActivity_GrossDomesticProduction_Nominal": {
                "label": "Education Expenditure, Government as Fraction of Economic Activity Gross Domestic Production Nominal"
              },
              "Amount_EconomicActivity_ExpenditureActivity_HealthcareExpenditure_AsFractionOf_Count_Person": {
                "label": "Healthcare Expenditure Per Capita"
              },
              "Amount_EconomicActivity_ExpenditureActivity_TertiaryEducationExpenditure_Government_AsFractionOf_Amount_EconomicActivity_ExpenditureActivity_EducationExpenditure_Government": {
                "label": "Tertiary Education Expenditure, Government as Fraction of Economic Activity Expenditure Activity Education Expenditure Government"
              },
              "Amount_EconomicActivity_GrossValueAdded_RealValue": {
                "label": "Gross Value Added (Real Value)"
              },
              "Amount_EconomicActivity_GrossValueAdded_ISICAgricultureHuntingForestryFishing_RealValue": {
                "label": "Gross Value Added, Agriculture, Hunting, Forestry, Fishing (Real Value)"
              },
              "Amount_EconomicActivity_GrossValueAdded_ISICConstruction_RealValue": {
                "label": "Gross Value Added, Construction (Real Value)"
              },
              "Amount_EconomicActivity_GrossValueAdded_ISICManufacturing_RealValue": {
                "label": "Gross Value Added, Manufacturing (Real Value)"
              },
              "Amount_EconomicActivity_GrossValueAdded_ISICMiningManufacturingUtilities_RealValue": {
                "label": "Gross Value Added, Mining, Manufacturing, Utilities (Real Value)"
              },
              "Amount_EconomicActivity_GrossValueAdded_ISICTransportStorageCommunications_RealValue": {
                "label": "Gross Value Added, Transport, Storage And Communications (Real Value)"
              },
              "Amount_EconomicActivity_GrossValueAdded_ISICWholesaleRetailTradeRestaurantsHotels_RealValue": {
                "label": "Gross Value Added, Wholesale, Retail Trade, Restaurants And Hotels (Real Value)"
              },
              "Amount_Remittance_OutwardRemittance": {
                "label": "Outward Remittance"
              },
              "Amount_Remittance_InwardRemittance": {
                "label": "Inward Remittance"
              },
              "Amount_Remittance_InwardRemittance_AsFractionOf_Amount_EconomicActivity_GrossDomesticProduction_Nominal": {
                "label": "Inward Remittance as Fraction of Economic Activity GDP"
              },
              "Amount_Stock": {
                "label": "Stock"
              },
              "Amount_Stock_AsFractionOf_Amount_EconomicActivity_GrossDomesticProduction_Nominal": {
                "label": "Stock as Fraction of Economic Activity GDP"
              }
            },
            "val": "Amount_EconomicActivity_GrossDomesticProduction_Nominal"
          },
          "options.second_stat_var__education__stat_var_name": {
            "type": "select",
            "label": "Statistical variable",
            "show_if": "options.second_stat_var__category=='education'",
            "required": true,
            "options": {
              "Count_Person_25OrMoreYears_BachelorsDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears": {
                "label": "Bachelors Degree or Higher Population Per Capita 25 or More Years"
              },
              "Count_Person_25OrMoreYears_Female_BachelorsDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears_Female": {
                "label": "Bachelors Degree or Higher, Female Population Per Capita 25 or More Years Female"
              },
              "Count_Person_25OrMoreYears_Male_BachelorsDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears_Male": {
                "label": "Bachelors Degree or Higher, Male Population Per Capita 25 or More Years Male"
              },
              "Count_Person_25OrMoreYears_DoctorateDegree_AsFractionOf_Count_Person_25OrMoreYears": {
                "label": "Doctorate Degree Population Per Capita 25 or More Years"
              },
              "Count_Person_25OrMoreYears_Female_DoctorateDegree_AsFractionOf_Count_Person_25OrMoreYears_Female": {
                "label": "Doctorate Degree, Female Population Per Capita 25 or More Years Female"
              },
              "Count_Person_25OrMoreYears_Male_DoctorateDegree_AsFractionOf_Count_Person_25OrMoreYears_Male": {
                "label": "Doctorate Degree, Male Population Per Capita 25 or More Years Male"
              },
              "Count_Person_25OrMoreYears_MastersDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears": {
                "label": "Masters Degree or Higher Population Per Capita 25 or More Years"
              },
              "Count_Person_25OrMoreYears_Female_MastersDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears_Female": {
                "label": "Masters Degree or Higher, Female Population Per Capita 25 or More Years Female"
              },
              "Count_Person_25OrMoreYears_Male_MastersDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears_Male": {
                "label": "Masters Degree or Higher, Male Population Per Capita 25 or More Years Male"
              },
              "Count_Person_25OrMoreYears_TertiaryEducation_AsFractionOf_Count_Person_25OrMoreYears": {
                "label": "Tertiary Education Population Per Capita 25 or More Years"
              },
              "Count_Person_25OrMoreYears_Female_TertiaryEducation_AsFractionOf_Count_Person_25OrMoreYears_Female": {
                "label": "Tertiary Education, Female Population Per Capita 25 or More Years Female"
              },
              "Count_Person_25OrMoreYears_Male_TertiaryEducation_AsFractionOf_Count_Person_25OrMoreYears_Male": {
                "label": "Tertiary Education, Male Population Per Capita 25 or More Years Male"
              }
            },
            "val": "Count_Person_25OrMoreYears_BachelorsDegreeOrHigher_AsFractionOf_Count_Person_25OrMoreYears"
          },
          "options.second_stat_var__employment__stat_var_name": {
            "type": "select",
            "label": "Statistical variable",
            "show_if": "options.second_stat_var__category=='employment'",
            "required": true,
            "options": {
              "UnemploymentRate_Person": {
                "label": "Unemployment Rate"
              },
              "Count_Person_InLaborForce": {
                "label": "In Labor Force Population"
              },
              "Count_Person_15To64Years_InLaborForce_AsFractionOf_Count_Person_15To64Years": {
                "label": "15 - 64 Years, in Labor Force Population Per Capita 15 To 64 Years"
              },
              "Count_Person_15To64Years_Female_InLaborForce_AsFractionOf_Count_Person_15To64Years_Female": {
                "label": "15 - 64 Years, in Labor Force, Female Population Per Capita 15 To 64 Years Female"
              },
              "Count_Person_15To64Years_Male_InLaborForce_AsFractionOf_Count_Person_15To64Years_Male": {
                "label": "15 - 64 Years, in Labor Force, Male Population Per Capita 15 To 64 Years Male"
              },
              "Count_Person_15OrMoreYears_InLaborForce_Female_AsFractionOf_Count_Person_InLaborForce": {
                "label": "15 Years or More, in Labor Force, Female Population Per Capita in Labor Force"
              }
            },
            "val": "UnemploymentRate_Person"
          },
          "options.second_stat_var__energy__stat_var_name": {
            "type": "select",
            "label": "Statistical variable",
            "show_if": "options.second_stat_var__category=='energy'",
            "required": true,
            "options": {
              "Annual_Consumption_Electricity": {
                "label": "Annual Consumption of Electricity"
              },
              "Annual_Exports_Electricity": {
                "label": "Annual Exports of Electricity"
              },
              "Annual_Generation_Electricity": {
                "label": "Net generation, all fuels, all sectors, annual"
              },
              "Annual_Imports_Electricity": {
                "label": "Annual Imports of Electricity"
              },
              "Annual_Loss_Electricity": {
                "label": "Annual Loss of Electricity"
              },
              "Annual_Consumption_Electricity_Agriculture": {
                "label": "Annual Consumption for Agriculture"
              },
              "Annual_Consumption_Electricity_ChemicalPetrochemicalIndustry": {
                "label": "Annual Consumption for Chemical Petrochemical Industry"
              },
              "Annual_Consumption_Electricity_CommerceAndPublicServices": {
                "label": "Annual Consumption for Commerce And Public Services"
              },
              "Annual_Consumption_Electricity_ConstructionIndustry": {
                "label": "Annual Consumption for Construction Industry"
              },
              "Annual_Consumption_Electricity_FoodAndTobaccoIndustry": {
                "label": "Annual Consumption for Food And Tobacco Industry"
              },
              "Annual_Consumption_Electricity_Households": {
                "label": "Annual Consumption for Households"
              },
              "Annual_Consumption_Electricity_IronSteel": {
                "label": "Annual Consumption for Iron Steel"
              },
              "Annual_Consumption_Electricity_MachineryIndustry": {
                "label": "Annual Consumption for Machinery Industry"
              },
              "Annual_Consumption_Electricity_Manufacturing": {
                "label": "Annual Consumption for Manufacturing"
              },
              "Annual_Consumption_Electricity_MiningAndQuarryingIndustry": {
                "label": "Annual Consumption for Mining And Quarrying Industry"
              },
              "Annual_Consumption_Electricity_NonFerrousMetalsIndustry": {
                "label": "Annual Consumption for Non Ferrous Metals Industry"
              },
              "Annual_Consumption_Electricity_NonMetallicMineralsIndustry": {
                "label": "Annual Consumption for Non Metallic Minerals Industry"
              },
              "Annual_Consumption_Electricity_PaperPulpPrintIndustry": {
                "label": "Annual Consumption for Paper Pulp Print Industry"
              },
              "Annual_Consumption_Electricity_RailTransport": {
                "label": "Annual Consumption for Rail Transport"
              },
              "Annual_Consumption_Electricity_RoadTransport": {
                "label": "Annual Consumption for Road Transport"
              },
              "Annual_Consumption_Electricity_TextileAndLeatherIndustry": {
                "label": "Annual Consumption for Textile And Leather Industry"
              },
              "Annual_Consumption_Electricity_TransportEquipmentIndustry": {
                "label": "Annual Consumption for Transport Equipment Industry"
              },
              "Annual_Consumption_Electricity_TransportIndustry": {
                "label": "Annual Consumption for Transport Industry"
              },
              "Annual_Consumption_Electricity_OtherIndustry": {
                "label": "Annual Consumption for UN_Other Industry"
              },
              "Annual_Consumption_Electricity_OtherManufacturingIndustry": {
                "label": "Annual Consumption for UN_Other Manufacturing Industry"
              },
              "Annual_Consumption_Electricity_OtherSector": {
                "label": "Annual Consumption for UN_Other Sector"
              },
              "Annual_Consumption_Electricity_WoodAndWoodProductsIndustry": {
                "label": "Annual Consumption for Wood And Wood Products Industry"
              },
              "Annual_Consumption_Electricity_BriquettingPlants_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Briquetting Plants, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_CoalMines_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Coal Mines, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_CokeOvens_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Coke Ovens, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_ElectricityGeneration_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Electricity Generation, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_EnergyIndustry_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Energy Industry, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_GasWorks_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Gas Works, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_Industry_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Industry, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_NuclearFuelProcessing_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Nuclear Fuel Processing, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_OilGasExtraction_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Oil Gas Extraction, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_OilRefineries_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Oil Refineries, Energy Industry Own Use"
              },
              "Annual_Consumption_Electricity_PumpStoragePlants_EnergyIndustryOwnUse": {
                "label": "Annual Consumption for Pump Storage Plants, Energy Industry Own Use"
              },
              "Annual_Generation_Electricity_BioGas_ThermalElectricity": {
                "label": "Annual Generation From Bio Gas, Thermal Electricity"
              },
              "Annual_Consumption_Energy_Agriculture_SolarThermal": {
                "label": "Annual Consumption of Agriculture, Solar Thermal"
              },
              "Annual_Consumption_Energy_BriquettingPlants_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Briquetting Plants, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_ChemicalPetrochemicalIndustry_Heat": {
                "label": "Annual Consumption of Chemical Petrochemical Industry, Heat"
              },
              "Annual_Consumption_Energy_CoalMines_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Coal Mines, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_CokeOvens_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Coke Ovens, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_CommerceAndPublicServices_Geothermal": {
                "label": "Annual Consumption of Commerce And Public Services, Geothermal"
              },
              "Annual_Consumption_Energy_CommerceAndPublicServices_Heat": {
                "label": "Annual Consumption of Commerce And Public Services, Heat"
              },
              "Annual_Consumption_Energy_CommerceAndPublicServices_SolarThermal": {
                "label": "Annual Consumption of Commerce And Public Services, Solar Thermal"
              },
              "Annual_Consumption_Energy_ElectricityGeneration_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Electricity Generation, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_EnergyIndustry_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Energy Industry, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_FoodAndTobaccoIndustry_Heat": {
                "label": "Annual Consumption of Food And Tobacco Industry, Heat"
              },
              "Annual_Consumption_Energy_GasWorks_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Gas Works, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_Households_Geothermal": {
                "label": "Annual Consumption of Households, Geothermal"
              },
              "Annual_Consumption_Energy_Households_Heat": {
                "label": "Annual Consumption of Households, Heat"
              },
              "Annual_Consumption_Energy_Households_SolarThermal": {
                "label": "Annual Consumption of Households, Solar Thermal"
              },
              "Annual_Consumption_Energy_IronSteel_Heat": {
                "label": "Annual Consumption of Iron Steel, Heat"
              },
              "Annual_Consumption_Energy_MachineryIndustry_Heat": {
                "label": "Annual Consumption of Machinery Industry, Heat"
              },
              "Annual_Consumption_Energy_MachineryIndustry_SolarThermal": {
                "label": "Annual Consumption of Machinery Industry, Solar Thermal"
              },
              "Annual_Consumption_Energy_Manufacturing_Heat": {
                "label": "Annual Consumption of Manufacturing, Heat"
              },
              "Annual_Consumption_Energy_Manufacturing_SolarThermal": {
                "label": "Annual Consumption of Manufacturing, Solar Thermal"
              },
              "Annual_Consumption_Energy_MiningAndQuarryingIndustry_Heat": {
                "label": "Annual Consumption of Mining And Quarrying Industry, Heat"
              },
              "Annual_Consumption_Energy_NonFerrousMetalsIndustry_Heat": {
                "label": "Annual Consumption of Non Ferrous Metals Industry, Heat"
              },
              "Annual_Consumption_Energy_NonFerrousMetalsIndustry_SolarThermal": {
                "label": "Annual Consumption of Non Ferrous Metals Industry, Solar Thermal"
              },
              "Annual Consumption of Non Ferrous Metals Industry, Solar Thermal": {
                "label": "Annual Consumption of Non Metallic Minerals Industry, Heat"
              },
              "Annual_Consumption_Energy_OilGasExtraction_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Oil Gas Extraction, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_OilRefineries_Heat_EnergyIndustryOwnUse": {
                "label": "Annual Consumption of Oil Refineries, Heat, Energy Industry Own Use"
              },
              "Annual_Consumption_Energy_OilRefineries_Refinery_FuelTransformation": {
                "label": "Annual Consumption of Oil Refineries, Refinery, Fuel Transformation"
              },
              "Annual_Consumption_Energy_PaperPulpPrintIndustry_Heat": {
                "label": "Annual Consumption of Paper Pulp Print Industry, Heat"
              },
              "Annual_Consumption_Energy_TextileAndLeatherIndustry_Heat": {
                "label": "Annual Consumption of Textile And Leather Industry, Heat"
              },
              "Annual_Consumption_Energy_TransportEquipmentIndustry_Heat\n": {
                "label": "Annual Consumption of Transport Equipment Industry, Heat"
              },
              "Annual_Consumption_Energy_TransportEquipmentIndustry_SolarThermal": {
                "label": "Annual Consumption of Transport Equipment Industry, Solar Thermal"
              },
              "Annual_Consumption_Energy_OtherIndustry_Heat": {
                "label": "Annual Consumption of UN_Other Industry, Heat"
              },
              "Annual_Consumption_Energy_OtherManufacturingIndustry_Heat": {
                "label": "Annual Consumption of UN_Other Manufacturing Industry, Heat"
              },
              "Annual_Consumption_Energy_OtherManufacturingIndustry_SolarThermal": {
                "label": "Annual Consumption of UN_Other Manufacturing Industry, Solar Thermal"
              },
              "Annual_Consumption_Energy_OtherSector_Geothermal": {
                "label": "Annual Consumption of UN_Other Sector, Geothermal"
              },
              "Annual_Consumption_Energy_OtherSector_Heat": {
                "label": "Annual Consumption of UN_Other Sector, Heat"
              },
              "Annual_Consumption_Energy_OtherSector_SolarThermal": {
                "label": "Annual Consumption of UN_Other Sector, Solar Thermal"
              },
              "Annual_Consumption_Energy_WoodAndWoodProductsIndustry_Heat": {
                "label": "Annual Consumption of Wood And Wood Products Industry, Heat"
              }
            },
            "val": "Annual_Consumption_Electricity"
          },
          "options.second_stat_var__health__stat_var_name": {
            "type": "select",
            "label": "Statistical variable",
            "show_if": "options.second_stat_var__category=='health'",
            "required": true,
            "options": {
              "FertilityRate_Person_Female": {
                "label": "Fertility Rate"
              },
              "LifeExpectancy_Person": {
                "label": "Life Expectancy"
              },
              "Count_BirthEvent_LiveBirth_AsFractionOf_Count_Person": {
                "label": "Number of live births occurring during the year, Per Capita"
              },
              "Count_Person_20To79Years_Diabetes_AsFractionOf_Count_Person_20To79Years": {
                "label": "Percentage of people ages 20-79 who have type 1 or type 2 diabetes"
              },
              "Count_Death": {
                "label": "Count of Mortality Event"
              },
              "Count_Person_15OrMoreYears_Smoking_AsFractionOf_Count_Person_15OrMoreYears": {
                "label": "15 Years or More, Smoking Population Per Capita 15 or More Years"
              },
              "Count_Person_Upto4Years_Overweight_AsFractionOf_Count_Person_Upto4Years": {
                "label": "4 Years or Less, Overweight Population Per Capita Upto 4 Years"
              }
            },
            "val": "FertilityRate_Person_Female"
          }
        }
      },
      "options.output_as_chart": {
        "type": "checkbox",
        "label": "Output a Graph",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
}
,
"/PayStripeOptions.json/PayStripeOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.provider": {
        "type": "hidden",
        "val": "stripe"
      },
      "options.type": {
        "type": "select",
        "label": "Payment Type",
        "options": {
          "charge": {
            "label": "Charge"
          },
          "transfer": {
            "label": "Transfer"
          }
        },
        "val": "charge",
        "required": true
      },
      "options.charge_type": {
        "type": "select",
        "label": "Charge Type",
        "show_if": "options.provider=='stripe' && options.type=='charge'",
        "options": {
          "charge_without_invoice": {
            "label": "Immediate charge without sending invoice"
          },
          "send_invoice": {
            "label": "Only send invoice"
          },
          "send_invoice_immediate_charge": {
            "label": "Send invoice and Immediate charge"
          }
        },
        "val": "send_invoice_immediate_charge",
        "required": true
      },
      "options.stripe.secret_key": {
        "type": "password",
        "label": "Stripe Secret Key",
        "show_if": "options.provider=='stripe'",
        "required": true,
        "val": "",
        "width": "100%",
        "breakLine": true
      }
    }
  }
},
"/FlexmonsterColumnLineOptions.json/FlexmonsterColumnLineOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "show_if": "options.configure_manual=='true'",
    "repeat": false,
    "fields": {
      "options.type": {
        "type": "hidden",
        "val": "column_line_chart"
      },
      "options.chart_type": {
        "type": "hidden",
        "val": "column_line"
      },
      "options.add_column_cols": {
        "type": "checkbox",
        "label": "by Category",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.column_cols": {
        "type": "fieldset",
        "label": "Category column(s)",
        "show_if": "options.add_column_cols=='true'",
        "repeat": true,
        "fields": {
          "column_col": {
            "type": "select",
            "label": "Category column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "is_date": {
            "type": "checkbox",
            "label": "Is Date",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.row_cols": {
        "type": "fieldset",
        "label": "Series column(s)",
        "repeat": true,
        "fields": {
          "row_col": {
            "type": "select",
            "label": "Series column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "is_date": {
            "type": "checkbox",
            "label": "Is Date",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "measure_cols_frame": {
        "type": "fieldset",
        "label": "Value column(s)",
        "repeat": false,
        "fields": {
          "options.column_chart_measure_col": {
            "type": "select",
            "label": "Value Column of Column Chart",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "options.column_chart_aggregation": {
            "type": "select",
            "label": "Aggregation of Column Chart",
            "options": {
              "sum": {
                "label": "Sum"
              },
              "count": {
                "label": "Count"
              },
              "distinctcount": {
                "label": "Distinct Count"
              },
              "average": {
                "label": "Average"
              },
              "median": {
                "label": "Median"
              },
              "product": {
                "label": "Product"
              },
              "min": {
                "label": "Min"
              },
              "max": {
                "label": "Max"
              },
              "stdevp": {
                "label": "Population Standard Deviation"
              },
              "stdevs": {
                "label": "Sample Standard Deviation"
              },
              "percent": {
                "label": "Percent"
              }
            },
            "val": "sum",
            "required": true,
            "breakLine": true
          },
          "options.line_chart_measure_col": {
            "type": "select",
            "label": "Value Column of Line Chart",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "options.line_chart_aggregation": {
            "type": "select",
            "label": "Aggregation of Line Chart",
            "options": {
              "sum": {
                "label": "Sum"
              },
              "count": {
                "label": "Count"
              },
              "distinctcount": {
                "label": "Distinct Count"
              },
              "average": {
                "label": "Average"
              },
              "median": {
                "label": "Median"
              },
              "product": {
                "label": "Product"
              },
              "min": {
                "label": "Min"
              },
              "max": {
                "label": "Max"
              },
              "stdevp": {
                "label": "Population Standard Deviation"
              },
              "stdevs": {
                "label": "Sample Standard Deviation"
              },
              "percent": {
                "label": "Percent"
              }
            },
            "val": "sum",
            "required": true,
            "breakLine": true
          }
        }
      }
    }
  }
}
,
"/DCDemographicsWorldDataOptions.json/DCDemographicsWorldDataOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.group_by": {
        "type": "select",
        "label": "Group By",
        "required": true,
        "options": {
          "Region": {
            "label": "Region"
          },
          "Income Group": {
            "label": "Income Group"
          }
        },
        "val": "Region"
      },
      "options.stat_var_name": {
        "type": "select",
        "label": "Statistics Data",
        "required": true,
        "options": {
          "Count_Person": {
            "label": "Population"
          },
          "GrowthRate_Count_Person": {
            "label": "Population Growth Rate"
          },
          "Count_Person_PerArea": {
            "label": "Population Density"
          },
          "Count_Person_IsInternetUser_PerCapita": {
            "label": "Percent of Internet Users"
          },
          "Count_Person_ResidingLessThan5MetersAboveSeaLevel_AsFractionOf_Count_Person": {
            "label": "Percent of Population Living in Areas Below 5 Meters Elevation"
          },
          "Count_Person_Rural": {
            "label": "Rural Population"
          },
          "Count_Person_Urban": {
            "label": "Urban Population"
          }
        },
        "val": "Count_Person"
      },
      "options.per_capita": {
        "type": "checkbox",
        "label": "Per capita",
        "show_if": "false",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.all_countries": {
        "type": "checkbox",
        "label": "All countries",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.output_as_chart": {
        "type": "checkbox",
        "label": "Output a Graph",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "options.graph_type": {
        "type": "select",
        "label": "Graph Type",
        "show_if": "options.output_as_chart=='true'",
        "required": true,
        "options": {
          "zoomable_sunburst": {
            "label": "Sunburst"
          },
          "tidy_tree": {
            "label": "Tree"
          },
          "treemap": {
            "label": "Treemap"
          }
        },
        "val": "zoomable_sunburst",
        "breakLine": true
      }
    }
  }
}
,
"/UpdateTaskInput.json/UpdateTaskInput.json": {
  "select_task_frame": {
    "type": "fieldset",
    "label": "Select Task",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "input_task": {
        "type": "select",
        "label": "Select Task",
        "bind": "TASKS",
        "empty": "",
        "required": true,
        "breakLine": true
      },
      "table_id": {
        "type": "select",
        "label": "Select JSON Table",
        "bind": "TABLES",
        "empty": "",
        "required": true,
        "breakLine": true
      }
    }
  }
}
,
"/DCHealthWorldDataOptions.json/DCHealthWorldDataOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.group_by": {
        "type": "select",
        "label": "Group By",
        "required": true,
        "options": {
          "Region": {
            "label": "Region"
          },
          "Income Group": {
            "label": "Income Group"
          }
        },
        "val": "Region",
        "breakLine": true
      },
      "options.stat_var_name": {
        "type": "select",
        "label": "Statistics Data",
        "required": true,
        "options": {
          "FertilityRate_Person_Female": {
            "label": "Fertility Rate"
          },
          "LifeExpectancy_Person": {
            "label": "Life Expectancy"
          },
          "Count_BirthEvent_LiveBirth_AsFractionOf_Count_Person": {
            "label": "Number of live births occurring during the year, Per Capita"
          },
          "Count_Person_20To79Years_Diabetes_AsFractionOf_Count_Person_20To79Years": {
            "label": "Percentage of people ages 20-79 who have type 1 or type 2 diabetes"
          },
          "Count_Death": {
            "label": "Count of Mortality Event"
          },
          "Count_Person_15OrMoreYears_Smoking_AsFractionOf_Count_Person_15OrMoreYears": {
            "label": "15 Years or More, Smoking Population Per Capita 15 or More Years"
          },
          "Count_Person_Upto4Years_Overweight_AsFractionOf_Count_Person_Upto4Years": {
            "label": "4 Years or Less, Overweight Population Per Capita Upto 4 Years"
          }
        },
        "val": "FertilityRate_Person_Female"
      },
      "options.per_capita": {
        "type": "checkbox",
        "label": "Per capita",
        "show_if": "false",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.all_countries": {
        "type": "checkbox",
        "label": "All countries",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.output_as_chart": {
        "type": "checkbox",
        "label": "Output a Graph",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "options.graph_type": {
        "type": "select",
        "label": "Graph Type",
        "show_if": "options.output_as_chart=='true'",
        "required": true,
        "options": {
          "zoomable_sunburst": {
            "label": "Sunburst"
          },
          "treemap": {
            "label": "Treemap"
          }
        },
        "val": "zoomable_sunburst",
        "breakLine": true
      }
    }
  }
}
,
"/D3TreemapOptions.json/D3TreemapOptions.json": {
  "options_box": {
    "type": "fieldset",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "label": "",
    "show_if": "options.configure_manual=='true'",
    "repeat": false,
    "fields": {
      "options.chart_type": {
        "type": "hidden",
        "val": "treemap"
      },
      "options.group_cols": {
        "type": "fieldset",
        "label": "Select Group Column(s) in Order",
        "repeat": true,
        "fields": {
          "group_col": {
            "type": "select",
            "label": "Group column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.value_col": {
        "type": "select",
        "label": "Select Value Column",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      }
    }
  }
}
,
"/HolidayInput.json/HolidayInput.json": {
  "input": {
    "type": "fieldset",
    "label": "Select Input Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "input_table": {
        "type": "select",
        "label": "Select Table",
        "show_if": "options.is_generate_holiday_table=='add_column'",
        "bind": "TABLES",
        "empty": "",
        "required": true
      },
      "remove_input_table_after_processing": {
        "type": "hidden",
        "val": "false"
      },
      "is_word": {
        "type": "hidden",
        "val": "false"
      },
      "holiday_calendar_table": {
        "type": "select",
        "label": "Select Holiday Calendar Table",
        "bind": "TABLES",
        "empty": "",
        "required": true
      }
    }
  }
},
"/DataCommonsOptions.json/DataCommonsOptions.json": {
  "options_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.category": {
        "type": "select",
        "label": "Data Category",
        "required": true,
        "options": {
          "health": {
            "label": "Health"
          },
          "demographics": {
            "label": "Demographics"
          },
          "economic": {
            "label": "Economic"
          }
        },
        "val": "health"
      },
      "options.health__stat_var": {
        "type": "select",
        "label": "Statistics Data",
        "show_if": "options.category=='health'",
        "required": true,
        "options": {
          "CumulativeCount_Vaccine_COVID_19_Administered": {
            "label": "Cumulative Count of COVID_19, Vaccine Administered"
          },
          "IncrementalCount_Vaccine_COVID_19_Administered": {
            "label": "Incremental Count of COVID_19, Vaccine Administered"
          },
          "Count_BirthEvent_LiveBirth_AsFractionOf_Count_Person": {
            "label": "Count_BirthEvent_LiveBirth_AsFractionOf_Count_Person"
          }
        },
        "val": "CumulativeCount_Vaccine_COVID_19_Administered"
      },
      "options.demographics__stat_var": {
        "type": "select",
        "label": "Statistics Data",
        "show_if": "options.category=='demographics'",
        "required": true,
        "options": {
          "Count_Person": {
            "label": "Population"
          },
          "GrowthRate_Count_Person": {
            "label": "Population Growth Rate"
          },
          "Count_Person_PerArea": {
            "label": "Population Density"
          }
        },
        "val": "Count_Person"
      },
      "options.economic__stat_var": {
        "type": "select",
        "label": "Statistics Data",
        "show_if": "options.category=='economic'",
        "required": true,
        "options": {
          "Amount_EconomicActivity_GrossDomesticProduction_Nominal": {
            "label": "Amount of Gross Domestic Production (Nominal)"
          },
          "Amount_EconomicActivity_GrossDomesticProduction_Nominal_PerCapita": {
            "label": "Amount of Gross Domestic Production Per Capita (Nominal)"
          },
          "GrowthRate_Amount_EconomicActivity_GrossDomesticProduction": {
            "label": "Growth Rate Amount of Gross Domestic Production"
          },
          "Amount_EconomicActivity_GrossNationalIncome_PurchasingPowerParity": {
            "label": "Amount of Gross National Income (Purchasing Power Parity)"
          },
          "Amount_EconomicActivity_GrossNationalIncome_PurchasingPowerParity_PerCapita": {
            "label": "Amount of Gross National Income as Fraction of Per Capita (Purchasing Power Parity)"
          },
          "Count_Product_MobileCellularSubscription_AsFractionOf_Count_Person": {
            "label": "Mobile Subscriptions Per Capita"
          }
        },
        "val": "Amount_EconomicActivity_GrossDomesticProduction_Nominal",
        "breakLine": true
      },
      "options.country": {
        "type": "select",
        "label": "Country",
        "required": true,
        "options": {
          "ALB": {
            "label": "Albania"
          },
          "AUT": {
            "label": "Austria"
          },
          "BEL": {
            "label": "Belgium"
          },
          "BLR": {
            "label": "Belarus"
          },
          "BGR": {
            "label": "Bulgaria"
          },
          "CAN": {
            "label": "Canada"
          },
          "CHN": {
            "label": "China"
          },
          "HRV": {
            "label": "Croatia"
          },
          "DNK": {
            "label": "Denmark"
          },
          "EST": {
            "label": "Estonia"
          },
          "FIN": {
            "label": "Finland"
          },
          "FRA": {
            "label": "France"
          },
          "DEU": {
            "label": "Germany"
          },
          "GRC": {
            "label": "Greece"
          },
          "HUN": {
            "label": "Hungary"
          },
          "ISL": {
            "label": "Iceland"
          },
          "IRL": {
            "label": "Ireland"
          },
          "ITA": {
            "label": "Italy"
          },
          "JPN": {
            "label": "Japan"
          },
          "LVA": {
            "label": "Latvia"
          },
          "LTU": {
            "label": "Lithuania"
          },
          "LUX": {
            "label": "Luxembourg"
          },
          "MLT": {
            "label": "Malta"
          },
          "MNE": {
            "label": "Montenegro"
          },
          "MDA": {
            "label": "Moldova"
          },
          "NLD": {
            "label": "Netherlands"
          },
          "MKD": {
            "label": "North Macedonia"
          },
          "NOR": {
            "label": "Norway"
          },
          "POL": {
            "label": "Poland"
          },
          "PRT": {
            "label": "Portugal"
          },
          "ROU": {
            "label": "Romania"
          },
          "RUS": {
            "label": "Russia"
          },
          "SRB": {
            "label": "Serbia"
          },
          "SVK": {
            "label": "Slovakia"
          },
          "SVN": {
            "label": "Slovenia"
          },
          "ESP": {
            "label": "Spain"
          },
          "SWE": {
            "label": "Sweden"
          },
          "CHE": {
            "label": "Switzerland"
          },
          "UKR": {
            "label": "Ukraine"
          },
          "GBR": {
            "label": "United Kingdom"
          },
          "USA": {
            "label": "United States"
          }
        },
        "val": ["DEU"],
        "multiple": true,
        "breakLine": true
      },
      "options.output_as_chart": {
        "type": "checkbox",
        "label": "Output a Graph",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
}
,
"/SelectOptions.json/SelectOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "type": {
        "type": "select",
        "label": "Select Type",
        "val": "first_n",
        "options": {
          "first_n": {
            "label": "First N"
          },
          "last_n": {
            "label": "Last N"
          },
          "custom_selection": {
            "label": "Custom Selection"
          },
          "skip_first_n": {
            "label": "Skip First N"
          },
          "skip_last_n": {
            "label": "Skip Last N"
          },
          "first_n_percent": {
            "label": "First N%"
          },
          "last_n_percent": {
            "label": "Last N%"
          },
          "random_n_records": {
            "label": "Random N"
          },
          "random_n_percent": {
            "label": "Random N%"
          },
          "random_choice_1_n": {
            "label": "Random Choice 1:N"
          },
          "every_nth_record": {
            "label": "Every Nth Record"
          }
        },
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "n": {
        "type": "text",
        "label": "Input N",
        "show_if": "type!='custom_selection'",
        "val": "1",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "ranges": {
        "type": "text",
        "label": "Input Ranges",
        "show_if": "type=='custom_selection'",
        "val": "-2; 4-6; 9; 12+",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "set_offset": {
        "type": "checkbox",
        "label": "Offset",
        "show_if": "type=='every_nth_record'",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "offset": {
        "type": "text",
        "label": "Offset",
        "show_if": "type=='every_nth_record' && set_offset=='true'",
        "val": "1",
        "required": true,
        "breakLine": true
      },
      "group_by_column": {
        "type": "checkbox",
        "label": "Group by column",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "columns_to_group_box": {
        "type": "fieldset",
        "label": "Group Column",
        "show_if": "group_by_column=='true'",
        "repeat": false,
        "fields": {
          "columns_to_group": {
            "type": "select",
            "label": "Select Group Columns",
            "required": true,
            "width": "100%",
            "table": "table_id",
            "multiple": true,
            "bind": "COLUMNS",
            "breakLine": true
          }
        }
      }
    }
  }
}
,
"/ExportToOneDriveOptions.json/ExportToOneDriveOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.to": {
        "type": "hidden",
        "val": "file"
      },
      "options.webservice": {
        "type": "hidden",
        "val": "ms_one_drive"
      },
      "options.export_format": {
        "type": "select",
        "label": "Export Format",
        "options": {
          "csv_file": {
            "label": "Csv file(s)"
          },
          "word_by_word": {
            "label": "Word by Word"
          },
          "line_by_line": {
            "label": "Line by Line"
          },
          "JSON": {
            "label": "JSON"
          }
        },
        "val": "csv_file",
        "required": true
      },
      "options.semicolon_separated": {
        "type": "checkbox",
        "label": "Semicolon separated",
        "show_if": "options.webservice=='ms_one_drive' && options.export_format=='csv_file'",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "options.if_duplicated": {
        "type": "select",
        "label": "If existing",
        "show_if": "options.webservice=='github'",
        "val": "drop_if_exist",
        "options": {
          "drop_if_exist": {
            "label": "Create or Drop (if already existing)"
          },
          "error_if_exist": {
            "label": "Create New (throw error if existing)"
          },
          "error_if_not_exist": {
            "label": "Drop (throw error if not-existing)"
          },
          "append": {
            "label": "Append"
          }
        },
        "breakLine": true
      },
      "options.export_series": {
        "type": "checkbox",
        "label": "Export Series",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.file_name_column": {
        "type": "select",
        "label": "Select File Name Column",
        "show_if": "options.export_series=='true'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true,
        "breakLine": true
      },
      "options.set_file_path_column": {
        "type": "checkbox",
        "label": "Export to specified path",
        "show_if": "options.export_series=='true'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.file_path_column": {
        "type": "select",
        "label": "Select File Path Column",
        "show_if": "options.export_series=='true' && options.set_file_path_column=='true'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true,
        "breakLine": true
      }
    }
  },
  "export_link_token_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px",
    "repeat": false,
    "fields": {
      "options.github_url": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test",
        "show_if": "options.webservice=='github'",
        "val": "",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.export_dir": {
        "type": "text",
        "label": "Enter dir e.g. /MyZippyDocFiles/SubDir/",
        "show_if": "options.webservice!='github'",
        "val": "/",
        "width": "100%",
        "breakLine": true
      },
      "options.github_token": {
        "type": "text",
        "label": "Specify the Github personal access token that has write permission:",
        "show_if": "options.webservice=='github'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.github_create_pr": {
        "type": "checkbox",
        "label": "Create pull request",
        "show_if": "options.webservice=='github'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.google_authorization_code": {
        "type": "text",
        "label": "Google OAuth Authorization Code with scope https://www.googleapis.com/auth/drive. You can get it here https://developers.google.com/oauthplayground/",
        "show_if": "options.webservice=='google_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox_authorization_code": {
        "type": "text",
        "label": "Dropbox Authorization Code. You can get it here https://www.dropbox.com/oauth2/authorize?client_id=9i7woztjp94jrkw&response_type=code",
        "show_if": "options.webservice=='dropbox'",
        "required": true,
        "width": "100%",
        "breakLine": true
      }
    }
  }
}
,
"/FlexmonsterStackedOptions.json/FlexmonsterStackedOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "show_if": "options.configure_manual=='true'",
    "repeat": false,
    "fields": {
      "options.type": {
        "type": "hidden",
        "val": "stacked_chart"
      },
      "options.chart_type": {
        "type": "hidden",
        "val": "stacked_column"
      },
      "options.add_column_cols": {
        "type": "checkbox",
        "label": "by Category",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.column_cols": {
        "type": "fieldset",
        "label": "Category column(s)",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.add_column_cols=='true'",
        "repeat": true,
        "fields": {
          "column_col": {
            "type": "select",
            "label": "Category column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "is_date": {
            "type": "checkbox",
            "label": "Is Date",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.row_cols": {
        "type": "fieldset",
        "label": "Series column(s)",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "repeat": true,
        "fields": {
          "row_col": {
            "type": "select",
            "label": "Series column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "is_date": {
            "type": "checkbox",
            "label": "Is Date",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "options.measure_cols": {
        "type": "fieldset",
        "label": "Value column(s)",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "repeat": true,
        "fields": {
          "measure_col": {
            "type": "select",
            "label": "Value Column",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "aggregation": {
            "type": "select",
            "label": "Aggregation Function",
            "options": {
              "sum": {
                "label": "Sum"
              },
              "count": {
                "label": "Count"
              },
              "distinctcount": {
                "label": "Distinct Count"
              },
              "average": {
                "label": "Average"
              },
              "median": {
                "label": "Median"
              },
              "product": {
                "label": "Product"
              },
              "min": {
                "label": "Min"
              },
              "max": {
                "label": "Max"
              },
              "stdevp": {
                "label": "Population Standard Deviation"
              },
              "stdevs": {
                "label": "Sample Standard Deviation"
              },
              "percent": {
                "label": "Percent"
              }
            },
            "val": "sum",
            "required": true,
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      }
    }
  }
}
,
"/FindReplaceByTableInput.json/FindReplaceByTableInput.json": {
  "use_filter": {
    "type": "checkbox",
    "label": "Use Filter",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  },
  "filter_options_box": {
    "type": "fieldset",
    "label": "Filter Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "use_filter=='true'",
    "repeat": false,
    "fields": {
      "filter": {
        "type": "fieldset",
        "label": "Add Filter Conditions",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "use_filter=='true'",
        "repeat": true,
        "fields": {
          "initial_op": {
            "type": "select",
            "label": "Select Logic Operator",
            "required": true,
            "show_if" :  "$index == 0",
            "options": {
              "if": {
                "label": "IF"
              },
              "if_not": {
                "label": "IF NOT"
              }
            },
            "val": "if"
          },
          "op": {
            "type": "select",
            "label": "Select Logic Operator",
            "required": true,
            "show_if" :  "$index > 0",
            "options": {
              "and": {
                "label": "AND"
              },
              "or": {
                "label": "OR"
              },
              "and_not": {
                "label": "AND NOT"
              },
              "or_not": {
                "label": "OR NOT"
              }
            },
            "val": "and"
          },
          "column": {
            "type": "select",
            "label": "Select Column",
            "show_if": "search_tables=='false'",
            "table": "table_id",
            "bind": "COLUMNS",
            "required": true
          },
          "search_tables__column_text": {
            "type": "text",
            "label": "Input Column Name",
            "show_if": "search_tables=='true' && search_tables__select_columns_by=='by_name_text'",
            "val": "",
            "required": true
          },
          "search_tables__column_order": {
            "type": "select",
            "label": "Select Column",
            "required": true,
            "show_if" :  "search_tables=='true' && search_tables__select_columns_by=='by_order'",
            "options": {
              "col1": {
                "label": "Column 1"
              },
              "col2": {
                "label": "Column 2"
              },
              "col3": {
                "label": "Column 3"
              },
              "col4": {
                "label": "Column 4"
              },
              "col5": {
                "label": "Column 5"
              },
              "col6": {
                "label": "Column 6"
              },
              "col7": {
                "label": "Column 7"
              },
              "col8": {
                "label": "Column 8"
              },
              "col9": {
                "label": "Column 9"
              },
              "col10": {
                "label": "Column 10"
              },
              "col11": {
                "label": "Column 11"
              },
              "col12": {
                "label": "Column 12"
              },
              "col13": {
                "label": "Column 13"
              },
              "col14": {
                "label": "Column 14"
              },
              "col15": {
                "label": "Column 15"
              },
              "col16": {
                "label": "Column 16"
              },
              "col17": {
                "label": "Column 17"
              },
              "col18": {
                "label": "Column 18"
              },
              "col19": {
                "label": "Column 19"
              },
              "col20": {
                "label": "Column 20"
              }
            },
            "val": ""
          },
          "condition": {
            "type": "select",
            "label": "Select Operator",
            "required": true,
            "options": {
              "CONTAINS": {
                "label": "CONTAINS"
              },
              "CONTAINED IN STRING": {
                "label": "CONTAINED IN"
              },
              "STARTS WITH": {
                "label": "STARTS WITH"
              },
              "ENDS WITH": {
                "label": "ENDS WITH"
              },
              "=": {
                "label": "EQUAL"
              },
              ">": {
                "label": "GREATER THAN"
              },
              ">=": {
                "label": "GREATER OR EQUAL"
              },
              "<": {
                "label": "SMALLER THAN"
              },
              "<=": {
                "label": "SMALLER OR EQUAL"
              },
              "EMPTY": {
                "label": "IS EMPTY"
              },
              "BLANK": {
                "label": "IS BLANK"
              },
              "IS NULL": {
                "label": "IS NULL"
              },
              "IS TRUE": {
                "label": "IS TRUE"
              },
              "IS FALSE": {
                "label": "IS FALSE"
              },
              "REGEX MATCH": {
                "label": "REGEX MATCH"
              },
              "CONTAINED IN TABLE": {
                "label": "IN TABLE"
              },
              "IN REGEX TABLE": {
                "label": "IN REGEX TABLE"
              },
              "DATE": {
                "label": "DATE"
              }
            },
            "val": "CONTAINS"
          },
          "date_condition": {
            "type": "select",
            "label": "Select Date Operator",
            "required": true,
            "show_if": "this.condition == 'DATE'",
            "options": {
              "<": {
                "label": "PRIOR"
              },
              "<=": {
                "label": "PRIOR OR EQUAL"
              },
              "=": {
                "label": "EQUAL"
              },
              ">": {
                "label": "AFTER"
              },
              ">=": {
                "label": "AFTER OR EQUAL"
              }
            },
            "val": "="
          },
          "compare_with": {
            "type": "select",
            "label": "Compare with",
            "required": true,
            "show_if": "this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<='",
            "options": {
              "custom_value": {
                "label": "Custom value"
              },
              "column_value": {
                "label": "Column value"
              }
            },
            "val": "custom_value"
          },
          "self_compare_column": {
            "type": "select",
            "label": "Select Compare Column",
            "table": "table_id",
            "bind": "COLUMNS",
            "show_if": "search_tables=='false' && this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
            "required": true
          },
          "search_tables__self_compare_column_text": {
            "type": "text",
            "label": "Input Compare Column Name",
            "show_if": "search_tables=='true' && search_tables__select_columns_by=='by_name_text' && this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
            "val": "",
            "required": true
          },
          "search_tables__self_compare_column_order": {
            "type": "select",
            "label": "Select Compare Column",
            "required": true,
            "show_if" :  "search_tables=='true' && search_tables__select_columns_by=='by_order' && this.compare_with=='column_value' && (this.condition=='CONTAINS' || this.condition=='CONTAINED IN STRING' || this.condition=='STARTS WITH' || this.condition=='ENDS WITH' || this.condition=='=' || this.condition=='>' || this.condition=='>=' || this.condition=='<' || this.condition=='<=')",
            "options": {
              "col1": {
                "label": "Column 1"
              },
              "col2": {
                "label": "Column 2"
              },
              "col3": {
                "label": "Column 3"
              },
              "col4": {
                "label": "Column 4"
              },
              "col5": {
                "label": "Column 5"
              },
              "col6": {
                "label": "Column 6"
              },
              "col7": {
                "label": "Column 7"
              },
              "col8": {
                "label": "Column 8"
              },
              "col9": {
                "label": "Column 9"
              },
              "col10": {
                "label": "Column 10"
              },
              "col11": {
                "label": "Column 11"
              },
              "col12": {
                "label": "Column 12"
              },
              "col13": {
                "label": "Column 13"
              },
              "col14": {
                "label": "Column 14"
              },
              "col15": {
                "label": "Column 15"
              },
              "col16": {
                "label": "Column 16"
              },
              "col17": {
                "label": "Column 17"
              },
              "col18": {
                "label": "Column 18"
              },
              "col19": {
                "label": "Column 19"
              },
              "col20": {
                "label": "Column 20"
              }
            },
            "val": ""
          },
          "date_value": {
            "type": "date",
            "label": "Select Date",
            "show_if": "this.condition=='DATE'",
            "val": "",
            "required": true
          },
          "value": {
            "type": "text",
            "label": "Input Value",
            "show_if": "this.compare_with=='custom_value' && this.condition != 'DATE' && this.condition != 'EMPTY' && this.condition != 'NOT EMPTY' && this.condition != 'BLANK' && this.condition != 'NOT BLANK' && this.condition != 'IS NULL' && this.condition != 'IS NOT NULL' && this.condition != 'IS TRUE' && this.condition != 'IS FALSE' && this.condition != 'CONTAINED IN TABLE' && this.condition != 'NOT CONTAINED IN TABLE' && this.condition != 'IN REGEX TABLE' && this.condition != 'NOT IN REGEX TABLE'",
            "val": "",
            "required": true
          },
          "case_sensitive": {
            "type": "select",
            "label": "Select Case Sensitive",
            "required": true,
            "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "options": {
              "yes": {
                "label": "Case Sensitive"
              },
              "no": {
                "label": "Case Insensitive"
              }
            },
            "val": "yes"
          },
          "compare_table_id": {
            "type": "select",
            "label": "Select Table",
            "bind": "TABLES",
            "empty": "",
            "show_if": "this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "required": true
          },
          "compare_column": {
            "type": "select",
            "label": "Select Compare Column",
            "table": "this.compare_table_id",
            "bind": "COLUMNS",
            "show_if": "search_tables=='false' && (this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE')",
            "required": true
          },
          "search_tables__compare_column_text": {
            "type": "text",
            "label": "Input Compare Column Name",
            "show_if": "search_tables=='true' && search_tables__select_columns_by=='by_name_text' && (this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE')",
            "val": "",
            "required": true
          },
          "search_tables__compare_column_order": {
            "type": "select",
            "label": "Select Compare Column",
            "required": true,
            "show_if" :  "search_tables=='true' && search_tables__select_columns_by=='by_order' && (this.condition == 'CONTAINED IN TABLE' || this.condition == 'NOT CONTAINED IN TABLE' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE')",
            "options": {
              "col1": {
                "label": "Column 1"
              },
              "col2": {
                "label": "Column 2"
              },
              "col3": {
                "label": "Column 3"
              },
              "col4": {
                "label": "Column 4"
              },
              "col5": {
                "label": "Column 5"
              },
              "col6": {
                "label": "Column 6"
              },
              "col7": {
                "label": "Column 7"
              },
              "col8": {
                "label": "Column 8"
              },
              "col9": {
                "label": "Column 9"
              },
              "col10": {
                "label": "Column 10"
              },
              "col11": {
                "label": "Column 11"
              },
              "col12": {
                "label": "Column 12"
              },
              "col13": {
                "label": "Column 13"
              },
              "col14": {
                "label": "Column 14"
              },
              "col15": {
                "label": "Column 15"
              },
              "col16": {
                "label": "Column 16"
              },
              "col17": {
                "label": "Column 17"
              },
              "col18": {
                "label": "Column 18"
              },
              "col19": {
                "label": "Column 19"
              },
              "col20": {
                "label": "Column 20"
              }
            },
            "val": ""
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "apply_to_record": {
        "type": "checkbox",
        "label": "Apply to Record",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-top: 10px",
        "breakLine": true
      },
      "apply_to_group_box": {
        "type": "fieldset",
        "label": "Apply to Group",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "apply_to_record=='false'",
        "repeat": false,
        "fields": {
          "apply_to_group_columns__all_but_selected": {
            "type": "checkbox",
            "label": "All but selected",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "apply_to_group_columns": {
            "type": "select",
            "label": "Select Group Column(s)",
            "show_if": "search_tables=='false'",
            "required": true,
            "width": "100%",
            "table": "table_id",
            "multiple": true,
            "bind": "COLUMNS"
          },
          "search_tables__apply_to_group_columns_text": {
            "type": "text",
            "label": "Group Column(s) separated by `;`",
            "show_if": "search_tables=='true' && search_tables__select_columns_by=='by_name_text'",
            "val": "",
            "placeholder": "Column1; Column2; ColumnN",
            "required": true,
            "style": "width: 100%"
          },
          "search_tables__apply_to_group_columns_order": {
            "type": "select",
            "label": "Group Column(s)",
            "required": true,
            "show_if" :  "search_tables=='true' && search_tables__select_columns_by=='by_order'",
            "options": {
              "col1": {
                "label": "Column 1"
              },
              "col2": {
                "label": "Column 2"
              },
              "col3": {
                "label": "Column 3"
              },
              "col4": {
                "label": "Column 4"
              },
              "col5": {
                "label": "Column 5"
              },
              "col6": {
                "label": "Column 6"
              },
              "col7": {
                "label": "Column 7"
              },
              "col8": {
                "label": "Column 8"
              },
              "col9": {
                "label": "Column 9"
              },
              "col10": {
                "label": "Column 10"
              },
              "col11": {
                "label": "Column 11"
              },
              "col12": {
                "label": "Column 12"
              },
              "col13": {
                "label": "Column 13"
              },
              "col14": {
                "label": "Column 14"
              },
              "col15": {
                "label": "Column 15"
              },
              "col16": {
                "label": "Column 16"
              },
              "col17": {
                "label": "Column 17"
              },
              "col18": {
                "label": "Column 18"
              },
              "col19": {
                "label": "Column 19"
              },
              "col20": {
                "label": "Column 20"
              }
            },
            "multiple": true,
            "val": []
          }
        }
      }
    }
  }
}
,
"/DataCommonsOutput.json/DataCommonsOutput.json": {
  "output": {
    "type": "fieldset",
    "label": "Define Output Table",
    "show_if": "options.output_as_chart=='false'",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "output.custom_text": {
        "type": "text",
        "label": "Output Table Name",
        "show_if": "output.custom_options=='false' || (output.custom_options=='true' && output.compose_table_name=='false')",
        "minLength": 1,
        "val": "",
        "width": "100%",
        "breakLine": true
      },
      "output.custom_options": {
        "type": "checkbox",
        "label": "Output Options",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "output.compose_table_name": {
        "type": "checkbox",
        "label": "Compose Table Name",
        "show_if": "output.custom_options=='true'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "compose_table_name_frame": {
        "type": "fieldset",
        "label": "Compose Output Table Name",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "output.custom_options=='true' && output.compose_table_name=='true'",
        "repeat": false,
        "fields": {
          "output.prefix_rule": {
            "type": "select",
            "label": "Prefix",
            "show_if": "output.compose_table_name=='true'",
            "val": "empty",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.prefix_text": {
            "type": "text",
            "label": "Prefix Text",
            "show_if": "output.compose_table_name=='true' && output.prefix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "output.core_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "show_if": "output.compose_table_name=='true' && output.prefix_rule!='empty'",
            "val": "_",
            "width": "50px"
          },
          "output.core_rule": {
            "type": "select",
            "label": "Table Name",
            "show_if": "output.compose_table_name=='true'",
            "val": "input_table_name",
            "options": {
              "input_table_name": {
                "label": "Input Table Name"
              },
              "script_name": {
                "label": "Task Name"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.core_text": {
            "type": "text",
            "label": "Main Table Name",
            "show_if": "output.compose_table_name=='true' && output.core_rule=='custom'",
            "required": true,
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "output.suffix_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "show_if": "output.compose_table_name=='true'",
            "val": "_",
            "width": "50px"
          },
          "output.suffix_rule": {
            "type": "select",
            "label": "Suffix",
            "show_if": "output.compose_table_name=='true'",
            "val": "script_name",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.suffix_text": {
            "type": "text",
            "label": "Suffix Text",
            "show_if": "output.compose_table_name=='true' && output.suffix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": "",
            "breakLine": true
          },
          "output.timezone": {
            "type": "select",
            "label": "Timezone",
            "show_if": "output.compose_table_name=='true' && (output.prefix_rule=='date_string_type1' || output.prefix_rule=='date_string_type2' || output.prefix_rule=='time_string' || output.prefix_rule=='datetime_string' || output.suffix_rule=='date_string_type1' || output.suffix_rule=='date_string_type2' || output.suffix_rule=='time_string' || output.suffix_rule=='datetime_string')",
            "val": "Europe/Berlin",
            "required": true,
            "options": {
              "America/Adak": {
                "label": "Adak, Gambier"
              },
              "Australia/Adelaide": {
                "label": "Adelaide, Broken Hill, Darwin"
              },
              "America/Anchorage": {
                "label": "Anchorage, Juneau, Sitka"
              },
              "Pacific/Apia": {
                "label": "Apia, Asau, Mulifanua, Afega, Leulumoega"
              },
              "Pacific/Enderbury": {
                "label": "Apia, Fiji, Tongatapu"
              },
              "Antarctica/McMurdo": {
                "label": "Auckland, Casey, Davis"
              },
              "Pacific/Auckland": {
                "label": "Auckland, Wellington, Christchurch"
              },
              "Asia/Bangkok": {
                "label": "Bangkok, Jakarta, Novosibirsk"
              },
              "Europe/Berlin": {
                "label": "Berlin, Paris, Amsterdam"
              },
              "Australia/Perth": {
                "label": "Brunei, Singapore, Perth"
              },
              "Atlantic/Cape_Verde": {
                "label": "Cape Verde,Praia, Mindelo, Santa Maria"
              },
              "America/Belize": {
                "label": "Costa Rica, El Salvador, Denver"
              },
              "Antarctica/Vostok": {
                "label": "Dhaka, Bishkek, Omsk"
              },
              "Europe/Astrakhan": {
                "label": "Dubai, Baku, Tbilisi"
              },
              "Australia/Eucla": {
                "label": "Eucla"
              },
              "Pacific/Honolulu": {
                "label": "Honolulu, Rarotonga, Tahiti"
              },
              "Asia/Kabul": {
                "label": "Kabul, Kandahār, Mazār-e Sharīf, Herāt, Jalālābād"
              },
              "Asia/Aqtau": {
                "label": "Karachi, Tashkent, Maldives"
              },
              "Asia/Kathmandu": {
                "label": "Kathmandu, Pokhara, Pātan, Biratnagar"
              },
              "Pacific/Kiritimati": {
                "label": "Kiritimati"
              },
              "Asia/Colombo": {
                "label": "Kolkata, Colombo, Jaffna, Negombo"
              },
              "Europe/Guernsey": {
                "label": "London, Dublin, Lisbon"
              },
              "Australia/Lord_Howe": {
                "label": "Lord Howe"
              },
              "America/Creston": {
                "label": "Los Angeles, Vancouver, Hermosillo"
              },
              "Pacific/Marquesas": {
                "label": "Marquesas, Taiohae"
              },
              "America/Cayman": {
                "label": "Mexico City, Panama, Chicago"
              },
              "Pacific/Niue": {
                "label": "Midway, Niue, Pago Pago"
              },
              "Europe/Mariehamn": {
                "label": "Moscow, Istanbul, Qatar"
              },
              "Asia/Kolkata": {
                "label": "Mumbai, Delhi, Bengaluru, Kolkata, Chennai"
              },
              "America/Miquelon": {
                "label": "Noronha, Nuuk, Miquelon"
              },
              "America/Danmarkshavn": {
                "label": "Reykjavik, Dakar, Casablanca"
              },
              "Pacific/Bougainville": {
                "label": "Sakhalin, Norfolk, Bougainville"
              },
              "America/Araguaina": {
                "label": "Sao Paulo, Buenos Aires, Montevideo"
              },
              "America/St_Johns": {
                "label": "St. Johns, Mount Pearl, Corner Brook"
              },
              "Asia/Tehran": {
                "label": "Tehran, Mashhad, Isfahan, Karaj, Tabriz"
              },
              "Asia/Tokyo": {
                "label": "Tokyo, Seoul, Jayapura"
              },
              "America/New_York": {
                "label": "Toronto, Santiago, New York"
              },
              "Australia/Sydney": {
                "label": "Vladivostok, Sydney, Brisbane"
              },
              "Asia/Yangon": {
                "label": "Yangon, Cocos, Mandalay, Nay Pyi Taw, Mawlamyine"
              },
              "Indian/Cocos": {
                "label": "Yangon, Cocos, West Island"
              }
            },
            "breakLine": true
          }
        }
      }
    }
  }
},
"/ColumnToLabelOptions.json/ColumnToLabelOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "transpose_type": {
        "type": "hidden",
        "val": "column_name_to_label"
      },
      "mirror_matrix.convert_header_to_label": {
        "type": "checkbox",
        "label": "Convert header to label",
        "show_if": "transpose_type=='mirror_matrix'",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "column_name_to_label__columns_to_label_frame": {
        "type": "fieldset",
        "label": "Select columns to convert into Labels",
        "show_if": "transpose_type=='column_name_to_label'",
        "repeat": false,
        "fields": {
          "column_name_to_label.columns_to_label": {
            "type": "select",
            "style": "width: 50%; float: left",
            "label": "Select columns",
            "table": "table_id",
            "multiple": true,
            "bind": "COLUMNS"
          },
           "column_name_to_label.reverse_col_selection": {
            "type": "checkbox",
            "label": "All but selected",
            "style": "width: 40%; float: right",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          }
        }
      },
      "column_name_to_label.label_column_name": {
        "type": "text",
        "label": "Column Name of Label Column",
        "show_if": "transpose_type=='column_name_to_label'",
        "required": true,
        "val": "Label",
        "width": "100%",
        "breakLine": true
      },
      "column_name_to_label.value_column_name": {
        "type": "text",
        "label": "Column Name of Value Column",
        "show_if": "transpose_type=='column_name_to_label'",
        "required": true,
        "val": "Value",
        "width": "100%",
        "breakLine": true
      },
      "column_name_to_label.is_one_label": {
        "type": "checkbox",
        "label": "One label column",
        "show_if": "transpose_type=='column_name_to_label'",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "crosstab.group_data_by_these_values": {
        "type": "select",
        "label": "Group data by these values",
        "show_if": "transpose_type=='crosstab'",
        "table": "table_id",
        "multiple": true,
        "bind": "COLUMNS",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "crosstab.change_column_headers": {
        "type": "select",
        "label": "Change Column Header",
        "show_if": "transpose_type=='crosstab'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "crosstab.values_for_new_columns": {
        "type": "select",
        "label": "Values For New Columns",
        "show_if": "transpose_type=='crosstab'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "crosstab.method_for_aggregating_values": {
        "type": "select",
        "label": "Method for Aggregating Values",
        "show_if": "transpose_type=='crosstab'",
        "options": {
          "Concatenate": {
            "label": "Concatenate"
          },
          "First": {
            "label": "First"
          },
          "Last": {
            "label": "Last"
          },
          "Sum": {
            "label": "Sum"
          },
          "Average": {
            "label": "Average"
          },
          "Count": {
            "label": "Count"
          },
          "User Defined": {
            "label": "User Defined"
          }
        },
        "val": "Concatenate",
        "required": true
      },
      "crosstab.user_defined_str": {
        "type": "text",
        "label": "User Defined Value",
        "show_if": "transpose_type=='crosstab' && crosstab.method_for_aggregating_values=='User Defined'",
        "val": "x",
        "trim": "false",
        "breakLine": true
      },
      "crosstab.separator": {
        "type": "text",
        "label": "Separator",
        "show_if": "transpose_type=='crosstab' && method_for_aggregating_values=='Concatenate'",
        "val": ",",
        "trim": "false",
        "required": true,
        "breakLine": true
      }
    }
  }
}
,
"/ExportToDropboxOptions.json/ExportToDropboxOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Select Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.to": {
        "type": "hidden",
        "val": "file"
      },
      "options.webservice": {
        "type": "hidden",
        "val": "dropbox"
      },
      "options.export_format": {
        "type": "select",
        "label": "Export Format",
        "options": {
          "csv_file": {
            "label": "Csv file(s)"
          },
          "word_by_word": {
            "label": "Word by Word"
          },
          "line_by_line": {
            "label": "Line by Line"
          }
        },
        "val": "csv_file",
        "required": true,
        "breakLine": true
      },
      "options.if_duplicated": {
        "type": "select",
        "label": "If existing",
        "show_if": "options.webservice=='github'",
        "val": "drop_if_exist",
        "options": {
          "drop_if_exist": {
            "label": "Create or Drop (if already existing)"
          },
          "error_if_exist": {
            "label": "Create New (throw error if existing)"
          },
          "error_if_not_exist": {
            "label": "Drop (throw error if not-existing)"
          },
          "append": {
            "label": "Append"
          }
        },
        "breakLine": true
      },
      "options.export_series": {
        "type": "checkbox",
        "label": "Export Series",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.file_name_column": {
        "type": "select",
        "label": "Select File Name Column",
        "show_if": "options.export_series=='true'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true,
        "breakLine": true
      },
      "options.set_file_path_column": {
        "type": "checkbox",
        "label": "Export to specified path",
        "show_if": "options.export_series=='true'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.file_path_column": {
        "type": "select",
        "label": "Select File Path Column",
        "show_if": "options.export_series=='true' && options.set_file_path_column=='true'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true,
        "breakLine": true
      }
    }
  },
  "export_link_token_frame": {
    "type": "fieldset",
    "label": "Export Link",
    "repeat": false,
    "fields": {
      "options.github_url": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test",
        "show_if": "options.webservice=='github'",
        "val": "",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.export_dir": {
        "type": "text",
        "label": "Enter dir e.g. /MyZippyDocFiles/SubDir/",
        "show_if": "options.webservice!='github'",
        "val": "/",
        "width": "100%",
        "breakLine": true
      },
      "options.github_token": {
        "type": "text",
        "label": "Specify the Github personal access token that has write permission:",
        "show_if": "options.webservice=='github'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.github_create_pr": {
        "type": "checkbox",
        "label": "Create pull request",
        "show_if": "options.webservice=='github'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.ms_one_drive_token": {
        "type": "text",
        "label": "Microsoft Graph API access token. You can get it here https://ms-oauth.herokuapp.com/",
        "show_if": "options.webservice=='ms_one_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.google_authorization_code": {
        "type": "text",
        "label": "Google OAuth Authorization Code with scope https://www.googleapis.com/auth/drive. You can get it here https://developers.google.com/oauthplayground/",
        "show_if": "options.webservice=='google_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox_authorization_code": {
        "type": "text",
        "label": "Dropbox Authorization Code. You can get it here https://www.dropbox.com/oauth2/authorize?client_id=9i7woztjp94jrkw&response_type=code",
        "show_if": "options.webservice=='dropbox'",
        "required": true,
        "width": "100%",
        "breakLine": true
      }
    }
  }
},
"/RunFlowInput.json/RunFlowInput.json": {
  "input": {
    "type": "fieldset",
    "label": "Select Flow",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "flow_id": {
        "type": "select",
        "label": "Select Flow",
        "show_if": "select_flow_by_flow_id=='false'",
        "bind": "FLOWS",
        "empty": "",
        "required": true,
        "style": "margin-right: 15px"
      },
      "select_flow_by_flow_id": {
        "type": "checkbox",
        "label": "Select Flow by FlowID",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-right: 15px"
      },
      "flow_id_manual": {
        "type": "text",
        "label": "Input Flow ID",
        "show_if": "select_flow_by_flow_id=='true'",
        "val": "",
        "required": true,
        "breakLine": true
      },
      "run_own_input_tables": {
        "type": "checkbox",
        "label": "Run Selected Flow with own Input Table(s)",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-right: 20px"
      },
      "own_input_tables": {
        "type": "fieldset",
        "label": "Own Input table(s)",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.manual_config=='false' && run_own_input_tables=='true'",
        "repeat": true,
        "fields": {
          "table_id": {
            "type": "select",
            "label": "Select Input Table",
            "bind": "TABLES",
            "empty": ""
          },
          "position": {
            "type": "select",
            "label": "Top Down Table Position",
            "required": true,
            "options": {
              "1": {
                "label": "Position 1"
              },
              "2": {
                "label": "Position 2"
              },
              "3": {
                "label": "Position 3"
              },
              "4": {
                "label": "Position 4"
              },
              "5": {
                "label": "Position 5"
              },
              "6": {
                "label": "Position 6"
              },
              "7": {
                "label": "Position 7"
              },
              "8": {
                "label": "Position 8"
              },
              "9": {
                "label": "Position 9"
              },
              "10": {
                "label": "Position 10"
              }
            },
            "val": "1",
            "breakLine": true
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      }
    }
  }
}
,
"/CombinationOptions.json/CombinationOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.group_column": {
        "type": "select",
        "label": "Group Column",
        "required": true,
        "table": "table_id",
        "bind": "COLUMNS"
      },
      "options.search_tables__group_column_text": {
        "type": "text",
        "label": "Input Column Name",
        "show_if": "search_tables=='true' && search_tables__select_columns_by=='by_name_text'",
        "val": "",
        "required": true
      },
      "options.search_tables__group_column_order": {
        "type": "select",
        "label": "Select Column",
        "required": true,
        "show_if" :  "search_tables=='true' && search_tables__select_columns_by=='by_order'",
        "options": {
          "col1": {
            "label": "Column 1"
          },
          "col2": {
            "label": "Column 2"
          },
          "col3": {
            "label": "Column 3"
          },
          "col4": {
            "label": "Column 4"
          },
          "col5": {
            "label": "Column 5"
          },
          "col6": {
            "label": "Column 6"
          },
          "col7": {
            "label": "Column 7"
          },
          "col8": {
            "label": "Column 8"
          },
          "col9": {
            "label": "Column 9"
          },
          "col10": {
            "label": "Column 10"
          },
          "col11": {
            "label": "Column 11"
          },
          "col12": {
            "label": "Column 12"
          },
          "col13": {
            "label": "Column 13"
          },
          "col14": {
            "label": "Column 14"
          },
          "col15": {
            "label": "Column 15"
          },
          "col16": {
            "label": "Column 16"
          },
          "col17": {
            "label": "Column 17"
          },
          "col18": {
            "label": "Column 18"
          },
          "col19": {
            "label": "Column 19"
          },
          "col20": {
            "label": "Column 20"
          }
        },
        "val": "",
        "breakLine": true
      }
    }
  }
},
"/pdf-repro/CoverLetter.json/CoverLetter.json": {
  "cover_letter_placeholder_frame": {
    "type": "fieldset",
    "label": "Configure 'Cover Letter' PDF",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "options.template_id=='id_bd7c7b52449752d78436f5aaa893abd36e96b7a9'",
    "repeat": false,
    "fields": {
      "sender_detail_frame": {
        "type": "fieldset",
        "label": "Sender Details",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.configure_by_table=='false'",
        "repeat": false,
        "fields": {
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.sender_detail.configure_by_table": {
            "type": "checkbox",
            "label": "Configure by table",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.sender_detail.configure_by_table_help": {
            "type": "text",
            "label": "",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.sender_detail.configure_by_table=='true'",
            "val": "Table Structure ( Field Name | Field Value )",
            "disabled": true,
            "width": "100%"
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.sender_detail.table_id": {
            "type": "select",
            "label": "Select Table",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.sender_detail.configure_by_table=='true'",
            "bind": "TABLES",
            "empty": "",
            "required": true,
            "breakLine": true
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.sender_name": {
            "type": "text",
            "label": "Sender Name",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "My Company ltd.",
            "val": ""
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.sender_department": {
            "type": "text",
            "label": "Sender Department",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "Purchase department",
            "val": ""
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.sender_street": {
            "type": "text",
            "label": "Sender Street",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "Main street 21",
            "val": ""
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.sender_zip_code": {
            "type": "text",
            "label": "Sender Zip Code",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "80000",
            "val": ""
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.sender_city": {
            "type": "text",
            "label": "Sender City",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "München",
            "val": "",
            "breakLine": true
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.sender_registry_number": {
            "type": "text",
            "label": "Sender Registry Number",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "HRB 334543",
            "val": ""
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.sender_registry_court": {
            "type": "text",
            "label": "Sender Registry Court",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "Frankfurt am Main",
            "val": ""
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.sender_representatives": {
            "type": "text",
            "label": "Sender Representatives",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "Dr. Joe Johnson",
            "val": ""
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.sender_representative_type": {
            "type": "text",
            "label": "Sender Representative Type",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "Geschäftsführer",
            "val": "",
            "breakLine": true
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.sender_bank": {
            "type": "text",
            "label": "Sender Bank",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "Deutsche Bank_",
            "val": ""
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.sender_bank_iban": {
            "type": "text",
            "label": "Sender Bank IBAN",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "XXX",
            "val": ""
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.sender_bank_bic": {
            "type": "text",
            "label": "Sender Bank BIC",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "XXX",
            "val": ""
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.sender_bank_account_no": {
            "type": "text",
            "label": "Sender Bank Account No",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "XXX",
            "val": ""
          }
        }
      },
      "recipient_detail_frame": {
        "type": "fieldset",
        "label": "Recipient Details",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.configure_by_table=='false'",
        "repeat": false,
        "fields": {
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.recipient_detail.configure_by_table": {
            "type": "checkbox",
            "label": "Configure by table",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.recipient_detail.configure_by_table_help": {
            "type": "text",
            "label": "",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.recipient_detail.configure_by_table=='true'",
            "val": "Table Structure ( Field Name | Field Value )",
            "disabled": true,
            "width": "100%"
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.recipient_detail.table_id": {
            "type": "select",
            "label": "Select Table",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.recipient_detail.configure_by_table=='true'",
            "bind": "TABLES",
            "empty": "",
            "required": true,
            "breakLine": true
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.recipient_number": {
            "type": "text",
            "label": "Recipient Number",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.recipient_detail.configure_by_table=='false'",
            "placeholder": "54321",
            "val": ""
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.recipient_name": {
            "type": "text",
            "label": "Recipient Name",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.recipient_detail.configure_by_table=='false'",
            "placeholder": "My company ltd.",
            "val": ""
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.recipient_department": {
            "type": "text",
            "label": "Recipient Department",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.recipient_detail.configure_by_table=='false'",
            "placeholder": "purchase department",
            "val": ""
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.recipient_street": {
            "type": "text",
            "label": "Recipient Street",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.recipient_detail.configure_by_table=='false'",
            "placeholder": "Main street 21",
            "val": ""
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.recipient_zip_code": {
            "type": "text",
            "label": "Recipient Zip Code",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.recipient_detail.configure_by_table=='false'",
            "placeholder": "80000",
            "val": ""
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.recipient_city": {
            "type": "text",
            "label": "Recipient City",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.recipient_detail.configure_by_table=='false'",
            "placeholder": "München",
            "val": ""
          }
        }
      },
      "logo_frame": {
        "type": "fieldset",
        "label": "Logo",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "repeat": false,
        "fields": {
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.sender_logo": {
            "type": "text",
            "label": "Logo(Base64 Encoded Data of JPEG)",
            "placeholder": "data:image/jpeg;base64, /9j/4AAQSkZJRgABAQEA",
            "val": "",
            "width": "100%"
          },
          "help_text_id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_logo": {
            "type": "text",
            "label": "",
            "val": "For conversion you may use e.g. https://onlinejpgtools.com/convert-jpg-to-base64",
            "disabled": true,
            "width": "100%",
            "breakLine": true
          },

          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.sender_claim": {
            "type": "text",
            "label": "Sender Claim",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.extra.configure_by_table=='false'",
            "placeholder": "my claim",
            "val": ""
          }
        }
      },
      "extra_frame": {
        "type": "fieldset",
        "label": "Extra Info",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.configure_by_table=='false'",
        "repeat": false,
        "fields": {
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.extra.configure_by_table": {
            "type": "checkbox",
            "label": "Configure by table",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.extra.configure_by_table_help": {
            "type": "text",
            "label": "",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.extra.configure_by_table=='true'",
            "val": "Table Structure ( Field Name | Field Value )",
            "disabled": true,
            "width": "100%"
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.extra.table_id": {
            "type": "select",
            "label": "Select Table",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.extra.configure_by_table=='true'",
            "bind": "TABLES",
            "empty": "",
            "required": true,
            "breakLine": true
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.letter_date": {
            "type": "text",
            "label": "Letter Date",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.extra.configure_by_table=='false'",
            "placeholder": "29.06.2021",
            "val": ""
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.reference": {
            "type": "text",
            "label": "Reference",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.extra.configure_by_table=='false'",
            "placeholder": "eK2-762-24/vfs",
            "val": "",
            "breakLine": true
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.subject": {
            "type": "text",
            "label": "Subject",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.extra.configure_by_table=='false'",
            "placeholder": "Mein Betreff",
            "val": "",
            "breakLine": true
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.footer": {
            "type": "text",
            "label": "Footer",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.extra.configure_by_table=='false'",
            "placeholder": "Vielen Dank!",
            "val": ""
          }
        }
      },
      "paragraph_list_frame": {
        "type": "fieldset",
        "label": "Paragraphs",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.configure_by_table=='false'",
        "repeat": false,
        "fields": {
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.paragraph_list.configure_by_table": {
            "type": "checkbox",
            "label": "Configure by table",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.paragraph_list.configure_by_table_help": {
            "type": "text",
            "label": "",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.paragraph_list.configure_by_table=='true'",
            "val": "Table Structure ( Field Name | Field Value )",
            "disabled": true,
            "width": "100%"
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.paragraph_list.table_id": {
            "type": "select",
            "label": "Select Table",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.paragraph_list.configure_by_table=='true'",
            "bind": "TABLES",
            "empty": "",
            "required": true,
            "breakLine": true
          },
          "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9.paragraph": {
            "type": "fieldset",
            "label": "Paragraph List",
            "style": "border-radius: 3px; border: 1px solid #ccc",
            "show_if": "options.id_bd7c7b52449752d78436f5aaa893abd36e96b7a9_configure.paragraph_list.configure_by_table=='false'",
            "repeat": true,
            "fields": {
              "text": {
                "type": "textarea",
                "label": "text",
                "rows": 5,
                "val": "",
                "placeholder": "text",
                "width": "100%"
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          }
        }
      }
    }
  }
},
"/pdf-repro/AppointmentOrRemoval.json/AppointmentOrRemoval.json": {
  "appointment_or_removal_placeholder_frame": {
    "type": "fieldset",
    "label": "Configure 'Appointment or Removal' PDF",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "options.template_id=='id_17b533f4f9c5d2960ba67455a81ef22918106d1e' && options.configure_by_table=='false'",
    "repeat": false,
    "fields": {
      "extra_frame": {
        "type": "fieldset",
        "label": "Basic Info",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "repeat": false,
        "fields": {
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.extra.configure_by_table": {
            "type": "checkbox",
            "label": "Configure by table",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.extra.configure_by_table_help": {
            "type": "text",
            "label": "",
            "show_if": "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.extra.configure_by_table=='true'",
            "val": "Table Structure ( Field Name | Field Value )",
            "disabled": true,
            "width": "100%"
          },
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.extra.table_id": {
            "type": "select",
            "label": "Select Table",
            "show_if": "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.extra.configure_by_table=='true'",
            "bind": "TABLES",
            "empty": "",
            "required": true,
            "breakLine": true
          },
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e.effective_date": {
            "type": "text",
            "label": "Effective Date",
            "show_if": "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.extra.configure_by_table=='false'",
            "placeholder": "31.12.2021",
            "val": ""
          },
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e.resolution_date": {
            "type": "text",
            "label": "Resolution Date",
            "show_if": "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.extra.configure_by_table=='false'",
            "placeholder": "31.12.2020",
            "val": ""
          },
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e.forms_and_terms": {
            "type": "text",
            "label": "Forms and Terms",
            "show_if": "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.extra.configure_by_table=='false'",
            "placeholder": "Unter Einhaltung",
            "val": ""
          },
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e.votes_agreed": {
            "type": "text",
            "label": "Votes Agreed",
            "show_if": "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.extra.configure_by_table=='false'",
            "placeholder": "100%",
            "val": ""
          },
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e.votes_present": {
            "type": "text",
            "label": "Votes Present",
            "show_if": "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.extra.configure_by_table=='false'",
            "placeholder": "aller Stimmen",
            "val": ""
          }
        }
      },
      "company_detail_frame": {
        "type": "fieldset",
        "label": "Company Details",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "repeat": false,
        "fields": {
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.company_detail.configure_by_table": {
            "type": "checkbox",
            "label": "Configure by table",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.company_detail.configure_by_table_help": {
            "type": "text",
            "label": "",
            "show_if": "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.company_detail.configure_by_table=='true'",
            "val": "Table Structure ( Field Name | Field Value )",
            "disabled": true,
            "width": "100%"
          },
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.company_detail.table_id": {
            "type": "select",
            "label": "Select Table",
            "show_if": "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.company_detail.configure_by_table=='true'",
            "bind": "TABLES",
            "empty": "",
            "required": true,
            "breakLine": true
          },
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e.company_name": {
            "type": "text",
            "label": "Company Name",
            "show_if": "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.company_detail.configure_by_table=='false'",
            "placeholder": "MyCompany  Ltd.",
            "val": ""
          },
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e.company_street": {
            "type": "text",
            "label": "Company Street",
            "show_if": "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.company_detail.configure_by_table=='false'",
            "placeholder": "Foster Street 33",
            "val": ""
          },
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e.company_zip_code": {
            "type": "text",
            "label": "Company Zip Code",
            "show_if": "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.company_detail.configure_by_table=='false'",
            "placeholder": "33434",
            "val": ""
          },
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e.company_city": {
            "type": "text",
            "label": "Company City",
            "show_if": "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.company_detail.configure_by_table=='false'",
            "placeholder": "New York",
            "val": ""
          },
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e.company_registry_number": {
            "type": "text",
            "label": "Company Registry Number",
            "show_if": "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.company_detail.configure_by_table=='false'",
            "placeholder": "HRB 334543",
            "val": ""
          },
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e.company_registry_court": {
            "type": "text",
            "label": "Company Registry Court",
            "show_if": "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.company_detail.configure_by_table=='false'",
            "placeholder": "Frankfurt am Main",
            "val": ""
          }
        }
      },
      "shareholder_list_frame": {
        "type": "fieldset",
        "label": "Shareholder List",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "repeat": false,
        "fields": {
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.shareholder_list.configure_by_table": {
            "type": "checkbox",
            "label": "Configure by table",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.shareholder_list.configure_by_table_help": {
            "type": "text",
            "label": "",
            "show_if": "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.shareholder_list.configure_by_table=='true'",
            "val": "Table Structure ( Field Name | Field Value )",
            "disabled": true,
            "width": "100%"
          },
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.shareholder_list.table_id": {
            "type": "select",
            "label": "Select Table",
            "show_if": "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.shareholder_list.configure_by_table=='true'",
            "bind": "TABLES",
            "empty": "",
            "required": true,
            "breakLine": true
          },
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e.shareholder_list": {
            "type": "fieldset",
            "label": "Shareholder List",
            "style": "border-radius: 3px; border: 1px solid #ccc",
            "show_if": "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.shareholder_list.configure_by_table=='false'",
            "repeat": true,
            "fields": {
              "signature_place": {
                "type": "text",
                "label": "Signature Place",
                "val": "",
                "placeholder": "Frankfurt am Main"
              },
              "snippet_the": {
                "type": "text",
                "label": "Snippet the",
                "val": "",
                "placeholder": ", den"
              },
              "signature_date": {
                "type": "text",
                "label": "Signature Date",
                "val": "",
                "placeholder": "13.04.2021"
              },
              "signatory_line": {
                "type": "text",
                "label": "Signatory Line",
                "val": "",
                "placeholder": "__________________________"
              },
              "signatory_name": {
                "type": "text",
                "label": "Signatory Name",
                "val": "",
                "placeholder": "Peter Foster"
              },
              "signatory_representing": {
                "type": "text",
                "label": "Signatory Representing",
                "val": "",
                "placeholder": "Managing Director Of  Party__4"
              },
              "signatory_title": {
                "type": "text",
                "label": "Signatory Title",
                "val": "",
                "placeholder": "Managing Director"
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          }
        }
      },
      "topic_list_frame": {
        "type": "fieldset",
        "label": "Topics",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "repeat": false,
        "fields": {
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.topic_list.configure_by_table": {
            "type": "checkbox",
            "label": "Configure by table",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.topic_list.configure_by_table_help": {
            "type": "text",
            "label": "",
            "show_if": "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.topic_list.configure_by_table=='true'",
            "val": "Table Structure ( Field Name | Field Value )",
            "disabled": true,
            "width": "100%"
          },
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.topic_list.table_id": {
            "type": "select",
            "label": "Select Table",
            "show_if": "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.topic_list.configure_by_table=='true'",
            "bind": "TABLES",
            "empty": "",
            "required": true,
            "breakLine": true
          },
          "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e.topic_list": {
            "type": "fieldset",
            "label": "Topic List",
            "style": "border-radius: 3px; border: 1px solid #ccc",
            "show_if": "options.id_17b533f4f9c5d2960ba67455a81ef22918106d1e_configure.topic_list.configure_by_table=='false'",
            "repeat": true,
            "fields": {
              "topic_header_1": {
                "type": "text",
                "label": "Topic Header 1",
                "val": "",
                "placeholder": "Zum Geschäftsführer wird bestellt:",
                "width": "100%",
				"breakLine": true
              },
              "topic_header_2": {
                "type": "text",
                "label": "Topic Header 2",
                "val": "",
                "placeholder": "",
                "width": "100%",
				"breakLine": true
              },
              "appointee_name": {
                "type": "text",
                "label": "Appointee Name",
                "val": "",
                "placeholder": "Peter Foster"
              },
              "appointee_street": {
                "type": "text",
                "label": "Appointee Street",
                "val": "",
                "placeholder": "Foster Street 33"
              },
              "appointee_zip_code": {
                "type": "text",
                "label": "Appointee Zip Code",
                "val": "",
                "placeholder": "33434"
              },
              "appointee_city": {
                "type": "text",
                "label": "Appointee City",
                "val": "",
                "placeholder": "New York"
              },
              "appointee_country": {
                "type": "text",
                "label": "Appointee Country",
                "val": "",
                "placeholder": "USA"
              },
              "appointee_date_of_birth": {
                "type": "text",
                "label": "Appointee Date of Birth",
                "val": "",
                "placeholder": "23.3.2000"
              },
              "snippet_living_at": {
                "type": "text",
                "label": "Snippet Living At",
                "val": "",
                "placeholder": "Wohnhaft in",
				"breakLine": true
              },
              "topic_footer_1": {
                "type": "text",
                "label": "Topic Footer 1",
                "val": "",
                "placeholder": "Der Geschäftsführer vertritt die Gesellschaft stets einzeln.",
                "width": "100%",
				"breakLine": true
              },
              "topic_footer_2": {
                "type": "text",
                "label": "Topic Footer 2",
                "val": "",
                "placeholder": "Er ist von den Beschränkungen des §181 befreit",
                "width": "100%",
				"breakLine": true
              },
              "topic_footer_3": {
                "type": "text",
                "label": "Topic Footer 3",
                "val": "",
                "placeholder": "",
                "width": "100%"
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          }
        }
      }
    }
  }
},
"/pdf-repro/PdfReProOptions2GDrive.json/PdfReProOptions2GDrive.json": {
  "cloud_config_frame": {
    "type": "fieldset",
    "label": "Config Cloud Directory to export to",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "options.type=='create' && (options.where_to_create=='only_export_to_cloud' || options.where_to_create=='both_export_to_cloud_and_open_in_browser')",
    "repeat": false,
    "fields": {
      "options.webservice": {
        "type": "hidden",
        "val": "google_drive"
      },
      "options.export_dir": {
        "type": "text",
        "label": "Enter dir e.g. /MyZippyDocFiles/SubDir/",
        "show_if": "options.webservice!='github'",
        "val": "",
        "width": "100%",
        "breakLine": true
      },
      "options.google_authorization_code": {
        "type": "text",
        "label": "Google OAuth Authorization Code with scope https://www.googleapis.com/auth/drive. You can get it here https://developers.google.com/oauthplayground/",
        "show_if": "options.webservice=='google_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      }
    }
  }
},
"/pdf-repro/PdfReProOptions2.json/PdfReProOptions2.json": {
  "cloud_config_frame": {
    "type": "fieldset",
    "label": "Config Cloud Directory to export to",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "options.type=='create' && (options.where_to_create=='only_export_to_cloud' || options.where_to_create=='both_export_to_cloud_and_open_in_browser')",
    "repeat": false,
    "fields": {
      "options.webservice": {
        "type": "select",
        "label": "Select Webservice",
        "options": {
          "ms_one_drive": {
            "label": "Microsoft One Drive"
          },
          "dropbox": {
            "label": "Dropbox"
          },
          "google_drive": {
            "label": "Google Drive"
          }
        },
        "val": "ms_one_drive",
        "required": true,
        "breakLine": true
      },
      "options.github_url": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test",
        "show_if": "options.webservice=='github'",
        "val": "",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.export_dir": {
        "type": "text",
        "label": "Enter dir e.g. /MyZippyDocFiles/SubDir/",
        "show_if": "options.webservice!='github'",
        "val": "",
        "width": "100%",
        "breakLine": true
      },
      "options.github_token": {
        "type": "text",
        "label": "Specify the Github personal access token that has write permission:",
        "show_if": "options.webservice=='github'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.google_authorization_code": {
        "type": "text",
        "label": "Google OAuth Authorization Code with scope https://www.googleapis.com/auth/drive. You can get it here https://developers.google.com/oauthplayground/",
        "show_if": "options.webservice=='google_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox_authorization_code": {
        "type": "text",
        "label": "Dropbox Authorization Code. You can get it here https://www.dropbox.com/oauth2/authorize?client_id=9i7woztjp94jrkw&response_type=code",
        "show_if": "options.webservice=='dropbox'",
        "required": true,
        "width": "100%",
        "breakLine": true
      }
    }
  }
},
"/pdf-repro/PdfReProOptions2OneDrive.json/PdfReProOptions2OneDrive.json": {
  "cloud_config_frame": {
    "type": "fieldset",
    "label": "Config Cloud Directory to export to",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "options.type=='create' && (options.where_to_create=='only_export_to_cloud' || options.where_to_create=='both_export_to_cloud_and_open_in_browser')",
    "repeat": false,
    "fields": {
      "options.webservice": {
        "type": "hidden",
        "val": "ms_one_drive"
      },
      "options.export_dir": {
        "type": "text",
        "label": "Enter dir e.g. /MyZippyDocFiles/SubDir/",
        "show_if": "options.webservice!='github'",
        "val": "",
        "width": "100%",
        "breakLine": true
      }
    }
  }
},
"/pdf-repro/PdfReProOptions2Dropbox.json/PdfReProOptions2Dropbox.json": {
  "cloud_config_frame": {
    "type": "fieldset",
    "label": "Config Cloud Directory to export to",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "options.type=='create' && (options.where_to_create=='only_export_to_cloud' || options.where_to_create=='both_export_to_cloud_and_open_in_browser')",
    "repeat": false,
    "fields": {
      "options.webservice": {
        "type": "hidden",
        "val": "dropbox"
      },
      "options.export_dir": {
        "type": "text",
        "label": "Enter dir e.g. /MyZippyDocFiles/SubDir/",
        "show_if": "options.webservice!='github'",
        "val": "",
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox_authorization_code": {
        "type": "text",
        "label": "Dropbox Authorization Code. You can get it here https://www.dropbox.com/oauth2/authorize?client_id=9i7woztjp94jrkw&response_type=code",
        "show_if": "options.webservice=='dropbox'",
        "required": true,
        "width": "100%",
        "breakLine": true
      }
    }
  }
},
"/pdf-repro/PdfReProOptions1.json/PdfReProOptions1.json": {
  "options_box": {
    "type": "fieldset",
    "label": "Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.script_name": {
        "type": "hidden",
        "val": "PdfRePro"
      },
      "options.type": {
        "type": "hidden",
        "val": "create"
      },
      "options.template_id": {
        "type": "select",
        "label": "Document Type",
        "options": {
          "id_bd7c7b52449752d78436f5aaa893abd36e96b7a9": {
            "label": "Cover Letter"
          },
          "id_17b533f4f9c5d2960ba67455a81ef22918106d1e": {
            "label": "Appointment or Removal"
          }
        },
        "val": "id_bd7c7b52449752d78436f5aaa893abd36e96b7a9",
        "required": true
      },
      "options.lang": {
        "type": "select",
        "label": "Document Language",
        "show_if": "options.type=='create'",
        "options": {
          "standard": {
            "label": "Standard Language"
          },
          "lt": {
            "label": "Lithuanian"
          },
          "it": {
            "label": "Italian"
          },
          "hu": {
            "label": "Hungarian"
          },
          "fr": {
            "label": "French"
          },
          "fi": {
            "label": "Finnish"
          },
          "bg": {
            "label": "Bulgarian"
          },
          "ca": {
            "label": "Canadian"
          },
          "cs": {
            "label": "Czech"
          },
          "de": {
            "label": "German"
          },
          "en": {
            "label": "English"
          },
          "es": {
            "label": "Spanish"
          }
        },
        "val": "en",
        "required": true,
        "breakLine": true
      },
      "options.where_to_create": {
        "type": "select",
        "label": "Where to create",
        "options": {
          "only_open_in_browser": {
            "label": "Only open PDF in browser"
          },
          "only_export_to_cloud": {
            "label": "Only export to cloud"
          },
          "both_export_to_cloud_and_open_in_browser": {
            "label": "Both export to cloud and open pdf in browser"
          }
        },
        "val": "only_open_in_browser",
        "required": true,
        "breakLine": true
      },
      "options.configure_by_table": {
        "type": "checkbox",
        "label": "Configure by table",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.configure_by_table_help": {
        "type": "text",
        "label": "",
        "show_if": "options.configure_by_table=='true'",
        "val": "Table Structure ( Document | List Name | List Item | Field Name | Field Value )",
        "disabled": true,
        "width": "100%"
      },
      "options.table_id": {
        "type": "select",
        "label": "Select Table",
        "show_if": "options.configure_by_table=='true'",
        "bind": "TABLES",
        "empty": "",
        "required": true,
        "breakLine": true
      }
    }
  }
}
,
"/pdf-repro/Invoice.json/Invoice.json": {
  "invoice_placeholder_frame": {
    "type": "fieldset",
    "label": "Configure 'Invoice' PDF",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "options.template_id=='id_b7b0e4380196a9c60a5d236578bddb16306a51bd'",
    "repeat": false,
    "fields": {
      "sender_detail_frame": {
        "type": "fieldset",
        "label": "Sender Details",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.configure_by_table=='false'",
        "repeat": false,
        "fields": {
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.configure_by_table": {
            "type": "checkbox",
            "label": "Configure by table",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.table_style": {
            "type": "select",
            "label": "Table Style",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.configure_by_table=='true'",
            "options": {
              "field_name_as_header": {
                "label": "Field Name as Header"
              },
              "row_by_row_field_name": {
                "label": "Row by Row Field Name"
              }
            },
            "val": "field_name_as_header",
            "required": true,
            "breakLine": true
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.configure_by_table_help": {
            "type": "textarea",
            "label": "",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.configure_by_table=='true' && options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.table_style=='field_name_as_header'",
            "val": "Table Structure ( ID | Customer Number | Customer Name | Customer Department | Customer Street | Customer Zip Code | Customer City )",
            "md_no_resize": false,
            "rows": 2,
            "disabled": true,
            "width": "100%"
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.configure_by_table_help2": {
            "type": "text",
            "label": "",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.configure_by_table=='true' && options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.table_style=='row_by_row_field_name'",
            "val": "Table Structure ( Field Name | Field Value )",
            "disabled": true,
            "width": "100%"
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.table_id": {
            "type": "select",
            "label": "Select Table",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.configure_by_table=='true'",
            "bind": "TABLES",
            "empty": "",
            "required": true,
            "breakLine": true
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.selected_col": {
            "type": "select",
            "label": "Select ID Column",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.configure_by_table=='true' && options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.table_style=='field_name_as_header'",
            "required": true,
            "table": "options.invoice_summary.input_table",
            "bind": "COLUMNS"
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.selected_rows": {
            "type": "select",
            "label": "Select Row Number(s)",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.configure_by_table=='true' && options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.table_style=='field_name_as_header'",
            "multiple": true,
            "unique_values_only": true,
            "table": "options.invoice_summary.input_table",
            "column_list": "options.invoice_summary.selected_col",
            "bind": "RECORDS",
            "required": true,
            "breakLine": true
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.sender_name": {
            "type": "text",
            "label": "Sender Name",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "My Company ltd.",
            "val": ""
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.sender_department": {
            "type": "text",
            "label": "Sender Department",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "Purchase department",
            "val": ""
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.sender_street": {
            "type": "text",
            "label": "Sender Street",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "Main street 21",
            "val": ""
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.sender_zip_code": {
            "type": "text",
            "label": "Sender Zip Code",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "80000",
            "val": ""
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.sender_city": {
            "type": "text",
            "label": "Sender City",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "München",
            "val": "",
            "breakLine": true
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.sender_registry_number": {
            "type": "text",
            "label": "Sender Registry Number",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "HRB 334543",
            "val": ""
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.sender_registry_court": {
            "type": "text",
            "label": "Sender Registry Court",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "Frankfurt am Main",
            "val": ""
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.sender_representatives": {
            "type": "text",
            "label": "Sender Representatives",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "Dr. Joe Johnson",
            "val": ""
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.sender_representative_type": {
            "type": "text",
            "label": "Sender Representative Type",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "Geschäftsführer",
            "val": "",
            "breakLine": true
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.sender_bank": {
            "type": "text",
            "label": "Sender Bank",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "Deutsche Bank",
            "val": ""
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.sender_bank_iban": {
            "type": "text",
            "label": "Sender Bank IBAN",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "XXX",
            "val": ""
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.sender_bank_bic": {
            "type": "text",
            "label": "Sender Bank BIC",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "XXX",
            "val": ""
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.sender_bank_account_no": {
            "type": "text",
            "label": "Sender Bank Account No",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.configure_by_table=='false'",
            "placeholder": "XXX",
            "val": ""
          }
        }
      },
      "customer_detail_frame": {
        "type": "fieldset",
        "label": "Customer Details",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.configure_by_table=='false'",
        "repeat": false,
        "fields": {
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.customer_detail.configure_by_table": {
            "type": "checkbox",
            "label": "Configure by table",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.sender_detail.table_style": {
            "type": "select",
            "label": "Table Style",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.customer_detail.configure_by_table=='true'",
            "options": {
              "field_name_as_header": {
                "label": "Field Name as Header"
              },
              "row_by_row_field_name": {
                "label": "Row by Row Field Name"
              }
            },
            "val": "field_name_as_header",
            "required": true,
            "breakLine": true
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.customer_detail.configure_by_table_help": {
            "type": "textarea",
            "label": "",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.customer_detail.configure_by_table=='true' && options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.customer_detail.table_style=='field_name_as_header'",
            "val": "Table Structure ( ID | Customer Number | Customer Name | Customer Department | Customer Street | Customer Zip Code | Customer City )",
            "md_no_resize": false,
            "rows": 2,
            "disabled": true,
            "width": "100%"
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.customer_detail.configure_by_table_help2": {
            "type": "text",
            "label": "",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.customer_detail.configure_by_table=='true' && options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.customer_detail.table_style=='row_by_row_field_name'",
            "val": "Table Structure ( Field Name | Field Value )",
            "disabled": true,
            "width": "100%"
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.customer_detail.table_id": {
            "type": "select",
            "label": "Select Table",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.customer_detail.configure_by_table=='true'",
            "bind": "TABLES",
            "empty": "",
            "required": true,
            "breakLine": true
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.customer_number": {
            "type": "text",
            "label": "Customer Number",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.customer_detail.configure_by_table=='false'",
            "placeholder": "54321",
            "val": ""
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.customer_name": {
            "type": "text",
            "label": "Customer Name",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.customer_detail.configure_by_table=='false'",
            "placeholder": "My company ltd.",
            "val": ""
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.customer_department": {
            "type": "text",
            "label": "Customer Department",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.customer_detail.configure_by_table=='false'",
            "placeholder": "purchase department",
            "val": ""
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.customer_street": {
            "type": "text",
            "label": "Customer Street",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.customer_detail.configure_by_table=='false'",
            "placeholder": "Main street 21",
            "val": ""
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.customer_zip_code": {
            "type": "text",
            "label": "Customer Zip Code",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.customer_detail.configure_by_table=='false'",
            "placeholder": "80000",
            "val": ""
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.customer_city": {
            "type": "text",
            "label": "Customer City",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.customer_detail.configure_by_table=='false'",
            "placeholder": "München",
            "val": ""
          }
        }
      },
      "invoice_head_frame": {
        "type": "fieldset",
        "label": "Invoice Head",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.configure_by_table=='false'",
        "repeat": false,
        "fields": {
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.invoice_head.configure_by_table": {
            "type": "checkbox",
            "label": "Configure by table",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.invoice_head.configure_by_table_help": {
            "type": "text",
            "label": "",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.invoice_head.configure_by_table=='true'",
            "val": "Table Structure ( Field Name | Field Value )",
            "disabled": true,
            "width": "100%"
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.invoice_head.table_id": {
            "type": "select",
            "label": "Select Table",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.invoice_head.configure_by_table=='true'",
            "bind": "TABLES",
            "empty": "",
            "required": true,
            "breakLine": true
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.invoice_date": {
            "type": "text",
            "label": "Invoice Date",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.invoice_head.configure_by_table=='false'",
            "placeholder": "29.06.2021",
            "val": ""
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.invoice_number": {
            "type": "text",
            "label": "Invoice Number",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.invoice_head.configure_by_table=='false'",
            "placeholder": "4711091",
            "val": ""
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.reference": {
            "type": "text",
            "label": "Reference",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.invoice_head.configure_by_table=='false'",
            "placeholder": "eK2-762-24/vfs",
            "val": ""
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.order_date": {
            "type": "text",
            "label": "Order Date",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.invoice_head.configure_by_table=='false'",
            "placeholder": "29.06.2021",
            "val": "",
            "breakLine": true
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.subject": {
            "type": "text",
            "label": "Subject",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.invoice_head.configure_by_table=='false'",
            "placeholder": "rechnung zm auftrag XY",
            "val": "",
            "breakLine": true
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.footer": {
            "type": "text",
            "label": "Footer",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.invoice_head.configure_by_table=='false'",
            "placeholder": "vielen dank für ihre Bestellung!",
            "val": ""
          }
        }
      },
      "invoice_summary_frame": {
        "type": "fieldset",
        "label": "Invoice Summary",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.configure_by_table=='false'",
        "repeat": false,
        "fields": {
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.invoice_summary.configure_by_table": {
            "type": "checkbox",
            "label": "Configure by table",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.invoice_summary.configure_by_table_help": {
            "type": "text",
            "label": "",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.invoice_summary.configure_by_table=='true'",
            "val": "Table Structure ( Field Name | Field Value )",
            "disabled": true,
            "width": "100%"
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.invoice_summary.table_id": {
            "type": "select",
            "label": "Select Table",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.invoice_summary.configure_by_table=='true'",
            "bind": "TABLES",
            "empty": "",
            "required": true,
            "breakLine": true
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.total_amount": {
            "type": "text",
            "label": "Total Amount",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.invoice_summary.configure_by_table=='false'",
            "placeholder": "102.04",
            "val": ""
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.vat_amount": {
            "type": "text",
            "label": "Vat Amount",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.invoice_summary.configure_by_table=='false'",
            "placeholder": "2.04",
            "val": ""
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.net_amount": {
            "type": "text",
            "label": "Net Amount",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.invoice_summary.configure_by_table=='false'",
            "placeholder": "100",
            "val": ""
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.payable_until": {
            "type": "text",
            "label": "Payable Until",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.invoice_summary.configure_by_table=='false'",
            "placeholder": "31.12.2021",
            "val": ""
          }
        }
      },
      "extra_frame": {
        "type": "fieldset",
        "label": "Logo",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "repeat": false,
        "fields": {
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.logo": {
            "type": "text",
            "label": "Logo(Base64 Encoded Data of JPEG)",
            "placeholder": "data:image/jpeg;base64, /9j/4AAQSkZJRgABAQEA",
            "val": "",
            "width": "100%"
          },
          "help_text_id_b7b0e4380196a9c60a5d236578bddb16306a51bd_logo": {
            "type": "text",
            "label": "",
            "val": "For conversion you may use e.g. https://onlinejpgtools.com/convert-jpg-to-base64",
            "disabled": true,
            "width": "100%"
          }
        }
      },
      "positions_list_frame": {
        "type": "fieldset",
        "label": "Invoice Items",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.configure_by_table=='false'",
        "repeat": false,
        "fields": {
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.positions_list.configure_by_table": {
            "type": "checkbox",
            "label": "Configure by table",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.positions_list.configure_by_table_help": {
            "type": "text",
            "label": "",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.positions_list.configure_by_table=='true'",
            "val": "Table Structure ( List Item | Field Name | Field Value )",
            "disabled": true,
            "width": "100%"
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.positions_list.table_id": {
            "type": "select",
            "label": "Select Table",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.positions_list.configure_by_table=='true'",
            "bind": "TABLES",
            "empty": "",
            "required": true,
            "breakLine": true
          },
          "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd.positions": {
            "type": "fieldset",
            "label": "Positions List",
            "style": "border-radius: 3px; border: 1px solid #ccc",
            "show_if": "options.id_b7b0e4380196a9c60a5d236578bddb16306a51bd_configure.positions_list.configure_by_table=='false'",
            "repeat": true,
            "fields": {
              "article_number": {
                "type": "text",
                "label": "Article Number",
                "val": "",
                "placeholder": "KM01"
              },
              "article_description": {
                "type": "text",
                "label": "Article Description",
                "val": "",
                "placeholder": "Kaffeemaschine super deluxe 100"
              },
              "quantity": {
                "type": "text",
                "label": "Quantity",
                "val": "",
                "placeholder": "1"
              },
              "package_type": {
                "type": "text",
                "label": "Package Type",
                "val": "",
                "placeholder": "stck."
              },
              "per_item_price": {
                "type": "text",
                "label": "Per Item Price",
                "val": "",
                "placeholder": "799.99"
              },
              "total_price": {
                "type": "text",
                "label": "Total Price",
                "val": "",
                "placeholder": "799.99"
              },
              "vat_amount": {
                "type": "text",
                "label": "Vat Amount",
                "val": "",
                "placeholder": "99.99"
              },
              "net_amount": {
                "type": "text",
                "label": "Net Amount",
                "val": "",
                "placeholder": "700"
              },
              "vat_percentage": {
                "type": "text",
                "label": "Vat Percentage",
                "val": "",
                "placeholder": "19%"
              },
              "footer_text": {
                "type": "text",
                "label": "Footer Text",
                "val": "",
                "placeholder": "für bis zu 10 Mitarbeiter geeignet bei maximal 14 litern pro person und arbeitstag. Herztabletten liegen bei."
              },
              "discount": {
                "type": "text",
                "label": "Discount",
                "val": "",
                "placeholder": "0%"
              },
              "delete": {
                "type": "button",
                "label": "Delete",
                "function": "DELETE_ROW"
              }
            }
          }
        }
      }
    }
  }
},
"/pdf-repro/BalanceSheetOptions.json/BalanceSheetOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.lang": {
        "type": "select",
        "label": "Document Language",
        "options": {
          "standard": {
            "label": "Standard Language"
          },
          "lt": {
            "label": "Lithuanian"
          },
          "it": {
            "label": "Italian"
          },
          "hu": {
            "label": "Hungarian"
          },
          "fr": {
            "label": "French"
          },
          "fi": {
            "label": "Finnish"
          },
          "bg": {
            "label": "Bulgarian"
          },
          "ca": {
            "label": "Canadian"
          },
          "cs": {
            "label": "Czech"
          },
          "de": {
            "label": "German"
          },
          "en": {
            "label": "English"
          },
          "es": {
            "label": "Spanish"
          }
        },
        "val": "en",
        "required": true
      },
      "options.gaap_style": {
        "type": "select",
        "label": "GAAP Style",
        "options": {
          "us_gaap_style": {
            "label": "US-GAAP style"
          },
          "german_gaap_style": {
            "label": "German-GAAP style"
          }
        },
        "val": "us_gaap_style",
        "required": true,
        "breakLine": true
      },
      "options.where_to_create": {
        "type": "select",
        "label": "Where to create",
        "options": {
          "only_open_in_browser": {
            "label": "Only open PDF in browser"
          },
          "only_export_to_cloud": {
            "label": "Only export to cloud"
          },
          "both_export_to_cloud_and_open_in_browser": {
            "label": "Both export to cloud and open pdf in browser"
          }
        },
        "val": "only_open_in_browser",
        "required": true,
        "breakLine": true
      }
    }
  },
  "placeholder_frame": {
    "type": "fieldset",
    "label": "Configure 'Balance Sheet' PDF",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "data.company_name": {
        "type": "text",
        "label": "Company Name",
        "placeholder": "My Company ltd.",
        "val": ""
      },
      "data.balance_sheet_date": {
        "type": "text",
        "label": "Balance Sheet Date",
        "placeholder": "December 31, 2020",
        "val": ""
      },
      "data.notes_1": {
        "type": "text",
        "label": "Notes 1",
        "placeholder": "These are a view notes-1",
        "val": "",
        "width": "100%"
      },
      "data.notes_2": {
        "type": "text",
        "label": "Notes 2",
        "placeholder": "These are a view notes-2",
        "val": "",
        "width": "100%"
      },
      "data.notes_3": {
        "type": "text",
        "label": "Notes 3",
        "placeholder": "These are a view notes-3",
        "val": "",
        "width": "100%"
      },
      "data.currency": {
        "type": "text",
        "label": "Currency",
        "placeholder": "€ million",
        "val": ""
      },
      "data.logo": {
        "type": "text",
        "label": "Logo(Base64 Encoded Data of JPEG)",
        "placeholder": "data:image/jpeg;base64, /9j/4AAQSkZJRgABAQEA",
        "val": "",
        "width": "100%"
      },
      "help_text_logo": {
        "type": "text",
        "label": "",
        "val": "For conversion you may use e.g. https://onlinejpgtools.com/convert-jpg-to-base64",
        "disabled": true,
        "width": "100%"
      },
      "options.table_id": {
        "type": "select",
        "label": "Select Table",
        "bind": "TABLES",
        "empty": "",
        "required": true
      },
      "options.configure_by_table_help": {
        "type": "text",
        "label": "",
        "val": "Table Structure ( Category | Position | Value )",
        "disabled": true,
        "width": "100%"
      },
      "options.configure_by_table_help2": {
        "type": "textarea",
        "label": "",
        "val": "Category Value ( Current Asset | Current Liabilities | Property and Equipment | Long-term Liabilities | Other Assets | Shareholder's Equity )",
        "disabled": true,
        "md_no_resize": false,
        "rows": 3,
        "width": "100%"
      }
    }
  },
  "cloud_config_frame": {
    "type": "fieldset",
    "label": "Config Cloud Directory to export to",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "options.where_to_create=='only_export_to_cloud' || options.where_to_create=='both_export_to_cloud_and_open_in_browser'",
    "repeat": false,
    "fields": {
      "options.webservice": {
        "type": "select",
        "label": "Select Webservice",
        "options": {
          "ms_one_drive": {
            "label": "Microsoft One Drive"
          },
          "dropbox": {
            "label": "Dropbox"
          },
          "google_drive": {
            "label": "Google Drive"
          }
        },
        "val": "ms_one_drive",
        "required": true,
        "breakLine": true
      },
      "options.github_url": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test",
        "show_if": "options.webservice=='github'",
        "val": "",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.export_dir": {
        "type": "text",
        "label": "Enter dir e.g. /MyZippyDocFiles/SubDir/",
        "show_if": "options.webservice!='github'",
        "val": "",
        "width": "100%",
        "breakLine": true
      },
      "options.github_token": {
        "type": "text",
        "label": "Specify the Github personal access token that has write permission:",
        "show_if": "options.webservice=='github'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.google_authorization_code": {
        "type": "text",
        "label": "Google OAuth Authorization Code with scope https://www.googleapis.com/auth/drive. You can get it here https://developers.google.com/oauthplayground/",
        "show_if": "options.webservice=='google_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "options.dropbox_authorization_code": {
        "type": "text",
        "label": "Dropbox Authorization Code. You can get it here https://www.dropbox.com/oauth2/authorize?client_id=9i7woztjp94jrkw&response_type=code",
        "show_if": "options.webservice=='dropbox'",
        "required": true,
        "width": "100%",
        "breakLine": true
      }
    }
  }
},
,
"/planning/BalanceSheetImpact.json/BalanceSheetImpact.json": {
  "balance_sheet_impact_table__base": [
    {
      "position": ["Revenues; *", "Interest; *"],
      "impact_date": "On Date",
      "balance_sheet_category": "Shareholders Equity",
      "balance_sheet_position": "Profit current Year",
      "change_sign": "False",
      "balance_sheet_counter_category": "Current Assets",
      "balance_sheet_counter_position": "Accounts Payable",
      "counter_position_change_sign": "False"
    },
    {
      "position": ["Revenues; *", "Interest; *"],
      "impact_date": "On Payment Date",
      "balance_sheet_category": "Current Assets",
      "balance_sheet_position": "Accounts Payable",
      "change_sign": "False",
      "balance_sheet_counter_category": "Current Assets",
      "balance_sheet_counter_position": "Accounts Payable",
      "counter_position_change_sign": "False"
    },
    {
      "position": ["Cost of Goods Sold; *", "Marketing Expenses; *", "Operating Expenses; *", "Sales Expenses; *", "General and Administration Expenses; *", "Personnel Expenses; *", "Interest; *", "Tax; *", "Extraordinary Items; *"],
      "impact_date": "On Date",
      "balance_sheet_category": "Shareholders Equity",
      "balance_sheet_position": "Accounts Payable",
      "change_sign": "False",
      "balance_sheet_counter_category": "Current Assets",
      "balance_sheet_counter_position": "Accounts Payable",
      "counter_position_change_sign": "False"
    },
    {
      "position": ["Cost of Goods Sold; *", "Marketing Expenses; *", "Operating Expenses; *", "Sales Expenses; *", "General and Administration Expenses; *", "Personnel Expenses; *", "Interest; *", "Tax; *", "Extraordinary Items; *"],
      "impact_date": "On Payment Date",
      "balance_sheet_category": "Current Assets",
      "balance_sheet_position": "Accounts Payable",
      "change_sign": "False",
      "balance_sheet_counter_category": "Current Assets",
      "balance_sheet_counter_position": "Accounts Payable",
      "counter_position_change_sign": "False"
    },
    {
      "position": ["Capital Expenditure; Land", "Capital Expenditure; Building", "Capital Expenditure; Expansion Capex", "Capital Expenditure; Vehicles"],
      "impact_date": "On Date",
      "balance_sheet_category": "Shareholders Equity",
      "balance_sheet_position": "Accounts Payable",
      "change_sign": "False",
      "balance_sheet_counter_category": "Longterm Assets",
      "balance_sheet_counter_position": "Accounts Payable",
      "counter_position_change_sign": "False"
    },
    {
      "position": ["Capital Expenditure; Land", "Capital Expenditure; Building", "Capital Expenditure; Expansion Capex", "Capital Expenditure; Vehicles"],
      "impact_date": "On Payment Date",
      "balance_sheet_category": "Current Assets",
      "balance_sheet_position": "Accounts Payable",
      "change_sign": "False",
      "balance_sheet_counter_category": "Longterm Assets",
      "balance_sheet_counter_position": "Accounts Payable",
      "counter_position_change_sign": "False"
    }
    {
      "position": ["Capital Expenditure; Equipment", "Capital Expenditure; Maintenance Capex", "Capital Expenditure; Other Capital Expenditure"],
      "impact_date": "On Date",
      "balance_sheet_category": "Shareholders Equity",
      "balance_sheet_position": "Accounts Payable",
      "change_sign": "False",
      "balance_sheet_counter_category": "Current Assets",
      "balance_sheet_counter_position": "Accounts Payable",
      "counter_position_change_sign": "False"
    },
    {
      "position": ["Capital Expenditure; Equipment", "Capital Expenditure; Maintenance Capex", "Capital Expenditure; Other Capital Expenditure"],
      "impact_date": "On Payment Date",
      "balance_sheet_category": "Current Assets",
      "balance_sheet_position": "Accounts Payable",
      "change_sign": "False",
      "balance_sheet_counter_category": "Current Assets",
      "balance_sheet_counter_position": "Accounts Payable",
      "counter_position_change_sign": "False"
    }
  ]
}
,
"/planning/StandardCalculatedRows.json/StandardCalculatedRows.json": {
  "Gross Profit": {
    "new_position": "Gross Profit",
    "calculation": "addition",
    "addition_positions": ["Revenues", "Cost of Goods Sold"]
  },
  "EBT": {
    "new_position": "EBT",
    "calculation": "addition",
    "addition_positions": ["Revenues","Cost of Goods Sold","Sales Expenses","Marketing Expenses","Operating Expenses","General and Administration Expenses","Personnel Expenses","Depreciation","Amortization","Interest","Extraordinary Items"]
  },
  "EBIT": {
    "new_position": "EBIT",
    "calculation": "addition",
    "addition_positions": ["Revenues","Cost of Goods Sold","Sales Expenses","Marketing Expenses","Operating Expenses","General and Administration Expenses","Personnel Expenses","Depreciation","Amortization"]
  },
  "EBITDA": {
    "new_position": "EBITDA",
    "calculation": "addition",
    "addition_positions": ["Revenues","Cost of Goods Sold","Sales Expenses","Marketing Expenses","Operating Expenses","General and Administration Expenses","Personnel Expenses"]
  },
  "Gross Profit Margin": {
    "new_position": "Gross Profit Margin",
    "calculation": "quota",
    "quota_positions": ["Revenues","Cost of Goods Sold"],
    "denominator_position": "Revenues"
  },
  "EBT Margin": {
    "new_position": "EBT Margin",
    "calculation": "quota",
    "quota_positions": ["Revenues","Cost of Goods Sold","Sales Expenses","Marketing Expenses","Operating Expenses","General and Administration Expenses","Personnel Expenses","Depreciation","Amortization","Interest","Extraordinary Items"],
    "denominator_position": "Revenues"
  },
  "EBIT Margin": {
    "new_position": "EBIT Margin",
    "calculation": "quota",
    "quota_positions": ["Revenues","Cost of Goods Sold","Sales Expenses","Marketing Expenses","Operating Expenses","General and Administration Expenses","Personnel Expenses","Depreciation","Amortization"],
    "denominator_position": "Revenues"
  },
  "EBITDA Margin": {
    "new_position": "EBITDA Margin",
    "calculation": "quota",
    "quota_positions": ["Revenues","Cost of Goods Sold","Sales Expenses","Marketing Expenses","Operating Expenses","General and Administration Expenses","Personnel Expenses"],
    "denominator_position": "Revenues"
  }
}
,
"/planning/CalculatedRows.json/CalculatedRows.json": {
  "calculated_rows__base": [
    {
      "calculation": "addition",
      "new_position": "Gross Profit",
      "addition_positions": ["Revenues","Cost of Goods Sold"],
      "format": ["Formatted","Line above","Line below","Double line above","Double line below"]
    },
    {
      "calculation": "addition",
      "new_position": "EBT",
      "addition_positions": ["Revenues","Cost of Goods Sold","Sales Expenses","Marketing Expenses","Operating Expenses","General and Administration Expenses","Personnel Expenses","Depreciation","Amortization","Interest","Extraordinary Items"],
      "format": []
    },
    {
      "calculation": "addition",
      "new_position": "EBIT",
      "addition_positions": ["Revenues","Cost of Goods Sold","Sales Expenses","Marketing Expenses","Operating Expenses","General and Administration Expenses","Personnel Expenses","Depreciation","Amortization"],
      "format": []
    },
    {
      "calculation": "addition",
      "new_position": "EBITDA",
      "addition_positions": ["Revenues","Cost of Goods Sold","Sales Expenses","Marketing Expenses","Operating Expenses","General and Administration Expenses","Personnel Expenses"],
      "format": []
    },
    {
      "calculation": "quota",
      "new_position": "Gross Profit Margin",
      "quota_positions": ["Revenues","Cost of Goods Sold"],
      "denominator_position": "Revenues",
      "format": []
    },
    {
      "calculation": "quota",
      "new_position": "EBT Margin",
      "quota_positions": ["Revenues","Cost of Goods Sold","Sales Expenses","Marketing Expenses","Operating Expenses","General and Administration Expenses","Personnel Expenses","Depreciation","Amortization","Interest","Extraordinary Items"],
      "denominator_position": "Revenues",
      "format": []
    },
    {
      "calculation": "quota",
      "new_position": "EBIT Margin",
      "quota_positions": ["Revenues","Cost of Goods Sold","Sales Expenses","Marketing Expenses","Operating Expenses","General and Administration Expenses","Personnel Expenses","Depreciation","Amortization"],
      "denominator_position": "Revenues",
      "format": []
    },
    {
      "calculation": "quota",
      "new_position": "EBITDA Margin",
      "quota_positions": ["Revenues","Cost of Goods Sold","Sales Expenses","Marketing Expenses","Operating Expenses","General and Administration Expenses","Personnel Expenses"],
      "denominator_position": "Revenues",
      "format": []
    }
  ]
}
,
"/pdf_invoice/CustomLabelCzech.json/CustomLabelCzech.json": {
  "custom_labels_frame_cs": {
    "type": "fieldset",
    "label": "Custom Label",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "custom_labels=='true' && (lang=='standard' || lang=='cs')",
    "repeat": false,
    "fields": {
      "label_data.cs.invoice_title": {
        "type": "text",
        "label": "Invoice Title",
        "placeholder": "Invoice Title",
        "val": "Invoice"
      },
      "label_data.cs.invoice_date_title": {
        "type": "text",
        "label": "Invoice Date Title",
        "placeholder": "Invoice Date Title",
        "val": "Date:"
      },
      "label_data.cs.invoice_no_title": {
        "type": "text",
        "label": "Invoice No Title",
        "placeholder": "Invoice No Title",
        "val": "Invoice No.:"
      },
      "label_data.cs.customer_no_title": {
        "type": "text",
        "label": "Customer No Title",
        "placeholder": "Customer No Title",
        "val": "Customer No.:"
      },
      "label_data.cs.reference_no_title": {
        "type": "text",
        "label": "Reference No Title",
        "placeholder": "Reference No Title",
        "val": "Reference No.:"
      },
      "label_data.cs.your_order_date_title": {
        "type": "text",
        "label": "Your Order Date Title",
        "placeholder": "Your Order Date Title",
        "val": "Date:"
      },
      "label_data.cs.subject_title": {
        "type": "text",
        "label": "Subject Title",
        "placeholder": "Subject Title",
        "val": "Subject"
      },
      "label_data.cs.value_added_tax_title": {
        "type": "text",
        "label": "Value Added Tax Title",
        "placeholder": "Value Added Tax Title",
        "val": "Value Added Tax"
      },
      "label_data.cs.total_excluding_vat_title": {
        "type": "text",
        "label": "Total excluding Vat Title",
        "placeholder": "Total excluding Vat Title",
        "val": "Total excluding VAT"
      },
      "label_data.cs.total_value_added_tax_title": {
        "type": "text",
        "label": "Total Value Added Tax Title",
        "placeholder": "Total Value Added Tax Title",
        "val": "Value Added Tax"
      },
      "label_data.cs.total_including_vat_title": {
        "type": "text",
        "label": "Total including Vat Title",
        "placeholder": "Total including Vat Title",
        "val": "Total including VAT"
      },
      "label_data.cs.pay_until_title": {
        "type": "text",
        "label": "Pay until Title",
        "placeholder": "Pay until Title",
        "val": "Pay this invoice until"
      },
      "label_data.cs.register_no_title": {
        "type": "text",
        "label": "Register No Title",
        "placeholder": "Register No Title",
        "val": "Register No.:"
      },
      "label_data.cs.register_court_title": {
        "type": "text",
        "label": "Register Court Title",
        "placeholder": "Register Court Title",
        "val": "Register Court:"
      },
      "label_data.cs.iban_title": {
        "type": "text",
        "label": "IBAN Title",
        "placeholder": "IBAN Title",
        "val": "IBAN:"
      },
      "label_data.cs.bic_title": {
        "type": "text",
        "label": "BIC Title",
        "placeholder": "BIC Title",
        "val": "BIC:"
      },
      "label_data.cs.vat_number_title": {
        "type": "text",
        "label": "VAT Number Title",
        "placeholder": "VAT Number Title",
        "val": "VAT Number:"
      },
      "label_data.cs.article_number_title": {
        "type": "text",
        "label": "Article No Title",
        "placeholder": "Article No Title",
        "val": "Article No."
      },
      "label_data.cs.article_description_title": {
        "type": "text",
        "label": "Description Title",
        "placeholder": "Description Title",
        "val": "Description"
      },
      "label_data.cs.article_quantity_title": {
        "type": "text",
        "label": "Quantity Title",
        "placeholder": "Quantity Title",
        "val": "Quantity"
      },
      "label_data.cs.article_unit_title": {
        "type": "text",
        "label": "Article Unit Title",
        "placeholder": "Article Unit Title",
        "val": "Unit"
      },
      "label_data.cs.article_per_item_title": {
        "type": "text",
        "label": "per Item Title",
        "placeholder": "per Item Title",
        "val": "per Item"
      },
      "label_data.cs.article_net_of_vat_title": {
        "type": "text",
        "label": "Net of VAT Title",
        "placeholder": "Net of VAT Title",
        "val": "Net of VAT"
      },
      "label_data.cs.article_total_title": {
        "type": "text",
        "label": "Article Total Title",
        "placeholder": "Article Total Title",
        "val": "Total"
      }
    }
  }
}
,
"/pdf_invoice/InvoiceOptions.json/InvoiceOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "template_id": {
        "type": "select",
        "label": "Template",
        "options": {
          "b7b0e4380196a9c60a5d236578bddb16306a51bd": {
            "label": "Design 1"
          },
          "4b004eab1ea9ea0302a8cdfc421662e33023b84d": {
            "label": "Design 2"
          },
          "3cbf8eb633434f919914f7b9d904a55e65e4b461": {
            "label": "Design 3"
          },
          "f6ccf2a405e1fb2df4d44a9df5449ef75e9db178": {
            "label": "Design 4"
          }
        },
        "val": "b7b0e4380196a9c60a5d236578bddb16306a51bd",
        "required": true,
        "breakLine": true
      },
      "lang":{
        "type": "hidden",
        "val": "en"
      },
      "where_to_create": {
        "type": "select",
        "label": "Where to create",
        "options": {
          "only_open_in_browser": {
            "label": "Only open PDF in browser"
          },
          "only_export_to_cloud": {
            "label": "Only export to cloud"
          },
          "both_export_to_cloud_and_open_in_browser": {
            "label": "Both export to cloud and open pdf in browser"
          }
        },
        "val": "only_open_in_browser",
        "required": true,
        "breakLine": true
      },
      "configure_by_table": {
        "type": "checkbox",
        "label": "Configure by table",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "configure_by_table_help": {
        "type": "text",
        "label": "",
        "show_if": "configure_by_table=='true'",
        "val": "Table Structure ( Document | List Item | Field Name | Field Value )",
        "disabled": true,
        "width": "100%"
      },
      "table_id": {
        "type": "select",
        "label": "Select Table",
        "show_if": "configure_by_table=='true'",
        "bind": "TABLES",
        "empty": "",
        "required": true,
        "breakLine": true
      }
    }
  },
  "export_link_frame": {
    "type": "fieldset",
    "label": "Export path in MS One Drive",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "where_to_create=='only_export_to_cloud' || where_to_create=='both_export_to_cloud_and_open_in_browser'",
    "repeat": false,
    "fields": {
      "export_dir": {
        "type": "text",
        "label": "Enter dir e.g. /MyZippyDocFiles/SubDir/",
        "val": "/",
        "width": "100%",
        "breakLine": true
      }
    }
  },
  "invoice_placeholder_frame": {
    "type": "fieldset",
    "label": "Configure 'Invoice' PDF",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "sender_detail_frame": {
        "type": "fieldset",
        "label": "Sender Details",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "configure_by_table=='false'",
        "repeat": false,
        "fields": {
          "sender_detail.configure_by_table": {
            "type": "checkbox",
            "label": "Configure by table",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "sender_detail.table_style": {
            "type": "select",
            "label": "Table Style",
            "show_if": "sender_detail.configure_by_table=='true'",
            "options": {
              "field_name_as_header": {
                "label": "Field Name as Header"
              },
              "row_by_row_field_name": {
                "label": "Row by Row Field Name"
              }
            },
            "val": "field_name_as_header",
            "required": true,
            "breakLine": true
          },
          "sender_detail.configure_by_table_help": {
            "type": "textarea",
            "label": "",
            "show_if": "sender_detail.configure_by_table=='true' && sender_detail.table_style=='field_name_as_header'",
            "val": "Table Structure ( Sender Name | Sender Department | Sender Street | Sender Zip Code | Sender City | Sender Registry Number | Sender Registry Court | Sender Representatives | Sender Representative Type | Sender Bank | Sender Bank IBAN | Sender Bank BIC | Sender Bank Account No | Sender VAT No )",
            "md_no_resize": false,
            "rows": 4,
            "disabled": true,
            "width": "100%"
          },
          "sender_detail.configure_by_table_help2": {
            "type": "text",
            "label": "",
            "show_if": "sender_detail.configure_by_table=='true' && sender_detail.table_style=='row_by_row_field_name'",
            "val": "Table Structure ( Field Name | Field Value )",
            "disabled": true,
            "width": "100%"
          },
          "sender_detail.table_id": {
            "type": "select",
            "label": "Select Table",
            "show_if": "sender_detail.configure_by_table=='true'",
            "bind": "TABLES",
            "empty": "",
            "required": true
          },
          "sender_detail.selected_col": {
            "type": "select",
            "label": "Select Column",
            "show_if": "sender_detail.configure_by_table=='true' && sender_detail.table_style=='field_name_as_header'",
            "required": true,
            "table": "sender_detail.table_id",
            "bind": "COLUMNS"
          },
          "sender_detail.selected_rows": {
            "type": "select",
            "label": "Select Row Number",
            "show_if": "sender_detail.configure_by_table=='true' && sender_detail.table_style=='field_name_as_header'",
            "multiple": false,
            "unique_values_only": true,
            "table": "sender_detail.table_id",
            "column_list": "sender_detail.selected_col",
            "bind": "RECORDS",
            "required": true,
            "breakLine": true
          },
          "data.sender_name": {
            "type": "text",
            "label": "Sender Name",
            "show_if": "sender_detail.configure_by_table=='false'",
            "placeholder": "My Company ltd.",
            "val": ""
          },
          "data.sender_department": {
            "type": "text",
            "label": "Sender Department",
            "show_if": "sender_detail.configure_by_table=='false'",
            "placeholder": "Purchase department",
            "val": ""
          },
          "data.sender_street": {
            "type": "text",
            "label": "Sender Street",
            "show_if": "sender_detail.configure_by_table=='false'",
            "placeholder": "Main street 21",
            "val": ""
          },
          "data.sender_zip_code": {
            "type": "text",
            "label": "Sender Zip Code",
            "show_if": "sender_detail.configure_by_table=='false'",
            "placeholder": "80000",
            "val": ""
          },
          "data.sender_city": {
            "type": "text",
            "label": "Sender City",
            "show_if": "sender_detail.configure_by_table=='false'",
            "placeholder": "München",
            "val": "",
            "breakLine": true
          },
          "data.sender_registry_number": {
            "type": "text",
            "label": "Sender Registry Number",
            "show_if": "sender_detail.configure_by_table=='false'",
            "placeholder": "HRB 334543",
            "val": ""
          },
          "data.sender_registry_court": {
            "type": "text",
            "label": "Sender Registry Court",
            "show_if": "sender_detail.configure_by_table=='false'",
            "placeholder": "Frankfurt am Main",
            "val": ""
          },
          "data.sender_representatives": {
            "type": "text",
            "label": "Sender Representatives",
            "show_if": "sender_detail.configure_by_table=='false'",
            "placeholder": "Dr. Joe Johnson",
            "val": ""
          },
          "data.sender_representative_type": {
            "type": "text",
            "label": "Sender Representative Type",
            "show_if": "sender_detail.configure_by_table=='false'",
            "placeholder": "Geschäftsführer",
            "val": "",
            "breakLine": true
          },
          "data.sender_bank": {
            "type": "text",
            "label": "Sender Bank",
            "show_if": "sender_detail.configure_by_table=='false'",
            "placeholder": "Deutsche Bank",
            "val": ""
          },
          "data.sender_bank_iban": {
            "type": "text",
            "label": "Sender Bank IBAN",
            "show_if": "sender_detail.configure_by_table=='false'",
            "placeholder": "XXX",
            "val": ""
          },
          "data.sender_bank_bic": {
            "type": "text",
            "label": "Sender Bank BIC",
            "show_if": "sender_detail.configure_by_table=='false'",
            "placeholder": "XXX",
            "val": ""
          },
          "data.sender_bank_account_no": {
            "type": "text",
            "label": "Sender Bank Account No",
            "show_if": "sender_detail.configure_by_table=='false'",
            "placeholder": "XXX",
            "val": ""
          },
          "data.sender_vat_no": {
            "type": "text",
            "label": "Sender VAT No",
            "show_if": "sender_detail.configure_by_table=='false'",
            "placeholder": "XXX",
            "val": ""
          }
        }
      },
      "extra_frame": {
        "type": "fieldset",
        "label": "Logo",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "repeat": false,
        "fields": {
          "data.logo": {
            "type": "text",
            "label": "Logo(Base64 Encoded Data of JPEG)",
            "placeholder": "data:image/jpeg;base64, /9j/4AAQSkZJRgABAQEA",
            "val": "",
            "width": "100%"
          },
          "help_text_logo": {
            "type": "text",
            "label": "",
            "val": "For conversion you may use e.g. https://onlinejpgtools.com/convert-jpg-to-base64",
            "disabled": true,
            "width": "100%"
          }
        }
      },
      "customer_detail_frame": {
        "type": "fieldset",
        "label": "Customer Details",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "configure_by_table=='false'",
        "repeat": false,
        "fields": {
          "customer_detail.configure_by_table": {
            "type": "checkbox",
            "label": "Configure by table",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "customer_detail.table_style": {
            "type": "select",
            "label": "Table Style",
            "show_if": "customer_detail.configure_by_table=='true'",
            "options": {
              "field_name_as_header": {
                "label": "Field Name as Header"
              },
              "row_by_row_field_name": {
                "label": "Row by Row Field Name"
              }
            },
            "val": "field_name_as_header",
            "required": true,
            "breakLine": true
          },
          "customer_detail.configure_by_table_help": {
            "type": "textarea",
            "label": "",
            "show_if": "customer_detail.configure_by_table=='true' && customer_detail.table_style=='field_name_as_header'",
            "val": "Table Structure ( Customer Number | Customer Name | Customer Department | Customer Street | Customer Zip Code | Customer City )",
            "md_no_resize": false,
            "rows": 2,
            "disabled": true,
            "width": "100%"
          },
          "customer_detail.configure_by_table_help2": {
            "type": "text",
            "label": "",
            "show_if": "customer_detail.configure_by_table=='true' && customer_detail.table_style=='row_by_row_field_name'",
            "val": "Table Structure ( Field Name | Field Value )",
            "disabled": true,
            "width": "100%"
          },
          "customer_detail.table_id": {
            "type": "select",
            "label": "Select Table",
            "show_if": "customer_detail.configure_by_table=='true'",
            "bind": "TABLES",
            "empty": "",
            "required": true
          },
          "customer_detail.selected_col": {
            "type": "select",
            "label": "Select Column",
            "show_if": "customer_detail.configure_by_table=='true' && customer_detail.table_style=='field_name_as_header'",
            "required": true,
            "table": "customer_detail.table_id",
            "bind": "COLUMNS"
          },
          "customer_detail.selected_rows": {
            "type": "select",
            "label": "Select Row Number",
            "show_if": "customer_detail.configure_by_table=='true' && customer_detail.table_style=='field_name_as_header'",
            "multiple": false,
            "unique_values_only": true,
            "table": "customer_detail.table_id",
            "column_list": "customer_detail.selected_col",
            "bind": "RECORDS",
            "required": true,
            "breakLine": true
          },
          "data.customer_number": {
            "type": "text",
            "label": "Customer Number",
            "show_if": "customer_detail.configure_by_table=='false'",
            "placeholder": "54321",
            "val": ""
          },
          "data.customer_name": {
            "type": "text",
            "label": "Customer Name",
            "show_if": "customer_detail.configure_by_table=='false'",
            "placeholder": "My company ltd.",
            "val": ""
          },
          "data.customer_department": {
            "type": "text",
            "label": "Customer Department",
            "show_if": "customer_detail.configure_by_table=='false'",
            "placeholder": "purchase department",
            "val": ""
          },
          "data.customer_street": {
            "type": "text",
            "label": "Customer Street",
            "show_if": "customer_detail.configure_by_table=='false'",
            "placeholder": "Main street 21",
            "val": ""
          },
          "data.customer_zip_code": {
            "type": "text",
            "label": "Customer Zip Code",
            "show_if": "customer_detail.configure_by_table=='false'",
            "placeholder": "80000",
            "val": ""
          },
          "data.customer_city": {
            "type": "text",
            "label": "Customer City",
            "show_if": "customer_detail.configure_by_table=='false'",
            "placeholder": "München",
            "val": ""
          }
        }
      },
      "invoice_spec_frame": {
        "type": "fieldset",
        "label": "Invoice Specifications",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "configure_by_table=='false'",
        "repeat": false,
        "fields": {
          "invoice_spec.configure_by_table": {
            "type": "checkbox",
            "label": "Configure by table",
            "val": "false",
            "isOn": "true",
            "isOff": "false",
            "breakLine": true
          },
          "invoice_spec.table_style": {
            "type": "select",
            "label": "Table Style",
            "show_if": "invoice_spec.configure_by_table=='true'",
            "options": {
              "field_name_as_header": {
                "label": "Field Name as Header"
              },
              "row_by_row_field_name": {
                "label": "Row by Row Field Name"
              }
            },
            "val": "field_name_as_header",
            "required": true,
            "breakLine": true
          },
          "invoice_spec.configure_by_table_help": {
            "type": "textarea",
            "label": "",
            "show_if": "invoice_spec.configure_by_table=='true' && invoice_spec.table_style=='field_name_as_header'",
            "val": "Table Structure ( Invoice Date | Invoice Number | Reference | Order Date | Subject | Invoice Text | Payment Text | Invoice Footer | Payable Until | Article Number | Article Description | Quantity | Package Type | Per Item Price | Vat Percentage)",
            "md_no_resize": false,
            "rows": 4,
            "disabled": true,
            "width": "100%"
          },
          "invoice_spec.configure_by_table_help2": {
            "type": "text",
            "label": "",
            "show_if": "invoice_spec.configure_by_table=='true' && invoice_spec.table_style=='row_by_row_field_name'",
            "val": "Table Structure ( Document | List Item | Field Name | Field Value )",
            "disabled": true,
            "width": "100%"
          },
          "invoice_spec.table_id": {
            "type": "select",
            "label": "Select Table",
            "show_if": "invoice_spec.configure_by_table=='true'",
            "bind": "TABLES",
            "empty": "",
            "required": true
          },
          "invoice_spec.select_invoice_number": {
            "type": "checkbox",
            "label": "Select Invoice Number",
            "show_if": "invoice_spec.configure_by_table=='true' && invoice_spec.table_style=='field_name_as_header'",
            "val": "false",
            "isOn": "true",
            "isOff": "false"
          },
          "invoice_spec.selected_col": {
            "type": "select",
            "label": "Select Column",
            "show_if": "invoice_spec.configure_by_table=='true' && invoice_spec.table_style=='field_name_as_header' && invoice_spec.select_invoice_number=='true'",
            "required": true,
            "table": "invoice_spec.table_id",
            "bind": "COLUMNS"
          },
          "invoice_spec.selected_rows": {
            "type": "select",
            "label": "Select Invoice Number",
            "show_if": "invoice_spec.configure_by_table=='true' && invoice_spec.table_style=='field_name_as_header' && invoice_spec.select_invoice_number=='true'",
            "multiple": true,
            "unique_values_only": true,
            "table": "invoice_spec.table_id",
            "column_list": "invoice_spec.selected_col",
            "bind": "RECORDS",
            "required": true,
            "breakLine": true
          },
          "invoice_head_frame": {
            "type": "fieldset",
            "label": "Invoice Head",
            "style": "border-radius: 3px; border: 1px solid #ccc",
            "show_if": "invoice_spec.configure_by_table=='false'",
            "repeat": false,
            "fields": {
              "data.invoice_date": {
                "type": "text",
                "label": "Invoice Date",
                "placeholder": "29.06.2021",
                "val": ""
              },
              "data.invoice_number": {
                "type": "text",
                "label": "Invoice Number",
                "placeholder": "4711091",
                "val": ""
              },
              "data.reference": {
                "type": "text",
                "label": "Reference",
                "placeholder": "eK2-762-24/vfs",
                "val": ""
              },
              "data.order_date": {
                "type": "text",
                "label": "Order Date",
                "placeholder": "29.06.2021",
                "val": "",
                "breakLine": true
              },
              "data.subject": {
                "type": "text",
                "label": "Subject",
                "placeholder": "rechnung zm auftrag XY",
                "val": "",
                "breakLine": true
              },
              "data.invoice_text": {
                "type": "text",
                "label": "Invoice Text",
                "placeholder": "Rechnung zu ihrem Auftrag",
                "val": "",
                "width": "100%",
                "breakLine": true
              },
              "data.payment_text": {
                "type": "text",
                "label": "Payment Text",
                "placeholder": "Diese Rechnung wurde bereits",
                "val": "",
                "width": "100%",
                "breakLine": true
              },
              "data.footer": {
                "type": "text",
                "label": "Invoice Footer",
                "placeholder": "vielen dank für ihre Bestellung!",
                "val": "",
                "width": "100%"
              },
              "data.payable_until": {
                "type": "text",
                "label": "Payable Until",
                "placeholder": "31.12.2021",
                "val": ""
              }
            }
          },
          "positions_list_frame": {
            "type": "fieldset",
            "label": "Invoice Items",
            "style": "border-radius: 3px; border: 1px solid #ccc",
            "show_if": "invoice_spec.configure_by_table=='false'",
            "repeat": false,
            "fields": {
              "positions_list.auto_calc": {
                "type": "checkbox",
                "label": "Automatic Calculation",
                "val": "true",
                "isOn": "true",
                "isOff": "false",
                "breakLine": true
              },
              "data.positions": {
                "type": "fieldset",
                "label": "Positions List",
                "style": "border-radius: 3px; border: 1px solid #ccc",
                "show_if": "invoice_spec.configure_by_table=='false'",
                "repeat": true,
                "fields": {
                  "article_number": {
                    "type": "text",
                    "label": "Article Number",
                    "val": "",
                    "placeholder": "KM01"
                  },
                  "article_description": {
                    "type": "text",
                    "label": "Article Description",
                    "val": "",
                    "placeholder": "Kaffeemaschine super deluxe 100"
                  },
                  "quantity": {
                    "type": "text",
                    "label": "Quantity",
                    "val": "",
                    "placeholder": "1"
                  },
                  "package_type": {
                    "type": "text",
                    "label": "Package Type",
                    "val": "",
                    "placeholder": "stck."
                  },
                  "per_item_price": {
                    "type": "text",
                    "label": "Per Item Price",
                    "val": "",
                    "placeholder": "799.99"
                  },
                  "total_price": {
                    "type": "text",
                    "label": "Total Price",
                    "show_if": "positions_list.auto_calc=='false'",
                    "val": "",
                    "placeholder": "799.99"
                  },
                  "vat_amount": {
                    "type": "text",
                    "label": "Vat Amount",
                    "show_if": "positions_list.auto_calc=='false'",
                    "val": "",
                    "placeholder": "99.99"
                  },
                  "net_amount": {
                    "type": "text",
                    "label": "Net Amount",
                    "show_if": "positions_list.auto_calc=='false'",
                    "val": "",
                    "placeholder": "700"
                  },
                  "vat_percentage": {
                    "type": "text",
                    "label": "Vat Percentage",
                    "val": "",
                    "placeholder": "19%"
                  },
                  "delete": {
                    "type": "button",
                    "label": "Delete",
                    "function": "DELETE_ROW"
                  }
                }
              }
            }
          },
          "invoice_summary_frame": {
            "type": "fieldset",
            "label": "Invoice Summary",
            "style": "border-radius: 3px; border: 1px solid #ccc",
            "show_if": "invoice_spec.configure_by_table=='false'",
            "repeat": false,
            "fields": {
              "invoice_summary.auto_calc": {
                "type": "checkbox",
                "label": "Automatic Calculation",
                "val": "true",
                "isOn": "true",
                "isOff": "false",
                "breakLine": true
              },
              "data.total_amount": {
                "type": "text",
                "label": "Total Amount",
                "show_if": "invoice_summary.auto_calc=='false'",
                "placeholder": "102.04",
                "val": ""
              },
              "data.vat_amount": {
                "type": "text",
                "label": "Vat Amount",
                "show_if": "invoice_summary.auto_calc=='false'",
                "placeholder": "2.04",
                "val": ""
              },
              "data.net_amount": {
                "type": "text",
                "label": "Net Amount",
                "show_if": "invoice_summary.auto_calc=='false'",
                "placeholder": "100",
                "val": "",
                "breakLine": true
              },
              "create_invoice_log_table": {
                "type": "checkbox",
                "label": "Create Invoice Log Table",
                "val": "false",
                "isOn": "true",
                "isOff": "false"
              },
              "invoice_log_table_name": {
                "type": "text",
                "label": "Invoice Log Table Name",
                "show_if": "create_invoice_log_table=='true'",
                "val": "Invoice Log Table",
                "style": "margin-left: 15px",
                "breakLine": true
              }
            }
          }
        }
      },
      "price_format_frame": {
        "type": "fieldset",
        "label": "Price Format",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "configure_by_table=='true'",
        "repeat": false,
        "fields": {
          "price_format.category": {
            "type": "hidden",
            "val": "currency"
          },
          "price_format.decimal_places": {
            "type": "select",
            "label": "Decimal Places",
            "required": true,
            "options": {
              "0": {
                "label": "0 digits"
              },
              "1": {
                "label": "1 digits"
              },
              "2": {
                "label": "2 digits"
              },
              "3": {
                "label": "3 digits"
              },
              "4": {
                "label": "4 digits"
              },
              "5": {
                "label": "5 digits"
              },
              "6": {
                "label": "6 digits"
              },
              "7": {
                "label": "7 digits"
              },
              "8": {
                "label": "8 digits"
              },
              "9": {
                "label": "9 digits"
              }
            },
            "val": "2"
          },
          "price_format.use_1000_separator": {
            "type": "checkbox",
            "label": "Use 1000 Separator(,)",
            "val": "true",
            "isOn": "true",
            "isOff": "false"
          },
          "price_format.currency_symbol": {
            "type": "select",
            "label": "Symbol",
            "required": true,
            "options": {
              "dollar": {
                "label": "$"
              },
              "euro": {
                "label": "€"
              },
              "pound": {
                "label": "£"
              }
            },
            "val": "dollar"
          }
        }
      },
      "custom_labels": {
        "type": "checkbox",
        "label": "Customise Labels",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      }
    }
  },
  "cloud_config_frame": {
    "type": "fieldset",
    "label": "Config Cloud Directory to export to",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "type=='create' && (where_to_create=='only_export_to_cloud' || where_to_create=='both_export_to_cloud_and_open_in_browser')",
    "repeat": false,
    "fields": {
      "webservice": {
        "type": "select",
        "label": "Select Webservice",
        "options": {
          "ms_one_drive": {
            "label": "Microsoft One Drive"
          },
          "dropbox": {
            "label": "Dropbox"
          },
          "google_drive": {
            "label": "Google Drive"
          }
        },
        "val": "ms_one_drive",
        "required": true,
        "breakLine": true
      },
      "github_url": {
        "type": "text",
        "label": "Enter link e.g. https://github.com/zippydoc/test",
        "show_if": "webservice=='github'",
        "val": "",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "export_dir": {
        "type": "text",
        "label": "Enter dir e.g. /MyZippyDocFiles/SubDir/",
        "show_if": "webservice!='github'",
        "val": "",
        "width": "100%",
        "breakLine": true
      },
      "github_token": {
        "type": "text",
        "label": "Specify the Github personal access token that has write permission:",
        "show_if": "webservice=='github'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "google_authorization_code": {
        "type": "text",
        "label": "Google OAuth Authorization Code with scope https://www.googleapis.com/auth/drive. You can get it here https://developers.google.com/oauthplayground/",
        "show_if": "webservice=='google_drive'",
        "required": true,
        "width": "100%",
        "breakLine": true
      },
      "dropbox_authorization_code": {
        "type": "text",
        "label": "Dropbox Authorization Code. You can get it here https://www.dropbox.com/oauth2/authorize?client_id=9i7woztjp94jrkw&response_type=code",
        "show_if": "webservice=='dropbox'",
        "required": true,
        "width": "100%",
        "breakLine": true
      }
    }
  }
}
,
"/pdf_invoice/CustomLabelItalian.json/CustomLabelItalian.json": {
  "custom_labels_frame_it": {
    "type": "fieldset",
    "label": "Custom Label",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "custom_labels=='true' && (lang=='standard' || lang=='it')",
    "repeat": false,
    "fields": {
      "label_data.it.invoice_title": {
        "type": "text",
        "label": "Invoice Title",
        "placeholder": "Invoice Title",
        "val": "Invoice"
      },
      "label_data.it.invoice_date_title": {
        "type": "text",
        "label": "Invoice Date Title",
        "placeholder": "Invoice Date Title",
        "val": "Date:"
      },
      "label_data.it.invoice_no_title": {
        "type": "text",
        "label": "Invoice No Title",
        "placeholder": "Invoice No Title",
        "val": "Invoice No.:"
      },
      "label_data.it.customer_no_title": {
        "type": "text",
        "label": "Customer No Title",
        "placeholder": "Customer No Title",
        "val": "Customer No.:"
      },
      "label_data.it.reference_no_title": {
        "type": "text",
        "label": "Reference No Title",
        "placeholder": "Reference No Title",
        "val": "Reference No.:"
      },
      "label_data.it.your_order_date_title": {
        "type": "text",
        "label": "Your Order Date Title",
        "placeholder": "Your Order Date Title",
        "val": "Date:"
      },
      "label_data.it.subject_title": {
        "type": "text",
        "label": "Subject Title",
        "placeholder": "Subject Title",
        "val": "Subject"
      },
      "label_data.it.value_added_tax_title": {
        "type": "text",
        "label": "Value Added Tax Title",
        "placeholder": "Value Added Tax Title",
        "val": "Value Added Tax"
      },
      "label_data.it.total_excluding_vat_title": {
        "type": "text",
        "label": "Total excluding Vat Title",
        "placeholder": "Total excluding Vat Title",
        "val": "Total excluding VAT"
      },
      "label_data.it.total_value_added_tax_title": {
        "type": "text",
        "label": "Total Value Added Tax Title",
        "placeholder": "Total Value Added Tax Title",
        "val": "Value Added Tax"
      },
      "label_data.it.total_including_vat_title": {
        "type": "text",
        "label": "Total including Vat Title",
        "placeholder": "Total including Vat Title",
        "val": "Total including VAT"
      },
      "label_data.it.pay_until_title": {
        "type": "text",
        "label": "Pay until Title",
        "placeholder": "Pay until Title",
        "val": "Pay this invoice until"
      },
      "label_data.it.register_no_title": {
        "type": "text",
        "label": "Register No Title",
        "placeholder": "Register No Title",
        "val": "Register No.:"
      },
      "label_data.it.register_court_title": {
        "type": "text",
        "label": "Register Court Title",
        "placeholder": "Register Court Title",
        "val": "Register Court:"
      },
      "label_data.it.iban_title": {
        "type": "text",
        "label": "IBAN Title",
        "placeholder": "IBAN Title",
        "val": "IBAN:"
      },
      "label_data.it.bic_title": {
        "type": "text",
        "label": "BIC Title",
        "placeholder": "BIC Title",
        "val": "BIC:"
      },
      "label_data.it.vat_number_title": {
        "type": "text",
        "label": "VAT Number Title",
        "placeholder": "VAT Number Title",
        "val": "VAT Number:"
      },
      "label_data.it.article_number_title": {
        "type": "text",
        "label": "Article No Title",
        "placeholder": "Article No Title",
        "val": "Article No."
      },
      "label_data.it.article_description_title": {
        "type": "text",
        "label": "Description Title",
        "placeholder": "Description Title",
        "val": "Description"
      },
      "label_data.it.article_quantity_title": {
        "type": "text",
        "label": "Quantity Title",
        "placeholder": "Quantity Title",
        "val": "Quantity"
      },
      "label_data.it.article_unit_title": {
        "type": "text",
        "label": "Article Unit Title",
        "placeholder": "Article Unit Title",
        "val": "Unit"
      },
      "label_data.it.article_per_item_title": {
        "type": "text",
        "label": "per Item Title",
        "placeholder": "per Item Title",
        "val": "per Item"
      },
      "label_data.it.article_net_of_vat_title": {
        "type": "text",
        "label": "Net of VAT Title",
        "placeholder": "Net of VAT Title",
        "val": "Net of VAT"
      },
      "label_data.it.article_total_title": {
        "type": "text",
        "label": "Article Total Title",
        "placeholder": "Article Total Title",
        "val": "Total"
      }
    }
  }
}
,
"/pdf_invoice/CustomLabelFinnish.json/CustomLabelFinnish.json": {
  "custom_labels_frame_fi": {
    "type": "fieldset",
    "label": "Custom Label",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "custom_labels=='true' && (lang=='standard' || lang=='fi')",
    "repeat": false,
    "fields": {
      "label_data.fi.invoice_title": {
        "type": "text",
        "label": "Invoice Title",
        "placeholder": "Invoice Title",
        "val": "Invoice"
      },
      "label_data.fi.invoice_date_title": {
        "type": "text",
        "label": "Invoice Date Title",
        "placeholder": "Invoice Date Title",
        "val": "Date:"
      },
      "label_data.fi.invoice_no_title": {
        "type": "text",
        "label": "Invoice No Title",
        "placeholder": "Invoice No Title",
        "val": "Invoice No.:"
      },
      "label_data.fi.customer_no_title": {
        "type": "text",
        "label": "Customer No Title",
        "placeholder": "Customer No Title",
        "val": "Customer No.:"
      },
      "label_data.fi.reference_no_title": {
        "type": "text",
        "label": "Reference No Title",
        "placeholder": "Reference No Title",
        "val": "Reference No.:"
      },
      "label_data.fi.your_order_date_title": {
        "type": "text",
        "label": "Your Order Date Title",
        "placeholder": "Your Order Date Title",
        "val": "Date:"
      },
      "label_data.fi.subject_title": {
        "type": "text",
        "label": "Subject Title",
        "placeholder": "Subject Title",
        "val": "Subject"
      },
      "label_data.fi.value_added_tax_title": {
        "type": "text",
        "label": "Value Added Tax Title",
        "placeholder": "Value Added Tax Title",
        "val": "Value Added Tax"
      },
      "label_data.fi.total_excluding_vat_title": {
        "type": "text",
        "label": "Total excluding Vat Title",
        "placeholder": "Total excluding Vat Title",
        "val": "Total excluding VAT"
      },
      "label_data.fi.total_value_added_tax_title": {
        "type": "text",
        "label": "Total Value Added Tax Title",
        "placeholder": "Total Value Added Tax Title",
        "val": "Value Added Tax"
      },
      "label_data.fi.total_including_vat_title": {
        "type": "text",
        "label": "Total including Vat Title",
        "placeholder": "Total including Vat Title",
        "val": "Total including VAT"
      },
      "label_data.fi.pay_until_title": {
        "type": "text",
        "label": "Pay until Title",
        "placeholder": "Pay until Title",
        "val": "Pay this invoice until"
      },
      "label_data.fi.register_no_title": {
        "type": "text",
        "label": "Register No Title",
        "placeholder": "Register No Title",
        "val": "Register No.:"
      },
      "label_data.fi.register_court_title": {
        "type": "text",
        "label": "Register Court Title",
        "placeholder": "Register Court Title",
        "val": "Register Court:"
      },
      "label_data.fi.iban_title": {
        "type": "text",
        "label": "IBAN Title",
        "placeholder": "IBAN Title",
        "val": "IBAN:"
      },
      "label_data.fi.bic_title": {
        "type": "text",
        "label": "BIC Title",
        "placeholder": "BIC Title",
        "val": "BIC:"
      },
      "label_data.fi.vat_number_title": {
        "type": "text",
        "label": "VAT Number Title",
        "placeholder": "VAT Number Title",
        "val": "VAT Number:"
      },
      "label_data.fi.article_number_title": {
        "type": "text",
        "label": "Article No Title",
        "placeholder": "Article No Title",
        "val": "Article No."
      },
      "label_data.fi.article_description_title": {
        "type": "text",
        "label": "Description Title",
        "placeholder": "Description Title",
        "val": "Description"
      },
      "label_data.fi.article_quantity_title": {
        "type": "text",
        "label": "Quantity Title",
        "placeholder": "Quantity Title",
        "val": "Quantity"
      },
      "label_data.fi.article_unit_title": {
        "type": "text",
        "label": "Article Unit Title",
        "placeholder": "Article Unit Title",
        "val": "Unit"
      },
      "label_data.fi.article_per_item_title": {
        "type": "text",
        "label": "per Item Title",
        "placeholder": "per Item Title",
        "val": "per Item"
      },
      "label_data.fi.article_net_of_vat_title": {
        "type": "text",
        "label": "Net of VAT Title",
        "placeholder": "Net of VAT Title",
        "val": "Net of VAT"
      },
      "label_data.fi.article_total_title": {
        "type": "text",
        "label": "Article Total Title",
        "placeholder": "Article Total Title",
        "val": "Total"
      }
    }
  }
}
,
"/pdf_invoice/CustomLabelLithuanian.json/CustomLabelLithuanian.json": {
  "custom_labels_frame_lt": {
    "type": "fieldset",
    "label": "Custom Label",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "custom_labels=='true' && (lang=='standard' || lang=='lt')",
    "repeat": false,
    "fields": {
      "label_data.lt.invoice_title": {
        "type": "text",
        "label": "Invoice Title",
        "placeholder": "Invoice Title",
        "val": "Invoice"
      },
      "label_data.lt.invoice_date_title": {
        "type": "text",
        "label": "Invoice Date Title",
        "placeholder": "Invoice Date Title",
        "val": "Date:"
      },
      "label_data.lt.invoice_no_title": {
        "type": "text",
        "label": "Invoice No Title",
        "placeholder": "Invoice No Title",
        "val": "Invoice No.:"
      },
      "label_data.lt.customer_no_title": {
        "type": "text",
        "label": "Customer No Title",
        "placeholder": "Customer No Title",
        "val": "Customer No.:"
      },
      "label_data.lt.reference_no_title": {
        "type": "text",
        "label": "Reference No Title",
        "placeholder": "Reference No Title",
        "val": "Reference No.:"
      },
      "label_data.lt.your_order_date_title": {
        "type": "text",
        "label": "Your Order Date Title",
        "placeholder": "Your Order Date Title",
        "val": "Date:"
      },
      "label_data.lt.subject_title": {
        "type": "text",
        "label": "Subject Title",
        "placeholder": "Subject Title",
        "val": "Subject"
      },
      "label_data.lt.value_added_tax_title": {
        "type": "text",
        "label": "Value Added Tax Title",
        "placeholder": "Value Added Tax Title",
        "val": "Value Added Tax"
      },
      "label_data.lt.total_excluding_vat_title": {
        "type": "text",
        "label": "Total excluding Vat Title",
        "placeholder": "Total excluding Vat Title",
        "val": "Total excluding VAT"
      },
      "label_data.lt.total_value_added_tax_title": {
        "type": "text",
        "label": "Total Value Added Tax Title",
        "placeholder": "Total Value Added Tax Title",
        "val": "Value Added Tax"
      },
      "label_data.lt.total_including_vat_title": {
        "type": "text",
        "label": "Total including Vat Title",
        "placeholder": "Total including Vat Title",
        "val": "Total including VAT"
      },
      "label_data.lt.pay_until_title": {
        "type": "text",
        "label": "Pay until Title",
        "placeholder": "Pay until Title",
        "val": "Pay this invoice until"
      },
      "label_data.lt.register_no_title": {
        "type": "text",
        "label": "Register No Title",
        "placeholder": "Register No Title",
        "val": "Register No.:"
      },
      "label_data.lt.register_court_title": {
        "type": "text",
        "label": "Register Court Title",
        "placeholder": "Register Court Title",
        "val": "Register Court:"
      },
      "label_data.lt.iban_title": {
        "type": "text",
        "label": "IBAN Title",
        "placeholder": "IBAN Title",
        "val": "IBAN:"
      },
      "label_data.lt.bic_title": {
        "type": "text",
        "label": "BIC Title",
        "placeholder": "BIC Title",
        "val": "BIC:"
      },
      "label_data.lt.vat_number_title": {
        "type": "text",
        "label": "VAT Number Title",
        "placeholder": "VAT Number Title",
        "val": "VAT Number:"
      },
      "label_data.lt.article_number_title": {
        "type": "text",
        "label": "Article No Title",
        "placeholder": "Article No Title",
        "val": "Article No."
      },
      "label_data.lt.article_description_title": {
        "type": "text",
        "label": "Description Title",
        "placeholder": "Description Title",
        "val": "Description"
      },
      "label_data.lt.article_quantity_title": {
        "type": "text",
        "label": "Quantity Title",
        "placeholder": "Quantity Title",
        "val": "Quantity"
      },
      "label_data.lt.article_unit_title": {
        "type": "text",
        "label": "Article Unit Title",
        "placeholder": "Article Unit Title",
        "val": "Unit"
      },
      "label_data.lt.article_per_item_title": {
        "type": "text",
        "label": "per Item Title",
        "placeholder": "per Item Title",
        "val": "per Item"
      },
      "label_data.lt.article_net_of_vat_title": {
        "type": "text",
        "label": "Net of VAT Title",
        "placeholder": "Net of VAT Title",
        "val": "Net of VAT"
      },
      "label_data.lt.article_total_title": {
        "type": "text",
        "label": "Article Total Title",
        "placeholder": "Article Total Title",
        "val": "Total"
      }
    }
  }
}
,
"/pdf_invoice/CustomLabelFrench.json/CustomLabelFrench.json": {
  "custom_labels_frame_fr": {
    "type": "fieldset",
    "label": "Custom Label",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "custom_labels=='true' && (lang=='standard' || lang=='fr')",
    "repeat": false,
    "fields": {
      "label_data.fr.invoice_title": {
        "type": "text",
        "label": "Invoice Title",
        "placeholder": "Invoice Title",
        "val": "Invoice"
      },
      "label_data.fr.invoice_date_title": {
        "type": "text",
        "label": "Invoice Date Title",
        "placeholder": "Invoice Date Title",
        "val": "Date:"
      },
      "label_data.fr.invoice_no_title": {
        "type": "text",
        "label": "Invoice No Title",
        "placeholder": "Invoice No Title",
        "val": "Invoice No.:"
      },
      "label_data.fr.customer_no_title": {
        "type": "text",
        "label": "Customer No Title",
        "placeholder": "Customer No Title",
        "val": "Customer No.:"
      },
      "label_data.fr.reference_no_title": {
        "type": "text",
        "label": "Reference No Title",
        "placeholder": "Reference No Title",
        "val": "Reference No.:"
      },
      "label_data.fr.your_order_date_title": {
        "type": "text",
        "label": "Your Order Date Title",
        "placeholder": "Your Order Date Title",
        "val": "Date:"
      },
      "label_data.fr.subject_title": {
        "type": "text",
        "label": "Subject Title",
        "placeholder": "Subject Title",
        "val": "Subject"
      },
      "label_data.fr.value_added_tax_title": {
        "type": "text",
        "label": "Value Added Tax Title",
        "placeholder": "Value Added Tax Title",
        "val": "Value Added Tax"
      },
      "label_data.fr.total_excluding_vat_title": {
        "type": "text",
        "label": "Total excluding Vat Title",
        "placeholder": "Total excluding Vat Title",
        "val": "Total excluding VAT"
      },
      "label_data.fr.total_value_added_tax_title": {
        "type": "text",
        "label": "Total Value Added Tax Title",
        "placeholder": "Total Value Added Tax Title",
        "val": "Value Added Tax"
      },
      "label_data.fr.total_including_vat_title": {
        "type": "text",
        "label": "Total including Vat Title",
        "placeholder": "Total including Vat Title",
        "val": "Total including VAT"
      },
      "label_data.fr.pay_until_title": {
        "type": "text",
        "label": "Pay until Title",
        "placeholder": "Pay until Title",
        "val": "Pay this invoice until"
      },
      "label_data.fr.register_no_title": {
        "type": "text",
        "label": "Register No Title",
        "placeholder": "Register No Title",
        "val": "Register No.:"
      },
      "label_data.fr.register_court_title": {
        "type": "text",
        "label": "Register Court Title",
        "placeholder": "Register Court Title",
        "val": "Register Court:"
      },
      "label_data.fr.iban_title": {
        "type": "text",
        "label": "IBAN Title",
        "placeholder": "IBAN Title",
        "val": "IBAN:"
      },
      "label_data.fr.bic_title": {
        "type": "text",
        "label": "BIC Title",
        "placeholder": "BIC Title",
        "val": "BIC:"
      },
      "label_data.fr.vat_number_title": {
        "type": "text",
        "label": "VAT Number Title",
        "placeholder": "VAT Number Title",
        "val": "VAT Number:"
      },
      "label_data.fr.article_number_title": {
        "type": "text",
        "label": "Article No Title",
        "placeholder": "Article No Title",
        "val": "Article No."
      },
      "label_data.fr.article_description_title": {
        "type": "text",
        "label": "Description Title",
        "placeholder": "Description Title",
        "val": "Description"
      },
      "label_data.fr.article_quantity_title": {
        "type": "text",
        "label": "Quantity Title",
        "placeholder": "Quantity Title",
        "val": "Quantity"
      },
      "label_data.fr.article_unit_title": {
        "type": "text",
        "label": "Article Unit Title",
        "placeholder": "Article Unit Title",
        "val": "Unit"
      },
      "label_data.fr.article_per_item_title": {
        "type": "text",
        "label": "per Item Title",
        "placeholder": "per Item Title",
        "val": "per Item"
      },
      "label_data.fr.article_net_of_vat_title": {
        "type": "text",
        "label": "Net of VAT Title",
        "placeholder": "Net of VAT Title",
        "val": "Net of VAT"
      },
      "label_data.fr.article_total_title": {
        "type": "text",
        "label": "Article Total Title",
        "placeholder": "Article Total Title",
        "val": "Total"
      }
    }
  }
}
,
"/pdf_invoice/CustomLabelEnglish.json/CustomLabelEnglish.json": {
  "custom_labels_frame_en": {
    "type": "fieldset",
    "label": "Custom Label",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "custom_labels=='true' && (lang=='standard' || lang=='en')",
    "repeat": false,
    "fields": {
      "label_data.en.invoice_title": {
        "type": "text",
        "label": "Invoice Title",
        "placeholder": "Invoice Title",
        "val": "Invoice"
      },
      "label_data.en.invoice_date_title": {
        "type": "text",
        "label": "Invoice Date Title",
        "placeholder": "Invoice Date Title",
        "val": "Date:"
      },
      "label_data.en.invoice_no_title": {
        "type": "text",
        "label": "Invoice No Title",
        "placeholder": "Invoice No Title",
        "val": "Invoice No.:"
      },
      "label_data.en.customer_no_title": {
        "type": "text",
        "label": "Customer No Title",
        "placeholder": "Customer No Title",
        "val": "Customer No.:"
      },
      "label_data.en.reference_no_title": {
        "type": "text",
        "label": "Reference No Title",
        "placeholder": "Reference No Title",
        "val": "Reference No.:"
      },
      "label_data.en.your_order_date_title": {
        "type": "text",
        "label": "Your Order Date Title",
        "placeholder": "Your Order Date Title",
        "val": "Date:"
      },
      "label_data.en.subject_title": {
        "type": "text",
        "label": "Subject Title",
        "placeholder": "Subject Title",
        "val": "Subject"
      },
      "label_data.en.value_added_tax_title": {
        "type": "text",
        "label": "Value Added Tax Title",
        "placeholder": "Value Added Tax Title",
        "val": "Value Added Tax"
      },
      "label_data.en.total_excluding_vat_title": {
        "type": "text",
        "label": "Total excluding Vat Title",
        "placeholder": "Total excluding Vat Title",
        "val": "Total excluding VAT"
      },
      "label_data.en.total_value_added_tax_title": {
        "type": "text",
        "label": "Total Value Added Tax Title",
        "placeholder": "Total Value Added Tax Title",
        "val": "Value Added Tax"
      },
      "label_data.en.total_including_vat_title": {
        "type": "text",
        "label": "Total including Vat Title",
        "placeholder": "Total including Vat Title",
        "val": "Total including VAT"
      },
      "label_data.en.pay_until_title": {
        "type": "text",
        "label": "Pay until Title",
        "placeholder": "Pay until Title",
        "val": "Pay this invoice until"
      },
      "label_data.en.register_no_title": {
        "type": "text",
        "label": "Register No Title",
        "placeholder": "Register No Title",
        "val": "Register No.:"
      },
      "label_data.en.register_court_title": {
        "type": "text",
        "label": "Register Court Title",
        "placeholder": "Register Court Title",
        "val": "Register Court:"
      },
      "label_data.en.iban_title": {
        "type": "text",
        "label": "IBAN Title",
        "placeholder": "IBAN Title",
        "val": "IBAN:"
      },
      "label_data.en.bic_title": {
        "type": "text",
        "label": "BIC Title",
        "placeholder": "BIC Title",
        "val": "BIC:"
      },
      "label_data.en.vat_number_title": {
        "type": "text",
        "label": "VAT Number Title",
        "placeholder": "VAT Number Title",
        "val": "VAT Number:"
      },
      "label_data.en.article_number_title": {
        "type": "text",
        "label": "Article No Title",
        "placeholder": "Article No Title",
        "val": "Article No."
      },
      "label_data.en.article_description_title": {
        "type": "text",
        "label": "Description Title",
        "placeholder": "Description Title",
        "val": "Description"
      },
      "label_data.en.article_quantity_title": {
        "type": "text",
        "label": "Quantity Title",
        "placeholder": "Quantity Title",
        "val": "Quantity"
      },
      "label_data.en.article_unit_title": {
        "type": "text",
        "label": "Article Unit Title",
        "placeholder": "Article Unit Title",
        "val": "Unit"
      },
      "label_data.en.article_per_item_title": {
        "type": "text",
        "label": "per Item Title",
        "placeholder": "per Item Title",
        "val": "per Item"
      },
      "label_data.en.article_net_of_vat_title": {
        "type": "text",
        "label": "Net of VAT Title",
        "placeholder": "Net of VAT Title",
        "val": "Net of VAT"
      },
      "label_data.en.article_total_title": {
        "type": "text",
        "label": "Article Total Title",
        "placeholder": "Article Total Title",
        "val": "Total"
      }
    }
  }
}
,
"/pdf_invoice/CustomLabelBulgarian.json/CustomLabelBulgarian.json": {
  "custom_labels_frame_bg": {
    "type": "fieldset",
    "label": "Custom Label",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "custom_labels=='true' && (lang=='standard' || lang=='bg')",
    "repeat": false,
    "fields": {
      "label_data.bg.invoice_title": {
        "type": "text",
        "label": "Invoice Title",
        "placeholder": "Invoice Title",
        "val": "Invoice"
      },
      "label_data.bg.invoice_date_title": {
        "type": "text",
        "label": "Invoice Date Title",
        "placeholder": "Invoice Date Title",
        "val": "Date:"
      },
      "label_data.bg.invoice_no_title": {
        "type": "text",
        "label": "Invoice No Title",
        "placeholder": "Invoice No Title",
        "val": "Invoice No.:"
      },
      "label_data.bg.customer_no_title": {
        "type": "text",
        "label": "Customer No Title",
        "placeholder": "Customer No Title",
        "val": "Customer No.:"
      },
      "label_data.bg.reference_no_title": {
        "type": "text",
        "label": "Reference No Title",
        "placeholder": "Reference No Title",
        "val": "Reference No.:"
      },
      "label_data.bg.your_order_date_title": {
        "type": "text",
        "label": "Your Order Date Title",
        "placeholder": "Your Order Date Title",
        "val": "Date:"
      },
      "label_data.bg.subject_title": {
        "type": "text",
        "label": "Subject Title",
        "placeholder": "Subject Title",
        "val": "Subject"
      },
      "label_data.bg.value_added_tax_title": {
        "type": "text",
        "label": "Value Added Tax Title",
        "placeholder": "Value Added Tax Title",
        "val": "Value Added Tax"
      },
      "label_data.bg.total_excluding_vat_title": {
        "type": "text",
        "label": "Total excluding Vat Title",
        "placeholder": "Total excluding Vat Title",
        "val": "Total excluding VAT"
      },
      "label_data.bg.total_value_added_tax_title": {
        "type": "text",
        "label": "Total Value Added Tax Title",
        "placeholder": "Total Value Added Tax Title",
        "val": "Value Added Tax"
      },
      "label_data.bg.total_including_vat_title": {
        "type": "text",
        "label": "Total including Vat Title",
        "placeholder": "Total including Vat Title",
        "val": "Total including VAT"
      },
      "label_data.bg.pay_until_title": {
        "type": "text",
        "label": "Pay until Title",
        "placeholder": "Pay until Title",
        "val": "Pay this invoice until"
      },
      "label_data.bg.register_no_title": {
        "type": "text",
        "label": "Register No Title",
        "placeholder": "Register No Title",
        "val": "Register No.:"
      },
      "label_data.bg.register_court_title": {
        "type": "text",
        "label": "Register Court Title",
        "placeholder": "Register Court Title",
        "val": "Register Court:"
      },
      "label_data.bg.iban_title": {
        "type": "text",
        "label": "IBAN Title",
        "placeholder": "IBAN Title",
        "val": "IBAN:"
      },
      "label_data.bg.bic_title": {
        "type": "text",
        "label": "BIC Title",
        "placeholder": "BIC Title",
        "val": "BIC:"
      },
      "label_data.bg.vat_number_title": {
        "type": "text",
        "label": "VAT Number Title",
        "placeholder": "VAT Number Title",
        "val": "VAT Number:"
      },
      "label_data.bg.article_number_title": {
        "type": "text",
        "label": "Article No Title",
        "placeholder": "Article No Title",
        "val": "Article No."
      },
      "label_data.bg.article_description_title": {
        "type": "text",
        "label": "Description Title",
        "placeholder": "Description Title",
        "val": "Description"
      },
      "label_data.bg.article_quantity_title": {
        "type": "text",
        "label": "Quantity Title",
        "placeholder": "Quantity Title",
        "val": "Quantity"
      },
      "label_data.bg.article_unit_title": {
        "type": "text",
        "label": "Article Unit Title",
        "placeholder": "Article Unit Title",
        "val": "Unit"
      },
      "label_data.bg.article_per_item_title": {
        "type": "text",
        "label": "per Item Title",
        "placeholder": "per Item Title",
        "val": "per Item"
      },
      "label_data.bg.article_net_of_vat_title": {
        "type": "text",
        "label": "Net of VAT Title",
        "placeholder": "Net of VAT Title",
        "val": "Net of VAT"
      },
      "label_data.bg.article_total_title": {
        "type": "text",
        "label": "Article Total Title",
        "placeholder": "Article Total Title",
        "val": "Total"
      }
    }
  }
}
,
"/pdf_invoice/CustomLabelSpanish.json/CustomLabelSpanish.json": {
  "custom_labels_frame_es": {
    "type": "fieldset",
    "label": "Custom Label",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "custom_labels=='true' && (lang=='standard' || lang=='es')",
    "repeat": false,
    "fields": {
      "label_data.es.invoice_title": {
        "type": "text",
        "label": "Invoice Title",
        "placeholder": "Invoice Title",
        "val": "Invoice"
      },
      "label_data.es.invoice_date_title": {
        "type": "text",
        "label": "Invoice Date Title",
        "placeholder": "Invoice Date Title",
        "val": "Date:"
      },
      "label_data.es.invoice_no_title": {
        "type": "text",
        "label": "Invoice No Title",
        "placeholder": "Invoice No Title",
        "val": "Invoice No.:"
      },
      "label_data.es.customer_no_title": {
        "type": "text",
        "label": "Customer No Title",
        "placeholder": "Customer No Title",
        "val": "Customer No.:"
      },
      "label_data.es.reference_no_title": {
        "type": "text",
        "label": "Reference No Title",
        "placeholder": "Reference No Title",
        "val": "Reference No.:"
      },
      "label_data.es.your_order_date_title": {
        "type": "text",
        "label": "Your Order Date Title",
        "placeholder": "Your Order Date Title",
        "val": "Date:"
      },
      "label_data.es.subject_title": {
        "type": "text",
        "label": "Subject Title",
        "placeholder": "Subject Title",
        "val": "Subject"
      },
      "label_data.es.value_added_tax_title": {
        "type": "text",
        "label": "Value Added Tax Title",
        "placeholder": "Value Added Tax Title",
        "val": "Value Added Tax"
      },
      "label_data.es.total_excluding_vat_title": {
        "type": "text",
        "label": "Total excluding Vat Title",
        "placeholder": "Total excluding Vat Title",
        "val": "Total excluding VAT"
      },
      "label_data.es.total_value_added_tax_title": {
        "type": "text",
        "label": "Total Value Added Tax Title",
        "placeholder": "Total Value Added Tax Title",
        "val": "Value Added Tax"
      },
      "label_data.es.total_including_vat_title": {
        "type": "text",
        "label": "Total including Vat Title",
        "placeholder": "Total including Vat Title",
        "val": "Total including VAT"
      },
      "label_data.es.pay_until_title": {
        "type": "text",
        "label": "Pay until Title",
        "placeholder": "Pay until Title",
        "val": "Pay this invoice until"
      },
      "label_data.es.register_no_title": {
        "type": "text",
        "label": "Register No Title",
        "placeholder": "Register No Title",
        "val": "Register No.:"
      },
      "label_data.es.register_court_title": {
        "type": "text",
        "label": "Register Court Title",
        "placeholder": "Register Court Title",
        "val": "Register Court:"
      },
      "label_data.es.iban_title": {
        "type": "text",
        "label": "IBAN Title",
        "placeholder": "IBAN Title",
        "val": "IBAN:"
      },
      "label_data.es.bic_title": {
        "type": "text",
        "label": "BIC Title",
        "placeholder": "BIC Title",
        "val": "BIC:"
      },
      "label_data.es.vat_number_title": {
        "type": "text",
        "label": "VAT Number Title",
        "placeholder": "VAT Number Title",
        "val": "VAT Number:"
      },
      "label_data.es.article_number_title": {
        "type": "text",
        "label": "Article No Title",
        "placeholder": "Article No Title",
        "val": "Article No."
      },
      "label_data.es.article_description_title": {
        "type": "text",
        "label": "Description Title",
        "placeholder": "Description Title",
        "val": "Description"
      },
      "label_data.es.article_quantity_title": {
        "type": "text",
        "label": "Quantity Title",
        "placeholder": "Quantity Title",
        "val": "Quantity"
      },
      "label_data.es.article_unit_title": {
        "type": "text",
        "label": "Article Unit Title",
        "placeholder": "Article Unit Title",
        "val": "Unit"
      },
      "label_data.es.article_per_item_title": {
        "type": "text",
        "label": "per Item Title",
        "placeholder": "per Item Title",
        "val": "per Item"
      },
      "label_data.es.article_net_of_vat_title": {
        "type": "text",
        "label": "Net of VAT Title",
        "placeholder": "Net of VAT Title",
        "val": "Net of VAT"
      },
      "label_data.es.article_total_title": {
        "type": "text",
        "label": "Article Total Title",
        "placeholder": "Article Total Title",
        "val": "Total"
      }
    }
  }
}
,
"/pdf_invoice/CustomLabelHungarian.json/CustomLabelHungarian.json": {
  "custom_labels_frame_hu": {
    "type": "fieldset",
    "label": "Custom Label",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "custom_labels=='true' && (lang=='standard' || lang=='hu')",
    "repeat": false,
    "fields": {
      "label_data.hu.invoice_title": {
        "type": "text",
        "label": "Invoice Title",
        "placeholder": "Invoice Title",
        "val": "Invoice"
      },
      "label_data.hu.invoice_date_title": {
        "type": "text",
        "label": "Invoice Date Title",
        "placeholder": "Invoice Date Title",
        "val": "Date:"
      },
      "label_data.hu.invoice_no_title": {
        "type": "text",
        "label": "Invoice No Title",
        "placeholder": "Invoice No Title",
        "val": "Invoice No.:"
      },
      "label_data.hu.customer_no_title": {
        "type": "text",
        "label": "Customer No Title",
        "placeholder": "Customer No Title",
        "val": "Customer No.:"
      },
      "label_data.hu.reference_no_title": {
        "type": "text",
        "label": "Reference No Title",
        "placeholder": "Reference No Title",
        "val": "Reference No.:"
      },
      "label_data.hu.your_order_date_title": {
        "type": "text",
        "label": "Your Order Date Title",
        "placeholder": "Your Order Date Title",
        "val": "Date:"
      },
      "label_data.hu.subject_title": {
        "type": "text",
        "label": "Subject Title",
        "placeholder": "Subject Title",
        "val": "Subject"
      },
      "label_data.hu.value_added_tax_title": {
        "type": "text",
        "label": "Value Added Tax Title",
        "placeholder": "Value Added Tax Title",
        "val": "Value Added Tax"
      },
      "label_data.hu.total_excluding_vat_title": {
        "type": "text",
        "label": "Total excluding Vat Title",
        "placeholder": "Total excluding Vat Title",
        "val": "Total excluding VAT"
      },
      "label_data.hu.total_value_added_tax_title": {
        "type": "text",
        "label": "Total Value Added Tax Title",
        "placeholder": "Total Value Added Tax Title",
        "val": "Value Added Tax"
      },
      "label_data.hu.total_including_vat_title": {
        "type": "text",
        "label": "Total including Vat Title",
        "placeholder": "Total including Vat Title",
        "val": "Total including VAT"
      },
      "label_data.hu.pay_until_title": {
        "type": "text",
        "label": "Pay until Title",
        "placeholder": "Pay until Title",
        "val": "Pay this invoice until"
      },
      "label_data.hu.register_no_title": {
        "type": "text",
        "label": "Register No Title",
        "placeholder": "Register No Title",
        "val": "Register No.:"
      },
      "label_data.hu.register_court_title": {
        "type": "text",
        "label": "Register Court Title",
        "placeholder": "Register Court Title",
        "val": "Register Court:"
      },
      "label_data.hu.iban_title": {
        "type": "text",
        "label": "IBAN Title",
        "placeholder": "IBAN Title",
        "val": "IBAN:"
      },
      "label_data.hu.bic_title": {
        "type": "text",
        "label": "BIC Title",
        "placeholder": "BIC Title",
        "val": "BIC:"
      },
      "label_data.hu.vat_number_title": {
        "type": "text",
        "label": "VAT Number Title",
        "placeholder": "VAT Number Title",
        "val": "VAT Number:"
      },
      "label_data.hu.article_number_title": {
        "type": "text",
        "label": "Article No Title",
        "placeholder": "Article No Title",
        "val": "Article No."
      },
      "label_data.hu.article_description_title": {
        "type": "text",
        "label": "Description Title",
        "placeholder": "Description Title",
        "val": "Description"
      },
      "label_data.hu.article_quantity_title": {
        "type": "text",
        "label": "Quantity Title",
        "placeholder": "Quantity Title",
        "val": "Quantity"
      },
      "label_data.hu.article_unit_title": {
        "type": "text",
        "label": "Article Unit Title",
        "placeholder": "Article Unit Title",
        "val": "Unit"
      },
      "label_data.hu.article_per_item_title": {
        "type": "text",
        "label": "per Item Title",
        "placeholder": "per Item Title",
        "val": "per Item"
      },
      "label_data.hu.article_net_of_vat_title": {
        "type": "text",
        "label": "Net of VAT Title",
        "placeholder": "Net of VAT Title",
        "val": "Net of VAT"
      },
      "label_data.hu.article_total_title": {
        "type": "text",
        "label": "Article Total Title",
        "placeholder": "Article Total Title",
        "val": "Total"
      }
    }
  }
}
,
"/pdf_invoice/CustomLabelGerman.json/CustomLabelGerman.json": {
  "custom_labels_frame_de": {
    "type": "fieldset",
    "label": "Custom Label",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "custom_labels=='true' && (lang=='standard' || lang=='de')",
    "repeat": false,
    "fields": {
      "label_data.de.invoice_title": {
        "type": "text",
        "label": "Invoice Title",
        "placeholder": "Invoice Title",
        "val": "Invoice"
      },
      "label_data.de.invoice_date_title": {
        "type": "text",
        "label": "Invoice Date Title",
        "placeholder": "Invoice Date Title",
        "val": "Date:"
      },
      "label_data.de.invoice_no_title": {
        "type": "text",
        "label": "Invoice No Title",
        "placeholder": "Invoice No Title",
        "val": "Invoice No.:"
      },
      "label_data.de.customer_no_title": {
        "type": "text",
        "label": "Customer No Title",
        "placeholder": "Customer No Title",
        "val": "Customer No.:"
      },
      "label_data.de.reference_no_title": {
        "type": "text",
        "label": "Reference No Title",
        "placeholder": "Reference No Title",
        "val": "Reference No.:"
      },
      "label_data.de.your_order_date_title": {
        "type": "text",
        "label": "Your Order Date Title",
        "placeholder": "Your Order Date Title",
        "val": "Date:"
      },
      "label_data.de.subject_title": {
        "type": "text",
        "label": "Subject Title",
        "placeholder": "Subject Title",
        "val": "Subject"
      },
      "label_data.de.value_added_tax_title": {
        "type": "text",
        "label": "Value Added Tax Title",
        "placeholder": "Value Added Tax Title",
        "val": "Value Added Tax"
      },
      "label_data.de.total_excluding_vat_title": {
        "type": "text",
        "label": "Total excluding Vat Title",
        "placeholder": "Total excluding Vat Title",
        "val": "Total excluding VAT"
      },
      "label_data.de.total_value_added_tax_title": {
        "type": "text",
        "label": "Total Value Added Tax Title",
        "placeholder": "Total Value Added Tax Title",
        "val": "Value Added Tax"
      },
      "label_data.de.total_including_vat_title": {
        "type": "text",
        "label": "Total including Vat Title",
        "placeholder": "Total including Vat Title",
        "val": "Total including VAT"
      },
      "label_data.de.pay_until_title": {
        "type": "text",
        "label": "Pay until Title",
        "placeholder": "Pay until Title",
        "val": "Pay this invoice until"
      },
      "label_data.de.register_no_title": {
        "type": "text",
        "label": "Register No Title",
        "placeholder": "Register No Title",
        "val": "Register No.:"
      },
      "label_data.de.register_court_title": {
        "type": "text",
        "label": "Register Court Title",
        "placeholder": "Register Court Title",
        "val": "Register Court:"
      },
      "label_data.de.iban_title": {
        "type": "text",
        "label": "IBAN Title",
        "placeholder": "IBAN Title",
        "val": "IBAN:"
      },
      "label_data.de.bic_title": {
        "type": "text",
        "label": "BIC Title",
        "placeholder": "BIC Title",
        "val": "BIC:"
      },
      "label_data.de.vat_number_title": {
        "type": "text",
        "label": "VAT Number Title",
        "placeholder": "VAT Number Title",
        "val": "VAT Number:"
      },
      "label_data.de.article_number_title": {
        "type": "text",
        "label": "Article No Title",
        "placeholder": "Article No Title",
        "val": "Article No."
      },
      "label_data.de.article_description_title": {
        "type": "text",
        "label": "Description Title",
        "placeholder": "Description Title",
        "val": "Description"
      },
      "label_data.de.article_quantity_title": {
        "type": "text",
        "label": "Quantity Title",
        "placeholder": "Quantity Title",
        "val": "Quantity"
      },
      "label_data.de.article_unit_title": {
        "type": "text",
        "label": "Article Unit Title",
        "placeholder": "Article Unit Title",
        "val": "Unit"
      },
      "label_data.de.article_per_item_title": {
        "type": "text",
        "label": "per Item Title",
        "placeholder": "per Item Title",
        "val": "per Item"
      },
      "label_data.de.article_net_of_vat_title": {
        "type": "text",
        "label": "Net of VAT Title",
        "placeholder": "Net of VAT Title",
        "val": "Net of VAT"
      },
      "label_data.de.article_total_title": {
        "type": "text",
        "label": "Article Total Title",
        "placeholder": "Article Total Title",
        "val": "Total"
      }
    }
  }
}
,
"/pdf_invoice/CustomLabelCanadian.json/CustomLabelCanadian.json": {
  "custom_labels_frame_ca": {
    "type": "fieldset",
    "label": "Custom Label",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "custom_labels=='true' && (lang=='standard' || lang=='ca')",
    "repeat": false,
    "fields": {
      "label_data.ca.invoice_title": {
        "type": "text",
        "label": "Invoice Title",
        "placeholder": "Invoice Title",
        "val": "Invoice"
      },
      "label_data.ca.invoice_date_title": {
        "type": "text",
        "label": "Invoice Date Title",
        "placeholder": "Invoice Date Title",
        "val": "Date:"
      },
      "label_data.ca.invoice_no_title": {
        "type": "text",
        "label": "Invoice No Title",
        "placeholder": "Invoice No Title",
        "val": "Invoice No.:"
      },
      "label_data.ca.customer_no_title": {
        "type": "text",
        "label": "Customer No Title",
        "placeholder": "Customer No Title",
        "val": "Customer No.:"
      },
      "label_data.ca.reference_no_title": {
        "type": "text",
        "label": "Reference No Title",
        "placeholder": "Reference No Title",
        "val": "Reference No.:"
      },
      "label_data.ca.your_order_date_title": {
        "type": "text",
        "label": "Your Order Date Title",
        "placeholder": "Your Order Date Title",
        "val": "Date:"
      },
      "label_data.ca.subject_title": {
        "type": "text",
        "label": "Subject Title",
        "placeholder": "Subject Title",
        "val": "Subject"
      },
      "label_data.ca.value_added_tax_title": {
        "type": "text",
        "label": "Value Added Tax Title",
        "placeholder": "Value Added Tax Title",
        "val": "Value Added Tax"
      },
      "label_data.ca.total_excluding_vat_title": {
        "type": "text",
        "label": "Total excluding Vat Title",
        "placeholder": "Total excluding Vat Title",
        "val": "Total excluding VAT"
      },
      "label_data.ca.total_value_added_tax_title": {
        "type": "text",
        "label": "Total Value Added Tax Title",
        "placeholder": "Total Value Added Tax Title",
        "val": "Value Added Tax"
      },
      "label_data.ca.total_including_vat_title": {
        "type": "text",
        "label": "Total including Vat Title",
        "placeholder": "Total including Vat Title",
        "val": "Total including VAT"
      },
      "label_data.ca.pay_until_title": {
        "type": "text",
        "label": "Pay until Title",
        "placeholder": "Pay until Title",
        "val": "Pay this invoice until"
      },
      "label_data.ca.register_no_title": {
        "type": "text",
        "label": "Register No Title",
        "placeholder": "Register No Title",
        "val": "Register No.:"
      },
      "label_data.ca.register_court_title": {
        "type": "text",
        "label": "Register Court Title",
        "placeholder": "Register Court Title",
        "val": "Register Court:"
      },
      "label_data.ca.iban_title": {
        "type": "text",
        "label": "IBAN Title",
        "placeholder": "IBAN Title",
        "val": "IBAN:"
      },
      "label_data.ca.bic_title": {
        "type": "text",
        "label": "BIC Title",
        "placeholder": "BIC Title",
        "val": "BIC:"
      },
      "label_data.ca.vat_number_title": {
        "type": "text",
        "label": "VAT Number Title",
        "placeholder": "VAT Number Title",
        "val": "VAT Number:"
      },
      "label_data.ca.article_number_title": {
        "type": "text",
        "label": "Article No Title",
        "placeholder": "Article No Title",
        "val": "Article No."
      },
      "label_data.ca.article_description_title": {
        "type": "text",
        "label": "Description Title",
        "placeholder": "Description Title",
        "val": "Description"
      },
      "label_data.ca.article_quantity_title": {
        "type": "text",
        "label": "Quantity Title",
        "placeholder": "Quantity Title",
        "val": "Quantity"
      },
      "label_data.ca.article_unit_title": {
        "type": "text",
        "label": "Article Unit Title",
        "placeholder": "Article Unit Title",
        "val": "Unit"
      },
      "label_data.ca.article_per_item_title": {
        "type": "text",
        "label": "per Item Title",
        "placeholder": "per Item Title",
        "val": "per Item"
      },
      "label_data.ca.article_net_of_vat_title": {
        "type": "text",
        "label": "Net of VAT Title",
        "placeholder": "Net of VAT Title",
        "val": "Net of VAT"
      },
      "label_data.ca.article_total_title": {
        "type": "text",
        "label": "Article Total Title",
        "placeholder": "Article Total Title",
        "val": "Total"
      }
    }
  }
}
,
"/sandbox/test-child-0.json/test-child-0.json": {
	"child": {
		"a": 1,
		"b": 2
	}
}
,
"/sandbox/test-child-1.json/test-child-1.json": {
	"child": {
		"c": 3,
		"d": 4
	}
}
,
"/sandbox/test.json/test.json": {
	"input": {
		"fields": {
			"input_table": {
				"child": {},
				"child.second": {},
				"child.before.second": {
					"child.first": 1,
					"child.second": 2,
					"child.third": 3
				},
				"child.after.first": {
					"child.first": 1,
					"child.second": 2,
					"child.third": 3
				}
			}
		}
	}
}
,
"/sandbox/TriggerOptions.json/TriggerOptions.json": {
  "options_box": {
    "type": "fieldset",
    "label": "Add Trigger",
    "repeat": false,
    "fields": {
		"table_trigger_box": {
			"type": "fieldset",
			"label": "Table Trigger",
			"repeat": false,
			"fields": {
				"trigger_type": {
					"type": "select",
					"label": "Trigger Type",
					"required": true,
					"options": {
						"label_manual": {
						"label": "Manual"
						},
						"label_by_table": {
							"label": "Table"
						},
						"val": "label_manual",
						"breakLine": true
						}
					},		
					"tabel_trigger_label_column": {
						"type": "select",
						"label": "Select Label Column",
						"table": "input_table",
						"bind": "COLUMNS",
						"show_if": "this.trigger_type=='label_by_table'",
						"required": true
					},
					"table_trigger_value_column": {
						"type": "select",
						"label": "Select Value Column",
						"table": "input_table",
						"bind": "COLUMNS",
						"show_if": "this.trigger_type=='label_by_table'",
						"required": true
					}, 
					"table_trigger_manual_label": {
						"type": "fieldset",
						"label": "Set Table Trigger",
						"repeat": true,
						"fields": {
							"task_trigger_label": {
							"type": "text",
							"label": "Label",
							"val": "",
							"breakLine": false
							},
							"table_trigger_manual_value": {
							"type": "text",
							"label": "Value",
							"val": "",
							"breakLine": false
							},
							"delete": {
							"type": "button",
							"label": "Delete",
							"function": "DELETE_ROW"
							}
						}
					}
				}
			},
				"task_trigger_box": {
					"type": "fieldset",
					"label": "Task Trigger",
					"repeat": false,
					"fields": {
						"task_name": {
						"type": "text",
						"label": "Select Task to Run",
						"val": "",
						"breakLine": true
					},	
					"task_trigger": {
						"type": "fieldset",
							"label": "Task Trigger",
							"repeat": true,
							"fields": {
								"task_trigger_label": {
								"type": "text",
								"label": "Label",
								"val": "",
								"breakLine": false
							},
							"task_trigger_value": {
								"type": "text",
								"label": "Value",
								"val": "",
								"breakLine": false
							},
							"delete": {
								"type": "button",
								"label": "Delete",
								"function": "DELETE_ROW"
								}	
							}
						}
					}
				}
			}
		}
}
,
"/sandbox/test-child-2.json/test-child-2.json": {
	"child": {
		"e": 5,
		"f": 6
	}
}
,
"/sandbox/test-child-3.json/test-child-3.json": {
	"child": {
		"g": 7,
		"h": 8
	}
}
,
"/wiki-data/CustomQueryOptions.json/CustomQueryOptions.json": {
  "options": {
    "type": "fieldset",
    "label": "Options",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "options.help": {
        "type": "textarea",
        "label": "",
        "val": "Please refer to https://www.mediawiki.org/wiki/File:Wikidata_Sparql_Query_Tutorial.webm on how to write query",
        "md_no_resize": false,
        "rows": 2,
        "disabled": true,
        "width": "100%"
      },
      "options.use_query_table": {
        "type": "checkbox",
        "label": "Use Query Table",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "options.table_id": {
        "type": "select",
        "label": "Select Query Table",
        "show_if": "options.use_query_table=='true'",
        "bind": "TABLES",
        "empty": "",
        "required": true
      },
      "options.query_column": {
        "type": "select",
        "label": "Select Query Column",
        "show_if": "options.use_query_table=='true'",
        "required": true,
        "table": "options.table_id",
        "bind": "COLUMNS",
        "breakLine": true
      },
      "options.sparql": {
        "type": "textarea",
        "label": "Please input SPARQL Query.",
        "show_if": "options.use_query_table=='false'",
        "val": "SELECT ?Person ?PersonLabel ?BirthPlaceLabel ?BirthDate \nWHERE { \n\t?Person wdt:P69 wd:Q160302 . \n\t?Person wdt:P21 wd:Q6581072 . \n\t?Person wdt:P19 ?BirthPlace . \n\t?BirthPlace wdt:P625 ?Coordinates . \n\t?Person wdt:P569 ?BirthDate . \n\n\tSERVICE wikibase:label { bd:serviceParam wikibase:language 'en' . }\n}",
        "rows": 10,
        "width": "100%"
      },
      "options.output_wiki_entity_url": {
        "type": "checkbox",
        "label": "Output Wiki Entity URL",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
},
"/wiki-data/EdinburghFemaleOptions.json/EdinburghFemaleOptions.json": {
  "options.sparql": {
    "type": "hidden",
    "val": "SELECT ?Person ?PersonLabel ?BirthPlaceLabel ?BirthDate WHERE { ?Person wdt:P69 wd:Q160302 . ?Person wdt:P21 wd:Q6581072 . ?Person wdt:P19 ?BirthPlace . ?BirthPlace wdt:P625 ?Coordinates . ?Person wdt:P569 ?BirthDate . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en' . }}"
  }
},
"/wiki-data/CompanyListOptions.json/CompanyListOptions.json": {
  "options.sparql": {
    "type": "hidden",
    "val": "SELECT ?Company ?CompanyLabel ?HeadquartersLocation ?HeadquartersLocationLabel WHERE { ?Company wdt:P31 wd:Q6881511 ; wdt:P31 wd:Q4830453 ; wdt:P17 wd:Q183. ?Company wdt:P159 ?HeadquartersLocation . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en' . }}"
  }
},
"/common-snippets/FormattingWithKeepCurrent.json/FormattingWithKeepCurrent.json": {
  "options.format__category": {
    "type": "select",
    "label": "Display Format",
    "required": true,
    "options": {
      "keep_current": {
        "label": "Keep Current"
      },
      "standard": {
        "label": "Standard"
      },
      "number": {
        "label": "Number"
      },
      "percentage": {
        "label": "Percentage"
      },
      "text": {
        "label": "Text"
      },
      "date": {
        "label": "Date"
      },
      "currency": {
        "label": "Currency"
      }
    },
    "val": "keep_current"
  },
  "options.format__rounding": {
    "type": "select",
    "label": "Decimal Places for display",
    "show_if": "options.format__category=='number' || options.format__category=='percentage' || options.format__category=='currency'",
    "required": true,
    "options": {
      "no_rounding": {
        "label": "No rounding"
      },
      "0": {
        "label": "0 digits"
      },
      "1": {
        "label": "1 digits"
      },
      "2": {
        "label": "2 digits"
      },
      "3": {
        "label": "3 digits"
      },
      "4": {
        "label": "4 digits"
      },
      "5": {
        "label": "5 digits"
      },
      "6": {
        "label": "6 digits"
      },
      "7": {
        "label": "7 digits"
      },
      "8": {
        "label": "8 digits"
      },
      "9": {
        "label": "9 digits"
      }
    },
    "val": "2"
  },
  "options.format__use_1000_separator": {
    "type": "checkbox",
    "label": "Use 1000 Separator(,)",
    "show_if": "options.format__category=='number' || options.format__category=='percentage' || options.format__category=='currency'",
    "val": "true",
    "isOn": "true",
    "isOff": "false"
  },
  "options.format__currency_symbol": {
    "type": "select",
    "label": "Symbol",
    "show_if": "options.format__category=='currency'",
    "required": true,
    "options": {
      "dollar": {
        "label": "$"
      },
      "euro": {
        "label": "€"
      },
      "pound": {
        "label": "£"
      }
    },
    "val": "dollar"
  },
  "options.format__date_format": {
    "type": "select",
    "label": "Type",
    "show_if": "options.format__category=='date'",
    "required": true,
    "options": {
      "mm/dd/yyyy": {
        "label": "3/14/2012"
      },
      "D, M dd, Y": {
        "label": "Wednesday, March 14, 2012"
      },
      "yyyy-mm-dd": {
        "label": "2012-03-14"
      },
      "m.dd.yyyy": {
        "label": "3.14.2012"
      },
      "m.dd.yy": {
        "label": "3.14.12"
      },
      "dd.m.yyyy": {
        "label": "14.3.2012"
      },
      "dd.m.yy": {
        "label": "14.3.12"
      },
      "M dd, Y": {
        "label": "March 14, 2012"
      },
      "dd-mm-yyyy": {
        "label": "14-03-2012"
      },
      "mm-dd-yyyy": {
        "label": "03-14-2012"
      },
      "dd-mm-yy": {
        "label": "14-03-12"
      },
      "mm-dd-yy": {
        "label": "03-14-12"
      }
    },
    "val": "mm/dd/yyyy",
    "breakLine": true
  }
}
,
"/common-snippets/TrackerOutput.json/TrackerOutput.json": {
  "output": {
    "type": "fieldset",
    "label": "Define Output Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "output.custom_text": {
        "type": "text",
        "label": "Output Table Name",
        "show_if": "output.custom_options=='false' || (output.custom_options=='true' && output.compose_table_name=='false')",
        "minLength": 1,
        "val": "Note Tracker",
        "width": "100%",
        "breakLine": true
      },
      "output.custom_options": {
        "type": "checkbox",
        "label": "Output Options",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "output.compose_table_name": {
        "type": "checkbox",
        "label": "Compose Table Name",
        "show_if": "output.custom_options=='true'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "compose_table_name_frame": {
        "type": "fieldset",
        "label": "Compose Output Table Name",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "output.custom_options=='true' && output.compose_table_name=='true'",
        "repeat": false,
        "fields": {
          "output.prefix_rule": {
            "type": "select",
            "label": "Prefix",
            "show_if": "output.compose_table_name=='true'",
            "val": "empty",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.prefix_text": {
            "type": "text",
            "label": "Prefix Text",
            "show_if": "output.compose_table_name=='true' && output.prefix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "output.core_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "show_if": "output.compose_table_name=='true' && output.prefix_rule!='empty'",
            "val": "_",
            "width": "50px"
          },
          "output.core_rule": {
            "type": "select",
            "label": "Table Name",
            "show_if": "output.compose_table_name=='true'",
            "val": "input_table_name",
            "options": {
              "input_table_name": {
                "label": "Input Table Name"
              },
              "script_name": {
                "label": "Task Name"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.core_text": {
            "type": "text",
            "label": "Main Table Name",
            "show_if": "output.compose_table_name=='true' && output.core_rule=='custom'",
            "required": true,
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "output.suffix_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "show_if": "output.compose_table_name=='true'",
            "val": "_",
            "width": "50px"
          },
          "output.suffix_rule": {
            "type": "select",
            "label": "Suffix",
            "show_if": "output.compose_table_name=='true'",
            "val": "script_name",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.suffix_text": {
            "type": "text",
            "label": "Suffix Text",
            "show_if": "output.compose_table_name=='true' && output.suffix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": "",
            "breakLine": true
          },
          "output.timezone": {
            "type": "select",
            "label": "Timezone",
            "show_if": "output.compose_table_name=='true' && (output.prefix_rule=='date_string_type1' || output.prefix_rule=='date_string_type2' || output.prefix_rule=='time_string' || output.prefix_rule=='datetime_string' || output.suffix_rule=='date_string_type1' || output.suffix_rule=='date_string_type2' || output.suffix_rule=='time_string' || output.suffix_rule=='datetime_string')",
            "val": "Europe/Berlin",
            "required": true,
            "options": {
              "America/Adak": {
                "label": "Adak, Gambier"
              },
              "Australia/Adelaide": {
                "label": "Adelaide, Broken Hill, Darwin"
              },
              "America/Anchorage": {
                "label": "Anchorage, Juneau, Sitka"
              },
              "Pacific/Apia": {
                "label": "Apia, Asau, Mulifanua, Afega, Leulumoega"
              },
              "Pacific/Enderbury": {
                "label": "Apia, Fiji, Tongatapu"
              },
              "Antarctica/McMurdo": {
                "label": "Auckland, Casey, Davis"
              },
              "Pacific/Auckland": {
                "label": "Auckland, Wellington, Christchurch"
              },
              "Asia/Bangkok": {
                "label": "Bangkok, Jakarta, Novosibirsk"
              },
              "Europe/Berlin": {
                "label": "Berlin, Paris, Amsterdam"
              },
              "Australia/Perth": {
                "label": "Brunei, Singapore, Perth"
              },
              "Atlantic/Cape_Verde": {
                "label": "Cape Verde,Praia, Mindelo, Santa Maria"
              },
              "America/Belize": {
                "label": "Costa Rica, El Salvador, Denver"
              },
              "Antarctica/Vostok": {
                "label": "Dhaka, Bishkek, Omsk"
              },
              "Europe/Astrakhan": {
                "label": "Dubai, Baku, Tbilisi"
              },
              "Australia/Eucla": {
                "label": "Eucla"
              },
              "Pacific/Honolulu": {
                "label": "Honolulu, Rarotonga, Tahiti"
              },
              "Asia/Kabul": {
                "label": "Kabul, Kandahār, Mazār-e Sharīf, Herāt, Jalālābād"
              },
              "Asia/Aqtau": {
                "label": "Karachi, Tashkent, Maldives"
              },
              "Asia/Kathmandu": {
                "label": "Kathmandu, Pokhara, Pātan, Biratnagar"
              },
              "Pacific/Kiritimati": {
                "label": "Kiritimati"
              },
              "Asia/Colombo": {
                "label": "Kolkata, Colombo, Jaffna, Negombo"
              },
              "Europe/Guernsey": {
                "label": "London, Dublin, Lisbon"
              },
              "Australia/Lord_Howe": {
                "label": "Lord Howe"
              },
              "America/Creston": {
                "label": "Los Angeles, Vancouver, Hermosillo"
              },
              "Pacific/Marquesas": {
                "label": "Marquesas, Taiohae"
              },
              "America/Cayman": {
                "label": "Mexico City, Panama, Chicago"
              },
              "Pacific/Niue": {
                "label": "Midway, Niue, Pago Pago"
              },
              "Europe/Mariehamn": {
                "label": "Moscow, Istanbul, Qatar"
              },
              "Asia/Kolkata": {
                "label": "Mumbai, Delhi, Bengaluru, Kolkata, Chennai"
              },
              "America/Miquelon": {
                "label": "Noronha, Nuuk, Miquelon"
              },
              "America/Danmarkshavn": {
                "label": "Reykjavik, Dakar, Casablanca"
              },
              "Pacific/Bougainville": {
                "label": "Sakhalin, Norfolk, Bougainville"
              },
              "America/Araguaina": {
                "label": "Sao Paulo, Buenos Aires, Montevideo"
              },
              "America/St_Johns": {
                "label": "St. Johns, Mount Pearl, Corner Brook"
              },
              "Asia/Tehran": {
                "label": "Tehran, Mashhad, Isfahan, Karaj, Tabriz"
              },
              "Asia/Tokyo": {
                "label": "Tokyo, Seoul, Jayapura"
              },
              "America/New_York": {
                "label": "Toronto, Santiago, New York"
              },
              "Australia/Sydney": {
                "label": "Vladivostok, Sydney, Brisbane"
              },
              "Asia/Yangon": {
                "label": "Yangon, Cocos, Mandalay, Nay Pyi Taw, Mawlamyine"
              },
              "Indian/Cocos": {
                "label": "Yangon, Cocos, West Island"
              }
            },
            "breakLine": true
          }
        }
      }
    }
  }
},
"/common-snippets/SelectTablesWithColumnsRows.json/SelectTablesWithColumnsRows.json": {
  "input": {
    "type": "fieldset",
    "label": "Select Input Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "input_table1_table_id": {
        "type": "select",
        "label": "Select Table1",
        "bind": "TABLES",
        "empty": "",
        "required": true,
        "breakLine": true
      },
      "apply_to_all_columns1": {
        "type": "checkbox",
        "label": "All Columns",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "apply_columns1": {
        "type": "select",
        "label": "Select Columns to Apply",
        "show_if": "apply_to_all_columns1=='false'",
        "required": true,
        "table": "input_table1_table_id",
        "multiple": true,
        "bind": "COLUMNS",
        "breakLine": true
      },
      "apply_to_all_rows1": {
        "type": "checkbox",
        "label": "All Rows",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "apply_rows1": {
        "type": "select",
        "label": "Select Rows to Apply",
        "show_if": "apply_to_all_rows1=='false'",
        "required": true,
        "table": "input_table1_table_id",
        "multiple": true,
        "bind": "LABELS",
        "breakLine": true
      },
      "input_table2_table_id": {
        "type": "select",
        "label": "Select Table2",
        "bind": "TABLES",
        "empty": "",
        "required": true,
        "breakLine": true
      },
      "apply_to_all_columns2": {
        "type": "checkbox",
        "label": "All Columns",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "apply_columns2": {
        "type": "select",
        "label": "Select Columns to Apply",
        "show_if": "apply_to_all_columns2=='false'",
        "required": true,
        "table": "input_table2_table_id",
        "multiple": true,
        "bind": "COLUMNS",
        "breakLine": true
      },
      "apply_to_all_rows2": {
        "type": "checkbox",
        "label": "All Rows",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "apply_rows2": {
        "type": "select",
        "label": "Select Rows to Apply",
        "show_if": "apply_to_all_rows2=='false'",
        "required": true,
        "table": "input_table2_table_id",
        "multiple": true,
        "bind": "LABELS",
        "breakLine": true
      }
    }
  }
},
"/common-snippets/SelectOutputColumnWithTableWithoutSort.json/SelectOutputColumnWithTableWithoutSort.json": {
  "output.select_output_columns": {
    "type": "checkbox",
    "label": "Select Output Columns",
    "show_if": "output.custom_options=='true'",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "style": "margin-top: 10px"
  },
  "output_columns": {
    "type": "fieldset",
    "label": "Select Output Columns",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.custom_options=='true' && output.select_output_columns=='true'",
    "repeat": true,
    "fields": {
      "table_id": {
        "type": "select",
        "label": "Select Table",
        "bind": "TABLES",
        "required": true
      },
      "field_name": {
        "type": "select",
        "label": "Select Column",
        "table": "this.table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "is_rename": {
        "type": "checkbox",
        "label": "Rename",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "rename": {
        "show_if": "this.is_rename == 'true'",
        "type": "text",
        "required": true,
        "minLength": 1,
        "maxLength": 255,
        "label": "New Column Name",
        "style": "margin-left: 10px"
      },
      "format__category": {
        "type": "select",
        "label": "Display Format",
        "required": true,
        "options": {
          "standard": {
            "label": "Standard"
          },
          "number": {
            "label": "Number"
          },
          "percentage": {
            "label": "Percentage"
          },
          "text": {
            "label": "Text"
          },
          "date": {
            "label": "Date"
          },
          "currency": {
            "label": "Currency"
          }
        },
        "val": "standard"
      },
      "format__rounding": {
        "type": "select",
        "label": "Decimal Places for display",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "required": true,
        "options": {
          "no_rounding": {
            "label": "No rounding"
          },
          "0": {
            "label": "0 digits"
          },
          "1": {
            "label": "1 digits"
          },
          "2": {
            "label": "2 digits"
          },
          "3": {
            "label": "3 digits"
          },
          "4": {
            "label": "4 digits"
          },
          "5": {
            "label": "5 digits"
          },
          "6": {
            "label": "6 digits"
          },
          "7": {
            "label": "7 digits"
          },
          "8": {
            "label": "8 digits"
          },
          "9": {
            "label": "9 digits"
          }
        },
        "val": "2"
      },
      "format__use_1000_separator": {
        "type": "checkbox",
        "label": "Use 1000 Separator(.)",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "format__currency_symbol": {
        "type": "select",
        "label": "Symbol",
        "show_if": "this.format__category=='currency'",
        "required": true,
        "options": {
          "dollar": {
            "label": "$"
          },
          "euro": {
            "label": "€"
          },
          "pound": {
            "label": "£"
          },
          "yen": {
            "label": "¥ (Yen, currency of Japan)"
          },
          "colon": {
            "label": "₡ (Colón, currency of Costa Rica)"
          },
          "naira": {
            "label": "₦ (Naira, currency of Nigeria)"
          },
          "rupee": {
            "label": "₨ (Rupee, currency of India)"
          },
          "rupie": {
            "label": "₹ (Rupee, currency of India)"
          },
          "won": {
            "label": "₩ (Won, currency in South Korea and North Korea)"
          },
          "hebrew": {
            "label": "₪ (Currency of Israel)"
          },
          "dong": {
            "label": "₫ (Currency of Vietnam)"
          },
          "kip": {
            "label": "₭ (Kip, currency of Laos)"
          },
          "mongolia": {
            "label": "₮ (Currency of Mongolia)"
          },
          "peso": {
            "label": "₱ (Peso, currency of the Philippines)"
          },
          "guarani": {
            "label": "₲ (Guaraní, currency of Paraguay)"
          },
          "hryvnia": {
            "label": "₴ (Hryvnia, currency of Ukraine)"
          },
          "tenge": {
            "label": "₸ (Tenge, currency of Kazakhstan)"
          },
          "lira": {
            "label": "₺ (Lira, currency of Turkey)"
          },
          "manat": {
            "label": "₼ (Manat, currency of Azerbaijan)"
          },
          "rubles": {
            "label": "₽ (Rubles, currency of Russia)"
          },
          "lari": {
            "label": "₾ (Lari, currency of Georgia)"
          },
          "bitcoin": {
            "label": "₿ (Bitcoin, crypto currency)"
          }
        },
        "val": "dollar"
      },
      "format__date_format": {
        "type": "select",
        "label": "Type",
        "show_if": "this.format__category=='date'",
        "required": true,
        "options": {
          "mm/dd/yyyy": {
            "label": "3/14/2012"
          },
          "D, M dd, Y": {
            "label": "Wednesday, March 14, 2012"
          },
          "yyyy-mm-dd": {
            "label": "2012-03-14"
          },
          "m.dd.yyyy": {
            "label": "3.14.2012"
          },
          "m.dd.yy": {
            "label": "3.14.12"
          },
          "dd.m.yyyy": {
            "label": "14.3.2012"
          },
          "dd.m.yy": {
            "label": "14.3.12"
          },
          "M dd, Y": {
            "label": "March 14, 2012"
          },
          "dd-mm-yyyy": {
            "label": "14-03-2012"
          },
          "mm-dd-yyyy": {
            "label": "03-14-2012"
          },
          "dd-mm-yy": {
            "label": "14-03-12"
          },
          "mm-dd-yy": {
            "label": "03-14-12"
          }
        },
        "val": "mm/dd/yyyy",
        "breakLine": true
      },
      "delete": {
        "type": "button",
        "label": "Delete",
        "function": "DELETE_ROW"
      }
    },
    "breakLine": true,
    "style": "margin-bottom: 20px"
  }
},
"/common-snippets/SelectColumnOnly.json/SelectColumnOnly.json": {
  "placeholder": {
    "breakLine": true
  },
  "apply_to_all_columns": {
    "type": "checkbox",
    "label": "All Columns",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  },
  "apply_columns": {
    "type": "select",
    "label": "Select Columns to Apply",
    "width": "100%",
    "table": "table_id",
    "multiple": true,
    "bind": "COLUMNS",
    "breakLine": true
  }
}
,
"/common-snippets/IfTableExist.json/IfTableExist.json": {
  "output.if_table_exist.type": {
    "type": "select",
    "label": "If existing",
    "show_if": "output.custom_options=='true'",
    "val": "drop_if_exist",
    "options": {
      "drop_if_exist": {
        "label": "Create or Drop (if already existing)"
      },
      "error_if_exist": {
        "label": "Create New (throw error if existing)"
      },
      "error_if_not_exist": {
        "label": "Drop (throw error if not-existing)"
      },
      "append_all": {
        "label": "Append All"
      },
      "append_not_existing": {
        "label": "Append not existing"
      },
      "append_changes": {
        "label": "Append changes"
      }
    }
  },
  "output.if_table_exist.append_not_existing_cols": {
    "type": "select",
    "label": "Select Column(s)",
    "show_if": "output.if_table_exist.type=='append_not_existing'",
    "table": "table_id",
    "bind": "COLUMNS",
    "multiple": true,
    "required": true,
    "breakLine": true
  },
  "output.if_table_exist.append_changes__add_timestamp": {
    "type": "checkbox",
    "label": "Add Timestamp",
    "show_if": "output.if_table_exist.type=='append_changes'",
    "val": "false",
    "isOn": "true",
    "isOff": "false"
  },
  "output.if_table_exist.append_changes__timestamp_colname": {
    "type": "text",
    "label": "Timestamp column name",
    "show_if": "output.if_table_exist.type=='append_changes' && output.if_table_exist.append_changes__add_timestamp=='true'",
    "val": "Timestamp",
    "required": true,
    "breakLine": true
  },
  "output.if_table_exist.append_changes__add_row": {
    "type": "checkbox",
    "label": "Add Row",
    "show_if": "output.if_table_exist.type=='append_changes'",
    "val": "false",
    "isOn": "true",
    "isOff": "false"
  },
  "output.if_table_exist.append_changes__row_colname": {
    "type": "text",
    "label": "Row column name",
    "show_if": "output.if_table_exist.type=='append_changes' && output.if_table_exist.append_changes__add_row=='true'",
    "val": "Row",
    "required": true,
    "breakLine": true
  },
  "append_not_existing_info1": {
    "type": "text",
    "label": "",
    "show_if": "output.if_table_exist.type=='append_not_existing'",
    "val": "Appends rows only if the value of the",
    "disabled": true,
    "style": "width: 100%"
  },
  "append_not_existing_info2": {
    "type": "text",
    "label": "",
    "show_if": "output.if_table_exist.type=='append_not_existing'",
    "val": "selected column is new in the existing table.",
    "disabled": true,
    "style": "width: 100%"
  },
  "append_not_existing_info3": {
    "type": "text",
    "label": "",
    "show_if": "output.if_table_exist.type=='append_not_existing'",
    "val": "It is assumed that the selected column",
    "disabled": true,
    "style": "width: 100%"
  },
  "append_not_existing_info4": {
    "type": "text",
    "label": "",
    "show_if": "output.if_table_exist.type=='append_not_existing'",
    "val": "is found in the output and existing table",
    "disabled": true,
    "style": "width: 100%"
  }
}
,
"/common-snippets/Years.json/Years.json": {
  "options.sel_year": {
    "type": "select",
    "label": "Select year",
    "required": true,
    "options": {
      "1960": {
        "label": "1960"
      },
      "1961": {
        "label": "1961"
      },
      "1962": {
        "label": "1962"
      },
      "1963": {
        "label": "1963"
      },
      "1964": {
        "label": "1964"
      },
      "1965": {
        "label": "1965"
      },
      "1966": {
        "label": "1966"
      },
      "1967": {
        "label": "1967"
      },
      "1968": {
        "label": "1968"
      },
      "1969": {
        "label": "1969"
      },
      "1970": {
        "label": "1970"
      },
      "1971": {
        "label": "1971"
      },
      "1972": {
        "label": "1972"
      },
      "1973": {
        "label": "1973"
      },
      "1974": {
        "label": "1974"
      },
      "1975": {
        "label": "1975"
      },
      "1976": {
        "label": "1976"
      },
      "1977": {
        "label": "1977"
      },
      "1978": {
        "label": "1978"
      },
      "1979": {
        "label": "1979"
      },
      "1980": {
        "label": "1980"
      },
      "1981": {
        "label": "1981"
      },
      "1982": {
        "label": "1982"
      },
      "1983": {
        "label": "1983"
      },
      "1984": {
        "label": "1984"
      },
      "1985": {
        "label": "1985"
      },
      "1986": {
        "label": "1986"
      },
      "1987": {
        "label": "1987"
      },
      "1988": {
        "label": "1988"
      },
      "1989": {
        "label": "1989"
      },
      "1990": {
        "label": "1990"
      },
      "1991": {
        "label": "1991"
      },
      "1992": {
        "label": "1992"
      },
      "1993": {
        "label": "1993"
      },
      "1994": {
        "label": "1994"
      },
      "1995": {
        "label": "1995"
      },
      "1996": {
        "label": "1996"
      },
      "1997": {
        "label": "1997"
      },
      "1998": {
        "label": "1998"
      },
      "1999": {
        "label": "1999"
      },
      "2000": {
        "label": "2000"
      },
      "2001": {
        "label": "2001"
      },
      "2002": {
        "label": "2002"
      },
      "2003": {
        "label": "2003"
      },
      "2004": {
        "label": "2004"
      },
      "2005": {
        "label": "2005"
      },
      "2006": {
        "label": "2006"
      },
      "2007": {
        "label": "2007"
      },
      "2008": {
        "label": "2008"
      },
      "2009": {
        "label": "2009"
      },
      "2010": {
        "label": "2010"
      },
      "2011": {
        "label": "2011"
      },
      "2012": {
        "label": "2012"
      },
      "2013": {
        "label": "2013"
      },
      "2014": {
        "label": "2014"
      },
      "2015": {
        "label": "2015"
      },
      "2016": {
        "label": "2016"
      },
      "2017": {
        "label": "2017"
      },
      "2018": {
        "label": "2018"
      },
      "2019": {
        "label": "2019"
      },
      "2020": {
        "label": "2020"
      },
      "2021": {
        "label": "2021"
      },
      "2022": {
        "label": "2022"
      }
    },
    "val": "2020",
    "breakLine": true
  }
},
"/common-snippets/FormattingWithKeepCurrentInRepeat.json/FormattingWithKeepCurrentInRepeat.json": {
  "format__category": {
    "type": "select",
    "label": "Display Format",
    "required": true,
    "options": {
      "keep_current": {
        "label": "Keep Current"
      },
      "standard": {
        "label": "Standard"
      },
      "number": {
        "label": "Number"
      },
      "percentage": {
        "label": "Percentage"
      },
      "text": {
        "label": "Text"
      },
      "date": {
        "label": "Date"
      },
      "currency": {
        "label": "Currency"
      }
    },
    "val": "keep_current"
  },
  "format__rounding": {
    "type": "select",
    "label": "Decimal Places for display",
    "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
    "required": true,
    "options": {
      "no_rounding": {
        "label": "No rounding"
      },
      "0": {
        "label": "0 digits"
      },
      "1": {
        "label": "1 digits"
      },
      "2": {
        "label": "2 digits"
      },
      "3": {
        "label": "3 digits"
      },
      "4": {
        "label": "4 digits"
      },
      "5": {
        "label": "5 digits"
      },
      "6": {
        "label": "6 digits"
      },
      "7": {
        "label": "7 digits"
      },
      "8": {
        "label": "8 digits"
      },
      "9": {
        "label": "9 digits"
      }
    },
    "val": "2"
  },
  "format__use_1000_separator": {
    "type": "checkbox",
    "label": "Use 1000 Separator(,)",
    "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
    "val": "true",
    "isOn": "true",
    "isOff": "false"
  },
  "format__currency_symbol": {
    "type": "select",
    "label": "Symbol",
    "show_if": "this.format__category=='currency'",
    "required": true,
    "options": {
      "dollar": {
        "label": "$"
      },
      "euro": {
        "label": "€"
      },
      "pound": {
        "label": "£"
      }
    },
    "val": "dollar"
  },
  "format__date_format": {
    "type": "select",
    "label": "Type",
    "show_if": "this.format__category=='date'",
    "required": true,
    "options": {
      "mm/dd/yyyy": {
        "label": "3/14/2012"
      },
      "D, M dd, Y": {
        "label": "Wednesday, March 14, 2012"
      },
      "yyyy-mm-dd": {
        "label": "2012-03-14"
      },
      "m.dd.yyyy": {
        "label": "3.14.2012"
      },
      "m.dd.yy": {
        "label": "3.14.12"
      },
      "dd.m.yyyy": {
        "label": "14.3.2012"
      },
      "dd.m.yy": {
        "label": "14.3.12"
      },
      "M dd, Y": {
        "label": "March 14, 2012"
      },
      "dd-mm-yyyy": {
        "label": "14-03-2012"
      },
      "mm-dd-yyyy": {
        "label": "03-14-2012"
      },
      "dd-mm-yy": {
        "label": "14-03-12"
      },
      "mm-dd-yy": {
        "label": "03-14-12"
      }
    },
    "val": "mm/dd/yyyy",
    "breakLine": true
  }
}
,
"/common-snippets/AdvancedSelectTables.json/AdvancedSelectTables.json": {
  "input_table_options": {
    "type": "fieldset",
    "label": "Specify Input Tables",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "breakLine": true,
    "repeat": false,
    "fields": {
      "options.select_type": {
        "type": "select",
        "label": "Select Type",
        "required": true,
        "options": {
          "table_selection": {
            "label": "Table Selection"
          },
          "select_by_pattern": {
            "label": "Select by Pattern"
          }
        },
        "val": "table_selection"
      },
      "options.table_ids": {
        "type": "select",
        "label": "Select Tables",
        "bind": "TABLES",
        "empty": "",
        "multiple": true,
        "show_if": "options.select_type=='table_selection'",
        "required": true
      },
      "options.filter_params": {
        "type": "fieldset",
        "label": "Match tables",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "options.select_type=='select_by_pattern'",
        "breakLine": true,
        "repeat": true,
        "fields": {
          "keyword": {
            "type": "text",
            "label": "Enter Keyword",
            "required": true,
            "val": ""
          },
          "filter_target": {
            "type": "select",
            "label": "Filter on",
            "required": true,
            "options": {
              "table_name": {
                "label": "Table Name"
              },
              "table_tag": {
                "label": "Table Tag"
              }
            },
            "val": "table_name"
          },
          "filter_type": {
            "type": "select",
            "label": "Filter type",
            "required": true,
            "options": {
              "equal": {
                "label": "Equal"
              },
              "contain": {
                "label": "Contains"
              },
              "start_with": {
                "label": "Starts With"
              },
              "end_with": {
                "label": "Ends With"
              },
              "regex": {
                "label": "Regular Expression"
              }
            },
            "val": "equal"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      }
    }
  }
}
,
"/common-snippets/SelectInputTables.json/SelectInputTables.json": {
  "input": {
    "type": "fieldset",
    "label": "Select Input Tables",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "input_table1_table_id": {
        "type": "select",
        "label": "Select Table",
        "bind": "TABLES",
        "empty": "",
        "required": true
      },
      "input_table2_table_id": {
        "type": "select",
        "label": "Select Table",
        "bind": "TABLES",
        "empty": "",
        "required": true
      },
      "remove_input_table_after_processing": {
        "type": "hidden",
        "val": "false"
      },
      "is_word": {
        "type": "hidden",
        "val": "false"
      }
    }
  }
}
,
"/common-snippets/SelectTables.json/SelectTables.json": {
  "input": {
    "type": "fieldset",
    "label": "Select Input Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "configure_input_tables": {
        "type": "select",
        "label": "Select Source",
        "options": {
          "zippydoc_table": {
            "label": "Flow Table"
          },
          "search_tables": {
            "label": "Search Tables"
          }
        },
        "val": "zippydoc_table"
      },
      "search_tables__types": {
        "type": "select",
        "label": "Select Source",
        "show_if": "configure_input_tables=='search_tables'",
        "options": {
          "owned_tables": {
            "label": "Owned tables"
          },
          "shared_tables": {
            "label": "Shared tables"
          },
          "published_tables": {
            "label": "Published tables"
          }
        },
        "multiple": true,
        "val": ["owned_tables"]
      },
      "tables": {
        "type": "fieldset",
        "label": "Select Tables",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "configure_input_tables=='zippydoc_table'",
        "repeat": true,
        "fields": {
          "table_id": {
            "type": "select",
            "label": "Select Table",
            "bind": "TABLES"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "input_table_condition": {
        "type": "fieldset",
        "label": "Search Tables",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "configure_input_tables=='search_tables'",
        "repeat": true,
        "fields": {
          "initial_op": {
            "type": "select",
            "label": "Logic Operator",
            "required": true,
            "show_if" :  "$index == 0",
            "options": {
              "if": {
                "label": "IF"
              },
              "if_not": {
                "label": "IF NOT"
              }
            },
            "val": "if"
          },
          "op": {
            "type": "select",
            "label": "Logic Operator",
            "required": true,
            "show_if" :  "$index > 0",
            "options": {
              "and": {
                "label": "AND"
              },
              "or": {
                "label": "OR"
              },
              "and_not": {
                "label": "AND NOT"
              },
              "or_not": {
                "label": "OR NOT"
              }
            },
            "val": "and"
          },
          "type": {
            "type": "select",
            "label": "Type",
            "required": true,
            "options": {
              "Table Name": {
                "label": "Table Name"
              },
              "Tags": {
                "label": "Tags"
              }
            },
            "val": "Table Name"
          },
          "rows": {
            "type": "select",
            "label": "Condition",
            "show_if": "this.type == 'Tags'",
            "required": true,
            "options": {
              "All Tags": {
                "label": "All Tags"
              },
              "Some Tags": {
                "label": "Some Tags"
              }
            },
            "val": "Some Tags"
          },
          "condition": {
            "type": "select",
            "label": "Operator",
            "required": true,
            "options": {
              "CONTAINS": {
                "label": "CONTAINS"
              },
              "CONTAINED IN STRING": {
                "label": "CONTAINED IN"
              },
              "STARTS WITH": {
                "label": "STARTS WITH"
              },
              "ENDS WITH": {
                "label": "ENDS WITH"
              },
              "=": {
                "label": "EQUAL"
              },
              "REGEX MATCH": {
                "label": "REGEX MATCH"
              }
            },
            "val": "CONTAINS"
          },
          "value": {
            "type": "text",
            "label": "Input Value",
            "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "val": "",
            "required": true
          },
          "case_sensitive": {
            "type": "select",
            "label": "Case Sensitive",
            "required": true,
            "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "options": {
              "yes": {
                "label": "Case Sensitive"
              },
              "no": {
                "label": "Case Insensitive"
              }
            },
            "val": "yes"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      }
    }
  }
},
"/common-snippets/Debug.json/Debug.json": {
  "debug": {
    "type": "debug"
  }
}
,
"/common-snippets/SelectColumnOnlyN.json/SelectColumnOnlyN.json": {
  "placeholder": {
    "breakLine": true
  },
  "apply_columns_frame": {
    "type": "fieldset",
    "label": "Select column(s) to apply",
    "repeat": false,
    "fields": {
      "apply_to_all_columns": {
        "type": "checkbox",
        "label": "All Columns",
        "show_if": "false",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "apply_columns__all_but_selected": {
        "type": "checkbox",
        "label": "All but selected",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "apply_columns": {
        "type": "select",
        "label": "Select Columns to Apply",
        "width": "100%",
        "table": "table_id",
        "multiple": true,
        "bind": "COLUMNS",
        "breakLine": true
      }
    }
  }
}
,
"/common-snippets/IfTableExistWithoutAppendNotExisting.json/IfTableExistWithoutAppendNotExisting.json": {
  "output.if_table_exist.type": {
    "type": "select",
    "label": "If existing",
    "show_if": "output.custom_options=='true'",
    "val": "drop_if_exist",
    "options": {
      "drop_if_exist": {
        "label": "Create or Drop (if already existing)"
      },
      "error_if_exist": {
        "label": "Create New (throw error if existing)"
      },
      "error_if_not_exist": {
        "label": "Drop (throw error if not-existing)"
      },
      "append_all": {
        "label": "Append All"
      },
      "append_changes": {
        "label": "Append changes"
      }
    },
    "breakLine": true
  },
  "output.if_table_exist.append_changes__add_timestamp": {
    "type": "checkbox",
    "label": "Add Timestamp",
    "show_if": "output.if_table_exist.type=='append_changes'",
    "val": "false",
    "isOn": "true",
    "isOff": "false"
  },
  "output.if_table_exist.append_changes__timestamp_colname": {
    "type": "text",
    "label": "Timestamp column name",
    "show_if": "output.if_table_exist.type=='append_changes' && output.if_table_exist.append_changes__add_timestamp=='true'",
    "val": "Timestamp",
    "required": true,
    "breakLine": true
  },
  "output.if_table_exist.append_changes__add_row": {
    "type": "checkbox",
    "label": "Add Row",
    "show_if": "output.if_table_exist.type=='append_changes'",
    "val": "false",
    "isOn": "true",
    "isOff": "false"
  },
  "output.if_table_exist.append_changes__row_colname": {
    "type": "text",
    "label": "Row column name",
    "show_if": "output.if_table_exist.type=='append_changes' && output.if_table_exist.append_changes__add_row=='true'",
    "val": "Row",
    "required": true,
    "breakLine": true
  }
}
,
"/common-snippets/IfTableExistWithAppendAllDefault.json/IfTableExistWithAppendAllDefault.json": {
  "output.if_table_exist.type": {
    "type": "select",
    "label": "If existing",
    "show_if": "output.custom_options=='true'",
    "val": "append_all",
    "options": {
      "drop_if_exist": {
        "label": "Create or Drop (if already existing)"
      },
      "append_all": {
        "label": "Append All"
      }
    }
  },
  "output.if_table_exist.append_not_existing_cols": {
    "type": "select",
    "label": "Select Column(s)",
    "show_if": "output.if_table_exist.type=='append_not_existing'",
    "table": "table_id",
    "bind": "COLUMNS",
    "multiple": true,
    "required": true,
    "breakLine": true
  },
  "output.if_table_exist.append_changes__add_timestamp": {
    "type": "checkbox",
    "label": "Add Timestamp",
    "show_if": "output.if_table_exist.type=='append_changes'",
    "val": "false",
    "isOn": "true",
    "isOff": "false"
  },
  "output.if_table_exist.append_changes__timestamp_colname": {
    "type": "text",
    "label": "Timestamp column name",
    "show_if": "output.if_table_exist.type=='append_changes' && output.if_table_exist.append_changes__add_timestamp=='true'",
    "val": "Timestamp",
    "required": true,
    "breakLine": true
  },
  "output.if_table_exist.append_changes__add_row": {
    "type": "checkbox",
    "label": "Add Row",
    "show_if": "output.if_table_exist.type=='append_changes'",
    "val": "false",
    "isOn": "true",
    "isOff": "false"
  },
  "output.if_table_exist.append_changes__row_colname": {
    "type": "text",
    "label": "Row column name",
    "show_if": "output.if_table_exist.type=='append_changes' && output.if_table_exist.append_changes__add_row=='true'",
    "val": "Row",
    "required": true,
    "breakLine": true
  },
  "append_not_existing_info1": {
    "type": "text",
    "label": "",
    "show_if": "output.if_table_exist.type=='append_not_existing'",
    "val": "Appends rows only if the value of the",
    "disabled": true,
    "style": "width: 100%"
  },
  "append_not_existing_info2": {
    "type": "text",
    "label": "",
    "show_if": "output.if_table_exist.type=='append_not_existing'",
    "val": "selected column is new in the existing table.",
    "disabled": true,
    "style": "width: 100%"
  },
  "append_not_existing_info3": {
    "type": "text",
    "label": "",
    "show_if": "output.if_table_exist.type=='append_not_existing'",
    "val": "It is assumed that the selected column",
    "disabled": true,
    "style": "width: 100%"
  },
  "append_not_existing_info4": {
    "type": "text",
    "label": "",
    "show_if": "output.if_table_exist.type=='append_not_existing'",
    "val": "is found in the output and existing table",
    "disabled": true,
    "style": "width: 100%"
  }
}
,
"/common-snippets/PdfOutput.json/PdfOutput.json": {
  "output": {
    "type": "fieldset",
    "label": "Define Output PDF Name",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "options.where_to_create!='only_open_in_browser'",
    "repeat": false,
    "fields": {
      "output.custom_text": {
        "type": "text",
        "label": "Output Table Name",
        "show_if": "output.custom_options=='false' || (output.custom_options=='true' && output.compose_table_name=='false')",
        "minLength": 1,
        "val": "",
        "width": "100%",
        "breakLine": true
      },
      "output.custom_options": {
        "type": "hidden",
        "val": "true"
      },
      "output.compose_table_name": {
        "type": "checkbox",
        "label": "Compose PDF Name",
        "show_if": "output.custom_options=='true'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "compose_table_name_frame": {
        "type": "fieldset",
        "label": "Compose Output PDF Name",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "output.custom_options=='true' && output.compose_table_name=='true'",
        "repeat": false,
        "fields": {
          "output.prefix_rule": {
            "type": "select",
            "label": "Prefix",
            "show_if": "output.compose_table_name=='true'",
            "val": "empty",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.prefix_text": {
            "type": "text",
            "label": "Prefix Text",
            "show_if": "output.compose_table_name=='true' && output.prefix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "output.core_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "show_if": "output.compose_table_name=='true' && output.prefix_rule!='empty'",
            "val": "_",
            "width": "50px"
          },
          "output.core_rule": {
            "type": "select",
            "label": "Table Name",
            "show_if": "output.compose_table_name=='true'",
            "val": "input_table_name",
            "options": {
              "script_name": {
                "label": "Task Name"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.core_text": {
            "type": "text",
            "label": "Main Table Name",
            "show_if": "output.compose_table_name=='true' && output.core_rule=='custom'",
            "required": true,
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "output.suffix_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "show_if": "output.compose_table_name=='true'",
            "val": "_",
            "width": "50px"
          },
          "output.suffix_rule": {
            "type": "select",
            "label": "Suffix",
            "show_if": "output.compose_table_name=='true'",
            "val": "script_name",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.suffix_text": {
            "type": "text",
            "label": "Suffix Text",
            "show_if": "output.compose_table_name=='true' && output.suffix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": "",
            "breakLine": true
          },
          "output.timezone": {
            "type": "select",
            "label": "Timezone",
            "show_if": "output.compose_table_name=='true' && (output.prefix_rule=='date_string_type1' || output.prefix_rule=='date_string_type2' || output.prefix_rule=='time_string' || output.prefix_rule=='datetime_string' || output.suffix_rule=='date_string_type1' || output.suffix_rule=='date_string_type2' || output.suffix_rule=='time_string' || output.suffix_rule=='datetime_string')",
            "val": "Europe/Berlin",
            "required": true,
            "options": {
              "America/Adak": {
                "label": "Adak, Gambier"
              },
              "Australia/Adelaide": {
                "label": "Adelaide, Broken Hill, Darwin"
              },
              "America/Anchorage": {
                "label": "Anchorage, Juneau, Sitka"
              },
              "Pacific/Apia": {
                "label": "Apia, Asau, Mulifanua, Afega, Leulumoega"
              },
              "Pacific/Enderbury": {
                "label": "Apia, Fiji, Tongatapu"
              },
              "Antarctica/McMurdo": {
                "label": "Auckland, Casey, Davis"
              },
              "Pacific/Auckland": {
                "label": "Auckland, Wellington, Christchurch"
              },
              "Asia/Bangkok": {
                "label": "Bangkok, Jakarta, Novosibirsk"
              },
              "Europe/Berlin": {
                "label": "Berlin, Paris, Amsterdam"
              },
              "Australia/Perth": {
                "label": "Brunei, Singapore, Perth"
              },
              "Atlantic/Cape_Verde": {
                "label": "Cape Verde,Praia, Mindelo, Santa Maria"
              },
              "America/Belize": {
                "label": "Costa Rica, El Salvador, Denver"
              },
              "Antarctica/Vostok": {
                "label": "Dhaka, Bishkek, Omsk"
              },
              "Europe/Astrakhan": {
                "label": "Dubai, Baku, Tbilisi"
              },
              "Australia/Eucla": {
                "label": "Eucla"
              },
              "Pacific/Honolulu": {
                "label": "Honolulu, Rarotonga, Tahiti"
              },
              "Asia/Kabul": {
                "label": "Kabul, Kandahār, Mazār-e Sharīf, Herāt, Jalālābād"
              },
              "Asia/Aqtau": {
                "label": "Karachi, Tashkent, Maldives"
              },
              "Asia/Kathmandu": {
                "label": "Kathmandu, Pokhara, Pātan, Biratnagar"
              },
              "Pacific/Kiritimati": {
                "label": "Kiritimati"
              },
              "Asia/Colombo": {
                "label": "Kolkata, Colombo, Jaffna, Negombo"
              },
              "Europe/Guernsey": {
                "label": "London, Dublin, Lisbon"
              },
              "Australia/Lord_Howe": {
                "label": "Lord Howe"
              },
              "America/Creston": {
                "label": "Los Angeles, Vancouver, Hermosillo"
              },
              "Pacific/Marquesas": {
                "label": "Marquesas, Taiohae"
              },
              "America/Cayman": {
                "label": "Mexico City, Panama, Chicago"
              },
              "Pacific/Niue": {
                "label": "Midway, Niue, Pago Pago"
              },
              "Europe/Mariehamn": {
                "label": "Moscow, Istanbul, Qatar"
              },
              "Asia/Kolkata": {
                "label": "Mumbai, Delhi, Bengaluru, Kolkata, Chennai"
              },
              "America/Miquelon": {
                "label": "Noronha, Nuuk, Miquelon"
              },
              "America/Danmarkshavn": {
                "label": "Reykjavik, Dakar, Casablanca"
              },
              "Pacific/Bougainville": {
                "label": "Sakhalin, Norfolk, Bougainville"
              },
              "America/Araguaina": {
                "label": "Sao Paulo, Buenos Aires, Montevideo"
              },
              "America/St_Johns": {
                "label": "St. Johns, Mount Pearl, Corner Brook"
              },
              "Asia/Tehran": {
                "label": "Tehran, Mashhad, Isfahan, Karaj, Tabriz"
              },
              "Asia/Tokyo": {
                "label": "Tokyo, Seoul, Jayapura"
              },
              "America/New_York": {
                "label": "Toronto, Santiago, New York"
              },
              "Australia/Sydney": {
                "label": "Vladivostok, Sydney, Brisbane"
              },
              "Asia/Yangon": {
                "label": "Yangon, Cocos, Mandalay, Nay Pyi Taw, Mawlamyine"
              },
              "Indian/Cocos": {
                "label": "Yangon, Cocos, West Island"
              }
            },
            "breakLine": true
          }
        }
      }
    }
  }
},
"/common-snippets/SelectOutputColumnWithTable.json/SelectOutputColumnWithTable.json": {
  "output.select_output_columns": {
    "type": "checkbox",
    "label": "Select Output Columns",
    "show_if": "output.custom_options=='true'",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "style": "margin-top: 10px"
  },
  "output_columns": {
    "type": "fieldset",
    "label": "Select Output Columns",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.custom_options=='true' && output.select_output_columns=='true'",
    "repeat": true,
    "fields": {
      "table_id": {
        "type": "select",
        "label": "Select Table",
        "bind": "TABLES",
        "required": true
      },
      "field_name": {
        "type": "select",
        "label": "Select Column",
        "table": "this.table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "order": {
        "type": "select",
        "label": "Order",
        "options": {
          "-": {
            "label": "-"
          },
          "asc": {
            "label": "Asc"
          },
          "desc": {
            "label": "Desc"
          }
        },
        "val": "-"
      },
      "is_rename": {
        "type": "checkbox",
        "label": "Rename",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "rename": {
        "show_if": "this.is_rename == 'true'",
        "type": "text",
        "required": true,
        "minLength": 1,
        "maxLength": 255,
        "label": "New Column Name",
        "style": "margin-left: 10px"
      },
      "format__category": {
        "type": "select",
        "label": "Display Format",
        "required": true,
        "options": {
          "standard": {
            "label": "Standard"
          },
          "number": {
            "label": "Number"
          },
          "percentage": {
            "label": "Percentage"
          },
          "text": {
            "label": "Text"
          },
          "date": {
            "label": "Date"
          },
          "currency": {
            "label": "Currency"
          }
        },
        "val": "standard"
      },
      "format__rounding": {
        "type": "select",
        "label": "Decimal Places for display",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "required": true,
        "options": {
          "no_rounding": {
            "label": "No rounding"
          },
          "0": {
            "label": "0 digits"
          },
          "1": {
            "label": "1 digits"
          },
          "2": {
            "label": "2 digits"
          },
          "3": {
            "label": "3 digits"
          },
          "4": {
            "label": "4 digits"
          },
          "5": {
            "label": "5 digits"
          },
          "6": {
            "label": "6 digits"
          },
          "7": {
            "label": "7 digits"
          },
          "8": {
            "label": "8 digits"
          },
          "9": {
            "label": "9 digits"
          }
        },
        "val": "2"
      },
      "format__use_1000_separator": {
        "type": "checkbox",
        "label": "Use 1000 Separator(.)",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "format__currency_symbol": {
        "type": "select",
        "label": "Symbol",
        "show_if": "this.format__category=='currency'",
        "required": true,
        "options": {
          "dollar": {
            "label": "$"
          },
          "euro": {
            "label": "€"
          },
          "pound": {
            "label": "£"
          },
          "yen": {
            "label": "¥ (Yen, currency of Japan)"
          },
          "colon": {
            "label": "₡ (Colón, currency of Costa Rica)"
          },
          "naira": {
            "label": "₦ (Naira, currency of Nigeria)"
          },
          "rupee": {
            "label": "₨ (Rupee, currency of India)"
          },
          "rupie": {
            "label": "₹ (Rupee, currency of India)"
          },
          "won": {
            "label": "₩ (Won, currency in South Korea and North Korea)"
          },
          "hebrew": {
            "label": "₪ (Currency of Israel)"
          },
          "dong": {
            "label": "₫ (Currency of Vietnam)"
          },
          "kip": {
            "label": "₭ (Kip, currency of Laos)"
          },
          "mongolia": {
            "label": "₮ (Currency of Mongolia)"
          },
          "peso": {
            "label": "₱ (Peso, currency of the Philippines)"
          },
          "guarani": {
            "label": "₲ (Guaraní, currency of Paraguay)"
          },
          "hryvnia": {
            "label": "₴ (Hryvnia, currency of Ukraine)"
          },
          "tenge": {
            "label": "₸ (Tenge, currency of Kazakhstan)"
          },
          "lira": {
            "label": "₺ (Lira, currency of Turkey)"
          },
          "manat": {
            "label": "₼ (Manat, currency of Azerbaijan)"
          },
          "rubles": {
            "label": "₽ (Rubles, currency of Russia)"
          },
          "lari": {
            "label": "₾ (Lari, currency of Georgia)"
          },
          "bitcoin": {
            "label": "₿ (Bitcoin, crypto currency)"
          }
        },
        "val": "dollar"
      },
      "format__date_format": {
        "type": "select",
        "label": "Type",
        "show_if": "this.format__category=='date'",
        "required": true,
        "options": {
          "mm/dd/yyyy": {
            "label": "3/14/2012"
          },
          "D, M dd, Y": {
            "label": "Wednesday, March 14, 2012"
          },
          "yyyy-mm-dd": {
            "label": "2012-03-14"
          },
          "m.dd.yyyy": {
            "label": "3.14.2012"
          },
          "m.dd.yy": {
            "label": "3.14.12"
          },
          "dd.m.yyyy": {
            "label": "14.3.2012"
          },
          "dd.m.yy": {
            "label": "14.3.12"
          },
          "M dd, Y": {
            "label": "March 14, 2012"
          },
          "dd-mm-yyyy": {
            "label": "14-03-2012"
          },
          "mm-dd-yyyy": {
            "label": "03-14-2012"
          },
          "dd-mm-yy": {
            "label": "14-03-12"
          },
          "mm-dd-yy": {
            "label": "03-14-12"
          }
        },
        "val": "mm/dd/yyyy",
        "breakLine": true
      },
      "delete": {
        "type": "button",
        "label": "Delete",
        "function": "DELETE_ROW"
      }
    },
    "breakLine": true,
    "style": "margin-bottom: 20px"
  }
},
"/common-snippets/SelectColumnRow.json/SelectColumnRow.json": {
  "placeholder": {
    "breakLine": true
  },
  "apply_to_all_columns": {
    "type": "checkbox",
    "label": "All Columns",
    "show_if": "false",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true	
  },
  "apply_columns": {
    "type": "select",
    "label": "Select Columns to Apply",
    "required": true,
    "table": "table_id",
    "multiple": true,
    "bind": "COLUMNS",
    "breakLine": true
  },
  "apply_to_all_rows": {
    "type": "checkbox",
    "label": "All Rows",
    "show_if": "false",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  },
  "apply_rows": {
    "type": "select",
    "label": "Select Rows to Apply",
    "show_if": "$table_id.numOfLabel >= 1",
    "required": true,
    "table": "table_id",
    "multiple": true,
    "bind": "LABELS",
    "breakLine": true
  },
  "intersection": {
    "type": "select",
    "label": "Selection",
    "show_if": "false",
    "options": {
      "all": {
        "label": "All selected Rows & Columns"
      },
      "intersection": {
        "label": "Intersection of selected Rows & Columns"
      }
    },
    "val": "intersection"
  }
}
,
"/common-snippets/Countries.json/Countries.json": {
  "countries_frame": {
    "type": "fieldset",
    "label": "Select countries",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if" : "options.all_countries=='false'",
    "repeat": false,
    "fields": {
      "options.countries__select_type": {
        "type": "select",
        "label": "Method",
        "required": true,
        "options": {
          "all": {
            "label": "Select in all"
          },
          "region": {
            "label": "Select by region"
          },
          "income_group": {
            "label": "Select by income group"
          }
        },
        "val": "region"
      },
      "options.countries__select_region": {
        "type": "select",
        "label": "Region",
        "show_if" : "options.countries__select_type=='region'",
        "required": true,
        "options": {
          "east_asia_pacific": {
            "label": "East Asia & Pacific"
          },
          "europe_central_asia": {
            "label": "Europe & Central Asia"
          },
          "latin_america_caribbean": {
            "label": "Latin America & Caribbean"
          },
          "middle_east_north_africa": {
            "label": "Middle East & North Africa"
          },
          "north_america": {
            "label": "North America"
          },
          "south_asia": {
            "label": "South Asia"
          },
          "sub_saharan_africa": {
            "label": "Sub-Saharan Africa"
          }
        },
        "val": "europe_central_asia"
      },
      "options.countries__select_income_group": {
        "type": "select",
        "label": "Income Group",
        "show_if" : "options.countries__select_type=='income_group'",
        "required": true,
        "options": {
          "high_income": {
            "label": "High income"
          },
          "upper_middle_income": {
            "label": "Upper middle income"
          },
          "lower_middle_income": {
            "label": "Lower middle income"
          },
          "low_income": {
            "label": "Low income"
          }
        },
        "val": "high_income"
      },
      "options.countries__all_countries": {
        "type": "checkbox",
        "label": "All countries",
        "show_if" : "options.countries__select_type=='all'",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "options.countries__all_region_countries": {
        "type": "checkbox",
        "label": "All countries in Region",
        "show_if" : "options.countries__select_type=='region'",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "options.countries__all_income_group_countries": {
        "type": "checkbox",
        "label": "All countries in Income Group",
        "show_if" : "options.countries__select_type=='income_group'",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "options.countries_in_all": {
        "type": "select",
        "label": "Countries",
        "show_if" : "options.countries__select_type=='all' && options.countries__all_countries=='false'",
        "required": true,
        "options": {
          "AFG": {
            "label": "Afghanistan"
          },
          "ALB": {
            "label": "Albania"
          },
          "DZA": {
            "label": "Algeria"
          },
          "ASM": {
            "label": "American Samoa"
          },
          "AND": {
            "label": "Andorra"
          },
          "AGO": {
            "label": "Angola"
          },
          "ATA": {
            "label": "Antarctica"
          },
          "ATG": {
            "label": "Antigua and Barbuda"
          },
          "ARG": {
            "label": "Argentina"
          },
          "ARM": {
            "label": "Armenia"
          },
          "ABW": {
            "label": "Aruba"
          },
          "AUS": {
            "label": "Australia"
          },
          "AUT": {
            "label": "Austria"
          },
          "AZE": {
            "label": "Azerbaijan"
          },
          "BHS": {
            "label": "Bahamas"
          },
          "BHR": {
            "label": "Bahrain"
          },
          "BGD": {
            "label": "Bangladesh"
          },
          "BRB": {
            "label": "Barbados"
          },
          "BLR": {
            "label": "Belarus"
          },
          "BEL": {
            "label": "Belgium"
          },
          "BLZ": {
            "label": "Belize"
          },
          "BEN": {
            "label": "Benin"
          },
          "BMU": {
            "label": "Bermuda"
          },
          "BTN": {
            "label": "Bhutan"
          },
          "BOL": {
            "label": "Bolivia"
          },
          "BIH": {
            "label": "Bosnia and Herzegovina"
          },
          "BWA": {
            "label": "Botswana"
          },
          "BRA": {
            "label": "Brazil"
          },
          "IOT": {
            "label": "British Indian Ocean Territory"
          },
          "VGB": {
            "label": "British Virgin Islands"
          },
          "BRN": {
            "label": "Brunei"
          },
          "BGR": {
            "label": "Bulgaria"
          },
          "BFA": {
            "label": "Burkina Faso"
          },
          "BDI": {
            "label": "Burundi"
          },
          "KHM": {
            "label": "Cambodia"
          },
          "CMR": {
            "label": "Cameroon"
          },
          "CAN": {
            "label": "Canada"
          },
          "CPV": {
            "label": "Cape Verde"
          },
          "CYM": {
            "label": "Cayman Islands"
          },
          "CAF": {
            "label": "Central African Republic"
          },
          "TCD": {
            "label": "Chad"
          },
          "CHL": {
            "label": "Chile"
          },
          "CHN": {
            "label": "China"
          },
          "COL": {
            "label": "Colombia"
          },
          "COM": {
            "label": "Comoros"
          },
          "CRI": {
            "label": "Costa Rica"
          },
          "HRV": {
            "label": "Croatia"
          },
          "CUB": {
            "label": "Cuba"
          },
          "CUW": {
            "label": "Curacao"
          },
          "CYP": {
            "label": "Cyprus"
          },
          "CZE": {
            "label": "Czech Republic"
          },
          "COD": {
            "label": "Democratic Republic of the Congo"
          },
          "DNK": {
            "label": "Denmark"
          },
          "DJI": {
            "label": "Djibouti"
          },
          "DMA": {
            "label": "Dominica"
          },
          "DOM": {
            "label": "Dominican Republic"
          },
          "TLS": {
            "label": "East Timor"
          },
          "ECU": {
            "label": "Ecuador"
          },
          "EGY": {
            "label": "Egypt"
          },
          "SLV": {
            "label": "El Salvador"
          },
          "GNQ": {
            "label": "Equatorial Guinea"
          },
          "ERI": {
            "label": "Eritrea"
          },
          "EST": {
            "label": "Estonia"
          },
          "ETH": {
            "label": "Ethiopia"
          },
          "FRO": {
            "label": "Faroe Islands"
          },
          "FJI": {
            "label": "Fiji"
          },
          "FIN": {
            "label": "Finland"
          },
          "FRA": {
            "label": "France"
          },
          "PYF": {
            "label": "French Polynesia"
          },
          "GAB": {
            "label": "Gabon"
          },
          "GMB": {
            "label": "Gambia"
          },
          "GEO": {
            "label": "Georgia"
          },
          "DEU": {
            "label": "Germany"
          },
          "GHA": {
            "label": "Ghana"
          },
          "GIB": {
            "label": "Gibraltar"
          },
          "GRC": {
            "label": "Greece"
          },
          "GRL": {
            "label": "Greenland"
          },
          "GRD": {
            "label": "Grenada"
          },
          "GUM": {
            "label": "Guam"
          },
          "GTM": {
            "label": "Guatemala"
          },
          "GIN": {
            "label": "Guinea"
          },
          "GNB": {
            "label": "Guinea-Bissau"
          },
          "GUY": {
            "label": "Guyana"
          },
          "HTI": {
            "label": "Haiti"
          },
          "HND": {
            "label": "Honduras"
          },
          "HKG": {
            "label": "Hong Kong"
          },
          "HUN": {
            "label": "Hungary"
          },
          "ISL": {
            "label": "Iceland"
          },
          "IND": {
            "label": "India"
          },
          "IDN": {
            "label": "Indonesia"
          },
          "IRN": {
            "label": "Iran"
          },
          "IRQ": {
            "label": "Iraq"
          },
          "IRL": {
            "label": "Ireland"
          },
          "IMN": {
            "label": "Isle of Man"
          },
          "ISR": {
            "label": "Israel"
          },
          "ITA": {
            "label": "Italy"
          },
          "CIV": {
            "label": "Ivory Coast"
          },
          "JAM": {
            "label": "Jamaica"
          },
          "JPN": {
            "label": "Japan"
          },
          "JOR": {
            "label": "Jordan"
          },
          "KAZ": {
            "label": "Kazakhstan"
          },
          "KEN": {
            "label": "Kenya"
          },
          "KIR": {
            "label": "Kiribati"
          },
          "KWT": {
            "label": "Kuwait"
          },
          "KGZ": {
            "label": "Kyrgyzstan"
          },
          "LAO": {
            "label": "Laos"
          },
          "LVA": {
            "label": "Latvia"
          },
          "LBN": {
            "label": "Lebanon"
          },
          "LSO": {
            "label": "Lesotho"
          },
          "LBR": {
            "label": "Liberia"
          },
          "LBY": {
            "label": "Libya"
          },
          "LIE": {
            "label": "Liechtenstein"
          },
          "LTU": {
            "label": "Lithuania"
          },
          "LUX": {
            "label": "Luxembourg"
          },
          "MAC": {
            "label": "Macau"
          },
          "MKD": {
            "label": "Macedonia"
          },
          "MDG": {
            "label": "Madagascar"
          },
          "MWI": {
            "label": "Malawi"
          },
          "MYS": {
            "label": "Malaysia"
          },
          "MDV": {
            "label": "Maldives"
          },
          "MLI": {
            "label": "Mali"
          },
          "MLT": {
            "label": "Malta"
          },
          "MHL": {
            "label": "Marshall Islands"
          },
          "MRT": {
            "label": "Mauritania"
          },
          "MUS": {
            "label": "Mauritius"
          },
          "MEX": {
            "label": "Mexico"
          },
          "FSM": {
            "label": "Micronesia"
          },
          "MDA": {
            "label": "Moldova"
          },
          "MCO": {
            "label": "Monaco"
          },
          "MNG": {
            "label": "Mongolia"
          },
          "MNE": {
            "label": "Montenegro"
          },
          "MAR": {
            "label": "Morocco"
          },
          "MOZ": {
            "label": "Mozambique"
          },
          "MMR": {
            "label": "Myanmar"
          },
          "NAM": {
            "label": "Namibia"
          },
          "NRU": {
            "label": "Nauru"
          },
          "NPL": {
            "label": "Nepal"
          },
          "NLD": {
            "label": "Netherlands"
          },
          "NCL": {
            "label": "New Caledonia"
          },
          "NZL": {
            "label": "New Zealand"
          },
          "NIC": {
            "label": "Nicaragua"
          },
          "NER": {
            "label": "Niger"
          },
          "NGA": {
            "label": "Nigeria"
          },
          "PRK": {
            "label": "North Korea"
          },
          "MNP": {
            "label": "Northern Mariana Islands"
          },
          "NOR": {
            "label": "Norway"
          },
          "OMN": {
            "label": "Oman"
          },
          "PAK": {
            "label": "Pakistan"
          },
          "PLW": {
            "label": "Palau"
          },
          "PSE": {
            "label": "Palestine"
          },
          "PAN": {
            "label": "Panama"
          },
          "PNG": {
            "label": "Papua New Guinea"
          },
          "PRY": {
            "label": "Paraguay"
          },
          "PER": {
            "label": "Peru"
          },
          "PHL": {
            "label": "Philippines"
          },
          "POL": {
            "label": "Poland"
          },
          "PRT": {
            "label": "Portugal"
          },
          "PRI": {
            "label": "Puerto Rico"
          },
          "QAT": {
            "label": "Qatar"
          },
          "COG": {
            "label": "Republic of the Congo"
          },
          "ROU": {
            "label": "Romania"
          },
          "RUS": {
            "label": "Russia"
          },
          "RWA": {
            "label": "Rwanda"
          },
          "KNA": {
            "label": "Saint Kitts and Nevis"
          },
          "LCA": {
            "label": "Saint Lucia"
          },
          "MAF": {
            "label": "Saint Martin"
          },
          "VCT": {
            "label": "Saint Vincent and the Grenadines"
          },
          "WSM": {
            "label": "Samoa"
          },
          "SMR": {
            "label": "San Marino"
          },
          "STP": {
            "label": "Sao Tome and Principe"
          },
          "SAU": {
            "label": "Saudi Arabia"
          },
          "SEN": {
            "label": "Senegal"
          },
          "SRB": {
            "label": "Serbia"
          },
          "SYC": {
            "label": "Seychelles"
          },
          "SLE": {
            "label": "Sierra Leone"
          },
          "SGP": {
            "label": "Singapore"
          },
          "SXM": {
            "label": "Sint Maarten"
          },
          "SVK": {
            "label": "Slovakia"
          },
          "SVN": {
            "label": "Slovenia"
          },
          "SLB": {
            "label": "Solomon Islands"
          },
          "SOM": {
            "label": "Somalia"
          },
          "ZAF": {
            "label": "South Africa"
          },
          "KOR": {
            "label": "South Korea"
          },
          "SSD": {
            "label": "South Sudan"
          },
          "ESP": {
            "label": "Spain"
          },
          "LKA": {
            "label": "Sri Lanka"
          },
          "SDN": {
            "label": "Sudan"
          },
          "SUR": {
            "label": "Suriname"
          },
          "SJM": {
            "label": "Svalbard and Jan Mayen"
          },
          "SWZ": {
            "label": "Swaziland"
          },
          "SWE": {
            "label": "Sweden"
          },
          "CHE": {
            "label": "Switzerland"
          },
          "SYR": {
            "label": "Syria"
          },
          "TJK": {
            "label": "Tajikistan"
          },
          "TZA": {
            "label": "Tanzania"
          },
          "THA": {
            "label": "Thailand"
          },
          "TGO": {
            "label": "Togo"
          },
          "TON": {
            "label": "Tonga"
          },
          "TTO": {
            "label": "Trinidad and Tobago"
          },
          "TUN": {
            "label": "Tunisia"
          },
          "TUR": {
            "label": "Turkey"
          },
          "TKM": {
            "label": "Turkmenistan"
          },
          "TCA": {
            "label": "Turks and Caicos Islands"
          },
          "TUV": {
            "label": "Tuvalu"
          },
          "VIR": {
            "label": "U.S. Virgin Islands"
          },
          "UGA": {
            "label": "Uganda"
          },
          "UKR": {
            "label": "Ukraine"
          },
          "ARE": {
            "label": "United Arab Emirates"
          },
          "GBR": {
            "label": "United Kingdom"
          },
          "USA": {
            "label": "United States"
          },
          "URY": {
            "label": "Uruguay"
          },
          "UZB": {
            "label": "Uzbekistan"
          },
          "VUT": {
            "label": "Vanuatu"
          },
          "VEN": {
            "label": "Venezuela"
          },
          "VNM": {
            "label": "Vietnam"
          },
          "YEM": {
            "label": "Yemen"
          },
          "ZMB": {
            "label": "Zambia"
          },
          "ZWE": {
            "label": "Zimbabwe"
          }
        },
        "val": ["DEU","GBR"],
        "multiple": true
      },
      "options.countries_in_east_asia_pacific": {
        "type": "select",
        "label": "Countries",
        "show_if" : "options.countries__select_type=='region' && options.countries__select_region=='east_asia_pacific' && options.countries__all_region_countries=='false'",
        "required": true,
        "options": {
          "ASM": {
            "label": "American Samoa"
          },
          "AUS": {
            "label": "Australia"
          },
          "BRN": {
            "label": "Brunei"
          },
          "KHM": {
            "label": "Cambodia"
          },
          "CHN": {
            "label": "China"
          },
          "FJI": {
            "label": "Fiji"
          },
          "PYF": {
            "label": "French Polynesia"
          },
          "GUM": {
            "label": "Guam"
          },
          "HKG": {
            "label": "Hong Kong"
          },
          "IDN": {
            "label": "Indonesia"
          },
          "JPN": {
            "label": "Japan"
          },
          "KIR": {
            "label": "Kiribati"
          },
          "LAO": {
            "label": "Laos"
          },
          "MAC": {
            "label": "Macau"
          },
          "MYS": {
            "label": "Malaysia"
          },
          "MHL": {
            "label": "Marshall Islands"
          },
          "FSM": {
            "label": "Micronesia"
          },
          "MNG": {
            "label": "Mongolia"
          },
          "MMR": {
            "label": "Myanmar"
          },
          "NRU": {
            "label": "Nauru"
          },
          "NCL": {
            "label": "New Caledonia"
          },
          "NZL": {
            "label": "New Zealand"
          },
          "PRK": {
            "label": "North Korea"
          },
          "MNP": {
            "label": "Northern Mariana Islands"
          },
          "PLW": {
            "label": "Palau"
          },
          "PNG": {
            "label": "Papua New Guinea"
          },
          "PHL": {
            "label": "Philippines"
          },
          "WSM": {
            "label": "Samoa"
          },
          "SGP": {
            "label": "Singapore"
          },
          "SLB": {
            "label": "Solomon Islands"
          },
          "KOR": {
            "label": "South Korea"
          },
          "THA": {
            "label": "Thailand"
          },
          "TON": {
            "label": "Tonga"
          },
          "TUV": {
            "label": "Tuvalu"
          },
          "VUT": {
            "label": "Vanuatu"
          },
          "VNM": {
            "label": "Vietnam"
          }
        },
        "val": ["ASM","AUS"],
        "multiple": true,
        "breakLine": true
      },
      "options.countries_in_europe_central_asia": {
        "type": "select",
        "label": "Countries",
        "show_if" : "options.countries__select_type=='region' && options.countries__select_region=='europe_central_asia' && options.countries__all_region_countries=='false'",
        "required": true,
        "options": {
          "ALB": {
            "label": "Albania"
          },
          "AND": {
            "label": "Andorra"
          },
          "ARM": {
            "label": "Armenia"
          },
          "AUT": {
            "label": "Austria"
          },
          "AZE": {
            "label": "Azerbaijan"
          },
          "BLR": {
            "label": "Belarus"
          },
          "BEL": {
            "label": "Belgium"
          },
          "BIH": {
            "label": "Bosnia and Herzegovina"
          },
          "BGR": {
            "label": "Bulgaria"
          },
          "HRV": {
            "label": "Croatia"
          },
          "CYP": {
            "label": "Cyprus"
          },
          "CZE": {
            "label": "Czech Republic"
          },
          "DNK": {
            "label": "Denmark"
          },
          "EST": {
            "label": "Estonia"
          },
          "FRO": {
            "label": "Faroe Islands"
          },
          "FIN": {
            "label": "Finland"
          },
          "FRA": {
            "label": "France"
          },
          "GEO": {
            "label": "Georgia"
          },
          "DEU": {
            "label": "Germany"
          },
          "GIB": {
            "label": "Gibraltar"
          },
          "GRC": {
            "label": "Greece"
          },
          "GRL": {
            "label": "Greenland"
          },
          "HUN": {
            "label": "Hungary"
          },
          "ISL": {
            "label": "Iceland"
          },
          "IRL": {
            "label": "Ireland"
          },
          "IMN": {
            "label": "Isle of Man"
          },
          "ITA": {
            "label": "Italy"
          },
          "KAZ": {
            "label": "Kazakhstan"
          },
          "KGZ": {
            "label": "Kyrgyzstan"
          },
          "LVA": {
            "label": "Latvia"
          },
          "LIE": {
            "label": "Liechtenstein"
          },
          "LTU": {
            "label": "Lithuania"
          },
          "LUX": {
            "label": "Luxembourg"
          },
          "MDA": {
            "label": "Moldova"
          },
          "MCO": {
            "label": "Monaco"
          },
          "MNE": {
            "label": "Montenegro"
          },
          "NLD": {
            "label": "Netherlands"
          },
          "NOR": {
            "label": "Norway"
          },
          "POL": {
            "label": "Poland"
          },
          "PRT": {
            "label": "Portugal"
          },
          "ROU": {
            "label": "Romania"
          },
          "RUS": {
            "label": "Russia"
          },
          "SMR": {
            "label": "San Marino"
          },
          "SRB": {
            "label": "Serbia"
          },
          "SVK": {
            "label": "Slovakia"
          },
          "SVN": {
            "label": "Slovenia"
          },
          "ESP": {
            "label": "Spain"
          },
          "SWE": {
            "label": "Sweden"
          },
          "CHE": {
            "label": "Switzerland"
          },
          "TJK": {
            "label": "Tajikistan"
          },
          "TUR": {
            "label": "Turkey"
          },
          "TKM": {
            "label": "Turkmenistan"
          },
          "UKR": {
            "label": "Ukraine"
          },
          "GBR": {
            "label": "United Kingdom"
          },
          "UZB": {
            "label": "Uzbekistan"
          }
        },
        "val": ["DEU","GBR"],
        "multiple": true,
        "breakLine": true
      },
      "options.countries_in_latin_america_caribbean": {
        "type": "select",
        "label": "Countries",
        "show_if" : "options.countries__select_type=='region' && options.countries__select_region=='latin_america_caribbean' && options.countries__all_region_countries=='false'",
        "required": true,
        "options": {
          "ATG": {
            "label": "Antigua and Barbuda"
          },
          "ARG": {
            "label": "Argentina"
          },
          "ABW": {
            "label": "Aruba"
          },
          "BHS": {
            "label": "Bahamas"
          },
          "BRB": {
            "label": "Barbados"
          },
          "BLZ": {
            "label": "Belize"
          },
          "BOL": {
            "label": "Bolivia"
          },
          "BRA": {
            "label": "Brazil"
          },
          "VGB": {
            "label": "British Virgin Islands"
          },
          "CYM": {
            "label": "Cayman Islands"
          },
          "CHL": {
            "label": "Chile"
          },
          "COL": {
            "label": "Colombia"
          },
          "CRI": {
            "label": "Costa Rica"
          },
          "CUB": {
            "label": "Cuba"
          },
          "CUW": {
            "label": "Curacao"
          },
          "DMA": {
            "label": "Dominica"
          },
          "DOM": {
            "label": "Dominican Republic"
          },
          "ECU": {
            "label": "Ecuador"
          },
          "SLV": {
            "label": "El Salvador"
          },
          "GRD": {
            "label": "Grenada"
          },
          "GTM": {
            "label": "Guatemala"
          },
          "GUY": {
            "label": "Guyana"
          },
          "HTI": {
            "label": "Haiti"
          },
          "HND": {
            "label": "Honduras"
          },
          "JAM": {
            "label": "Jamaica"
          },
          "MEX": {
            "label": "Mexico"
          },
          "NIC": {
            "label": "Nicaragua"
          },
          "PAN": {
            "label": "Panama"
          },
          "PRY": {
            "label": "Paraguay"
          },
          "PER": {
            "label": "Peru"
          },
          "PRI": {
            "label": "Puerto Rico"
          },
          "MAF": {
            "label": "Saint Martin"
          },
          "VCT": {
            "label": "Saint Vincent and the Grenadines"
          },
          "SUR": {
            "label": "Suriname"
          },
          "TTO": {
            "label": "Trinidad and Tobago"
          },
          "TCA": {
            "label": "Turks and Caicos Islands"
          },
          "URY": {
            "label": "Uruguay"
          },
          "VEN": {
            "label": "Venezuela"
          }
        },
        "val": ["ATG","ARG"],
        "multiple": true,
        "breakLine": true
      },
      "options.countries_in_middle_east_north_africa": {
        "type": "select",
        "label": "Countries",
        "show_if" : "options.countries__select_type=='region' && options.countries__select_region=='middle_east_north_africa' && options.countries__all_region_countries=='false'",
        "required": true,
        "options": {
          "DZA": {
            "label": "Algeria"
          },
          "BHR": {
            "label": "Bahrain"
          },
          "DJI": {
            "label": "Djibouti"
          },
          "EGY": {
            "label": "Egypt"
          },
          "IRN": {
            "label": "Iran"
          },
          "IRQ": {
            "label": "Iraq"
          },
          "ISR": {
            "label": "Israel"
          },
          "JOR": {
            "label": "Jordan"
          },
          "KWT": {
            "label": "Kuwait"
          },
          "LBN": {
            "label": "Lebanon"
          },
          "LBY": {
            "label": "Libya"
          },
          "MLT": {
            "label": "Malta"
          },
          "MAR": {
            "label": "Morocco"
          },
          "OMN": {
            "label": "Oman"
          },
          "QAT": {
            "label": "Qatar"
          },
          "SAU": {
            "label": "Saudi Arabia"
          },
          "SYR": {
            "label": "Syria"
          },
          "TUN": {
            "label": "Tunisia"
          },
          "ARE": {
            "label": "United Arab Emirates"
          },
          "YEM": {
            "label": "Yemen"
          }
        },
        "val": ["DZA","BHR"],
        "multiple": true,
        "breakLine": true
      },
      "options.countries_in_north_america": {
        "type": "select",
        "label": "Countries",
        "show_if" : "options.countries__select_type=='region' && options.countries__select_region=='north_america' && options.countries__all_region_countries=='false'",
        "required": true,
        "options": {
          "CAN": {
            "label": "Canada"
          },
          "USA": {
            "label": "United States"
          }
        },
        "val": ["CAN","USA"],
        "multiple": true,
        "breakLine": true
      },
      "options.countries_in_south_asia": {
        "type": "select",
        "label": "Countries",
        "show_if" : "options.countries__select_type=='region' && options.countries__select_region=='south_asia' && options.countries__all_region_countries=='false'",
        "required": true,
        "options": {
          "AFG": {
            "label": "Afghanistan"
          },
          "BGD": {
            "label": "Bangladesh"
          },
          "BTN": {
            "label": "Bhutan"
          },
          "IND": {
            "label": "India"
          },
          "MDV": {
            "label": "Maldives"
          },
          "NPL": {
            "label": "Nepal"
          },
          "PAK": {
            "label": "Pakistan"
          },
          "LKA": {
            "label": "Sri Lanka"
          }
        },
        "val": ["AFG","BGD"],
        "multiple": true,
        "breakLine": true
      },
      "options.countries_in_sub_saharan_africa": {
        "type": "select",
        "label": "Countries",
        "show_if" : "options.countries__select_type=='region' && options.countries__select_region=='sub_saharan_africa' && options.countries__all_region_countries=='false'",
        "required": true,
        "options": {
          "AGO": {
            "label": "Angola"
          },
          "BEN": {
            "label": "Benin"
          },
          "BWA": {
            "label": "Botswana"
          },
          "BFA": {
            "label": "Burkina Faso"
          },
          "BDI": {
            "label": "Burundi"
          },
          "CMR": {
            "label": "Cameroon"
          },
          "CPV": {
            "label": "Cape Verde"
          },
          "CAF": {
            "label": "Central African Republic"
          },
          "TCD": {
            "label": "Chad"
          },
          "COM": {
            "label": "Comoros"
          },
          "COD": {
            "label": "Democratic Republic of the Congo"
          },
          "GNQ": {
            "label": "Equatorial Guinea"
          },
          "ERI": {
            "label": "Eritrea"
          },
          "EST": {
            "label": "Estonia"
          },
          "ETH": {
            "label": "Ethiopia"
          },
          "GAB": {
            "label": "Gabon"
          },
          "GMB": {
            "label": "Gambia"
          },
          "GHA": {
            "label": "Ghana"
          },
          "GIN": {
            "label": "Guinea"
          },
          "KEN": {
            "label": "Kenya"
          },
          "LSO": {
            "label": "Lesotho"
          },
          "LBR": {
            "label": "Liberia"
          },
          "MDG": {
            "label": "Madagascar"
          },
          "MWI": {
            "label": "Malawi"
          },
          "MLI": {
            "label": "Mali"
          },
          "MRT": {
            "label": "Mauritania"
          },
          "MUS": {
            "label": "Mauritius"
          },
          "MOZ": {
            "label": "Mozambique"
          },
          "NAM": {
            "label": "Namibia"
          },
          "NGA": {
            "label": "Nigeria"
          },
          "RWA": {
            "label": "Rwanda"
          },
          "STP": {
            "label": "Sao Tome and Principe"
          },
          "SEN": {
            "label": "Senegal"
          },
          "SYC": {
            "label": "Seychelles"
          },
          "SLE": {
            "label": "Sierra Leone"
          },
          "SOM": {
            "label": "Somalia"
          },
          "ZAF": {
            "label": "South Africa"
          },
          "SSD": {
            "label": "South Sudan"
          },
          "SDN": {
            "label": "Sudan"
          },
          "TZA": {
            "label": "Tanzania"
          },
          "TGO": {
            "label": "Togo"
          },
          "UGA": {
            "label": "Uganda"
          },
          "ZMB": {
            "label": "Zambia"
          },
          "ZWE": {
            "label": "Zimbabwe"
          }
        },
        "val": ["AGO","BEN"],
        "multiple": true,
        "breakLine": true
      },
      "options.countries_in_high_income": {
        "type": "select",
        "label": "Countries",
        "show_if" : "options.countries__select_type=='income_group' && options.countries__select_income_group=='high_income' && options.countries__all_income_group_countries=='false'",
        "required": true,
        "options": {
          "AND": {
            "label": "Andorra"
          },
          "ATG": {
            "label": "Antigua and Barbuda"
          },
          "ABW": {
            "label": "Aruba"
          },
          "AUS": {
            "label": "Australia"
          },
          "AUT": {
            "label": "Austria"
          },
          "BHS": {
            "label": "Bahamas"
          },
          "BHR": {
            "label": "Bahrain"
          },
          "BRB": {
            "label": "Barbados"
          },
          "BEL": {
            "label": "Belgium"
          },
          "BMU": {
            "label": "Bermuda"
          },
          "VGB": {
            "label": "British Virgin Islands"
          },
          "BRN": {
            "label": "Brunei"
          },
          "CAN": {
            "label": "Canada"
          },
          "CPV": {
            "label": "Cape Verde"
          },
          "CYM": {
            "label": "Cayman Islands"
          },
          "CHL": {
            "label": "Chile"
          },
          "HRV": {
            "label": "Croatia"
          },
          "CUW": {
            "label": "Curacao"
          },
          "CYP": {
            "label": "Cyprus"
          },
          "CZE": {
            "label": "Czech Republic"
          },
          "DNK": {
            "label": "Denmark"
          },
          "EST": {
            "label": "Estonia"
          },
          "FRO": {
            "label": "Faroe Islands"
          },
          "FIN": {
            "label": "Finland"
          },
          "FRA": {
            "label": "France"
          },
          "PYF": {
            "label": "French Polynesia"
          },
          "DEU": {
            "label": "Germany"
          },
          "GIB": {
            "label": "Gibraltar"
          },
          "GRC": {
            "label": "Greece"
          },
          "GRL": {
            "label": "Greenland"
          },
          "GUM": {
            "label": "Guam"
          },
          "HKG": {
            "label": "Hong Kong"
          },
          "HUN": {
            "label": "Hungary"
          },
          "ISL": {
            "label": "Iceland"
          },
          "IRL": {
            "label": "Ireland"
          },
          "IMN": {
            "label": "Isle of Man"
          },
          "ISR": {
            "label": "Israel"
          },
          "ITA": {
            "label": "Italy"
          },
          "JPN": {
            "label": "Japan"
          },
          "KWT": {
            "label": "Kuwait"
          },
          "LVA": {
            "label": "Latvia"
          },
          "LIE": {
            "label": "Liechtenstein"
          },
          "LTU": {
            "label": "Lithuania"
          },
          "LUX": {
            "label": "Luxembourg"
          },
          "MAC": {
            "label": "Macau"
          },
          "MLT": {
            "label": "Malta"
          },
          "MCO": {
            "label": "Monaco"
          },
          "NRU": {
            "label": "Nauru"
          },
          "NLD": {
            "label": "Netherlands"
          },
          "NCL": {
            "label": "New Caledonia"
          },
          "NZL": {
            "label": "New Zealand"
          },
          "MNP": {
            "label": "Northern Mariana Islands"
          },
          "NOR": {
            "label": "Norway"
          },
          "OMN": {
            "label": "Oman"
          },
          "PLW": {
            "label": "Palau"
          },
          "POL": {
            "label": "Poland"
          },
          "PRT": {
            "label": "Portugal"
          },
          "PRI": {
            "label": "Puerto Rico"
          },
          "QAT": {
            "label": "Qatar"
          },
          "SMR": {
            "label": "San Marino"
          },
          "SAU": {
            "label": "Saudi Arabia"
          },
          "SYC": {
            "label": "Seychelles"
          },
          "SGP": {
            "label": "Singapore"
          },
          "SXM": {
            "label": "Sint Maarten"
          },
          "SVK": {
            "label": "Slovakia"
          },
          "SVN": {
            "label": "Slovenia"
          },
          "ESP": {
            "label": "Spain"
          },
          "SWE": {
            "label": "Sweden"
          },
          "CHE": {
            "label": "Switzerland"
          },
          "TTO": {
            "label": "Trinidad and Tobago"
          },
          "TCA": {
            "label": "Turks and Caicos Islands"
          },
          "ARE": {
            "label": "United Arab Emirates"
          },
          "GBR": {
            "label": "United Kingdom"
          },
          "USA": {
            "label": "United States"
          },
          "URY": {
            "label": "Uruguay"
          }
        },
        "val": ["AND","ATG"],
        "multiple": true,
        "breakLine": true
      },
      "options.countries_in_upper_middle_income": {
        "type": "select",
        "label": "Countries",
        "show_if" : "options.countries__select_type=='income_group' && options.countries__select_income_group=='upper_middle_income' && options.countries__all_income_group_countries=='false'",
        "required": true,
        "options": {
          "ALB": {
            "label": "Albania"
          },
          "ASM": {
            "label": "American Samoa"
          },
          "ARG": {
            "label": "Argentina"
          },
          "ARM": {
            "label": "Armenia"
          },
          "AZE": {
            "label": "Azerbaijan"
          },
          "BLR": {
            "label": "Belarus"
          },
          "BIH": {
            "label": "Bosnia and Herzegovina"
          },
          "BWA": {
            "label": "Botswana"
          },
          "BRA": {
            "label": "Brazil"
          },
          "BGR": {
            "label": "Bulgaria"
          },
          "CHN": {
            "label": "China"
          },
          "COL": {
            "label": "Colombia"
          },
          "CRI": {
            "label": "Costa Rica"
          },
          "CUB": {
            "label": "Cuba"
          },
          "DMA": {
            "label": "Dominica"
          },
          "DOM": {
            "label": "Dominican Republic"
          },
          "ECU": {
            "label": "Ecuador"
          },
          "GNQ": {
            "label": "Equatorial Guinea"
          },
          "FJI": {
            "label": "Fiji"
          },
          "GAB": {
            "label": "Gabon"
          },
          "GEO": {
            "label": "Georgia"
          },
          "GRD": {
            "label": "Grenada"
          },
          "GTM": {
            "label": "Guatemala"
          },
          "GUY": {
            "label": "Guyana"
          },
          "IRQ": {
            "label": "Iraq"
          },
          "JAM": {
            "label": "Jamaica"
          },
          "JOR": {
            "label": "Jordan"
          },
          "KAZ": {
            "label": "Kazakhstan"
          },
          "LBN": {
            "label": "Lebanon"
          },
          "LBY": {
            "label": "Libya"
          },
          "MYS": {
            "label": "Malaysia"
          },
          "MDV": {
            "label": "Maldives"
          },
          "MHL": {
            "label": "Marshall Islands"
          },
          "MUS": {
            "label": "Mauritius"
          },
          "MEX": {
            "label": "Mexico"
          },
          "MDA": {
            "label": "Moldova"
          },
          "MNE": {
            "label": "Montenegro"
          },
          "NAM": {
            "label": "Namibia"
          },
          "PAN": {
            "label": "Panama"
          },
          "PRY": {
            "label": "Paraguay"
          },
          "PER": {
            "label": "Peru"
          },
          "ROU": {
            "label": "Romania"
          },
          "RUS": {
            "label": "Russia"
          },
          "SRB": {
            "label": "Serbia"
          },
          "ZAF": {
            "label": "South Africa"
          },
          "SUR": {
            "label": "Suriname"
          },
          "THA": {
            "label": "Thailand"
          },
          "TON": {
            "label": "Tonga"
          },
          "TUR": {
            "label": "Turkey"
          },
          "TKM": {
            "label": "Turkmenistan"
          },
          "TUV": {
            "label": "Tuvalu"
          },
          "VEN": {
            "label": "Venezuela"
          }
        },
        "val": ["ALB","ASM"],
        "multiple": true,
        "breakLine": true
      },
      "options.countries_in_lower_middle_income": {
        "type": "select",
        "label": "Countries",
        "show_if" : "options.countries__select_type=='income_group' && options.countries__select_income_group=='lower_middle_income' && options.countries__all_income_group_countries=='false'",
        "required": true,
        "options": {
          "DZA": {
            "label": "Algeria"
          },
          "AGO": {
            "label": "Angola"
          },
          "BGD": {
            "label": "Bangladesh"
          },
          "BLZ": {
            "label": "Belize"
          },
          "BEN": {
            "label": "Benin"
          },
          "BTN": {
            "label": "Bhutan"
          },
          "BOL": {
            "label": "Bolivia"
          },
          "KHM": {
            "label": "Cambodia"
          },
          "CMR": {
            "label": "Cameroon"
          },
          "CPV": {
            "label": "Cape Verde"
          },
          "COM": {
            "label": "Comoros"
          },
          "COD": {
            "label": "Democratic Republic of the Congo"
          },
          "DJI": {
            "label": "Djibouti"
          },
          "EGY": {
            "label": "Egypt"
          },
          "SLV": {
            "label": "El Salvador"
          },
          "GHA": {
            "label": "Ghana"
          },
          "HTI": {
            "label": "Haiti"
          },
          "HND": {
            "label": "Honduras"
          },
          "IND": {
            "label": "India"
          },
          "IDN": {
            "label": "Indonesia"
          },
          "IRN": {
            "label": "Iran"
          },
          "KEN": {
            "label": "Kenya"
          },
          "KIR": {
            "label": "Kiribati"
          },
          "KGZ": {
            "label": "Kyrgyzstan"
          },
          "LAO": {
            "label": "Laos"
          },
          "LSO": {
            "label": "Lesotho"
          },
          "MRT": {
            "label": "Mauritania"
          },
          "MNG": {
            "label": "Mongolia"
          },
          "MAR": {
            "label": "Morocco"
          },
          "MMR": {
            "label": "Myanmar"
          },
          "NPL": {
            "label": "Nepal"
          },
          "NIC": {
            "label": "Nicaragua"
          },
          "NGA": {
            "label": "Nigeria"
          },
          "PAK": {
            "label": "Pakistan"
          },
          "PNG": {
            "label": "Papua New Guinea"
          },
          "PHL": {
            "label": "Philippines"
          },
          "WSM": {
            "label": "Samoa"
          },
          "STP": {
            "label": "Sao Tome and Principe"
          },
          "SEN": {
            "label": "Senegal"
          },
          "SLB": {
            "label": "Solomon Islands"
          },
          "LKA": {
            "label": "Sri Lanka"
          },
          "TJK": {
            "label": "Tajikistan"
          },
          "TZA": {
            "label": "Tanzania"
          },
          "TUN": {
            "label": "Tunisia"
          },
          "UKR": {
            "label": "Ukraine"
          },
          "UZB": {
            "label": "Uzbekistan"
          },
          "VUT": {
            "label": "Vanuatu"
          },
          "VNM": {
            "label": "Vietnam"
          },
          "ZMB": {
            "label": "Zambia"
          },
          "ZWE": {
            "label": "Zimbabwe"
          }
        },
        "val": ["DZA","AGO"],
        "multiple": true,
        "breakLine": true
      },
      "options.countries_in_low_income": {
        "type": "select",
        "label": "Countries",
        "show_if" : "options.countries__select_type=='income_group' && options.countries__select_income_group=='low_income' && options.countries__all_income_group_countries=='false'",
        "required": true,
        "options": {
          "AFG": {
            "label": "Afghanistan"
          },
          "BFA": {
            "label": "Burkina Faso"
          },
          "BDI": {
            "label": "Burundi"
          },
          "CAF": {
            "label": "Central African Republic"
          },
          "TCD": {
            "label": "Chad"
          },
          "COD": {
            "label": "Democratic Republic of the Congo"
          },
          "ERI": {
            "label": "Eritrea"
          },
          "ETH": {
            "label": "Ethiopia"
          },
          "GMB": {
            "label": "Gambia"
          },
          "GIN": {
            "label": "Guinea"
          },
          "LBR": {
            "label": "Liberia"
          },
          "MDG": {
            "label": "Madagascar"
          },
          "MWI": {
            "label": "Malawi"
          },
          "MLI": {
            "label": "Mali"
          },
          "MOZ": {
            "label": "Mozambique"
          },
          "NER": {
            "label": "Niger"
          },
          "PRK": {
            "label": "North Korea"
          },
          "RWA": {
            "label": "Rwanda"
          },
          "SLE": {
            "label": "Sierra Leone"
          },
          "SOM": {
            "label": "Somalia"
          },
          "SSD": {
            "label": "South Sudan"
          },
          "SDN": {
            "label": "Sudan"
          },
          "SYR": {
            "label": "Syria"
          },
          "TGO": {
            "label": "Togo"
          },
          "UGA": {
            "label": "Uganda"
          },
          "YEM": {
            "label": "Yemen"
          }
        },
        "val": ["AFG","BFA"],
        "multiple": true,
        "breakLine": true
      }
    }
  }
}
,
"/common-snippets/SelectOutputColumnWithoutSort.json/SelectOutputColumnWithoutSort.json": {
  "output.select_output_columns": {
    "type": "checkbox",
    "label": "Select Output Columns",
    "show_if": "output.custom_options=='true'",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "style": "margin-top: 10px"
  },
  "output_columns": {
    "type": "fieldset",
    "label": "Select Output Columns",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.custom_options=='true' && output.select_output_columns=='true'",
    "repeat": true,
    "fields": {
      "field_name": {
        "type": "select",
        "label": "Select Column",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "is_rename": {
        "type": "checkbox",
        "label": "Rename",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "rename": {
        "show_if": "this.is_rename == 'true'",
        "type": "text",
        "required": true,
        "minLength": 1,
        "maxLength": 255,
        "label": "New Column Name",
        "style": "margin-left: 10px"
      },
      "format__category": {
        "type": "select",
        "label": "Display Format",
        "required": true,
        "options": {
          "standard": {
            "label": "Standard"
          },
          "number": {
            "label": "Number"
          },
          "percentage": {
            "label": "Percentage"
          },
          "text": {
            "label": "Text"
          },
          "date": {
            "label": "Date"
          },
          "currency": {
            "label": "Currency"
          }
        },
        "val": "standard"
      },
      "format__rounding": {
        "type": "select",
        "label": "Decimal Places for display",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "required": true,
        "options": {
          "no_rounding": {
            "label": "No rounding"
          },
          "0": {
            "label": "0 digits"
          },
          "1": {
            "label": "1 digits"
          },
          "2": {
            "label": "2 digits"
          },
          "3": {
            "label": "3 digits"
          },
          "4": {
            "label": "4 digits"
          },
          "5": {
            "label": "5 digits"
          },
          "6": {
            "label": "6 digits"
          },
          "7": {
            "label": "7 digits"
          },
          "8": {
            "label": "8 digits"
          },
          "9": {
            "label": "9 digits"
          }
        },
        "val": "2"
      },
      "format__use_1000_separator": {
        "type": "checkbox",
        "label": "Use 1000 Separator(.)",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "format__currency_symbol": {
        "type": "select",
        "label": "Symbol",
        "show_if": "this.format__category=='currency'",
        "required": true,
        "options": {
          "dollar": {
            "label": "$"
          },
          "euro": {
            "label": "€"
          },
          "pound": {
            "label": "£"
          }
        },
        "val": "dollar"
      },
      "format__date_format": {
        "type": "select",
        "label": "Type",
        "show_if": "this.format__category=='date'",
        "required": true,
        "options": {
          "mm/dd/yyyy": {
            "label": "3/14/2012"
          },
          "D, M dd, Y": {
            "label": "Wednesday, March 14, 2012"
          },
          "yyyy-mm-dd": {
            "label": "2012-03-14"
          },
          "m.dd.yyyy": {
            "label": "3.14.2012"
          },
          "m.dd.yy": {
            "label": "3.14.12"
          },
          "dd.m.yyyy": {
            "label": "14.3.2012"
          },
          "dd.m.yy": {
            "label": "14.3.12"
          },
          "M dd, Y": {
            "label": "March 14, 2012"
          },
          "dd-mm-yyyy": {
            "label": "14-03-2012"
          },
          "mm-dd-yyyy": {
            "label": "03-14-2012"
          },
          "dd-mm-yy": {
            "label": "14-03-12"
          },
          "mm-dd-yy": {
            "label": "03-14-12"
          }
        },
        "val": "mm/dd/yyyy",
        "breakLine": true
      },
      "delete": {
        "type": "button",
        "label": "Delete",
        "function": "DELETE_ROW"
      }
    },
    "breakLine": true,
    "style": "margin-bottom: 20px"
  }
},
"/common-snippets/LimitOutput.json/LimitOutput.json": {
  "options.data_volume_limitation": {
    "type": "checkbox",
    "label": "Data volume limitation",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  },
  "options.cut_off_run": {
    "type": "checkbox",
    "label": "Cut off Input table and Run",
    "show_if": "options.data_volume_limitation=='true'",
    "val": "false",
    "isOn": "true",
    "isOff": "false"
  },
  "options.input_table_rows_limit": {
    "type": "text",
    "label": "Input table limit(max: 800)",
    "show_if": "options.data_volume_limitation=='true' && options.cut_off_run=='true'",
    "minLength": 1,
    "maxLength": 3,
    "val": "500",
    "maxVal": 800,
    "breakLine": true
  },
  "options.limit_table_rows": {
    "type": "checkbox",
    "label": "Limit output table rows",
    "show_if": "options.data_volume_limitation=='true'",
    "val": "false",
    "isOn": "true",
    "isOff": "false"
  },
  "options.table_rows_limit": {
    "type": "text",
    "label": "Output table rows limit",
    "show_if": "options.data_volume_limitation=='true' && options.limit_table_rows=='true'",
    "minLength": 1,
    "maxLength": 9,
    "val": "100000000",
    "breakLine": true
  }
}
,
"/common-snippets/SelectOutputColumn.json/SelectOutputColumn.json": {
  "output.select_output_columns": {
    "type": "checkbox",
    "label": "Select Output Columns",
    "show_if": "output.custom_options=='true'",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "style": "margin-top: 10px"
  },
  "output_columns": {
    "type": "fieldset",
    "label": "Select Output Columns",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.custom_options=='true' && output.select_output_columns=='true'",
    "repeat": true,
    "fields": {
      "field_name": {
        "type": "select",
        "label": "Select Column",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "order": {
        "type": "select",
        "label": "Order",
        "options": {
          "-": {
            "label": "-"
          },
          "asc": {
            "label": "Asc"
          },
          "desc": {
            "label": "Desc"
          }
        },
        "val": "-"
      },
      "is_rename": {
        "type": "checkbox",
        "label": "Rename",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "rename": {
        "show_if": "this.is_rename == 'true'",
        "type": "text",
        "required": true,
        "minLength": 1,
        "maxLength": 255,
        "label": "New Column Name",
        "style": "margin-left: 10px"
      },
      "format__category": {
        "type": "select",
        "label": "Display Format",
        "required": true,
        "options": {
          "standard": {
            "label": "Standard"
          },
          "number": {
            "label": "Number"
          },
          "percentage": {
            "label": "Percentage"
          },
          "text": {
            "label": "Text"
          },
          "date": {
            "label": "Date"
          },
          "currency": {
            "label": "Currency"
          }
        },
        "val": "standard"
      },
      "format__rounding": {
        "type": "select",
        "label": "Decimal Places for display",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "required": true,
        "options": {
          "no_rounding": {
            "label": "No rounding"
          },
          "0": {
            "label": "0 digits"
          },
          "1": {
            "label": "1 digits"
          },
          "2": {
            "label": "2 digits"
          },
          "3": {
            "label": "3 digits"
          },
          "4": {
            "label": "4 digits"
          },
          "5": {
            "label": "5 digits"
          },
          "6": {
            "label": "6 digits"
          },
          "7": {
            "label": "7 digits"
          },
          "8": {
            "label": "8 digits"
          },
          "9": {
            "label": "9 digits"
          }
        },
        "val": "2"
      },
      "format__use_1000_separator": {
        "type": "checkbox",
        "label": "Use 1000 Separator(.)",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "format__currency_symbol": {
        "type": "select",
        "label": "Symbol",
        "show_if": "this.format__category=='currency'",
        "required": true,
        "options": {
          "dollar": {
            "label": "$"
          },
          "euro": {
            "label": "€"
          },
          "pound": {
            "label": "£"
          },
          "yen": {
            "label": "¥ (Yen, currency of Japan)"
          },
          "colon": {
            "label": "₡ (Colón, currency of Costa Rica)"
          },
          "naira": {
            "label": "₦ (Naira, currency of Nigeria)"
          },
          "rupee": {
            "label": "₨ (Rupee, currency of India)"
          },
          "rupie": {
            "label": "₹ (Rupee, currency of India)"
          },
          "won": {
            "label": "₩ (Won, currency in South Korea and North Korea)"
          },
          "hebrew": {
            "label": "₪ (Currency of Israel)"
          },
          "dong": {
            "label": "₫ (Currency of Vietnam)"
          },
          "kip": {
            "label": "₭ (Kip, currency of Laos)"
          },
          "mongolia": {
            "label": "₮ (Currency of Mongolia)"
          },
          "peso": {
            "label": "₱ (Peso, currency of the Philippines)"
          },
          "guarani": {
            "label": "₲ (Guaraní, currency of Paraguay)"
          },
          "hryvnia": {
            "label": "₴ (Hryvnia, currency of Ukraine)"
          },
          "tenge": {
            "label": "₸ (Tenge, currency of Kazakhstan)"
          },
          "lira": {
            "label": "₺ (Lira, currency of Turkey)"
          },
          "manat": {
            "label": "₼ (Manat, currency of Azerbaijan)"
          },
          "rubles": {
            "label": "₽ (Rubles, currency of Russia)"
          },
          "lari": {
            "label": "₾ (Lari, currency of Georgia)"
          },
          "bitcoin": {
            "label": "₿ (Bitcoin, crypto currency)"
          }
        },
        "val": "dollar"
      },
      "format__date_format": {
        "type": "select",
        "label": "Type",
        "show_if": "this.format__category=='date'",
        "required": true,
        "options": {
          "mm/dd/yyyy": {
            "label": "3/14/2012"
          },
          "D, M dd, Y": {
            "label": "Wednesday, March 14, 2012"
          },
          "yyyy-mm-dd": {
            "label": "2012-03-14"
          },
          "m.dd.yyyy": {
            "label": "3.14.2012"
          },
          "m.dd.yy": {
            "label": "3.14.12"
          },
          "dd.m.yyyy": {
            "label": "14.3.2012"
          },
          "dd.m.yy": {
            "label": "14.3.12"
          },
          "M dd, Y": {
            "label": "March 14, 2012"
          },
          "dd-mm-yyyy": {
            "label": "14-03-2012"
          },
          "mm-dd-yyyy": {
            "label": "03-14-2012"
          },
          "dd-mm-yy": {
            "label": "14-03-12"
          },
          "mm-dd-yy": {
            "label": "03-14-12"
          }
        },
        "val": "mm/dd/yyyy",
        "breakLine": true
      },
      "delete": {
        "type": "button",
        "label": "Delete",
        "function": "DELETE_ROW"
      }
    },
    "breakLine": true,
    "style": "margin-bottom: 20px"
  }
},
"/common-snippets/StandardOutput.json/StandardOutput.json": {
  "output": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "output.custom_text": {
        "type": "text",
        "label": "Output Table Name",
        "show_if": "output.custom_options=='false' || (output.custom_options=='true' && output.compose_table_name=='false')",
        "minLength": 1,
        "val": "",
        "width": "100%",
        "breakLine": true
      },
      "output.custom_options": {
        "type": "checkbox",
        "label": "Output Options",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "output.compose_table_name": {
        "type": "checkbox",
        "label": "Compose Table Name",
        "show_if": "output.custom_options=='true'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "compose_table_name_frame": {
        "type": "fieldset",
        "label": "Compose Output Table Name",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "output.custom_options=='true' && output.compose_table_name=='true'",
        "repeat": false,
        "fields": {
          "output.prefix_rule": {
            "type": "select",
            "label": "Prefix",
            "show_if": "output.compose_table_name=='true'",
            "val": "empty",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.prefix_text": {
            "type": "text",
            "label": "Prefix Text",
            "show_if": "output.compose_table_name=='true' && output.prefix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "output.core_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "show_if": "output.compose_table_name=='true' && output.prefix_rule!='empty'",
            "val": "_",
            "width": "50px"
          },
          "output.core_rule": {
            "type": "select",
            "label": "Table Name",
            "show_if": "output.compose_table_name=='true'",
            "val": "input_table_name",
            "options": {
              "input_table_name": {
                "label": "Input Table Name"
              },
              "script_name": {
                "label": "Task Name"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.core_text": {
            "type": "text",
            "label": "Main Table Name",
            "show_if": "output.compose_table_name=='true' && output.core_rule=='custom'",
            "required": true,
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "output.suffix_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "show_if": "output.compose_table_name=='true'",
            "val": "_",
            "width": "50px"
          },
          "output.suffix_rule": {
            "type": "select",
            "label": "Suffix",
            "show_if": "output.compose_table_name=='true'",
            "val": "script_name",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.suffix_text": {
            "type": "text",
            "label": "Suffix Text",
            "show_if": "output.compose_table_name=='true' && output.suffix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": "",
            "breakLine": true
          },
          "output.timezone": {
            "type": "select",
            "label": "Timezone",
            "show_if": "output.compose_table_name=='true' && (output.prefix_rule=='date_string_type1' || output.prefix_rule=='date_string_type2' || output.prefix_rule=='time_string' || output.prefix_rule=='datetime_string' || output.suffix_rule=='date_string_type1' || output.suffix_rule=='date_string_type2' || output.suffix_rule=='time_string' || output.suffix_rule=='datetime_string')",
            "val": "Europe/Berlin",
            "required": true,
            "options": {
              "America/Adak": {
                "label": "Adak, Gambier"
              },
              "Australia/Adelaide": {
                "label": "Adelaide, Broken Hill, Darwin"
              },
              "America/Anchorage": {
                "label": "Anchorage, Juneau, Sitka"
              },
              "Pacific/Apia": {
                "label": "Apia, Asau, Mulifanua, Afega, Leulumoega"
              },
              "Pacific/Enderbury": {
                "label": "Apia, Fiji, Tongatapu"
              },
              "Antarctica/McMurdo": {
                "label": "Auckland, Casey, Davis"
              },
              "Pacific/Auckland": {
                "label": "Auckland, Wellington, Christchurch"
              },
              "Asia/Bangkok": {
                "label": "Bangkok, Jakarta, Novosibirsk"
              },
              "Europe/Berlin": {
                "label": "Berlin, Paris, Amsterdam"
              },
              "Australia/Perth": {
                "label": "Brunei, Singapore, Perth"
              },
              "Atlantic/Cape_Verde": {
                "label": "Cape Verde,Praia, Mindelo, Santa Maria"
              },
              "America/Belize": {
                "label": "Costa Rica, El Salvador, Denver"
              },
              "Antarctica/Vostok": {
                "label": "Dhaka, Bishkek, Omsk"
              },
              "Europe/Astrakhan": {
                "label": "Dubai, Baku, Tbilisi"
              },
              "Australia/Eucla": {
                "label": "Eucla"
              },
              "Pacific/Honolulu": {
                "label": "Honolulu, Rarotonga, Tahiti"
              },
              "Asia/Kabul": {
                "label": "Kabul, Kandahār, Mazār-e Sharīf, Herāt, Jalālābād"
              },
              "Asia/Aqtau": {
                "label": "Karachi, Tashkent, Maldives"
              },
              "Asia/Kathmandu": {
                "label": "Kathmandu, Pokhara, Pātan, Biratnagar"
              },
              "Pacific/Kiritimati": {
                "label": "Kiritimati"
              },
              "Asia/Colombo": {
                "label": "Kolkata, Colombo, Jaffna, Negombo"
              },
              "Europe/Guernsey": {
                "label": "London, Dublin, Lisbon"
              },
              "Australia/Lord_Howe": {
                "label": "Lord Howe"
              },
              "America/Creston": {
                "label": "Los Angeles, Vancouver, Hermosillo"
              },
              "Pacific/Marquesas": {
                "label": "Marquesas, Taiohae"
              },
              "America/Cayman": {
                "label": "Mexico City, Panama, Chicago"
              },
              "Pacific/Niue": {
                "label": "Midway, Niue, Pago Pago"
              },
              "Europe/Mariehamn": {
                "label": "Moscow, Istanbul, Qatar"
              },
              "Asia/Kolkata": {
                "label": "Mumbai, Delhi, Bengaluru, Kolkata, Chennai"
              },
              "America/Miquelon": {
                "label": "Noronha, Nuuk, Miquelon"
              },
              "America/Danmarkshavn": {
                "label": "Reykjavik, Dakar, Casablanca"
              },
              "Pacific/Bougainville": {
                "label": "Sakhalin, Norfolk, Bougainville"
              },
              "America/Araguaina": {
                "label": "Sao Paulo, Buenos Aires, Montevideo"
              },
              "America/St_Johns": {
                "label": "St. Johns, Mount Pearl, Corner Brook"
              },
              "Asia/Tehran": {
                "label": "Tehran, Mashhad, Isfahan, Karaj, Tabriz"
              },
              "Asia/Tokyo": {
                "label": "Tokyo, Seoul, Jayapura"
              },
              "America/New_York": {
                "label": "Toronto, Santiago, New York"
              },
              "Australia/Sydney": {
                "label": "Vladivostok, Sydney, Brisbane"
              },
              "Asia/Yangon": {
                "label": "Yangon, Cocos, Mandalay, Nay Pyi Taw, Mawlamyine"
              },
              "Indian/Cocos": {
                "label": "Yangon, Cocos, West Island"
              }
            },
            "breakLine": true
          }
        }
      }
    }
  }
}
,
"/common-snippets/DataCommonsDescription.json/DataCommonsDescription.json": {
  "data_commons_description": {
    "type": "textarea",
    "label": "",
    "val": "Source: Data Commons; for applicable license conditions of the data, please refer to https://www.datacommons.org/ and their data suppliers.",
    "md_no_resize": false,
    "disabled": true,
    "width": "100%"
  }
},
"/common-snippets/SelectInputRows.json/SelectInputRows.json": {
  "options.cut_off_run": {
    "type": "checkbox",
    "label": "Cut off Input Table",
    "val": "false",
    "isOn": "true",
    "isOff": "false"
  },
  "options.cut_off.type": {
    "type": "select",
    "label": "Type of Cut off ",
    "show_if": "options.cut_off_run=='true'",
    "required": true,
    "options": {
      "from_first_row": {
        "label": "From first row"
      },
      "range": {
        "label": "Range"
      }
    },
    "val": "from_first_row"
  },
  "options.cut_off.start_row_num": {
    "type": "text",
    "label": "Start Row #",
    "show_if": "options.cut_off_run=='true' && options.cut_off.type=='range'",
    "required": true,
    "minLength": 1,
    "maxLength": 7,
    "val": "1"
  },
  "options.cut_off.row_count": {
    "type": "text",
    "label": "Rows count",
    "show_if": "options.cut_off_run=='true'",
    "required": true,
    "minLength": 1,
    "maxLength": 7,
    "val": "100"
  }
}
,
"/common-snippets/StandardOutputWithoutInputTable.json/StandardOutputWithoutInputTable.json": {
  "output": {
    "type": "fieldset",
    "label": "Define Output Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "output.custom_text": {
        "type": "text",
        "label": "Output Table Name",
        "show_if": "output.custom_options=='false' || (output.custom_options=='true' && output.compose_table_name=='false')",
        "minLength": 1,
        "val": "",
        "width": "100%",
        "breakLine": true
      },
      "output.custom_options": {
        "type": "checkbox",
        "label": "Output Options",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "output.compose_table_name": {
        "type": "checkbox",
        "label": "Compose Table Name",
        "show_if": "output.custom_options=='true'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "compose_table_name_frame": {
        "type": "fieldset",
        "label": "Compose Output Table Name",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "output.custom_options=='true' && output.compose_table_name=='true'",
        "repeat": false,
        "fields": {
          "output.prefix_rule": {
            "type": "select",
            "label": "Prefix",
            "show_if": "output.compose_table_name=='true'",
            "val": "empty",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.prefix_text": {
            "type": "text",
            "label": "Prefix Text",
            "show_if": "output.compose_table_name=='true' && output.prefix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "output.core_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "show_if": "output.compose_table_name=='true' && output.prefix_rule!='empty'",
            "val": "_",
            "width": "50px"
          },
          "output.core_rule": {
            "type": "select",
            "label": "Table Name",
            "show_if": "output.compose_table_name=='true'",
            "val": "script_name",
            "options": {
              "script_name": {
                "label": "Task Name"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.core_text": {
            "type": "text",
            "label": "Output Table Name",
            "show_if": "output.compose_table_name=='true' && output.core_rule=='custom'",
            "required": true,
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "output.suffix_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "show_if": "output.compose_table_name=='true'",
            "val": "_",
            "width": "50px"
          },
          "output.suffix_rule": {
            "type": "select",
            "label": "Suffix",
            "show_if": "output.compose_table_name=='true'",
            "val": "script_name",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.suffix_text": {
            "type": "text",
            "label": "Suffix Text",
            "show_if": "output.compose_table_name=='true' && output.suffix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": "",
            "breakLine": true
          },
          "output.timezone": {
            "type": "select",
            "label": "Timezone",
            "show_if": "output.compose_table_name=='true' && (output.prefix_rule=='date_string_type1' || output.prefix_rule=='date_string_type2' || output.prefix_rule=='time_string' || output.prefix_rule=='datetime_string' || output.core_rule=='date_string_type1' || output.core_rule=='date_string_type2' || output.core_rule=='time_string' || output.core_rule=='datetime_string' || output.suffix_rule=='date_string_type1' || output.suffix_rule=='date_string_type2' || output.suffix_rule=='time_string' || output.suffix_rule=='datetime_string')",
            "val": "Europe/Berlin",
            "required": true,
            "options": {
              "America/Adak": {
                "label": "Adak, Gambier"
              },
              "Australia/Adelaide": {
                "label": "Adelaide, Broken Hill, Darwin"
              },
              "America/Anchorage": {
                "label": "Anchorage, Juneau, Sitka"
              },
              "Pacific/Apia": {
                "label": "Apia, Asau, Mulifanua, Afega, Leulumoega"
              },
              "Pacific/Enderbury": {
                "label": "Apia, Fiji, Tongatapu"
              },
              "Antarctica/McMurdo": {
                "label": "Auckland, Casey, Davis"
              },
              "Pacific/Auckland": {
                "label": "Auckland, Wellington, Christchurch"
              },
              "Asia/Bangkok": {
                "label": "Bangkok, Jakarta, Novosibirsk"
              },
              "Europe/Berlin": {
                "label": "Berlin, Paris, Amsterdam"
              },
              "Australia/Perth": {
                "label": "Brunei, Singapore, Perth"
              },
              "Atlantic/Cape_Verde": {
                "label": "Cape Verde,Praia, Mindelo, Santa Maria"
              },
              "America/Belize": {
                "label": "Costa Rica, El Salvador, Denver"
              },
              "Antarctica/Vostok": {
                "label": "Dhaka, Bishkek, Omsk"
              },
              "Europe/Astrakhan": {
                "label": "Dubai, Baku, Tbilisi"
              },
              "Australia/Eucla": {
                "label": "Eucla"
              },
              "Pacific/Honolulu": {
                "label": "Honolulu, Rarotonga, Tahiti"
              },
              "Asia/Kabul": {
                "label": "Kabul, Kandahār, Mazār-e Sharīf, Herāt, Jalālābād"
              },
              "Asia/Aqtau": {
                "label": "Karachi, Tashkent, Maldives"
              },
              "Asia/Kathmandu": {
                "label": "Kathmandu, Pokhara, Pātan, Biratnagar"
              },
              "Pacific/Kiritimati": {
                "label": "Kiritimati"
              },
              "Asia/Colombo": {
                "label": "Kolkata, Colombo, Jaffna, Negombo"
              },
              "Europe/Guernsey": {
                "label": "London, Dublin, Lisbon"
              },
              "Australia/Lord_Howe": {
                "label": "Lord Howe"
              },
              "America/Creston": {
                "label": "Los Angeles, Vancouver, Hermosillo"
              },
              "Pacific/Marquesas": {
                "label": "Marquesas, Taiohae"
              },
              "America/Cayman": {
                "label": "Mexico City, Panama, Chicago"
              },
              "Pacific/Niue": {
                "label": "Midway, Niue, Pago Pago"
              },
              "Europe/Mariehamn": {
                "label": "Moscow, Istanbul, Qatar"
              },
              "Asia/Kolkata": {
                "label": "Mumbai, Delhi, Bengaluru, Kolkata, Chennai"
              },
              "America/Miquelon": {
                "label": "Noronha, Nuuk, Miquelon"
              },
              "America/Danmarkshavn": {
                "label": "Reykjavik, Dakar, Casablanca"
              },
              "Pacific/Bougainville": {
                "label": "Sakhalin, Norfolk, Bougainville"
              },
              "America/Araguaina": {
                "label": "Sao Paulo, Buenos Aires, Montevideo"
              },
              "America/St_Johns": {
                "label": "St. Johns, Mount Pearl, Corner Brook"
              },
              "Asia/Tehran": {
                "label": "Tehran, Mashhad, Isfahan, Karaj, Tabriz"
              },
              "Asia/Tokyo": {
                "label": "Tokyo, Seoul, Jayapura"
              },
              "America/New_York": {
                "label": "Toronto, Santiago, New York"
              },
              "Australia/Sydney": {
                "label": "Vladivostok, Sydney, Brisbane"
              },
              "Asia/Yangon": {
                "label": "Yangon, Cocos, Mandalay, Nay Pyi Taw, Mawlamyine"
              },
              "Indian/Cocos": {
                "label": "Yangon, Cocos, West Island"
              }
            },
            "breakLine": true
          }
        }
      }
    }
  }
},
"/common-snippets/SelectColumnRowDefaultAll.json/SelectColumnRowDefaultAll.json": {
  "placeholder": {
    "breakLine": true
  },
  "apply_to_all_columns": {
    "type": "checkbox",
    "label": "All Columns",
    "val": "true",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true	
  },
  "apply_columns": {
    "type": "select",
    "label": "Select Columns to Apply",
    "show_if": "apply_to_all_columns=='false'",
    "required": true,
    "table": "table_id",
    "multiple": true,
    "bind": "COLUMNS",
    "breakLine": true
  },
  "apply_to_all_rows": {
    "type": "checkbox",
    "label": "All Rows",
    "show_if": "$table_id.numOfLabel >= 1",
    "val": "true",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  },
  "apply_rows": {
    "type": "select",
    "label": "Select Rows to Apply",
    "show_if": "$table_id.numOfLabel >= 1 && apply_to_all_rows=='false'",
    "required": true,
    "table": "table_id",
    "multiple": true,
    "bind": "LABELS",
    "breakLine": true
  }
}
,
"/common-snippets/Timezone.json/Timezone.json": {
  "output.timezone": {
    "type": "select",
    "label": "Timezone",
    "show_if": "output.compose_table_name=='true' && (output.prefix_rule=='date_string_type1' || output.prefix_rule=='date_string_type2' || output.prefix_rule=='time_string' || output.prefix_rule=='datetime_string' || output.suffix_rule=='date_string_type1' || output.suffix_rule=='date_string_type2' || output.suffix_rule=='time_string' || output.suffix_rule=='datetime_string')",
    "val": "Europe/Berlin",
    "required": true,
    "options": {
      "America/Adak": {
        "label": "Adak, Gambier"
      },
      "Australia/Adelaide": {
        "label": "Adelaide, Broken Hill, Darwin"
      },
      "America/Anchorage": {
        "label": "Anchorage, Juneau, Sitka"
      },
      "Pacific/Apia": {
        "label": "Apia, Asau, Mulifanua, Afega, Leulumoega"
      },
      "Pacific/Enderbury": {
        "label": "Apia, Fiji, Tongatapu"
      },
      "Antarctica/McMurdo": {
        "label": "Auckland, Casey, Davis"
      },
      "Pacific/Auckland": {
        "label": "Auckland, Wellington, Christchurch"
      },
      "Asia/Bangkok": {
        "label": "Bangkok, Jakarta, Novosibirsk"
      },
      "Europe/Berlin": {
        "label": "Berlin, Paris, Amsterdam"
      },
      "Australia/Perth": {
        "label": "Brunei, Singapore, Perth"
      },
      "Atlantic/Cape_Verde": {
        "label": "Cape Verde,Praia, Mindelo, Santa Maria"
      },
      "America/Belize": {
        "label": "Costa Rica, El Salvador, Denver"
      },
      "Antarctica/Vostok": {
        "label": "Dhaka, Bishkek, Omsk"
      },
      "Europe/Astrakhan": {
        "label": "Dubai, Baku, Tbilisi"
      },
      "Australia/Eucla": {
        "label": "Eucla"
      },
      "Pacific/Honolulu": {
        "label": "Honolulu, Rarotonga, Tahiti"
      },
      "Asia/Kabul": {
        "label": "Kabul, Kandahār, Mazār-e Sharīf, Herāt, Jalālābād"
      },
      "Asia/Aqtau": {
        "label": "Karachi, Tashkent, Maldives"
      },
      "Asia/Kathmandu": {
        "label": "Kathmandu, Pokhara, Pātan, Biratnagar"
      },
      "Pacific/Kiritimati": {
        "label": "Kiritimati"
      },
      "Asia/Colombo": {
        "label": "Kolkata, Colombo, Jaffna, Negombo"
      },
      "Europe/Guernsey": {
        "label": "London, Dublin, Lisbon"
      },
      "Australia/Lord_Howe": {
        "label": "Lord Howe"
      },
      "America/Creston": {
        "label": "Los Angeles, Vancouver, Hermosillo"
      },
      "Pacific/Marquesas": {
        "label": "Marquesas, Taiohae"
      },
      "America/Cayman": {
        "label": "Mexico City, Panama, Chicago"
      },
      "Pacific/Niue": {
        "label": "Midway, Niue, Pago Pago"
      },
      "Europe/Mariehamn": {
        "label": "Moscow, Istanbul, Qatar"
      },
      "Asia/Kolkata": {
        "label": "Mumbai, Delhi, Bengaluru, Kolkata, Chennai"
      },
      "America/Miquelon": {
        "label": "Noronha, Nuuk, Miquelon"
      },
      "America/Danmarkshavn": {
        "label": "Reykjavik, Dakar, Casablanca"
      },
      "Pacific/Bougainville": {
        "label": "Sakhalin, Norfolk, Bougainville"
      },
      "America/Araguaina": {
        "label": "Sao Paulo, Buenos Aires, Montevideo"
      },
      "America/St_Johns": {
        "label": "St. Johns ,Mount Pearl, Corner Brook"
      },
      "Asia/Tehran": {
        "label": "Tehran, Mashhad, Isfahan, Karaj, Tabriz"
      },
      "Asia/Tokyo": {
        "label": "Tokyo, Seoul, Jayapura"
      },
      "America/New_York": {
        "label": "Toronto, Santiago, New York"
      },
      "Australia/Sydney": {
        "label": "Vladivostok, Sydney, Brisbane"
      },
      "Asia/Yangon": {
        "label": "Yangon, Cocos, Mandalay, Nay Pyi Taw, Mawlamyine"
      },
      "Indian/Cocos": {
        "label": "Yangon, Cocos, West Island"
      }
    }
  }
}
,
"/common-snippets/Months.json/Months.json": {
  "options.sel_month": {
    "type": "select",
    "label": "Select month",
    "required": true,
    "options": {
      "1": {
        "label": "1"
      },
      "2": {
        "label": "2"
      },
      "3": {
        "label": "3"
      },
      "4": {
        "label": "4"
      },
      "5": {
        "label": "5"
      },
      "6": {
        "label": "6"
      },
      "7": {
        "label": "7"
      },
      "8": {
        "label": "8"
      },
      "9": {
        "label": "9"
      },
      "10": {
        "label": "10"
      },
      "11": {
        "label": "11"
      },
      "12": {
        "label": "12"
      }
    },
    "val": "1",
    "breakLine": true
  }
},
"/common-snippets/OutputConfig.json/OutputConfig.json": {
  "output_config_frame": {
    "type": "fieldset",
    "label": "Output Configuration",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.custom_options=='true'",
    "repeat": false,
    "fields": {
      "output.add_tag": {
        "type": "checkbox",
        "label": "Add Tag",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-right: 15px"
      },
      "output.add_tag_type": {
        "type": "select",
        "label": "Tagging type",
        "show_if": "output.add_tag=='true'",
        "options": {
          "custom": {
            "label": "Custom"
          },
          "input_table_names": {
            "label": "Input Table Name(s)"
          },
          "output_table_names": {
            "label": "Output Table Name(s)"
          },
          "task_name": {
            "label": "Task Name"
          },
          "input_table_tags": {
            "label": "Input Table Tag(s)"
          }
        },
        "val": "custom"
      },
      "output.tag_name": {
        "type": "text",
        "label": "Tag Name",
        "show_if": "output.add_tag=='true' && output.add_tag_type=='custom'",
        "required": true,
        "minLength": 1,
        "maxLength": 255,
        "val": "",
        "breakLine": true,
        "style": "margin-left: 15px"
      }
    }
  }
}
,
"/common-snippets/TimeTrackerOutput.json/TimeTrackerOutput.json": {
  "output": {
    "type": "fieldset",
    "label": "Define Output Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "output.custom_text": {
        "type": "text",
        "label": "Output Table Name",
        "show_if": "output.custom_options=='false' || (output.custom_options=='true' && output.compose_table_name=='false')",
        "minLength": 1,
        "val": "Time Tracker",
        "width": "100%",
        "breakLine": true
      },
      "output.custom_options": {
        "type": "checkbox",
        "label": "Output Options",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "output.compose_table_name": {
        "type": "checkbox",
        "label": "Compose Table Name",
        "show_if": "output.custom_options=='true'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "compose_table_name_frame": {
        "type": "fieldset",
        "label": "Compose Output Table Name",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "output.custom_options=='true' && output.compose_table_name=='true'",
        "repeat": false,
        "fields": {
          "output.prefix_rule": {
            "type": "select",
            "label": "Prefix",
            "show_if": "output.compose_table_name=='true'",
            "val": "empty",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.prefix_text": {
            "type": "text",
            "label": "Prefix Text",
            "show_if": "output.compose_table_name=='true' && output.prefix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "output.core_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "show_if": "output.compose_table_name=='true' && output.prefix_rule!='empty'",
            "val": "_",
            "width": "50px"
          },
          "output.core_rule": {
            "type": "select",
            "label": "Table Name",
            "show_if": "output.compose_table_name=='true'",
            "val": "input_table_name",
            "options": {
              "input_table_name": {
                "label": "Input Table Name"
              },
              "script_name": {
                "label": "Task Name"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.core_text": {
            "type": "text",
            "label": "Main Table Name",
            "show_if": "output.compose_table_name=='true' && output.core_rule=='custom'",
            "required": true,
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "output.suffix_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "show_if": "output.compose_table_name=='true'",
            "val": "_",
            "width": "50px"
          },
          "output.suffix_rule": {
            "type": "select",
            "label": "Suffix",
            "show_if": "output.compose_table_name=='true'",
            "val": "script_name",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.suffix_text": {
            "type": "text",
            "label": "Suffix Text",
            "show_if": "output.compose_table_name=='true' && output.suffix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": "",
            "breakLine": true
          },
          "output.timezone": {
            "type": "select",
            "label": "Timezone",
            "show_if": "output.compose_table_name=='true' && (output.prefix_rule=='date_string_type1' || output.prefix_rule=='date_string_type2' || output.prefix_rule=='time_string' || output.prefix_rule=='datetime_string' || output.suffix_rule=='date_string_type1' || output.suffix_rule=='date_string_type2' || output.suffix_rule=='time_string' || output.suffix_rule=='datetime_string')",
            "val": "Europe/Berlin",
            "required": true,
            "options": {
              "America/Adak": {
                "label": "Adak, Gambier"
              },
              "Australia/Adelaide": {
                "label": "Adelaide, Broken Hill, Darwin"
              },
              "America/Anchorage": {
                "label": "Anchorage, Juneau, Sitka"
              },
              "Pacific/Apia": {
                "label": "Apia, Asau, Mulifanua, Afega, Leulumoega"
              },
              "Pacific/Enderbury": {
                "label": "Apia, Fiji, Tongatapu"
              },
              "Antarctica/McMurdo": {
                "label": "Auckland, Casey, Davis"
              },
              "Pacific/Auckland": {
                "label": "Auckland, Wellington, Christchurch"
              },
              "Asia/Bangkok": {
                "label": "Bangkok, Jakarta, Novosibirsk"
              },
              "Europe/Berlin": {
                "label": "Berlin, Paris, Amsterdam"
              },
              "Australia/Perth": {
                "label": "Brunei, Singapore, Perth"
              },
              "Atlantic/Cape_Verde": {
                "label": "Cape Verde,Praia, Mindelo, Santa Maria"
              },
              "America/Belize": {
                "label": "Costa Rica, El Salvador, Denver"
              },
              "Antarctica/Vostok": {
                "label": "Dhaka, Bishkek, Omsk"
              },
              "Europe/Astrakhan": {
                "label": "Dubai, Baku, Tbilisi"
              },
              "Australia/Eucla": {
                "label": "Eucla"
              },
              "Pacific/Honolulu": {
                "label": "Honolulu, Rarotonga, Tahiti"
              },
              "Asia/Kabul": {
                "label": "Kabul, Kandahār, Mazār-e Sharīf, Herāt, Jalālābād"
              },
              "Asia/Aqtau": {
                "label": "Karachi, Tashkent, Maldives"
              },
              "Asia/Kathmandu": {
                "label": "Kathmandu, Pokhara, Pātan, Biratnagar"
              },
              "Pacific/Kiritimati": {
                "label": "Kiritimati"
              },
              "Asia/Colombo": {
                "label": "Kolkata, Colombo, Jaffna, Negombo"
              },
              "Europe/Guernsey": {
                "label": "London, Dublin, Lisbon"
              },
              "Australia/Lord_Howe": {
                "label": "Lord Howe"
              },
              "America/Creston": {
                "label": "Los Angeles, Vancouver, Hermosillo"
              },
              "Pacific/Marquesas": {
                "label": "Marquesas, Taiohae"
              },
              "America/Cayman": {
                "label": "Mexico City, Panama, Chicago"
              },
              "Pacific/Niue": {
                "label": "Midway, Niue, Pago Pago"
              },
              "Europe/Mariehamn": {
                "label": "Moscow, Istanbul, Qatar"
              },
              "Asia/Kolkata": {
                "label": "Mumbai, Delhi, Bengaluru, Kolkata, Chennai"
              },
              "America/Miquelon": {
                "label": "Noronha, Nuuk, Miquelon"
              },
              "America/Danmarkshavn": {
                "label": "Reykjavik, Dakar, Casablanca"
              },
              "Pacific/Bougainville": {
                "label": "Sakhalin, Norfolk, Bougainville"
              },
              "America/Araguaina": {
                "label": "Sao Paulo, Buenos Aires, Montevideo"
              },
              "America/St_Johns": {
                "label": "St. Johns, Mount Pearl, Corner Brook"
              },
              "Asia/Tehran": {
                "label": "Tehran, Mashhad, Isfahan, Karaj, Tabriz"
              },
              "Asia/Tokyo": {
                "label": "Tokyo, Seoul, Jayapura"
              },
              "America/New_York": {
                "label": "Toronto, Santiago, New York"
              },
              "Australia/Sydney": {
                "label": "Vladivostok, Sydney, Brisbane"
              },
              "Asia/Yangon": {
                "label": "Yangon, Cocos, Mandalay, Nay Pyi Taw, Mawlamyine"
              },
              "Indian/Cocos": {
                "label": "Yangon, Cocos, West Island"
              }
            },
            "breakLine": true
          }
        }
      }
    }
  }
},
"/common-snippets/AddTagWithoutInputTable.json/AddTagWithoutInputTable.json": {
  "output_config_frame": {
    "type": "fieldset",
    "label": "Output Configuration",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.custom_options=='true'",
    "repeat": false,
    "fields": {
      "output.add_tag": {
        "type": "checkbox",
        "label": "Add Tag",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-right: 15px"
      },
      "output.add_tag_type": {
        "type": "select",
        "label": "Tagging type",
        "show_if": "output.add_tag=='true'",
        "options": {
          "custom": {
            "label": "Custom"
          },
          "output_table_names": {
            "label": "Output Table Name(s)"
          },
          "task_name": {
            "label": "Task Name"
          }
        },
        "val": "custom"
      },
      "output.tag_name": {
        "type": "text",
        "label": "Tag Name",
        "show_if": "output.add_tag=='true' && output.add_tag_type=='custom'",
        "required": true,
        "minLength": 1,
        "maxLength": 255,
        "val": "",
        "breakLine": true,
        "style": "margin-left: 15px"
      }
    }
  }
}
,
"/common-snippets/YearsWithoutBreakline.json/YearsWithoutBreakline.json": {
  "options.sel_year": {
    "type": "select",
    "label": "Select year",
    "required": true,
    "options": {
      "1960": {
        "label": "1960"
      },
      "1961": {
        "label": "1961"
      },
      "1962": {
        "label": "1962"
      },
      "1963": {
        "label": "1963"
      },
      "1964": {
        "label": "1964"
      },
      "1965": {
        "label": "1965"
      },
      "1966": {
        "label": "1966"
      },
      "1967": {
        "label": "1967"
      },
      "1968": {
        "label": "1968"
      },
      "1969": {
        "label": "1969"
      },
      "1970": {
        "label": "1970"
      },
      "1971": {
        "label": "1971"
      },
      "1972": {
        "label": "1972"
      },
      "1973": {
        "label": "1973"
      },
      "1974": {
        "label": "1974"
      },
      "1975": {
        "label": "1975"
      },
      "1976": {
        "label": "1976"
      },
      "1977": {
        "label": "1977"
      },
      "1978": {
        "label": "1978"
      },
      "1979": {
        "label": "1979"
      },
      "1980": {
        "label": "1980"
      },
      "1981": {
        "label": "1981"
      },
      "1982": {
        "label": "1982"
      },
      "1983": {
        "label": "1983"
      },
      "1984": {
        "label": "1984"
      },
      "1985": {
        "label": "1985"
      },
      "1986": {
        "label": "1986"
      },
      "1987": {
        "label": "1987"
      },
      "1988": {
        "label": "1988"
      },
      "1989": {
        "label": "1989"
      },
      "1990": {
        "label": "1990"
      },
      "1991": {
        "label": "1991"
      },
      "1992": {
        "label": "1992"
      },
      "1993": {
        "label": "1993"
      },
      "1994": {
        "label": "1994"
      },
      "1995": {
        "label": "1995"
      },
      "1996": {
        "label": "1996"
      },
      "1997": {
        "label": "1997"
      },
      "1998": {
        "label": "1998"
      },
      "1999": {
        "label": "1999"
      },
      "2000": {
        "label": "2000"
      },
      "2001": {
        "label": "2001"
      },
      "2002": {
        "label": "2002"
      },
      "2003": {
        "label": "2003"
      },
      "2004": {
        "label": "2004"
      },
      "2005": {
        "label": "2005"
      },
      "2006": {
        "label": "2006"
      },
      "2007": {
        "label": "2007"
      },
      "2008": {
        "label": "2008"
      },
      "2009": {
        "label": "2009"
      },
      "2010": {
        "label": "2010"
      },
      "2011": {
        "label": "2011"
      },
      "2012": {
        "label": "2012"
      },
      "2013": {
        "label": "2013"
      },
      "2014": {
        "label": "2014"
      },
      "2015": {
        "label": "2015"
      },
      "2016": {
        "label": "2016"
      },
      "2017": {
        "label": "2017"
      },
      "2018": {
        "label": "2018"
      },
      "2019": {
        "label": "2019"
      },
      "2020": {
        "label": "2020"
      },
      "2021": {
        "label": "2021"
      }
    },
    "val": "2021"
  }
},
"/common-snippets/SelectTableWithRows.json/SelectTableWithRows.json": {
  "input": {
    "type": "fieldset",
    "label": "Select Input Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "input_table": {
        "type": "select",
        "label": "Select Table",
        "bind": "TABLES",
        "empty": "",
        "required": true
      },
      "remove_input_table_after_processing": {
        "type": "hidden",
        "val": "false"
      },
      "is_word": {
        "type": "hidden",
        "val": "false"
      },
      "apply_to_all_rows": {
        "type": "checkbox",
        "label": "All Rows",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "header_labels": {
        "type": "select",
        "label": "Select Label(s) to Apply",
        "show_if": "apply_to_all_rows=='false'",
        "required": true,
        "width": "100%",
        "table": "input_table",
        "multiple": true,
        "bind": "LABELS",
        "breakLine": true
      }
    }
  }
}
,
"/common-snippets/SelectCustomScript.json/SelectCustomScript.json": {
  "input": {
    "type": "fieldset",
    "label": "Select Custom Task",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "custom_script": {
        "type": "select",
        "label": "Custom Script",
        "bind": "OWN_CUSTOM_SCRIPTS",
        "empty": "",
        "required": true,
        "breakLine": true
      }
    }
  }
}
,
"/common-snippets/SelectTask.json/SelectTask.json": {
  "select_task_frame": {
    "type": "fieldset",
    "label": "Select Task",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "input_task": {
        "type": "select",
        "label": "Select Task",
        "bind": "TASKS",
        "empty": "",
        "required": true,
        "breakLine": true
      }
    }
  }
}
,
"/common-snippets/StandardOutputWithOutputAsNewTable.json/StandardOutputWithOutputAsNewTable.json": {
  "output": {
    "type": "fieldset",
    "label": "Define Output Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "output.output_as_new_table": {
        "type": "checkbox",
        "label": "Output as New table",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "output.custom_text": {
        "type": "text",
        "label": "Output Table Name",
        "show_if": "(output.custom_options=='false' && output.output_as_new_table=='true') || (output.custom_options=='false' && output.compose_table_name=='true' && output.output_as_new_table=='true')",
        "minLength": 1,
        "val": "",
        "width": "100%",
        "breakLine": true
      },
      "output.custom_options": {
        "type": "checkbox",
        "label": "Output Options",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "output.compose_table_name": {
        "type": "checkbox",
        "label": "Compose Table Name",
        "show_if": "output.output_as_new_table=='true' && output.custom_options=='true'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "compose_table_name_frame": {
        "type": "fieldset",
        "label": "Compose Output Table Name",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "output.output_as_new_table=='true' && output.custom_options=='true' && output.compose_table_name=='true'",
        "repeat": false,
        "fields": {
          "output.prefix_rule": {
            "type": "select",
            "label": "Prefix",
            "show_if": "output.compose_table_name=='true'",
            "val": "empty",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.prefix_text": {
            "type": "text",
            "label": "Prefix Text",
            "show_if": "output.compose_table_name=='true' && output.prefix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "output.core_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "show_if": "output.compose_table_name=='true' && output.prefix_rule!='empty'",
            "val": "_",
            "width": "50px"
          },
          "output.core_rule": {
            "type": "select",
            "label": "Table Name",
            "show_if": "output.compose_table_name=='true'",
            "val": "input_table_name",
            "options": {
              "input_table_name": {
                "label": "Input Table Name"
              },
              "script_name": {
                "label": "Task Name"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.core_text": {
            "type": "text",
            "label": "Main Table Name",
            "show_if": "output.compose_table_name=='true' && output.core_rule=='custom'",
            "required": true,
            "minLength": 1,
            "maxLength": 31,
            "val": ""
          },
          "output.suffix_delimiter": {
            "type": "text",
            "label": "Delimiter",
            "show_if": "output.compose_table_name=='true'",
            "val": "_",
            "width": "50px"
          },
          "output.suffix_rule": {
            "type": "select",
            "label": "Suffix",
            "show_if": "output.compose_table_name=='true'",
            "val": "script_name",
            "options": {
              "empty": {
                "label": "-"
              },
              "script_name": {
                "label": "Task Name"
              },
              "date_string_type1": {
                "label": "Date: dd_mm_yyyy"
              },
              "date_string_type2": {
                "label": "Date: yyyy_mm_dd"
              },
              "time_string": {
                "label": "Time: h_min_sec"
              },
              "datetime_string": {
                "label": "Date_Time"
              },
              "custom": {
                "label": "Custom"
              }
            }
          },
          "output.suffix_text": {
            "type": "text",
            "label": "Suffix Text",
            "show_if": "output.compose_table_name=='true' && output.suffix_rule=='custom'",
            "minLength": 1,
            "maxLength": 31,
            "val": "",
            "breakLine": true
          },
          "output.timezone": {
            "type": "select",
            "label": "Timezone",
            "show_if": "output.compose_table_name=='true' && (output.prefix_rule=='date_string_type1' || output.prefix_rule=='date_string_type2' || output.prefix_rule=='time_string' || output.prefix_rule=='datetime_string' || output.suffix_rule=='date_string_type1' || output.suffix_rule=='date_string_type2' || output.suffix_rule=='time_string' || output.suffix_rule=='datetime_string')",
            "val": "Europe/Berlin",
            "required": true,
            "options": {
              "America/Adak": {
                "label": "Adak, Gambier"
              },
              "Australia/Adelaide": {
                "label": "Adelaide, Broken Hill, Darwin"
              },
              "America/Anchorage": {
                "label": "Anchorage, Juneau, Sitka"
              },
              "Pacific/Apia": {
                "label": "Apia, Asau, Mulifanua, Afega, Leulumoega"
              },
              "Pacific/Enderbury": {
                "label": "Apia, Fiji, Tongatapu"
              },
              "Antarctica/McMurdo": {
                "label": "Auckland, Casey, Davis"
              },
              "Pacific/Auckland": {
                "label": "Auckland, Wellington, Christchurch"
              },
              "Asia/Bangkok": {
                "label": "Bangkok, Jakarta, Novosibirsk"
              },
              "Europe/Berlin": {
                "label": "Berlin, Paris, Amsterdam"
              },
              "Australia/Perth": {
                "label": "Brunei, Singapore, Perth"
              },
              "Atlantic/Cape_Verde": {
                "label": "Cape Verde, Praia, Mindelo, Santa Maria"
              },
              "America/Belize": {
                "label": "Costa Rica, El Salvador, Denver"
              },
              "Antarctica/Vostok": {
                "label": "Dhaka, Bishkek, Omsk"
              },
              "Europe/Astrakhan": {
                "label": "Dubai, Baku, Tbilisi"
              },
              "Australia/Eucla": {
                "label": "Eucla"
              },
              "Pacific/Honolulu": {
                "label": "Honolulu, Rarotonga, Tahiti"
              },
              "Asia/Kabul": {
                "label": "Kabul, Kandahār, Mazār-e Sharīf, Herāt, Jalālābād"
              },
              "Asia/Aqtau": {
                "label": "Karachi, Tashkent, Maldives"
              },
              "Asia/Kathmandu": {
                "label": "Kathmandu,Pokhara, Pātan, Biratnagar"
              },
              "Pacific/Kiritimati": {
                "label": "Kiritimati"
              },
              "Asia/Colombo": {
                "label": "Kolkata, Colombo, Jaffna, Negombo"
              },
              "Europe/Guernsey": {
                "label": "London, Dublin, Lisbon"
              },
              "Australia/Lord_Howe": {
                "label": "Lord Howe"
              },
              "America/Creston": {
                "label": "Los Angeles, Vancouver, Hermosillo"
              },
              "Pacific/Marquesas": {
                "label": "Marquesas, Taiohae"
              },
              "America/Cayman": {
                "label": "Mexico City, Panama, Chicago"
              },
              "Pacific/Niue": {
                "label": "Midway, Niue, Pago Pago"
              },
              "Europe/Mariehamn": {
                "label": "Moscow, Istanbul, Qatar"
              },
              "Asia/Kolkata": {
                "label": "Mumbai, Delhi, Bengaluru, Kolkata, Chennai"
              },
              "America/Miquelon": {
                "label": "Noronha, Nuuk, Miquelon"
              },
              "America/Danmarkshavn": {
                "label": "Reykjavik, Dakar, Casablanca"
              },
              "Pacific/Bougainville": {
                "label": "Sakhalin, Norfolk, Bougainville"
              },
              "America/Araguaina": {
                "label": "Sao Paulo, Buenos Aires, Montevideo"
              },
              "America/St_Johns": {
                "label": "St. Johns, Mount Pearl, Corner Brook"
              },
              "Asia/Tehran": {
                "label": "Tehran, Mashhad, Isfahan, Karaj, Tabriz"
              },
              "Asia/Tokyo": {
                "label": "Tokyo, Seoul, Jayapura"
              },
              "America/New_York": {
                "label": "Toronto, Santiago, New York"
              },
              "Australia/Sydney": {
                "label": "Vladivostok, Sydney, Brisbane"
              },
              "Asia/Yangon": {
                "label": "Yangon, Cocos, Mandalay, Nay Pyi Taw, Mawlamyine"
              },
              "Indian/Cocos": {
                "label": "Yangon, Cocos, West Island"
              }
            },
            "breakLine": true
          }
        }
      }
    }
  }
},
"/common-snippets/Formatting.json/Formatting.json": {
  "format__category": {
    "type": "select",
    "label": "Display Format",
    "required": true,
    "options": {
      "standard": {
        "label": "Standard"
      },
      "number": {
        "label": "Number"
      },
      "percentage": {
        "label": "Percentage"
      },
      "text": {
        "label": "Text"
      },
      "date": {
        "label": "Date"
      },
      "currency": {
        "label": "Currency"
      }
    },
    "val": "standard"
  },
  "format__rounding": {
    "type": "select",
    "label": "Decimal Places for display",
    "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
    "required": true,
    "options": {
      "no_rounding": {
        "label": "No rounding"
      },
      "0": {
        "label": "0 digits"
      },
      "1": {
        "label": "1 digits"
      },
      "2": {
        "label": "2 digits"
      },
      "3": {
        "label": "3 digits"
      },
      "4": {
        "label": "4 digits"
      },
      "5": {
        "label": "5 digits"
      },
      "6": {
        "label": "6 digits"
      },
      "7": {
        "label": "7 digits"
      },
      "8": {
        "label": "8 digits"
      },
      "9": {
        "label": "9 digits"
      }
    },
    "val": "2"
  },
  "format__use_1000_separator": {
    "type": "checkbox",
    "label": "Use 1000 Separator(,)",
    "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
    "val": "true",
    "isOn": "true",
    "isOff": "false"
  },
  "format__currency_symbol": {
    "type": "select",
    "label": "Symbol",
    "show_if": "this.format__category=='currency'",
    "required": true,
    "options": {
      "dollar": {
        "label": "$"
      },
      "euro": {
        "label": "€"
      },
      "pound": {
        "label": "£"
      }
    },
    "val": "dollar"
  },
  "format__date_format": {
    "type": "select",
    "label": "Type",
    "show_if": "this.format__category=='date'",
    "required": true,
    "options": {
      "mm/dd/yyyy": {
        "label": "3/14/2012"
      },
      "D, M dd, Y": {
        "label": "Wednesday, March 14, 2012"
      },
      "yyyy-mm-dd": {
        "label": "2012-03-14"
      },
      "m.dd.yyyy": {
        "label": "3.14.2012"
      },
      "m.dd.yy": {
        "label": "3.14.12"
      },
      "dd.m.yyyy": {
        "label": "14.3.2012"
      },
      "dd.m.yy": {
        "label": "14.3.12"
      },
      "M dd, Y": {
        "label": "March 14, 2012"
      },
      "dd-mm-yyyy": {
        "label": "14-03-2012"
      },
      "mm-dd-yyyy": {
        "label": "03-14-2012"
      },
      "dd-mm-yy": {
        "label": "14-03-12"
      },
      "mm-dd-yy": {
        "label": "03-14-12"
      }
    },
    "val": "mm/dd/yyyy",
    "breakLine": true
  }
}
,
"/common-snippets/SelectTable.json/SelectTable.json": {
  "input": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; margin-right:5px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "table_id": {
        "type": "select",
        "label": "Select Table",
        "bind": "TABLES",
        "empty": "",
        "required": true,
        "breakLine": true
      },
      "remove_input_table_after_processing": {
        "type": "hidden",
        "val": "false"
      },
      "is_word": {
        "type": "hidden",
        "val": "false"
      }
    }
  }
}
,
"/common-snippets/DownloadSettings.json/DownloadSettings.json": {
  "download_setting_frame": {
    "type": "fieldset",
    "label": "Download Settings",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "false",
    "repeat": false,
    "fields": {
      "output.options.location": {
        "type": "text",
        "label": "Specify Location",
        "val": "A1",
        "breakLine": true
      },
      "output.options.formatted_as_table": {
        "type": "checkbox",
        "label": "Formatted as Table",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "output.options.visibility": {
        "type": "select",
        "label": "Visibility",
        "val": "current_flow",
        "options": {
          "current_flow": {
            "label": "Current Flow"
          },
          "all_flow": {
            "label": "All Flows"
          }
        },
        "breakLine": true
      },
      "output.options.table_mode": {
        "type": "select",
        "label": "Paste",
        "val": "content_only",
        "options": {
          "content_only": {
            "label": "Content Only"
          },
          "fully_formatted": {
            "label": "Fully Formatted"
          }
        }
      }
    },
    "breakLine": true,
    "style": "margin-bottom: 20px"
  }
}
,
"/common-snippets/v1/AddTag.json/AddTag.json": {
  "output.add_tag": {
    "type": "checkbox",
    "label": "Add Tag",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "style": "margin-right: 15px"
  },
  "output.add_tag_type": {
    "type": "select",
    "label": "Tagging type",
    "style": "margin-left: 15px",
    "show_if": "output.add_tag=='true'",
    "options": {
      "custom": {
        "label": "Custom"
      },
      "input_table_names": {
        "label": "Input Table Name(s)"
      },
      "output_table_names": {
        "label": "Output Table Name(s)"
      },
      "task_name": {
        "label": "Task Name"
      },
      "input_table_tags": {
        "label": "Input Table Tag(s)"
      }
    },
    "val": "custom"
  },
  "output.tag_name": {
    "type": "text",
    "label": "Tag Name",
    "show_if": "output.add_tag=='true' && output.add_tag_type=='custom'",
    "required": true,
    "minLength": 1,
    "maxLength": 255,
    "val": "",
    "breakLine": true,
    "style": "margin-left: 15px"
  }
}
,
"/common-snippets/v1/OutputAsNewTable.json/OutputAsNewTable.json": {
  "output.output_as_new_table": {
    "type": "checkbox",
    "label": "Output as New Table",
    "val": "true",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  }
}
,
"/common-snippets/v1/IfTableExist.json/IfTableExist.json": {
  "output.if_table_exist.type": {
    "type": "select",
    "label": "If existing",
    "val": "drop_if_exist",
    "options": {
      "drop_if_exist": {
        "label": "Create or Drop (if already existing)"
      },
      "error_if_exist": {
        "label": "Create New (throw error if existing)"
      },
      "error_if_not_exist": {
        "label": "Drop (throw error if not-existing)"
      },
      "append_all": {
        "label": "Append All"
      },
      "append_not_existing": {
        "label": "Append not existing"
      },
      "append_changes": {
        "label": "Append changes"
      }
    }
  },
  "output.if_table_exist.append_not_existing_cols": {
    "type": "select",
    "label": "Select Column(s)",
    "show_if": "output.if_table_exist.type=='append_not_existing'",
    "table": "table_id",
    "bind": "COLUMNS",
    "multiple": true,
    "required": true,
    "breakLine": true
  },
  "output.if_table_exist.append_changes__add_timestamp": {
    "type": "checkbox",
    "label": "Add Timestamp",
    "show_if": "output.if_table_exist.type=='append_changes'",
    "val": "false",
    "isOn": "true",
    "isOff": "false"
  },
  "output.if_table_exist.append_changes__timestamp_colname": {
    "type": "text",
    "label": "Timestamp column name",
    "show_if": "output.if_table_exist.type=='append_changes' && output.if_table_exist.append_changes__add_timestamp=='true'",
    "val": "Timestamp",
    "required": true,
    "style": "margin-left: 15px",
    "breakLine": true
  },
  "output.if_table_exist.append_changes__add_row": {
    "type": "checkbox",
    "label": "Add Row",
    "show_if": "output.if_table_exist.type=='append_changes'",
    "val": "false",
    "isOn": "true",
    "isOff": "false"
  },
  "output.if_table_exist.append_changes__row_colname": {
    "type": "text",
    "label": "Row column name",
    "show_if": "output.if_table_exist.type=='append_changes' && output.if_table_exist.append_changes__add_row=='true'",
    "val": "Row",
    "required": true,
    "style": "margin-left: 15px",
    "breakLine": true
  },
  "append_not_existing_info": {
    "type": "textarea",
    "label": "",
    "show_if": "output.if_table_exist.type=='append_not_existing'",
    "val": "Appends rows only if the value of the selected column is new in the existing table. It is assumed that the selected column is found in the output and existing table",
    "disabled": true,
    "style": "width: 100%"
  }
}
,
"/common-snippets/v1/LookupOutputColumn.json/LookupOutputColumn.json": {
  "output.select_output_columns_type": {
    "type": "select",
    "label": "Select Output Columns",
    "show_if": "options.task_type=='label_duplicates' || options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table'",
    "required": true,
    "options": {
      "all": {
        "label": "All"
      },
      "standard": {
        "label": "Standard Column Selection"
      },
      "advanced": {
        "label": "Advanced Column Selection"
      }
    },
    "val": "all",
    "style": "margin-right: 15px"
  },
  "output_columns_frame": {
    "type": "fieldset",
    "label": "Select Output Columns",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "(options.task_type=='label_duplicates' || options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table') && output.select_output_columns_type=='standard'",
    "repeat": false,
    "fields": {
      "output.output_columns": {
        "type": "select",
        "label": "Output Column(s)",
        "table": "table_id",
        "bind": "COLUMNS",
        "multiple": true,
        "required": true,
        "breakLine": true
      },
      "output.all_but_selected": {
        "type": "checkbox",
        "label": "All but selected",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  },
  "output.detail_output_columns": {
    "type": "fieldset",
    "label": "Select Output Columns",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "(options.task_type=='label_duplicates' || options.task_type=='apply_lookup_table' || options.task_type=='apply_regex_table') && output.select_output_columns_type=='advanced'",
    "repeat": true,
    "fields": {
      "field_name": {
        "type": "select",
        "label": "Select Column",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "order": {
        "type": "select",
        "label": "Order",
        "options": {
          "-": {
            "label": "-"
          },
          "asc": {
            "label": "Asc"
          },
          "desc": {
            "label": "Desc"
          }
        },
        "val": "-"
      },
      "format__category": {
        "type": "select",
        "label": "Display Format",
        "required": true,
        "options": {
          "standard": {
            "label": "Standard"
          },
          "number": {
            "label": "Number"
          },
          "percentage": {
            "label": "Percentage"
          },
          "text": {
            "label": "Text"
          },
          "date": {
            "label": "Date"
          },
          "currency": {
            "label": "Currency"
          }
        },
        "val": "standard"
      },
      "format__rounding": {
        "type": "select",
        "label": "Decimal Places for display",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "required": true,
        "options": {
          "no_rounding": {
            "label": "No rounding"
          },
          "0": {
            "label": "0 digits"
          },
          "1": {
            "label": "1 digits"
          },
          "2": {
            "label": "2 digits"
          },
          "3": {
            "label": "3 digits"
          },
          "4": {
            "label": "4 digits"
          },
          "5": {
            "label": "5 digits"
          },
          "6": {
            "label": "6 digits"
          },
          "7": {
            "label": "7 digits"
          },
          "8": {
            "label": "8 digits"
          },
          "9": {
            "label": "9 digits"
          }
        },
        "val": "2"
      },
      "format__use_1000_separator": {
        "type": "checkbox",
        "label": "Use 1000 Separator(.)",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "format__currency_symbol": {
        "type": "select",
        "label": "Symbol",
        "show_if": "this.format__category=='currency'",
        "required": true,
        "options": {
          "dollar": {
            "label": "$"
          },
          "euro": {
            "label": "€"
          },
          "pound": {
            "label": "£"
          },
          "yen": {
            "label": "¥ (Yen, currency of Japan)"
          },
          "colon": {
            "label": "₡ (Colón, currency of Costa Rica)"
          },
          "naira": {
            "label": "₦ (Naira, currency of Nigeria)"
          },
          "rupee": {
            "label": "₨ (Rupee, currency of India)"
          },
          "rupie": {
            "label": "₹ (Rupee, currency of India)"
          },
          "won": {
            "label": "₩ (Won, currency in South Korea and North Korea)"
          },
          "hebrew": {
            "label": "₪ (Currency of Israel)"
          },
          "dong": {
            "label": "₫ (Currency of Vietnam)"
          },
          "kip": {
            "label": "₭ (Kip, currency of Laos)"
          },
          "mongolia": {
            "label": "₮ (Currency of Mongolia)"
          },
          "peso": {
            "label": "₱ (Peso, currency of the Philippines)"
          },
          "guarani": {
            "label": "₲ (Guaraní, currency of Paraguay)"
          },
          "hryvnia": {
            "label": "₴ (Hryvnia, currency of Ukraine)"
          },
          "tenge": {
            "label": "₸ (Tenge, currency of Kazakhstan)"
          },
          "lira": {
            "label": "₺ (Lira, currency of Turkey)"
          },
          "manat": {
            "label": "₼ (Manat, currency of Azerbaijan)"
          },
          "rubles": {
            "label": "₽ (Rubles, currency of Russia)"
          },
          "lari": {
            "label": "₾ (Lari, currency of Georgia)"
          },
          "bitcoin": {
            "label": "₿ (Bitcoin, crypto currency)"
          }
        },
        "val": "dollar"
      },
      "format__date_format": {
        "type": "select",
        "label": "Type",
        "show_if": "this.format__category=='date'",
        "required": true,
        "options": {
          "mm/dd/yyyy": {
            "label": "3/14/2012"
          },
          "D, M dd, Y": {
            "label": "Wednesday, March 14, 2012"
          },
          "yyyy-mm-dd": {
            "label": "2012-03-14"
          },
          "m.dd.yyyy": {
            "label": "3.14.2012"
          },
          "m.dd.yy": {
            "label": "3.14.12"
          },
          "dd.m.yyyy": {
            "label": "14.3.2012"
          },
          "dd.m.yy": {
            "label": "14.3.12"
          },
          "M dd, Y": {
            "label": "March 14, 2012"
          },
          "dd-mm-yyyy": {
            "label": "14-03-2012"
          },
          "mm-dd-yyyy": {
            "label": "03-14-2012"
          },
          "dd-mm-yy": {
            "label": "14-03-12"
          },
          "mm-dd-yy": {
            "label": "03-14-12"
          }
        },
        "val": "mm/dd/yyyy"
      },
      "is_rename": {
        "type": "checkbox",
        "label": "Rename",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "rename": {
        "show_if": "this.is_rename == 'true'",
        "type": "text",
        "required": true,
        "minLength": 1,
        "maxLength": 255,
        "label": "New Column Name",
        "style": "margin-left: 10px"
      },
      "delete": {
        "type": "button",
        "label": "Delete",
        "function": "DELETE_ROW"
      }
    },
    "breakLine": true
  }
},
"/common-snippets/v1/TableInfoSetting.json/TableInfoSetting.json": {
  "output.set_table_info": {
    "type": "checkbox",
    "label": "Set Display Type",
    "val": "false",
    "isOn": "true",
    "isOff": "false"
  },
  "output.table_info": {
    "type": "select",
    "label": "Output Type",
    "show_if": "output.set_table_info=='true'",
    "options": {
      "simple_table": {
        "label": "Table"
      },
      "D3": {
        "label": "D3"
      },
      "Flexmonster": {
        "label": "Flexmonster"
      },
      "PDF": {
        "label": "PDF"
      }
    },
    "val": "table",
    "required": true,
    "breakLine": true
  }
},
"/common-snippets/v1/ComposeTableNameWithoutAsNewTable.json/ComposeTableNameWithoutAsNewTable.json": {
  "output.table_name_type": {
    "type": "select",
    "label": "Table Name",
    "required": true,
    "options": {
      "task_name": {
        "label": "Task Name (Flow Name)"
      },
      "custom_name": {
        "label": "Custom Name"
      },
      "compose_name": {
        "label": "Compose Name"
      }
    },
    "val": "task_name",
    "breakLine": true
  },
  "output.custom_text": {
    "type": "text",
    "label": "Output Table Name",
    "show_if": "output.table_name_type=='custom_name'",
    "minLength": 1,
    "val": "",
    "width": "100%",
    "breakLine": true
  },
  "compose_table_name_frame": {
    "type": "fieldset",
    "label": "Compose Output Table Name",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.table_name_type=='compose_name'",
    "repeat": false,
    "fields": {
      "output.prefix_rule": {
        "type": "select",
        "label": "Prefix",
        "val": "empty",
        "options": {
          "empty": {
            "label": "-"
          },
          "script_name": {
            "label": "Task Name"
          },
          "date_string_type1": {
            "label": "Date: dd_mm_yyyy"
          },
          "date_string_type2": {
            "label": "Date: yyyy_mm_dd"
          },
          "time_string": {
            "label": "Time: h_min_sec"
          },
          "datetime_string": {
            "label": "Date_Time"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.prefix_text": {
        "type": "text",
        "label": "Prefix Text",
        "show_if": "output.prefix_rule=='custom'",
        "minLength": 1,
        "maxLength": 31,
        "val": ""
      },
      "output.core_delimiter": {
        "type": "text",
        "label": "Delimiter",
        "show_if": "output.prefix_rule!='empty'",
        "val": "_",
        "width": "50px"
      },
      "output.core_rule": {
        "type": "select",
        "label": "Table Name",
        "val": "script_name",
        "options": {
          "input_table_name": {
            "label": "Input Table Name"
          },
          "script_name": {
            "label": "Task Name"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.core_text": {
        "type": "text",
        "label": "Main Table Name",
        "show_if": "output.core_rule=='custom'",
        "required": true,
        "minLength": 1,
        "maxLength": 31,
        "val": ""
      },
      "output.suffix_delimiter": {
        "type": "text",
        "label": "Delimiter",
        "val": " ",
        "width": "50px"
      },
      "output.suffix_rule": {
        "type": "select",
        "label": "Suffix",
        "val": "flow_name",
        "options": {
          "empty": {
            "label": "-"
          },
          "flow_name": {
            "label": "(Flow Name)"
          },
          "script_name": {
            "label": "Task Name"
          },
          "date_string_type1": {
            "label": "Date: dd_mm_yyyy"
          },
          "date_string_type2": {
            "label": "Date: yyyy_mm_dd"
          },
          "time_string": {
            "label": "Time: h_min_sec"
          },
          "datetime_string": {
            "label": "Date_Time"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.suffix_text": {
        "type": "text",
        "label": "Suffix Text",
        "show_if": "output.suffix_rule=='custom'",
        "minLength": 1,
        "maxLength": 31,
        "val": "",
        "breakLine": true
      },
      "output.timezone": {
        "type": "select",
        "label": "Timezone",
        "show_if": "output.prefix_rule=='date_string_type1' || output.prefix_rule=='date_string_type2' || output.prefix_rule=='time_string' || output.prefix_rule=='datetime_string' || output.suffix_rule=='date_string_type1' || output.suffix_rule=='date_string_type2' || output.suffix_rule=='time_string' || output.suffix_rule=='datetime_string'",
        "val": "Europe/Berlin",
        "required": true,
        "options": {
          "America/Adak": {
            "label": "Adak, Gambier"
          },
          "Australia/Adelaide": {
            "label": "Adelaide, Broken Hill, Darwin"
          },
          "America/Anchorage": {
            "label": "Anchorage, Juneau, Sitka"
          },
          "Pacific/Apia": {
            "label": "Apia, Asau, Mulifanua, Afega, Leulumoega"
          },
          "Pacific/Enderbury": {
            "label": "Apia, Fiji, Tongatapu"
          },
          "Antarctica/McMurdo": {
            "label": "Auckland, Casey, Davis"
          },
          "Pacific/Auckland": {
            "label": "Auckland, Wellington, Christchurch"
          },
          "Asia/Bangkok": {
            "label": "Bangkok, Jakarta, Novosibirsk"
          },
          "Europe/Berlin": {
            "label": "Berlin, Paris, Amsterdam"
          },
          "Australia/Perth": {
            "label": "Brunei, Singapore, Perth"
          },
          "Atlantic/Cape_Verde": {
            "label": "Cape Verde,Praia, Mindelo, Santa Maria"
          },
          "America/Belize": {
            "label": "Costa Rica, El Salvador, Denver"
          },
          "Antarctica/Vostok": {
            "label": "Dhaka, Bishkek, Omsk"
          },
          "Europe/Astrakhan": {
            "label": "Dubai, Baku, Tbilisi"
          },
          "Australia/Eucla": {
            "label": "Eucla"
          },
          "Pacific/Honolulu": {
            "label": "Honolulu, Rarotonga, Tahiti"
          },
          "Asia/Kabul": {
            "label": "Kabul, Kandahār, Mazār-e Sharīf, Herāt, Jalālābād"
          },
          "Asia/Aqtau": {
            "label": "Karachi, Tashkent, Maldives"
          },
          "Asia/Kathmandu": {
            "label": "Kathmandu, Pokhara, Pātan, Biratnagar"
          },
          "Pacific/Kiritimati": {
            "label": "Kiritimati"
          },
          "Asia/Colombo": {
            "label": "Kolkata, Colombo, Jaffna, Negombo"
          },
          "Europe/Guernsey": {
            "label": "London, Dublin, Lisbon"
          },
          "Australia/Lord_Howe": {
            "label": "Lord Howe"
          },
          "America/Creston": {
            "label": "Los Angeles, Vancouver, Hermosillo"
          },
          "Pacific/Marquesas": {
            "label": "Marquesas, Taiohae"
          },
          "America/Cayman": {
            "label": "Mexico City, Panama, Chicago"
          },
          "Pacific/Niue": {
            "label": "Midway, Niue, Pago Pago"
          },
          "Europe/Mariehamn": {
            "label": "Moscow, Istanbul, Qatar"
          },
          "Asia/Kolkata": {
            "label": "Mumbai, Delhi, Bengaluru, Kolkata, Chennai"
          },
          "America/Miquelon": {
            "label": "Noronha, Nuuk, Miquelon"
          },
          "America/Danmarkshavn": {
            "label": "Reykjavik, Dakar, Casablanca"
          },
          "Pacific/Bougainville": {
            "label": "Sakhalin, Norfolk, Bougainville"
          },
          "America/Araguaina": {
            "label": "Sao Paulo, Buenos Aires, Montevideo"
          },
          "America/St_Johns": {
            "label": "St. Johns, Mount Pearl, Corner Brook"
          },
          "Asia/Tehran": {
            "label": "Tehran, Mashhad, Isfahan, Karaj, Tabriz"
          },
          "Asia/Tokyo": {
            "label": "Tokyo, Seoul, Jayapura"
          },
          "America/New_York": {
            "label": "Toronto, Santiago, New York"
          },
          "Australia/Sydney": {
            "label": "Vladivostok, Sydney, Brisbane"
          },
          "Asia/Yangon": {
            "label": "Yangon, Cocos, Mandalay, Nay Pyi Taw, Mawlamyine"
          },
          "Indian/Cocos": {
            "label": "Yangon, Cocos, West Island"
          }
        },
        "breakLine": true
      }
    },
    "breakLine": true
  }
},
"/common-snippets/v1/SelectOutputColumnConfig.json/SelectOutputColumnConfig.json": {
  "output.select_output_columns_type": {
    "type": "select",
    "label": "Select Output Columns",
    "required": true,
    "options": {
      "all": {
        "label": "All"
      },
      "standard": {
        "label": "Standard Column Selection"
      },
      "advanced": {
        "label": "Advanced Column Selection"
      }
    },
    "val": "all",
    "breakLine": true
  },
  "output_columns_frame": {
    "type": "fieldset",
    "label": "Select Output Columns",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.select_output_columns_type=='standard'",
    "repeat": false,
    "fields": {
      "output.output_columns": {
        "type": "select",
        "label": "Output Column(s)",
        "show_if": "configure_input_tables=='zippydoc_table'",
        "table": "table_id",
        "bind": "COLUMNS",
        "multiple": true,
        "required": true,
        "breakLine": true
      },
      "output.excel_sheet__output_columns": {
        "type": "select",
        "label": "Output Column(s)",
        "show_if": "configure_input_tables!='zippydoc_table'",
        "multiple": true,
        "options": {
          "A": {
            "label": "A"
          },
          "B": {
            "label": "B"
          },
          "C": {
            "label": "C"
          },
          "D": {
            "label": "D"
          },
          "E": {
            "label": "E"
          },
          "F": {
            "label": "F"
          },
          "G": {
            "label": "G"
          },
          "H": {
            "label": "H"
          },
          "I": {
            "label": "I"
          },
          "J": {
            "label": "J"
          },
          "K": {
            "label": "K"
          },
          "L": {
            "label": "L"
          },
          "M": {
            "label": "M"
          },
          "N": {
            "label": "N"
          },
          "O": {
            "label": "O"
          },
          "P": {
            "label": "P"
          },
          "Q": {
            "label": "Q"
          },
          "R": {
            "label": "R"
          },
          "S": {
            "label": "S"
          },
          "T": {
            "label": "T"
          },
          "U": {
            "label": "U"
          },
          "V": {
            "label": "V"
          },
          "W": {
            "label": "W"
          },
          "X": {
            "label": "X"
          },
          "Y": {
            "label": "Y"
          },
          "Z": {
            "label": "Z"
          },
          "AA": {
            "label": "AA"
          },
          "AB": {
            "label": "AB"
          },
          "AC": {
            "label": "AC"
          },
          "AD": {
            "label": "AD"
          },
          "AE": {
            "label": "AE"
          },
          "AF": {
            "label": "AF"
          },
          "AG": {
            "label": "AG"
          },
          "AH": {
            "label": "AH"
          },
          "AI": {
            "label": "AI"
          },
          "AJ": {
            "label": "AJ"
          },
          "AK": {
            "label": "AK"
          },
          "AL": {
            "label": "AL"
          },
          "AM": {
            "label": "AM"
          },
          "AN": {
            "label": "AN"
          },
          "AO": {
            "label": "AO"
          },
          "AP": {
            "label": "AP"
          },
          "AQ": {
            "label": "AQ"
          },
          "AR": {
            "label": "AR"
          },
          "AS": {
            "label": "AS"
          },
          "AT": {
            "label": "AT"
          },
          "AU": {
            "label": "AU"
          },
          "AV": {
            "label": "AV"
          },
          "AW": {
            "label": "AW"
          },
          "AX": {
            "label": "AX"
          },
          "AY": {
            "label": "AY"
          },
          "AZ": {
            "label": "AZ"
          }
        },
        "val": ""
      },
      "output.all_but_selected": {
        "type": "checkbox",
        "label": "All but selected",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  },
  "output.detail_output_columns": {
    "type": "fieldset",
    "label": "Select Output Columns",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.select_output_columns_type=='advanced'",
    "repeat": true,
    "fields": {
      "field_name": {
        "type": "select",
        "label": "Select Column",
        "show_if": "configure_input_tables=='zippydoc_table'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "excel_sheet__field_name": {
        "type": "select",
        "label": "Select Column",
        "show_if": "configure_input_tables!='zippydoc_table'",
        "options": {
          "A": {
            "label": "A"
          },
          "B": {
            "label": "B"
          },
          "C": {
            "label": "C"
          },
          "D": {
            "label": "D"
          },
          "E": {
            "label": "E"
          },
          "F": {
            "label": "F"
          },
          "G": {
            "label": "G"
          },
          "H": {
            "label": "H"
          },
          "I": {
            "label": "I"
          },
          "J": {
            "label": "J"
          },
          "K": {
            "label": "K"
          },
          "L": {
            "label": "L"
          },
          "M": {
            "label": "M"
          },
          "N": {
            "label": "N"
          },
          "O": {
            "label": "O"
          },
          "P": {
            "label": "P"
          },
          "Q": {
            "label": "Q"
          },
          "R": {
            "label": "R"
          },
          "S": {
            "label": "S"
          },
          "T": {
            "label": "T"
          },
          "U": {
            "label": "U"
          },
          "V": {
            "label": "V"
          },
          "W": {
            "label": "W"
          },
          "X": {
            "label": "X"
          },
          "Y": {
            "label": "Y"
          },
          "Z": {
            "label": "Z"
          },
          "AA": {
            "label": "AA"
          },
          "AB": {
            "label": "AB"
          },
          "AC": {
            "label": "AC"
          },
          "AD": {
            "label": "AD"
          },
          "AE": {
            "label": "AE"
          },
          "AF": {
            "label": "AF"
          },
          "AG": {
            "label": "AG"
          },
          "AH": {
            "label": "AH"
          },
          "AI": {
            "label": "AI"
          },
          "AJ": {
            "label": "AJ"
          },
          "AK": {
            "label": "AK"
          },
          "AL": {
            "label": "AL"
          },
          "AM": {
            "label": "AM"
          },
          "AN": {
            "label": "AN"
          },
          "AO": {
            "label": "AO"
          },
          "AP": {
            "label": "AP"
          },
          "AQ": {
            "label": "AQ"
          },
          "AR": {
            "label": "AR"
          },
          "AS": {
            "label": "AS"
          },
          "AT": {
            "label": "AT"
          },
          "AU": {
            "label": "AU"
          },
          "AV": {
            "label": "AV"
          },
          "AW": {
            "label": "AW"
          },
          "AX": {
            "label": "AX"
          },
          "AY": {
            "label": "AY"
          },
          "AZ": {
            "label": "AZ"
          }
        },
        "val": ""
      },
      "order": {
        "type": "select",
        "label": "Order",
        "options": {
          "-": {
            "label": "-"
          },
          "asc": {
            "label": "Asc"
          },
          "desc": {
            "label": "Desc"
          }
        },
        "val": "-"
      },
      "format__category": {
        "type": "select",
        "label": "Display Format",
        "required": true,
        "options": {
          "standard": {
            "label": "Standard"
          },
          "number": {
            "label": "Number"
          },
          "percentage": {
            "label": "Percentage"
          },
          "text": {
            "label": "Text"
          },
          "date": {
            "label": "Date"
          },
          "currency": {
            "label": "Currency"
          }
        },
        "val": "standard"
      },
      "format__rounding": {
        "type": "select",
        "label": "Decimal Places for display",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "required": true,
        "options": {
          "no_rounding": {
            "label": "No rounding"
          },
          "0": {
            "label": "0 digits"
          },
          "1": {
            "label": "1 digits"
          },
          "2": {
            "label": "2 digits"
          },
          "3": {
            "label": "3 digits"
          },
          "4": {
            "label": "4 digits"
          },
          "5": {
            "label": "5 digits"
          },
          "6": {
            "label": "6 digits"
          },
          "7": {
            "label": "7 digits"
          },
          "8": {
            "label": "8 digits"
          },
          "9": {
            "label": "9 digits"
          }
        },
        "val": "2"
      },
      "format__use_1000_separator": {
        "type": "checkbox",
        "label": "Use 1000 Separator(.)",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "format__currency_symbol": {
        "type": "select",
        "label": "Symbol",
        "show_if": "this.format__category=='currency'",
        "required": true,
        "options": {
          "dollar": {
            "label": "$"
          },
          "euro": {
            "label": "€"
          },
          "pound": {
            "label": "£"
          },
          "yen": {
            "label": "¥ (Yen, currency of Japan)"
          },
          "colon": {
            "label": "₡ (Colón, currency of Costa Rica)"
          },
          "naira": {
            "label": "₦ (Naira, currency of Nigeria)"
          },
          "rupee": {
            "label": "₨ (Rupee, currency of India)"
          },
          "rupie": {
            "label": "₹ (Rupee, currency of India)"
          },
          "won": {
            "label": "₩ (Won, currency in South Korea and North Korea)"
          },
          "hebrew": {
            "label": "₪ (Currency of Israel)"
          },
          "dong": {
            "label": "₫ (Currency of Vietnam)"
          },
          "kip": {
            "label": "₭ (Kip, currency of Laos)"
          },
          "mongolia": {
            "label": "₮ (Currency of Mongolia)"
          },
          "peso": {
            "label": "₱ (Peso, currency of the Philippines)"
          },
          "guarani": {
            "label": "₲ (Guaraní, currency of Paraguay)"
          },
          "hryvnia": {
            "label": "₴ (Hryvnia, currency of Ukraine)"
          },
          "tenge": {
            "label": "₸ (Tenge, currency of Kazakhstan)"
          },
          "lira": {
            "label": "₺ (Lira, currency of Turkey)"
          },
          "manat": {
            "label": "₼ (Manat, currency of Azerbaijan)"
          },
          "rubles": {
            "label": "₽ (Rubles, currency of Russia)"
          },
          "lari": {
            "label": "₾ (Lari, currency of Georgia)"
          },
          "bitcoin": {
            "label": "₿ (Bitcoin, crypto currency)"
          }
        },
        "val": "dollar"
      },
      "format__date_format": {
        "type": "select",
        "label": "Type",
        "show_if": "this.format__category=='date'",
        "required": true,
        "options": {
          "mm/dd/yyyy": {
            "label": "3/14/2012"
          },
          "D, M dd, Y": {
            "label": "Wednesday, March 14, 2012"
          },
          "yyyy-mm-dd": {
            "label": "2012-03-14"
          },
          "m.dd.yyyy": {
            "label": "3.14.2012"
          },
          "m.dd.yy": {
            "label": "3.14.12"
          },
          "dd.m.yyyy": {
            "label": "14.3.2012"
          },
          "dd.m.yy": {
            "label": "14.3.12"
          },
          "M dd, Y": {
            "label": "March 14, 2012"
          },
          "dd-mm-yyyy": {
            "label": "14-03-2012"
          },
          "mm-dd-yyyy": {
            "label": "03-14-2012"
          },
          "dd-mm-yy": {
            "label": "14-03-12"
          },
          "mm-dd-yy": {
            "label": "03-14-12"
          }
        },
        "val": "mm/dd/yyyy"
      },
      "is_rename": {
        "type": "checkbox",
        "label": "Rename",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "rename": {
        "show_if": "this.is_rename == 'true'",
        "type": "text",
        "required": true,
        "minLength": 1,
        "maxLength": 255,
        "label": "New Column Name",
        "style": "margin-left: 10px"
      },
      "delete": {
        "type": "button",
        "label": "Delete",
        "function": "DELETE_ROW"
      }
    },
    "breakLine": true
  }
},
"/common-snippets/v1/OutputLocation.json/OutputLocation.json": {
  "output.location": {
    "type": "select",
    "label": "Output Location",
    "options": {
      "output_as_new_table": {
        "label": "Output as New Table"
      },
      "overwrite_input_table": {
        "label": "Overwrite Input Table"
      },
      "output_as_excel_sheet": {
        "label": "Output as Excel Sheet"
      },
      "output_in_excel_range": {
        "label": "Output in Excel Range"
      },
      "output_in_excel_named_range": {
        "label": "Output in Excel Named Range"
      },
      "output_at_marked_cell_position": {
        "label": "Output at marked cell position"
      }
    },
    "val": "output_as_new_table"
  },
  "output_location_frame": {
    "type": "fieldset",
    "label": "Excel Config",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.location=='output_as_excel_sheet' || output.location=='output_in_excel_range' || output.location=='output_in_excel_named_range' || output.location=='output_at_marked_cell_position'",
    "repeat": false,
    "fields": {
      "output.location__output_sheet": {
        "type": "select",
        "label": "Output Sheet",
        "show_if": "output.location=='output_as_excel_sheet' || output.location=='output_in_excel_range' || output.location=='output_in_excel_named_range'",
        "options": {
          "active_sheet": {
            "label": "Active Sheet"
          },
          "select_sheet": {
            "label": "Select Sheet"
          },
          "new_sheet": {
            "label": "New Sheet"
          }
        },
        "val": "active_sheet"
      },
      "output.location__sheet_name": {
        "type": "text",
        "label": "Sheet Name",
        "show_if": "(output.location=='output_as_excel_sheet' || output.location=='output_in_excel_range' || output.location=='output_in_excel_named_range') && output.location__output_sheet=='select_sheet'",
        "val": "",
        "style": "margin-left: 15px",
        "breakLine": true
      },
      "output.location__columns_from_label": {
        "type": "text",
        "label": "",
        "show_if": "output.location=='output_in_excel_range'",
        "val": "Columns from",
        "disabled": true
      },
      "output.location__from_column": {
        "type": "select",
        "label": "From Column",
        "show_if": "output.location=='output_in_excel_range'",
        "options": {
          "A": {
            "label": "A"
          },
          "B": {
            "label": "B"
          },
          "C": {
            "label": "C"
          },
          "D": {
            "label": "D"
          },
          "E": {
            "label": "E"
          },
          "F": {
            "label": "F"
          },
          "G": {
            "label": "G"
          },
          "H": {
            "label": "H"
          },
          "I": {
            "label": "I"
          },
          "J": {
            "label": "J"
          },
          "K": {
            "label": "K"
          },
          "L": {
            "label": "L"
          },
          "M": {
            "label": "M"
          },
          "N": {
            "label": "N"
          },
          "O": {
            "label": "O"
          },
          "P": {
            "label": "P"
          },
          "Q": {
            "label": "Q"
          },
          "R": {
            "label": "R"
          },
          "S": {
            "label": "S"
          },
          "T": {
            "label": "T"
          },
          "U": {
            "label": "U"
          },
          "V": {
            "label": "V"
          },
          "W": {
            "label": "W"
          },
          "X": {
            "label": "X"
          },
          "Y": {
            "label": "Y"
          },
          "Z": {
            "label": "Z"
          },
          "AA": {
            "label": "AA"
          },
          "AB": {
            "label": "AB"
          },
          "AC": {
            "label": "AC"
          },
          "AD": {
            "label": "AD"
          },
          "AE": {
            "label": "AE"
          },
          "AF": {
            "label": "AF"
          },
          "AG": {
            "label": "AG"
          },
          "AH": {
            "label": "AH"
          },
          "AI": {
            "label": "AI"
          },
          "AJ": {
            "label": "AJ"
          },
          "AK": {
            "label": "AK"
          },
          "AL": {
            "label": "AL"
          },
          "AM": {
            "label": "AM"
          },
          "AN": {
            "label": "AN"
          },
          "AO": {
            "label": "AO"
          },
          "AP": {
            "label": "AP"
          },
          "AQ": {
            "label": "AQ"
          },
          "AR": {
            "label": "AR"
          },
          "AS": {
            "label": "AS"
          },
          "AT": {
            "label": "AT"
          },
          "AU": {
            "label": "AU"
          },
          "AV": {
            "label": "AV"
          },
          "AW": {
            "label": "AW"
          },
          "AX": {
            "label": "AX"
          },
          "AY": {
            "label": "AY"
          },
          "AZ": {
            "label": "AZ"
          }
        },
        "val": "A"
      },
      "output.location__columns_to_label": {
        "type": "text",
        "label": "",
        "show_if": "output.location=='output_in_excel_range'",
        "val": "to",
        "disabled": true
      },
      "output.location__to_column": {
        "type": "select",
        "label": "To Column",
        "show_if": "output.location=='output_in_excel_range'",
        "options": {
          "A": {
            "label": "A"
          },
          "B": {
            "label": "B"
          },
          "C": {
            "label": "C"
          },
          "D": {
            "label": "D"
          },
          "E": {
            "label": "E"
          },
          "F": {
            "label": "F"
          },
          "G": {
            "label": "G"
          },
          "H": {
            "label": "H"
          },
          "I": {
            "label": "I"
          },
          "J": {
            "label": "J"
          },
          "K": {
            "label": "K"
          },
          "L": {
            "label": "L"
          },
          "M": {
            "label": "M"
          },
          "N": {
            "label": "N"
          },
          "O": {
            "label": "O"
          },
          "P": {
            "label": "P"
          },
          "Q": {
            "label": "Q"
          },
          "R": {
            "label": "R"
          },
          "S": {
            "label": "S"
          },
          "T": {
            "label": "T"
          },
          "U": {
            "label": "U"
          },
          "V": {
            "label": "V"
          },
          "W": {
            "label": "W"
          },
          "X": {
            "label": "X"
          },
          "Y": {
            "label": "Y"
          },
          "Z": {
            "label": "Z"
          },
          "AA": {
            "label": "AA"
          },
          "AB": {
            "label": "AB"
          },
          "AC": {
            "label": "AC"
          },
          "AD": {
            "label": "AD"
          },
          "AE": {
            "label": "AE"
          },
          "AF": {
            "label": "AF"
          },
          "AG": {
            "label": "AG"
          },
          "AH": {
            "label": "AH"
          },
          "AI": {
            "label": "AI"
          },
          "AJ": {
            "label": "AJ"
          },
          "AK": {
            "label": "AK"
          },
          "AL": {
            "label": "AL"
          },
          "AM": {
            "label": "AM"
          },
          "AN": {
            "label": "AN"
          },
          "AO": {
            "label": "AO"
          },
          "AP": {
            "label": "AP"
          },
          "AQ": {
            "label": "AQ"
          },
          "AR": {
            "label": "AR"
          },
          "AS": {
            "label": "AS"
          },
          "AT": {
            "label": "AT"
          },
          "AU": {
            "label": "AU"
          },
          "AV": {
            "label": "AV"
          },
          "AW": {
            "label": "AW"
          },
          "AX": {
            "label": "AX"
          },
          "AY": {
            "label": "AY"
          },
          "AZ": {
            "label": "AZ"
          }
        },
        "val": "B",
        "breakLine": true
      },
      "output.location__rows_from_label": {
        "type": "text",
        "label": "",
        "show_if": "output.location=='output_in_excel_range'",
        "val": "Rows from",
        "disabled": true
      },
      "output.location__from_row": {
        "type": "number",
        "label": "From Row(1-1000)",
        "show_if": "output.location=='output_in_excel_range'",
        "required": true,
        "val": 1
      },
      "output.location__rows_to_label": {
        "type": "text",
        "label": "",
        "show_if": "output.location=='output_in_excel_range'",
        "val": "to",
        "disabled": true
      },
      "output.location__to_row": {
        "type": "number",
        "label": "To Row(1-1000)",
        "show_if": "output.location=='output_in_excel_range'",
        "required": true,
        "val": 2,
        "breakLine": true
      },
      "output.location__named_range": {
        "type": "text",
        "label": "Named Range",
        "show_if": "output.location=='output_in_excel_named_range'",
        "val": "",
        "breakLine": true
      },
      "output.location__include_table_header": {
        "type": "checkbox",
        "label": "Include Table Header",
        "show_if": "output.location=='output_as_excel_sheet' || output.location=='output_in_excel_range' || output.location=='output_in_excel_named_range' || output.location=='output_at_marked_cell_position'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "output.location__as_excel_list_table": {
        "type": "checkbox",
        "label": "As Excel List Table",
        "show_if": "output.location=='output_as_excel_sheet' || output.location=='output_in_excel_range' || output.location=='output_in_excel_named_range' || output.location=='output_at_marked_cell_position'",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "output.location__sustain_cell_format_of_excel": {
        "type": "checkbox",
        "label": "Sustain Cell Format of Excel",
        "show_if": "output.location=='output_as_excel_sheet' || output.location=='output_in_excel_range' || output.location=='output_in_excel_named_range' || output.location=='output_at_marked_cell_position'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "output.location__crop_if_range_is_not_matching": {
        "type": "checkbox",
        "label": "Crop if range is not matching",
        "show_if": "output.location=='output_in_excel_range'",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  }
}
,
"/common-snippets/v1/SelectTableHiddenIfAutoConfigure.json/SelectTableHiddenIfAutoConfigure.json": {
  "input": {
    "type": "fieldset",
    "label": "Select Input Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.input_table_auto_config=='false'",
    "repeat": false,
    "fields": {
      "table_id": {
        "type": "select",
        "label": "Select Table",
        "bind": "TABLES",
        "empty": "",
        "required": true,
        "breakLine": true
      },
      "remove_input_table_after_processing": {
        "type": "hidden",
        "val": "false"
      },
      "is_word": {
        "type": "hidden",
        "val": "false"
      }
    }
  }
}
,
"/common-snippets/v1/ComposeTableName.json/ComposeTableName.json": {
  "output.table_name_type": {
    "type": "select",
    "label": "Table Name",
    "show_if": "output.output_as_new_table=='true'",
    "required": true,
    "options": {
      "task_name": {
        "label": "Task Name (Flow Name)"
      },
      "custom_name": {
        "label": "Custom Name"
      },
      "compose_name": {
        "label": "Compose Name"
      }
    },
    "val": "task_name",
    "breakLine": true,
	"style": "margin-top: 10px"
  },
  "output.custom_text": {
    "type": "text",
    "label": "Output Table Name",
    "show_if": "output.output_as_new_table=='true' && output.table_name_type=='custom_name'",
    "minLength": 1,
    "val": "",
    "width": "100%",
    "breakLine": true
  },
  "compose_table_name_frame": {
    "type": "fieldset",
    "label": "Compose Output Table Name",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.output_as_new_table=='true' && output.table_name_type=='compose_name'",
    "repeat": false,
    "fields": {
      "output.prefix_rule": {
        "type": "select",
        "label": "Prefix",
        "val": "empty",
        "options": {
          "empty": {
            "label": "-"
          },
          "script_name": {
            "label": "Task Name"
          },
          "date_string_type1": {
            "label": "Date: dd_mm_yyyy"
          },
          "date_string_type2": {
            "label": "Date: yyyy_mm_dd"
          },
          "time_string": {
            "label": "Time: h_min_sec"
          },
          "datetime_string": {
            "label": "Date_Time"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.prefix_text": {
        "type": "text",
        "label": "Prefix Text",
        "show_if": "output.prefix_rule=='custom'",
        "minLength": 1,
        "maxLength": 31,
        "val": ""
      },
      "output.core_delimiter": {
        "type": "text",
        "label": "Delimiter",
        "show_if": "output.prefix_rule!='empty'",
        "val": "_",
        "width": "50px"
      },
      "output.core_rule": {
        "type": "select",
        "label": "Table Name",
        "val": "script_name",
        "options": {
          "input_table_name": {
            "label": "Input Table Name"
          },
          "script_name": {
            "label": "Task Name"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.core_text": {
        "type": "text",
        "label": "Main Table Name",
        "show_if": "output.core_rule=='custom'",
        "required": true,
        "minLength": 1,
        "maxLength": 31,
        "val": ""
      },
      "output.suffix_delimiter": {
        "type": "text",
        "label": "Delimiter",
        "val": " ",
        "width": "50px"
      },
      "output.suffix_rule": {
        "type": "select",
        "label": "Suffix",
        "val": "flow_name",
        "options": {
          "empty": {
            "label": "-"
          },
          "flow_name": {
            "label": "(Flow Name)"
          },
          "script_name": {
            "label": "Task Name"
          },
          "date_string_type1": {
            "label": "Date: dd_mm_yyyy"
          },
          "date_string_type2": {
            "label": "Date: yyyy_mm_dd"
          },
          "time_string": {
            "label": "Time: h_min_sec"
          },
          "datetime_string": {
            "label": "Date_Time"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.suffix_text": {
        "type": "text",
        "label": "Suffix Text",
        "show_if": "output.suffix_rule=='custom'",
        "minLength": 1,
        "maxLength": 31,
        "val": "",
        "breakLine": true
      },
      "output.timezone": {
        "type": "select",
        "label": "Timezone",
        "show_if": "output.prefix_rule=='date_string_type1' || output.prefix_rule=='date_string_type2' || output.prefix_rule=='time_string' || output.prefix_rule=='datetime_string' || output.suffix_rule=='date_string_type1' || output.suffix_rule=='date_string_type2' || output.suffix_rule=='time_string' || output.suffix_rule=='datetime_string'",
        "val": "Europe/Berlin",
        "required": true,
        "options": {
          "America/Adak": {
            "label": "Adak, Gambier"
          },
          "Australia/Adelaide": {
            "label": "Adelaide, Broken Hill, Darwin"
          },
          "America/Anchorage": {
            "label": "Anchorage, Juneau, Sitka"
          },
          "Pacific/Apia": {
            "label": "Apia, Asau, Mulifanua, Afega, Leulumoega"
          },
          "Pacific/Enderbury": {
            "label": "Apia, Fiji, Tongatapu"
          },
          "Antarctica/McMurdo": {
            "label": "Auckland, Casey, Davis"
          },
          "Pacific/Auckland": {
            "label": "Auckland, Wellington, Christchurch"
          },
          "Asia/Bangkok": {
            "label": "Bangkok, Jakarta, Novosibirsk"
          },
          "Europe/Berlin": {
            "label": "Berlin, Paris, Amsterdam"
          },
          "Australia/Perth": {
            "label": "Brunei, Singapore, Perth"
          },
          "Atlantic/Cape_Verde": {
            "label": "Cape Verde,Praia, Mindelo, Santa Maria"
          },
          "America/Belize": {
            "label": "Costa Rica, El Salvador, Denver"
          },
          "Antarctica/Vostok": {
            "label": "Dhaka, Bishkek, Omsk"
          },
          "Europe/Astrakhan": {
            "label": "Dubai, Baku, Tbilisi"
          },
          "Australia/Eucla": {
            "label": "Eucla"
          },
          "Pacific/Honolulu": {
            "label": "Honolulu, Rarotonga, Tahiti"
          },
          "Asia/Kabul": {
            "label": "Kabul, Kandahār, Mazār-e Sharīf, Herāt, Jalālābād"
          },
          "Asia/Aqtau": {
            "label": "Karachi, Tashkent, Maldives"
          },
          "Asia/Kathmandu": {
            "label": "Kathmandu, Pokhara, Pātan, Biratnagar"
          },
          "Pacific/Kiritimati": {
            "label": "Kiritimati"
          },
          "Asia/Colombo": {
            "label": "Kolkata, Colombo, Jaffna, Negombo"
          },
          "Europe/Guernsey": {
            "label": "London, Dublin, Lisbon"
          },
          "Australia/Lord_Howe": {
            "label": "Lord Howe"
          },
          "America/Creston": {
            "label": "Los Angeles, Vancouver, Hermosillo"
          },
          "Pacific/Marquesas": {
            "label": "Marquesas, Taiohae"
          },
          "America/Cayman": {
            "label": "Mexico City, Panama, Chicago"
          },
          "Pacific/Niue": {
            "label": "Midway, Niue, Pago Pago"
          },
          "Europe/Mariehamn": {
            "label": "Moscow, Istanbul, Qatar"
          },
          "Asia/Kolkata": {
            "label": "Mumbai, Delhi, Bengaluru, Kolkata, Chennai"
          },
          "America/Miquelon": {
            "label": "Noronha, Nuuk, Miquelon"
          },
          "America/Danmarkshavn": {
            "label": "Reykjavik, Dakar, Casablanca"
          },
          "Pacific/Bougainville": {
            "label": "Sakhalin, Norfolk, Bougainville"
          },
          "America/Araguaina": {
            "label": "Sao Paulo, Buenos Aires, Montevideo"
          },
          "America/St_Johns": {
            "label": "St. Johns, Mount Pearl, Corner Brook"
          },
          "Asia/Tehran": {
            "label": "Tehran, Mashhad, Isfahan, Karaj, Tabriz"
          },
          "Asia/Tokyo": {
            "label": "Tokyo, Seoul, Jayapura"
          },
          "America/New_York": {
            "label": "Toronto, Santiago, New York"
          },
          "Australia/Sydney": {
            "label": "Vladivostok, Sydney, Brisbane"
          },
          "Asia/Yangon": {
            "label": "Yangon, Cocos, Mandalay, Nay Pyi Taw, Mawlamyine"
          },
          "Indian/Cocos": {
            "label": "Yangon, Cocos, West Island"
          }
        },
        "breakLine": true
      }
    },
    "breakLine": true
  }
},
"/common-snippets/v1/SelectOutputColumnWithTable.json/SelectOutputColumnWithTable.json": {
  "output.select_output_columns_type": {
    "type": "select",
    "label": "Select Output Columns",
    "required": true,
    "options": {
      "all": {
        "label": "All"
      },
      "standard": {
        "label": "Standard Column Selection"
      },
      "advanced": {
        "label": "Advanced Column Selection"
      }
    },
    "val": "all",
    "breakLine": true
  },
  "output_columns_frame": {
    "type": "fieldset",
    "label": "Select Output Columns",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.select_output_columns_type=='standard'",
    "repeat": false,
    "fields": {
      "output.output_columns": {
        "type": "select",
        "label": "Output Column(s)",
        "table": "table_id",
        "bind": "COLUMNS",
        "multiple": true,
        "required": true,
        "breakLine": true
      },
      "output.all_but_selected": {
        "type": "checkbox",
        "label": "All but selected",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  },
  "output.detail_output_columns": {
    "type": "fieldset",
    "label": "Select Output Columns",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.select_output_columns_type=='advanced'",
    "repeat": true,
    "fields": {
      "field_name": {
        "type": "select",
        "label": "Select Column",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "order": {
        "type": "select",
        "label": "Order",
        "options": {
          "-": {
            "label": "-"
          },
          "asc": {
            "label": "Asc"
          },
          "desc": {
            "label": "Desc"
          }
        },
        "val": "-"
      },
      "format__category": {
        "type": "select",
        "label": "Display Format",
        "required": true,
        "options": {
          "standard": {
            "label": "Standard"
          },
          "number": {
            "label": "Number"
          },
          "percentage": {
            "label": "Percentage"
          },
          "text": {
            "label": "Text"
          },
          "date": {
            "label": "Date"
          },
          "currency": {
            "label": "Currency"
          }
        },
        "val": "standard"
      },
      "format__rounding": {
        "type": "select",
        "label": "Decimal Places for display",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "required": true,
        "options": {
          "no_rounding": {
            "label": "No rounding"
          },
          "0": {
            "label": "0 digits"
          },
          "1": {
            "label": "1 digits"
          },
          "2": {
            "label": "2 digits"
          },
          "3": {
            "label": "3 digits"
          },
          "4": {
            "label": "4 digits"
          },
          "5": {
            "label": "5 digits"
          },
          "6": {
            "label": "6 digits"
          },
          "7": {
            "label": "7 digits"
          },
          "8": {
            "label": "8 digits"
          },
          "9": {
            "label": "9 digits"
          }
        },
        "val": "2"
      },
      "format__use_1000_separator": {
        "type": "checkbox",
        "label": "Use 1000 Separator(.)",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "format__currency_symbol": {
        "type": "select",
        "label": "Symbol",
        "show_if": "this.format__category=='currency'",
        "required": true,
        "options": {
          "dollar": {
            "label": "$"
          },
          "euro": {
            "label": "€"
          },
          "pound": {
            "label": "£"
          },
          "yen": {
            "label": "¥ (Yen, currency of Japan)"
          },
          "colon": {
            "label": "₡ (Colón, currency of Costa Rica)"
          },
          "naira": {
            "label": "₦ (Naira, currency of Nigeria)"
          },
          "rupee": {
            "label": "₨ (Rupee, currency of India)"
          },
          "rupie": {
            "label": "₹ (Rupee, currency of India)"
          },
          "won": {
            "label": "₩ (Won, currency in South Korea and North Korea)"
          },
          "hebrew": {
            "label": "₪ (Currency of Israel)"
          },
          "dong": {
            "label": "₫ (Currency of Vietnam)"
          },
          "kip": {
            "label": "₭ (Kip, currency of Laos)"
          },
          "mongolia": {
            "label": "₮ (Currency of Mongolia)"
          },
          "peso": {
            "label": "₱ (Peso, currency of the Philippines)"
          },
          "guarani": {
            "label": "₲ (Guaraní, currency of Paraguay)"
          },
          "hryvnia": {
            "label": "₴ (Hryvnia, currency of Ukraine)"
          },
          "tenge": {
            "label": "₸ (Tenge, currency of Kazakhstan)"
          },
          "lira": {
            "label": "₺ (Lira, currency of Turkey)"
          },
          "manat": {
            "label": "₼ (Manat, currency of Azerbaijan)"
          },
          "rubles": {
            "label": "₽ (Rubles, currency of Russia)"
          },
          "lari": {
            "label": "₾ (Lari, currency of Georgia)"
          },
          "bitcoin": {
            "label": "₿ (Bitcoin, crypto currency)"
          }
        },
        "val": "dollar"
      },
      "format__date_format": {
        "type": "select",
        "label": "Type",
        "show_if": "this.format__category=='date'",
        "required": true,
        "options": {
          "mm/dd/yyyy": {
            "label": "3/14/2012"
          },
          "D, M dd, Y": {
            "label": "Wednesday, March 14, 2012"
          },
          "yyyy-mm-dd": {
            "label": "2012-03-14"
          },
          "m.dd.yyyy": {
            "label": "3.14.2012"
          },
          "m.dd.yy": {
            "label": "3.14.12"
          },
          "dd.m.yyyy": {
            "label": "14.3.2012"
          },
          "dd.m.yy": {
            "label": "14.3.12"
          },
          "M dd, Y": {
            "label": "March 14, 2012"
          },
          "dd-mm-yyyy": {
            "label": "14-03-2012"
          },
          "mm-dd-yyyy": {
            "label": "03-14-2012"
          },
          "dd-mm-yy": {
            "label": "14-03-12"
          },
          "mm-dd-yy": {
            "label": "03-14-12"
          }
        },
        "val": "mm/dd/yyyy"
      },
      "is_rename": {
        "type": "checkbox",
        "label": "Rename",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "rename": {
        "show_if": "this.is_rename == 'true'",
        "type": "text",
        "required": true,
        "minLength": 1,
        "maxLength": 255,
        "label": "New Column Name",
        "style": "margin-left: 10px"
      },
      "delete": {
        "type": "button",
        "label": "Delete",
        "function": "DELETE_ROW"
      }
    },
    "breakLine": true
  }
},
"/common-snippets/v1/AutoConfigInputTable.json/AutoConfigInputTable.json": {
  "output.input_table_auto_config": {
    "type": "checkbox",
    "label": "Autoconfigure Input Table",
    "val": "false",
    "isOn": "true",
    "isOff": "false"
  },
  "output.input_table_condition": {
    "type": "fieldset",
    "label": "Autoconfigure Input Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.input_table_auto_config=='true'",
    "repeat": true,
    "fields": {
      "initial_op": {
        "type": "select",
        "label": "Logic Operator",
        "required": true,
        "show_if" :  "$index == 0",
        "options": {
          "if": {
            "label": "IF"
          },
          "if_not": {
            "label": "IF NOT"
          }
        },
        "val": "if"
      },
      "op": {
        "type": "select",
        "label": "Logic Operator",
        "required": true,
        "show_if" :  "$index > 0",
        "options": {
          "and": {
            "label": "AND"
          },
          "or": {
            "label": "OR"
          },
          "and_not": {
            "label": "AND NOT"
          },
          "or_not": {
            "label": "OR NOT"
          }
        },
        "val": "and"
      },
      "type": {
        "type": "select",
        "label": "Type",
        "required": true,
        "options": {
          "Table Name": {
            "label": "Table Name"
          },
          "Tags": {
            "label": "Tags"
          }
        },
        "val": "Table Name"
      },
      "rows": {
        "type": "select",
        "label": "Condition",
        "show_if": "this.type == 'Tags'",
        "required": true,
        "options": {
          "All Tags": {
            "label": "All Tags"
          },
          "Some Tags": {
            "label": "Some Tags"
          }
        },
        "val": "Some Tags"
      },
      "condition": {
        "type": "select",
        "label": "Operator",
        "required": true,
        "options": {
          "CONTAINS": {
            "label": "CONTAINS"
          },
          "CONTAINED IN STRING": {
            "label": "CONTAINED IN"
          },
          "STARTS WITH": {
            "label": "STARTS WITH"
          },
          "ENDS WITH": {
            "label": "ENDS WITH"
          },
          "=": {
            "label": "EQUAL"
          },
          "REGEX MATCH": {
            "label": "REGEX MATCH"
          }
        },
        "val": "CONTAINS"
      },
      "value": {
        "type": "text",
        "label": "Input Value",
        "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
        "val": "",
        "required": true
      },
      "case_sensitive": {
        "type": "select",
        "label": "Case Sensitive",
        "required": true,
        "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
        "options": {
          "yes": {
            "label": "Case Sensitive"
          },
          "no": {
            "label": "Case Insensitive"
          }
        },
        "val": "yes"
      },
      "delete": {
        "type": "button",
        "label": "Delete",
        "function": "DELETE_ROW"
      }
    }
  }
}
,
"/common-snippets/v1/SelectOutputColumn.json/SelectOutputColumn.json": {
  "output.select_output_columns_type": {
    "type": "select",
    "label": "Select Output Columns",
    "required": true,
    "options": {
      "all": {
        "label": "All"
      },
      "standard": {
        "label": "Standard Column Selection"
      },
      "advanced": {
        "label": "Advanced Column Selection"
      }
    },
    "val": "all",
    "style": "margin-right: 15px"
  },
  "output_columns_frame": {
    "type": "fieldset",
    "label": "Select Output Columns",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.select_output_columns_type=='standard'",
    "repeat": false,
    "fields": {
      "output.output_columns": {
        "type": "select",
        "label": "Output Column(s)",
        "table": "table_id",
        "bind": "COLUMNS",
        "multiple": true,
        "required": true,
        "breakLine": true
      },
      "output.all_but_selected": {
        "type": "checkbox",
        "label": "All but selected",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  },
  "output.detail_output_columns": {
    "type": "fieldset",
    "label": "Select Output Columns",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.select_output_columns_type=='advanced'",
    "repeat": true,
    "fields": {
      "field_name": {
        "type": "select",
        "label": "Select Column",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "order": {
        "type": "select",
        "label": "Order",
        "options": {
          "-": {
            "label": "-"
          },
          "asc": {
            "label": "Asc"
          },
          "desc": {
            "label": "Desc"
          }
        },
        "val": "-"
      },
      "format__category": {
        "type": "select",
        "label": "Display Format",
        "required": true,
        "options": {
          "standard": {
            "label": "Standard"
          },
          "number": {
            "label": "Number"
          },
          "percentage": {
            "label": "Percentage"
          },
          "text": {
            "label": "Text"
          },
          "date": {
            "label": "Date"
          },
          "currency": {
            "label": "Currency"
          }
        },
        "val": "standard"
      },
      "format__rounding": {
        "type": "select",
        "label": "Decimal Places for display",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "required": true,
        "options": {
          "no_rounding": {
            "label": "No rounding"
          },
          "0": {
            "label": "0 digits"
          },
          "1": {
            "label": "1 digits"
          },
          "2": {
            "label": "2 digits"
          },
          "3": {
            "label": "3 digits"
          },
          "4": {
            "label": "4 digits"
          },
          "5": {
            "label": "5 digits"
          },
          "6": {
            "label": "6 digits"
          },
          "7": {
            "label": "7 digits"
          },
          "8": {
            "label": "8 digits"
          },
          "9": {
            "label": "9 digits"
          }
        },
        "val": "2"
      },
      "format__use_1000_separator": {
        "type": "checkbox",
        "label": "Use 1000 Separator(.)",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "format__currency_symbol": {
        "type": "select",
        "label": "Symbol",
        "show_if": "this.format__category=='currency'",
        "required": true,
        "options": {
          "dollar": {
            "label": "$"
          },
          "euro": {
            "label": "€"
          },
          "pound": {
            "label": "£"
          },
          "yen": {
            "label": "¥ (Yen, currency of Japan)"
          },
          "colon": {
            "label": "₡ (Colón, currency of Costa Rica)"
          },
          "naira": {
            "label": "₦ (Naira, currency of Nigeria)"
          },
          "rupee": {
            "label": "₨ (Rupee, currency of India)"
          },
          "rupie": {
            "label": "₹ (Rupee, currency of India)"
          },
          "won": {
            "label": "₩ (Won, currency in South Korea and North Korea)"
          },
          "hebrew": {
            "label": "₪ (Currency of Israel)"
          },
          "dong": {
            "label": "₫ (Currency of Vietnam)"
          },
          "kip": {
            "label": "₭ (Kip, currency of Laos)"
          },
          "mongolia": {
            "label": "₮ (Currency of Mongolia)"
          },
          "peso": {
            "label": "₱ (Peso, currency of the Philippines)"
          },
          "guarani": {
            "label": "₲ (Guaraní, currency of Paraguay)"
          },
          "hryvnia": {
            "label": "₴ (Hryvnia, currency of Ukraine)"
          },
          "tenge": {
            "label": "₸ (Tenge, currency of Kazakhstan)"
          },
          "lira": {
            "label": "₺ (Lira, currency of Turkey)"
          },
          "manat": {
            "label": "₼ (Manat, currency of Azerbaijan)"
          },
          "rubles": {
            "label": "₽ (Rubles, currency of Russia)"
          },
          "lari": {
            "label": "₾ (Lari, currency of Georgia)"
          },
          "bitcoin": {
            "label": "₿ (Bitcoin, crypto currency)"
          }
        },
        "val": "dollar"
      },
      "format__date_format": {
        "type": "select",
        "label": "Type",
        "show_if": "this.format__category=='date'",
        "required": true,
        "options": {
          "mm/dd/yyyy": {
            "label": "3/14/2012"
          },
          "D, M dd, Y": {
            "label": "Wednesday, March 14, 2012"
          },
          "yyyy-mm-dd": {
            "label": "2012-03-14"
          },
          "m.dd.yyyy": {
            "label": "3.14.2012"
          },
          "m.dd.yy": {
            "label": "3.14.12"
          },
          "dd.m.yyyy": {
            "label": "14.3.2012"
          },
          "dd.m.yy": {
            "label": "14.3.12"
          },
          "M dd, Y": {
            "label": "March 14, 2012"
          },
          "dd-mm-yyyy": {
            "label": "14-03-2012"
          },
          "mm-dd-yyyy": {
            "label": "03-14-2012"
          },
          "dd-mm-yy": {
            "label": "14-03-12"
          },
          "mm-dd-yy": {
            "label": "03-14-12"
          }
        },
        "val": "mm/dd/yyyy"
      },
      "is_rename": {
        "type": "checkbox",
        "label": "Rename",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "rename": {
        "show_if": "this.is_rename == 'true'",
        "type": "text",
        "required": true,
        "minLength": 1,
        "maxLength": 255,
        "label": "New Column Name",
        "style": "margin-left: 10px"
      },
      "delete": {
        "type": "button",
        "label": "Delete",
        "function": "DELETE_ROW"
      }
    },
    "breakLine": true
  }
},
"/common-snippets/v1/StandardOutput.json/StandardOutput.json": {
  "output": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.output_and_setting=='true'",
    "repeat": false,
    "fields": {
    }
  }
}
,
"/common-snippets/v1/ComposeTableNameWithoutInputTable.json/ComposeTableNameWithoutInputTable.json": {
  "output.table_name_type": {
    "type": "select",
    "label": "Table Name",
    "required": true,
    "options": {
      "task_name": {
        "label": "Task Name (Flow Name)"
      },
      "custom_name": {
        "label": "Custom Name"
      },
      "compose_name": {
        "label": "Compose Name"
      }
    },
    "val": "task_name",
    "breakLine": true
  },
  "output.custom_text": {
    "type": "text",
    "label": "Output Table Name",
    "show_if": "output.table_name_type=='custom_name'",
    "minLength": 1,
    "val": "",
    "width": "100%",
    "breakLine": true
  },
  "compose_table_name_frame": {
    "type": "fieldset",
    "label": "Compose Output Table Name",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.table_name_type=='compose_name'",
    "repeat": false,
    "fields": {
      "output.prefix_rule": {
        "type": "select",
        "label": "Prefix",
        "val": "empty",
        "options": {
          "empty": {
            "label": "-"
          },
          "script_name": {
            "label": "Task Name"
          },
          "date_string_type1": {
            "label": "Date: dd_mm_yyyy"
          },
          "date_string_type2": {
            "label": "Date: yyyy_mm_dd"
          },
          "time_string": {
            "label": "Time: h_min_sec"
          },
          "datetime_string": {
            "label": "Date_Time"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.prefix_text": {
        "type": "text",
        "label": "Prefix Text",
        "show_if": "output.prefix_rule=='custom'",
        "minLength": 1,
        "maxLength": 31,
        "val": ""
      },
      "output.core_delimiter": {
        "type": "text",
        "label": "Delimiter",
        "show_if": "output.prefix_rule!='empty'",
        "val": "_",
        "width": "50px"
      },
      "output.core_rule": {
        "type": "select",
        "label": "Table Name",
        "val": "script_name",
        "options": {
          "script_name": {
            "label": "Task Name"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.core_text": {
        "type": "text",
        "label": "Main Table Name",
        "show_if": "output.core_rule=='custom'",
        "required": true,
        "minLength": 1,
        "maxLength": 31,
        "val": ""
      },
      "output.suffix_delimiter": {
        "type": "text",
        "label": "Delimiter",
        "val": " ",
        "width": "50px"
      },
      "output.suffix_rule": {
        "type": "select",
        "label": "Suffix",
        "val": "flow_name",
        "options": {
          "empty": {
            "label": "-"
          },
          "flow_name": {
            "label": "(Flow Name)"
          },
          "script_name": {
            "label": "Task Name"
          },
          "date_string_type1": {
            "label": "Date: dd_mm_yyyy"
          },
          "date_string_type2": {
            "label": "Date: yyyy_mm_dd"
          },
          "time_string": {
            "label": "Time: h_min_sec"
          },
          "datetime_string": {
            "label": "Date_Time"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.suffix_text": {
        "type": "text",
        "label": "Suffix Text",
        "show_if": "output.suffix_rule=='custom'",
        "minLength": 1,
        "maxLength": 31,
        "val": "",
        "breakLine": true
      },
      "output.timezone": {
        "type": "select",
        "label": "Timezone",
        "show_if": "output.prefix_rule=='date_string_type1' || output.prefix_rule=='date_string_type2' || output.prefix_rule=='time_string' || output.prefix_rule=='datetime_string' || output.suffix_rule=='date_string_type1' || output.suffix_rule=='date_string_type2' || output.suffix_rule=='time_string' || output.suffix_rule=='datetime_string'",
        "val": "Europe/Berlin",
        "required": true,
        "options": {
          "America/Adak": {
            "label": "Adak, Gambier"
          },
          "Australia/Adelaide": {
            "label": "Adelaide, Broken Hill, Darwin"
          },
          "America/Anchorage": {
            "label": "Anchorage, Juneau, Sitka"
          },
          "Pacific/Apia": {
            "label": "Apia, Asau, Mulifanua, Afega, Leulumoega"
          },
          "Pacific/Enderbury": {
            "label": "Apia, Fiji, Tongatapu"
          },
          "Antarctica/McMurdo": {
            "label": "Auckland, Casey, Davis"
          },
          "Pacific/Auckland": {
            "label": "Auckland, Wellington, Christchurch"
          },
          "Asia/Bangkok": {
            "label": "Bangkok, Jakarta, Novosibirsk"
          },
          "Europe/Berlin": {
            "label": "Berlin, Paris, Amsterdam"
          },
          "Australia/Perth": {
            "label": "Brunei, Singapore, Perth"
          },
          "Atlantic/Cape_Verde": {
            "label": "Cape Verde,Praia, Mindelo, Santa Maria"
          },
          "America/Belize": {
            "label": "Costa Rica, El Salvador, Denver"
          },
          "Antarctica/Vostok": {
            "label": "Dhaka, Bishkek, Omsk"
          },
          "Europe/Astrakhan": {
            "label": "Dubai, Baku, Tbilisi"
          },
          "Australia/Eucla": {
            "label": "Eucla"
          },
          "Pacific/Honolulu": {
            "label": "Honolulu, Rarotonga, Tahiti"
          },
          "Asia/Kabul": {
            "label": "Kabul, Kandahār, Mazār-e Sharīf, Herāt, Jalālābād"
          },
          "Asia/Aqtau": {
            "label": "Karachi, Tashkent, Maldives"
          },
          "Asia/Kathmandu": {
            "label": "Kathmandu, Pokhara, Pātan, Biratnagar"
          },
          "Pacific/Kiritimati": {
            "label": "Kiritimati"
          },
          "Asia/Colombo": {
            "label": "Kolkata, Colombo, Jaffna, Negombo"
          },
          "Europe/Guernsey": {
            "label": "London, Dublin, Lisbon"
          },
          "Australia/Lord_Howe": {
            "label": "Lord Howe"
          },
          "America/Creston": {
            "label": "Los Angeles, Vancouver, Hermosillo"
          },
          "Pacific/Marquesas": {
            "label": "Marquesas, Taiohae"
          },
          "America/Cayman": {
            "label": "Mexico City, Panama, Chicago"
          },
          "Pacific/Niue": {
            "label": "Midway, Niue, Pago Pago"
          },
          "Europe/Mariehamn": {
            "label": "Moscow, Istanbul, Qatar"
          },
          "Asia/Kolkata": {
            "label": "Mumbai, Delhi, Bengaluru, Kolkata, Chennai"
          },
          "America/Miquelon": {
            "label": "Noronha, Nuuk, Miquelon"
          },
          "America/Danmarkshavn": {
            "label": "Reykjavik, Dakar, Casablanca"
          },
          "Pacific/Bougainville": {
            "label": "Sakhalin, Norfolk, Bougainville"
          },
          "America/Araguaina": {
            "label": "Sao Paulo, Buenos Aires, Montevideo"
          },
          "America/St_Johns": {
            "label": "St. Johns, Mount Pearl, Corner Brook"
          },
          "Asia/Tehran": {
            "label": "Tehran, Mashhad, Isfahan, Karaj, Tabriz"
          },
          "Asia/Tokyo": {
            "label": "Tokyo, Seoul, Jayapura"
          },
          "America/New_York": {
            "label": "Toronto, Santiago, New York"
          },
          "Australia/Sydney": {
            "label": "Vladivostok, Sydney, Brisbane"
          },
          "Asia/Yangon": {
            "label": "Yangon, Cocos, Mandalay, Nay Pyi Taw, Mawlamyine"
          },
          "Indian/Cocos": {
            "label": "Yangon, Cocos, West Island"
          }
        },
        "breakLine": true
      }
    },
    "breakLine": true
  }
},
"/common-snippets/v1/OutputSettingTickboxWEmbed.json/OutputSettingTickboxWEmbed.json": {
  "output.output_and_setting": {
    "type": "checkbox",
    "label": "Output and Settings",
    "show_if": "$rootScope.hostType!='Embed'",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  }
}
,
"/common-snippets/v1/OutputLocationNoExcel.json/OutputLocationNoExcel.json": {
  "output.location": {
    "type": "select",
    "label": "Output Type",
	"style": "margin-right: 15px",
    "options": {
      "output_as_new_table": {
        "label": "As New Table"
      },
      "overwrite_input_table": {
        "label": "Overwrite Input Table"
      }
    },
    "val": "output_as_new_table"
  }
}
,
"/common-snippets/v1/RootOutput.json/RootOutput.json": {
  "output": {
    "type": "fieldset",
    "label": "Output and Settings",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
    }
  }
},
"/common-snippets/v1/ComposeTableNameConfig.json/ComposeTableNameConfig.json": {
  "output.table_name_type": {
    "type": "select",
    "label": "Table Name",
    "show_if": "output.location!='overwrite_input_table'",
    "required": true,
    "options": {
      "task_name": {
        "label": "Task Name (Flow Name)"
      },
      "custom_name": {
        "label": "Custom Name"
      },
      "compose_name": {
        "label": "Compose Name"
      }
    },
    "val": "task_name",
    "breakLine": true
  },
  "output.custom_text": {
    "type": "text",
    "label": "Output Table Name",
    "show_if": "output.location!='overwrite_input_table' && output.table_name_type=='custom_name'",
    "minLength": 1,
    "val": "",
    "width": "100%",
    "breakLine": true
  },
  "compose_table_name_frame": {
    "type": "fieldset",
    "label": "Compose Output Table Name",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.location!='overwrite_input_table' && output.table_name_type=='compose_name'",
    "repeat": false,
    "fields": {
      "output.prefix_rule": {
        "type": "select",
        "label": "Prefix",
        "val": "empty",
        "options": {
          "empty": {
            "label": "-"
          },
          "script_name": {
            "label": "Task Name"
          },
          "date_string_type1": {
            "label": "Date: dd_mm_yyyy"
          },
          "date_string_type2": {
            "label": "Date: yyyy_mm_dd"
          },
          "time_string": {
            "label": "Time: h_min_sec"
          },
          "datetime_string": {
            "label": "Date_Time"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.prefix_text": {
        "type": "text",
        "label": "Prefix Text",
        "show_if": "output.prefix_rule=='custom'",
        "minLength": 1,
        "maxLength": 31,
        "val": ""
      },
      "output.core_delimiter": {
        "type": "text",
        "label": "Delimiter",
        "show_if": "output.prefix_rule!='empty'",
        "val": "_",
        "width": "50px"
      },
      "output.core_rule": {
        "type": "select",
        "label": "Table Name",
        "val": "script_name",
        "options": {
          "input_table_name": {
            "label": "Input Table Name"
          },
          "script_name": {
            "label": "Task Name"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.core_text": {
        "type": "text",
        "label": "Main Table Name",
        "show_if": "output.core_rule=='custom'",
        "required": true,
        "minLength": 1,
        "maxLength": 31,
        "val": ""
      },
      "output.suffix_delimiter": {
        "type": "text",
        "label": "Delimiter",
        "val": " ",
        "width": "50px"
      },
      "output.suffix_rule": {
        "type": "select",
        "label": "Suffix",
        "val": "flow_name",
        "options": {
          "empty": {
            "label": "-"
          },
          "flow_name": {
            "label": "(Flow Name)"
          },
          "script_name": {
            "label": "Task Name"
          },
          "date_string_type1": {
            "label": "Date: dd_mm_yyyy"
          },
          "date_string_type2": {
            "label": "Date: yyyy_mm_dd"
          },
          "time_string": {
            "label": "Time: h_min_sec"
          },
          "datetime_string": {
            "label": "Date_Time"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.suffix_text": {
        "type": "text",
        "label": "Suffix Text",
        "show_if": "output.suffix_rule=='custom'",
        "minLength": 1,
        "maxLength": 31,
        "val": "",
        "breakLine": true
      },
      "output.timezone": {
        "type": "select",
        "label": "Timezone",
        "show_if": "output.prefix_rule=='date_string_type1' || output.prefix_rule=='date_string_type2' || output.prefix_rule=='time_string' || output.prefix_rule=='datetime_string' || output.suffix_rule=='date_string_type1' || output.suffix_rule=='date_string_type2' || output.suffix_rule=='time_string' || output.suffix_rule=='datetime_string'",
        "val": "Europe/Berlin",
        "required": true,
        "options": {
          "America/Adak": {
            "label": "Adak, Gambier"
          },
          "Australia/Adelaide": {
            "label": "Adelaide, Broken Hill, Darwin"
          },
          "America/Anchorage": {
            "label": "Anchorage, Juneau, Sitka"
          },
          "Pacific/Apia": {
            "label": "Apia, Asau, Mulifanua, Afega, Leulumoega"
          },
          "Pacific/Enderbury": {
            "label": "Apia, Fiji, Tongatapu"
          },
          "Antarctica/McMurdo": {
            "label": "Auckland, Casey, Davis"
          },
          "Pacific/Auckland": {
            "label": "Auckland, Wellington, Christchurch"
          },
          "Asia/Bangkok": {
            "label": "Bangkok, Jakarta, Novosibirsk"
          },
          "Europe/Berlin": {
            "label": "Berlin, Paris, Amsterdam"
          },
          "Australia/Perth": {
            "label": "Brunei, Singapore, Perth"
          },
          "Atlantic/Cape_Verde": {
            "label": "Cape Verde,Praia, Mindelo, Santa Maria"
          },
          "America/Belize": {
            "label": "Costa Rica, El Salvador, Denver"
          },
          "Antarctica/Vostok": {
            "label": "Dhaka, Bishkek, Omsk"
          },
          "Europe/Astrakhan": {
            "label": "Dubai, Baku, Tbilisi"
          },
          "Australia/Eucla": {
            "label": "Eucla"
          },
          "Pacific/Honolulu": {
            "label": "Honolulu, Rarotonga, Tahiti"
          },
          "Asia/Kabul": {
            "label": "Kabul, Kandahār, Mazār-e Sharīf, Herāt, Jalālābād"
          },
          "Asia/Aqtau": {
            "label": "Karachi, Tashkent, Maldives"
          },
          "Asia/Kathmandu": {
            "label": "Kathmandu, Pokhara, Pātan, Biratnagar"
          },
          "Pacific/Kiritimati": {
            "label": "Kiritimati"
          },
          "Asia/Colombo": {
            "label": "Kolkata, Colombo, Jaffna, Negombo"
          },
          "Europe/Guernsey": {
            "label": "London, Dublin, Lisbon"
          },
          "Australia/Lord_Howe": {
            "label": "Lord Howe"
          },
          "America/Creston": {
            "label": "Los Angeles, Vancouver, Hermosillo"
          },
          "Pacific/Marquesas": {
            "label": "Marquesas, Taiohae"
          },
          "America/Cayman": {
            "label": "Mexico City, Panama, Chicago"
          },
          "Pacific/Niue": {
            "label": "Midway, Niue, Pago Pago"
          },
          "Europe/Mariehamn": {
            "label": "Moscow, Istanbul, Qatar"
          },
          "Asia/Kolkata": {
            "label": "Mumbai, Delhi, Bengaluru, Kolkata, Chennai"
          },
          "America/Miquelon": {
            "label": "Noronha, Nuuk, Miquelon"
          },
          "America/Danmarkshavn": {
            "label": "Reykjavik, Dakar, Casablanca"
          },
          "Pacific/Bougainville": {
            "label": "Sakhalin, Norfolk, Bougainville"
          },
          "America/Araguaina": {
            "label": "Sao Paulo, Buenos Aires, Montevideo"
          },
          "America/St_Johns": {
            "label": "St. Johns, Mount Pearl, Corner Brook"
          },
          "Asia/Tehran": {
            "label": "Tehran, Mashhad, Isfahan, Karaj, Tabriz"
          },
          "Asia/Tokyo": {
            "label": "Tokyo, Seoul, Jayapura"
          },
          "America/New_York": {
            "label": "Toronto, Santiago, New York"
          },
          "Australia/Sydney": {
            "label": "Vladivostok, Sydney, Brisbane"
          },
          "Asia/Yangon": {
            "label": "Yangon, Cocos, Mandalay, Nay Pyi Taw, Mawlamyine"
          },
          "Indian/Cocos": {
            "label": "Yangon, Cocos, West Island"
          }
        },
        "breakLine": true
      }
    },
    "breakLine": true
  }
},
"/common-snippets/v1/AddTagWithoutInputTable.json/AddTagWithoutInputTable.json": {
  "output.add_tag": {
    "type": "checkbox",
    "label": "Add Tag",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "style": "margin-right: 15px"
  },
  "output.add_tag_type": {
    "type": "select",
    "label": "Tagging type",
    "show_if": "output.add_tag=='true'",
    "options": {
      "custom": {
        "label": "Custom"
      },
      "output_table_names": {
        "label": "Output Table Name(s)"
      },
      "task_name": {
        "label": "Task Name"
      }
    },
    "val": "custom"
  },
  "output.tag_name": {
    "type": "text",
    "label": "Tag Name",
    "show_if": "output.add_tag=='true' && output.add_tag_type=='custom'",
    "required": true,
    "minLength": 1,
    "maxLength": 255,
    "val": "",
    "breakLine": true,
    "style": "margin-left: 15px"
  }
},
"/common-snippets/v1/ImportComposeTableName.json/ImportComposeTableName.json": {
  "output.table_name_type": {
    "type": "select",
    "label": "Table Name",
    "show_if": "options.use_filename_as_output_table_name=='false'",
    "required": true,
    "options": {
      "task_name": {
        "label": "Task Name (Flow Name)"
      },
      "custom_name": {
        "label": "Custom Name"
      },
      "compose_name": {
        "label": "Compose Name"
      }
    },
    "val": "task_name",
    "breakLine": true
  },
  "output.custom_text": {
    "type": "text",
    "label": "Output Table Name",
    "show_if": "options.use_filename_as_output_table_name=='false' && output.table_name_type=='custom_name'",
    "minLength": 1,
    "val": "",
    "width": "100%",
    "breakLine": true
  },
  "compose_table_name_frame": {
    "type": "fieldset",
    "label": "Compose Output Table Name",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "options.use_filename_as_output_table_name=='false' && output.table_name_type=='compose_name'",
    "repeat": false,
    "fields": {
      "output.prefix_rule": {
        "type": "select",
        "label": "Prefix",
        "val": "empty",
        "options": {
          "empty": {
            "label": "-"
          },
          "script_name": {
            "label": "Task Name"
          },
          "date_string_type1": {
            "label": "Date: dd_mm_yyyy"
          },
          "date_string_type2": {
            "label": "Date: yyyy_mm_dd"
          },
          "time_string": {
            "label": "Time: h_min_sec"
          },
          "datetime_string": {
            "label": "Date_Time"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.prefix_text": {
        "type": "text",
        "label": "Prefix Text",
        "show_if": "output.prefix_rule=='custom'",
        "minLength": 1,
        "maxLength": 31,
        "val": ""
      },
      "output.core_delimiter": {
        "type": "text",
        "label": "Delimiter",
        "show_if": "output.prefix_rule!='empty'",
        "val": "_",
        "width": "50px"
      },
      "output.core_rule": {
        "type": "select",
        "label": "Table Name",
        "val": "script_name",
        "options": {
          "script_name": {
            "label": "Task Name"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.core_text": {
        "type": "text",
        "label": "Main Table Name",
        "show_if": "output.core_rule=='custom'",
        "required": true,
        "minLength": 1,
        "maxLength": 31,
        "val": ""
      },
      "output.suffix_delimiter": {
        "type": "text",
        "label": "Delimiter",
        "val": " ",
        "width": "50px"
      },
      "output.suffix_rule": {
        "type": "select",
        "label": "Suffix",
        "val": "flow_name",
        "options": {
          "empty": {
            "label": "-"
          },
          "flow_name": {
            "label": "(Flow Name)"
          },
          "script_name": {
            "label": "Task Name"
          },
          "date_string_type1": {
            "label": "Date: dd_mm_yyyy"
          },
          "date_string_type2": {
            "label": "Date: yyyy_mm_dd"
          },
          "time_string": {
            "label": "Time: h_min_sec"
          },
          "datetime_string": {
            "label": "Date_Time"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.suffix_text": {
        "type": "text",
        "label": "Suffix Text",
        "show_if": "output.suffix_rule=='custom'",
        "minLength": 1,
        "maxLength": 31,
        "val": "",
        "breakLine": true
      },
      "output.timezone": {
        "type": "select",
        "label": "Timezone",
        "show_if": "output.prefix_rule=='date_string_type1' || output.prefix_rule=='date_string_type2' || output.prefix_rule=='time_string' || output.prefix_rule=='datetime_string' || output.suffix_rule=='date_string_type1' || output.suffix_rule=='date_string_type2' || output.suffix_rule=='time_string' || output.suffix_rule=='datetime_string'",
        "val": "Europe/Berlin",
        "required": true,
        "options": {
          "America/Adak": {
            "label": "Adak, Gambier"
          },
          "Australia/Adelaide": {
            "label": "Adelaide, Broken Hill, Darwin"
          },
          "America/Anchorage": {
            "label": "Anchorage, Juneau, Sitka"
          },
          "Pacific/Apia": {
            "label": "Apia, Asau, Mulifanua, Afega, Leulumoega"
          },
          "Pacific/Enderbury": {
            "label": "Apia, Fiji, Tongatapu"
          },
          "Antarctica/McMurdo": {
            "label": "Auckland, Casey, Davis"
          },
          "Pacific/Auckland": {
            "label": "Auckland, Wellington, Christchurch"
          },
          "Asia/Bangkok": {
            "label": "Bangkok, Jakarta, Novosibirsk"
          },
          "Europe/Berlin": {
            "label": "Berlin, Paris, Amsterdam"
          },
          "Australia/Perth": {
            "label": "Brunei, Singapore, Perth"
          },
          "Atlantic/Cape_Verde": {
            "label": "Cape Verde,Praia, Mindelo, Santa Maria"
          },
          "America/Belize": {
            "label": "Costa Rica, El Salvador, Denver"
          },
          "Antarctica/Vostok": {
            "label": "Dhaka, Bishkek, Omsk"
          },
          "Europe/Astrakhan": {
            "label": "Dubai, Baku, Tbilisi"
          },
          "Australia/Eucla": {
            "label": "Eucla"
          },
          "Pacific/Honolulu": {
            "label": "Honolulu, Rarotonga, Tahiti"
          },
          "Asia/Kabul": {
            "label": "Kabul, Kandahār, Mazār-e Sharīf, Herāt, Jalālābād"
          },
          "Asia/Aqtau": {
            "label": "Karachi, Tashkent, Maldives"
          },
          "Asia/Kathmandu": {
            "label": "Kathmandu, Pokhara, Pātan, Biratnagar"
          },
          "Pacific/Kiritimati": {
            "label": "Kiritimati"
          },
          "Asia/Colombo": {
            "label": "Kolkata, Colombo, Jaffna, Negombo"
          },
          "Europe/Guernsey": {
            "label": "London, Dublin, Lisbon"
          },
          "Australia/Lord_Howe": {
            "label": "Lord Howe"
          },
          "America/Creston": {
            "label": "Los Angeles, Vancouver, Hermosillo"
          },
          "Pacific/Marquesas": {
            "label": "Marquesas, Taiohae"
          },
          "America/Cayman": {
            "label": "Mexico City, Panama, Chicago"
          },
          "Pacific/Niue": {
            "label": "Midway, Niue, Pago Pago"
          },
          "Europe/Mariehamn": {
            "label": "Moscow, Istanbul, Qatar"
          },
          "Asia/Kolkata": {
            "label": "Mumbai, Delhi, Bengaluru, Kolkata, Chennai"
          },
          "America/Miquelon": {
            "label": "Noronha, Nuuk, Miquelon"
          },
          "America/Danmarkshavn": {
            "label": "Reykjavik, Dakar, Casablanca"
          },
          "Pacific/Bougainville": {
            "label": "Sakhalin, Norfolk, Bougainville"
          },
          "America/Araguaina": {
            "label": "Sao Paulo, Buenos Aires, Montevideo"
          },
          "America/St_Johns": {
            "label": "St. Johns, Mount Pearl, Corner Brook"
          },
          "Asia/Tehran": {
            "label": "Tehran, Mashhad, Isfahan, Karaj, Tabriz"
          },
          "Asia/Tokyo": {
            "label": "Tokyo, Seoul, Jayapura"
          },
          "America/New_York": {
            "label": "Toronto, Santiago, New York"
          },
          "Australia/Sydney": {
            "label": "Vladivostok, Sydney, Brisbane"
          },
          "Asia/Yangon": {
            "label": "Yangon, Cocos, Mandalay, Nay Pyi Taw, Mawlamyine"
          },
          "Indian/Cocos": {
            "label": "Yangon, Cocos, West Island"
          }
        },
        "breakLine": true
      }
    },
    "breakLine": true
  }
},
"/common-snippets/v1/DataCommonsOutputSettingTickbox.json/DataCommonsOutputSettingTickbox.json": {
  "output.output_and_setting": {
    "type": "checkbox",
    "label": "Output and Settings",
    "show_if": "options.output_as_chart=='false'",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  }
}
,
"/common-snippets/v1/Export2FileComposeTableName.json/Export2FileComposeTableName.json": {
  "output.table_name_type": {
    "type": "select",
    "label": "Table Name",
    "show_if": "options.export_series=='false'",
    "required": true,
    "options": {
      "task_name": {
        "label": "Task Name (Flow Name)"
      },
      "custom_name": {
        "label": "Custom Name"
      },
      "compose_name": {
        "label": "Compose Name"
      }
    },
    "val": "task_name",
    "breakLine": true
  },
  "output.custom_text": {
    "type": "text",
    "label": "Output Table Name",
    "show_if": "output.output_as_new_table=='true' && output.table_name_type=='custom_name'",
    "minLength": 1,
    "val": "",
    "width": "100%",
    "breakLine": true
  },
  "compose_table_name_frame": {
    "type": "fieldset",
    "label": "Compose Output Table Name",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.output_as_new_table=='true' && output.table_name_type=='compose_name'",
    "repeat": false,
    "fields": {
      "output.prefix_rule": {
        "type": "select",
        "label": "Prefix",
        "val": "empty",
        "options": {
          "empty": {
            "label": "-"
          },
          "script_name": {
            "label": "Task Name"
          },
          "date_string_type1": {
            "label": "Date: dd_mm_yyyy"
          },
          "date_string_type2": {
            "label": "Date: yyyy_mm_dd"
          },
          "time_string": {
            "label": "Time: h_min_sec"
          },
          "datetime_string": {
            "label": "Date_Time"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.prefix_text": {
        "type": "text",
        "label": "Prefix Text",
        "show_if": "output.prefix_rule=='custom'",
        "minLength": 1,
        "maxLength": 31,
        "val": ""
      },
      "output.core_delimiter": {
        "type": "text",
        "label": "Delimiter",
        "show_if": "output.prefix_rule!='empty'",
        "val": "_",
        "width": "50px"
      },
      "output.core_rule": {
        "type": "select",
        "label": "Table Name",
        "val": "script_name",
        "options": {
          "input_table_name": {
            "label": "Input Table Name"
          },
          "script_name": {
            "label": "Task Name"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.core_text": {
        "type": "text",
        "label": "Main Table Name",
        "show_if": "output.core_rule=='custom'",
        "required": true,
        "minLength": 1,
        "maxLength": 31,
        "val": ""
      },
      "output.suffix_delimiter": {
        "type": "text",
        "label": "Delimiter",
        "val": " ",
        "width": "50px"
      },
      "output.suffix_rule": {
        "type": "select",
        "label": "Suffix",
        "val": "flow_name",
        "options": {
          "empty": {
            "label": "-"
          },
          "flow_name": {
            "label": "(Flow Name)"
          },
          "script_name": {
            "label": "Task Name"
          },
          "date_string_type1": {
            "label": "Date: dd_mm_yyyy"
          },
          "date_string_type2": {
            "label": "Date: yyyy_mm_dd"
          },
          "time_string": {
            "label": "Time: h_min_sec"
          },
          "datetime_string": {
            "label": "Date_Time"
          },
          "custom": {
            "label": "Custom"
          }
        }
      },
      "output.suffix_text": {
        "type": "text",
        "label": "Suffix Text",
        "show_if": "output.suffix_rule=='custom'",
        "minLength": 1,
        "maxLength": 31,
        "val": "",
        "breakLine": true
      },
      "output.timezone": {
        "type": "select",
        "label": "Timezone",
        "show_if": "output.prefix_rule=='date_string_type1' || output.prefix_rule=='date_string_type2' || output.prefix_rule=='time_string' || output.prefix_rule=='datetime_string' || output.suffix_rule=='date_string_type1' || output.suffix_rule=='date_string_type2' || output.suffix_rule=='time_string' || output.suffix_rule=='datetime_string'",
        "val": "Europe/Berlin",
        "required": true,
        "options": {
          "America/Adak": {
            "label": "Adak, Gambier"
          },
          "Australia/Adelaide": {
            "label": "Adelaide, Broken Hill, Darwin"
          },
          "America/Anchorage": {
            "label": "Anchorage, Juneau, Sitka"
          },
          "Pacific/Apia": {
            "label": "Apia, Asau, Mulifanua, Afega, Leulumoega"
          },
          "Pacific/Enderbury": {
            "label": "Apia, Fiji, Tongatapu"
          },
          "Antarctica/McMurdo": {
            "label": "Auckland, Casey, Davis"
          },
          "Pacific/Auckland": {
            "label": "Auckland, Wellington, Christchurch"
          },
          "Asia/Bangkok": {
            "label": "Bangkok, Jakarta, Novosibirsk"
          },
          "Europe/Berlin": {
            "label": "Berlin, Paris, Amsterdam"
          },
          "Australia/Perth": {
            "label": "Brunei, Singapore, Perth"
          },
          "Atlantic/Cape_Verde": {
            "label": "Cape Verde,Praia, Mindelo, Santa Maria"
          },
          "America/Belize": {
            "label": "Costa Rica, El Salvador, Denver"
          },
          "Antarctica/Vostok": {
            "label": "Dhaka, Bishkek, Omsk"
          },
          "Europe/Astrakhan": {
            "label": "Dubai, Baku, Tbilisi"
          },
          "Australia/Eucla": {
            "label": "Eucla"
          },
          "Pacific/Honolulu": {
            "label": "Honolulu, Rarotonga, Tahiti"
          },
          "Asia/Kabul": {
            "label": "Kabul, Kandahār, Mazār-e Sharīf, Herāt, Jalālābād"
          },
          "Asia/Aqtau": {
            "label": "Karachi, Tashkent, Maldives"
          },
          "Asia/Kathmandu": {
            "label": "Kathmandu, Pokhara, Pātan, Biratnagar"
          },
          "Pacific/Kiritimati": {
            "label": "Kiritimati"
          },
          "Asia/Colombo": {
            "label": "Kolkata, Colombo, Jaffna, Negombo"
          },
          "Europe/Guernsey": {
            "label": "London, Dublin, Lisbon"
          },
          "Australia/Lord_Howe": {
            "label": "Lord Howe"
          },
          "America/Creston": {
            "label": "Los Angeles, Vancouver, Hermosillo"
          },
          "Pacific/Marquesas": {
            "label": "Marquesas, Taiohae"
          },
          "America/Cayman": {
            "label": "Mexico City, Panama, Chicago"
          },
          "Pacific/Niue": {
            "label": "Midway, Niue, Pago Pago"
          },
          "Europe/Mariehamn": {
            "label": "Moscow, Istanbul, Qatar"
          },
          "Asia/Kolkata": {
            "label": "Mumbai, Delhi, Bengaluru, Kolkata, Chennai"
          },
          "America/Miquelon": {
            "label": "Noronha, Nuuk, Miquelon"
          },
          "America/Danmarkshavn": {
            "label": "Reykjavik, Dakar, Casablanca"
          },
          "Pacific/Bougainville": {
            "label": "Sakhalin, Norfolk, Bougainville"
          },
          "America/Araguaina": {
            "label": "Sao Paulo, Buenos Aires, Montevideo"
          },
          "America/St_Johns": {
            "label": "St. Johns, Mount Pearl, Corner Brook"
          },
          "Asia/Tehran": {
            "label": "Tehran, Mashhad, Isfahan, Karaj, Tabriz"
          },
          "Asia/Tokyo": {
            "label": "Tokyo, Seoul, Jayapura"
          },
          "America/New_York": {
            "label": "Toronto, Santiago, New York"
          },
          "Australia/Sydney": {
            "label": "Vladivostok, Sydney, Brisbane"
          },
          "Asia/Yangon": {
            "label": "Yangon, Cocos, Mandalay, Nay Pyi Taw, Mawlamyine"
          },
          "Indian/Cocos": {
            "label": "Yangon, Cocos, West Island"
          }
        },
        "breakLine": true
      }
    },
    "breakLine": true
  }
},
"/common-snippets/v1/OutputSettingTickbox.json/OutputSettingTickbox.json": {
  "output.output_and_setting": {
    "type": "checkbox",
    "label": "Output and Settings",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  }
}
,
"/common-snippets/v1/SelectTable.json/SelectTable.json": {
  "input": {
    "type": "fieldset",
    "label": "Select Input Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "table_id": {
        "type": "select",
        "label": "Select Table",
        "bind": "TABLES",
        "empty": "",
        "required": true,
        "breakLine": true
      },
      "remove_input_table_after_processing": {
        "type": "hidden",
        "val": "false"
      },
      "is_word": {
        "type": "hidden",
        "val": "false"
      }
    }
  }
}
,
"/common-snippets/v1/ReverseOrder.json/ReverseOrder.json": {
  "output.reverse_order": {
    "type": "checkbox",
    "label": "Reverse order",
    "show_if": "output.select_output_columns_type=='all' || output.select_output_columns_type=='standard'",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  }
},
"/common-snippets/v1/ImportUseFilenameAsTableName.json/ImportUseFilenameAsTableName.json": {
  "options.use_filename_as_output_table_name": {
    "type": "checkbox",
    "label": "Use filename as output table name",
    "val": "true",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  }
},
"/common-snippets/v1/DataCommonsOutput.json/DataCommonsOutput.json": {
  "output": {
    "type": "fieldset",
    "label": "Output and Settings",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "options.output_as_chart=='false' && output.output_and_setting=='true'",
    "repeat": false,
    "fields": {
    }
  }
},
"/common-snippets/v1/InputColumnsConfig.json/InputColumnsConfig.json": {
  "output.input_table_config": {
    "type": "checkbox",
    "label": "Autoconfigure Input Table",
    "val": "false",
    "isOn": "true",
    "isOff": "false"
  },
  "input_table_config_frame": {
    "type": "fieldset",
    "label": "Autoconfigure Input Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.input_table_config=='true'",
    "repeat": false,
    "fields": {

    }
  }
}
,
"/common-snippets/v1/DownloadSettings.json/DownloadSettings.json": {
  "download_setting_frame": {
    "type": "fieldset",
    "label": "Download Settings",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "false",
    "repeat": false,
    "fields": {
      "output.options.location": {
        "type": "text",
        "label": "Specify Location",
        "val": "A1",
        "breakLine": true
      },
      "output.options.formatted_as_table": {
        "type": "checkbox",
        "label": "Formatted as Table",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "output.options.visibility": {
        "type": "select",
        "label": "Visibility",
        "val": "current_flow",
        "options": {
          "current_flow": {
            "label": "Current Flow"
          },
          "all_flow": {
            "label": "All Flows"
          }
        },
        "breakLine": true
      },
      "output.options.table_mode": {
        "type": "select",
        "label": "Paste",
        "val": "content_only",
        "options": {
          "content_only": {
            "label": "Content Only"
          },
          "fully_formatted": {
            "label": "Fully Formatted"
          }
        }
      }
    },
    "breakLine": true,
    "style": "margin-bottom: 20px"
  }
}
,
"/common-snippets/v2/SelectTableConfig.json/SelectTableConfig.json": {
  "input": {
    "type": "fieldset",
    "label": "Select Input Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "configure_input_tables": {
        "type": "select",
        "label": "Select Source",
        "options": {
          "zippydoc_table": {
            "label": "Flow Table"
          },
          "excel_sheet": {
            "label": "Excel Sheet",
          },
          "excel_column_and_row_range": {
            "label": "Excel Column & Row Range"
          },
          "excel_range_name": {
            "label": "Excel Range Name"
          },
          "search_tables": {
            "label": "Search Tables"
          }
        },
        "val": "zippydoc_table"
      },
      "search_tables__types": {
        "type": "select",
        "label": "Table Search Source",
        "show_if": "configure_input_tables!='zippydoc_table'",
        "options": {
          "owned_tables": {
            "label": "Owned tables"
          },
          "shared_tables": {
            "label": "Shared tables"
          },
          "published_tables": {
            "label": "Published tables"
          }
        },
        "multiple": true,
        "val": ["owned_tables"]
      },
      "search_tables__select_columns_by": {
        "type": "select",
        "label": "Column selection type",
        "show_if": "configure_input_tables!='zippydoc_table'",
        "options": {
          "by_name_text": {
            "label": "Select columns by name"
          },
          "by_order": {
            "label": "Select columns by order"
          }
        },
        "val": "by_name_text"
      },
      "table_id": {
        "type": "select",
        "label": "Input Table",
        "show_if": "configure_input_tables=='zippydoc_table'",
        "bind": "TABLES",
        "empty": "",
        "required": true
      },
      "excel_sheet__table_has_header": {
        "type": "checkbox",
        "label": "Table has header",
        "show_if": "configure_input_tables=='excel_sheet' || configure_input_tables=='excel_column_and_row_range' || configure_input_tables=='excel_range_name'",
        "val": "true",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "excel_sheet__active_sheet": {
        "type": "checkbox",
        "label": "Active Sheet",
        "show_if": "configure_input_tables=='excel_sheet' || configure_input_tables=='excel_column_and_row_range' || configure_input_tables=='excel_range_name'",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "excel_sheet__sheet_name": {
        "type": "text",
        "label": "Sheet Name",
        "show_if": "(configure_input_tables=='excel_sheet' || configure_input_tables=='excel_column_and_row_range' || configure_input_tables=='excel_range_name') && excel_sheet__active_sheet=='false'",
        "val": "",
        "style": "margin-left: 15px",
        "breakLine": true
      },
      "excel_sheet__named_range": {
        "type": "text",
        "label": "Named Range",
        "show_if": "configure_input_tables=='excel_range_name'",
        "val": ""
      },
      "excel_sheet__columns_from_label": {
        "type": "text",
        "label": "",
        "show_if": "configure_input_tables=='excel_column_and_row_range'",
        "val": "Columns from",
        "disabled": true
      },
      "excel_sheet__from_column": {
        "type": "select",
        "label": "From Column",
        "show_if": "configure_input_tables=='excel_column_and_row_range'",
        "options": {
          "A": {
            "label": "A"
          },
          "B": {
            "label": "B"
          },
          "C": {
            "label": "C"
          },
          "D": {
            "label": "D"
          },
          "E": {
            "label": "E"
          },
          "F": {
            "label": "F"
          },
          "G": {
            "label": "G"
          },
          "H": {
            "label": "H"
          },
          "I": {
            "label": "I"
          },
          "J": {
            "label": "J"
          },
          "K": {
            "label": "K"
          },
          "L": {
            "label": "L"
          },
          "M": {
            "label": "M"
          },
          "N": {
            "label": "N"
          },
          "O": {
            "label": "O"
          },
          "P": {
            "label": "P"
          },
          "Q": {
            "label": "Q"
          },
          "R": {
            "label": "R"
          },
          "S": {
            "label": "S"
          },
          "T": {
            "label": "T"
          },
          "U": {
            "label": "U"
          },
          "V": {
            "label": "V"
          },
          "W": {
            "label": "W"
          },
          "X": {
            "label": "X"
          },
          "Y": {
            "label": "Y"
          },
          "Z": {
            "label": "Z"
          },
          "AA": {
            "label": "AA"
          },
          "AB": {
            "label": "AB"
          },
          "AC": {
            "label": "AC"
          },
          "AD": {
            "label": "AD"
          },
          "AE": {
            "label": "AE"
          },
          "AF": {
            "label": "AF"
          },
          "AG": {
            "label": "AG"
          },
          "AH": {
            "label": "AH"
          },
          "AI": {
            "label": "AI"
          },
          "AJ": {
            "label": "AJ"
          },
          "AK": {
            "label": "AK"
          },
          "AL": {
            "label": "AL"
          },
          "AM": {
            "label": "AM"
          },
          "AN": {
            "label": "AN"
          },
          "AO": {
            "label": "AO"
          },
          "AP": {
            "label": "AP"
          },
          "AQ": {
            "label": "AQ"
          },
          "AR": {
            "label": "AR"
          },
          "AS": {
            "label": "AS"
          },
          "AT": {
            "label": "AT"
          },
          "AU": {
            "label": "AU"
          },
          "AV": {
            "label": "AV"
          },
          "AW": {
            "label": "AW"
          },
          "AX": {
            "label": "AX"
          },
          "AY": {
            "label": "AY"
          },
          "AZ": {
            "label": "AZ"
          }
        },
        "val": "A"
      },
      "excel_sheet__columns_to_label": {
        "type": "text",
        "label": "",
        "show_if": "configure_input_tables=='excel_column_and_row_range'",
        "val": "to",
        "disabled": true
      },
      "excel_sheet__to_column": {
        "type": "select",
        "label": "To Column",
        "show_if": "configure_input_tables=='excel_column_and_row_range'",
        "options": {
          "A": {
            "label": "A"
          },
          "B": {
            "label": "B"
          },
          "C": {
            "label": "C"
          },
          "D": {
            "label": "D"
          },
          "E": {
            "label": "E"
          },
          "F": {
            "label": "F"
          },
          "G": {
            "label": "G"
          },
          "H": {
            "label": "H"
          },
          "I": {
            "label": "I"
          },
          "J": {
            "label": "J"
          },
          "K": {
            "label": "K"
          },
          "L": {
            "label": "L"
          },
          "M": {
            "label": "M"
          },
          "N": {
            "label": "N"
          },
          "O": {
            "label": "O"
          },
          "P": {
            "label": "P"
          },
          "Q": {
            "label": "Q"
          },
          "R": {
            "label": "R"
          },
          "S": {
            "label": "S"
          },
          "T": {
            "label": "T"
          },
          "U": {
            "label": "U"
          },
          "V": {
            "label": "V"
          },
          "W": {
            "label": "W"
          },
          "X": {
            "label": "X"
          },
          "Y": {
            "label": "Y"
          },
          "Z": {
            "label": "Z"
          },
          "AA": {
            "label": "AA"
          },
          "AB": {
            "label": "AB"
          },
          "AC": {
            "label": "AC"
          },
          "AD": {
            "label": "AD"
          },
          "AE": {
            "label": "AE"
          },
          "AF": {
            "label": "AF"
          },
          "AG": {
            "label": "AG"
          },
          "AH": {
            "label": "AH"
          },
          "AI": {
            "label": "AI"
          },
          "AJ": {
            "label": "AJ"
          },
          "AK": {
            "label": "AK"
          },
          "AL": {
            "label": "AL"
          },
          "AM": {
            "label": "AM"
          },
          "AN": {
            "label": "AN"
          },
          "AO": {
            "label": "AO"
          },
          "AP": {
            "label": "AP"
          },
          "AQ": {
            "label": "AQ"
          },
          "AR": {
            "label": "AR"
          },
          "AS": {
            "label": "AS"
          },
          "AT": {
            "label": "AT"
          },
          "AU": {
            "label": "AU"
          },
          "AV": {
            "label": "AV"
          },
          "AW": {
            "label": "AW"
          },
          "AX": {
            "label": "AX"
          },
          "AY": {
            "label": "AY"
          },
          "AZ": {
            "label": "AZ"
          }
        },
        "val": "B",
        "breakLine": true
      },
      "excel_sheet__rows_from_label": {
        "type": "text",
        "label": "",
        "show_if": "configure_input_tables=='excel_column_and_row_range'",
        "val": "Rows from",
        "disabled": true
      },
      "excel_sheet__from_row": {
        "type": "number",
        "label": "From Row(1-1000)",
        "show_if": "configure_input_tables=='excel_column_and_row_range'",
        "required": true,
        "val": 1
      },
      "excel_sheet__rows_to_label": {
        "type": "text",
        "label": "",
        "show_if": "configure_input_tables=='excel_column_and_row_range'",
        "val": "to",
        "disabled": true
      },
      "excel_sheet__to_row": {
        "type": "number",
        "label": "To Row(1-1000)",
        "show_if": "configure_input_tables=='excel_column_and_row_range'",
        "required": true,
        "val": 2,
        "breakLine": true
      },
      "input_table_condition": {
        "type": "fieldset",
        "label": "Search Tables",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "configure_input_tables=='search_tables'",
        "repeat": true,
        "fields": {
          "initial_op": {
            "type": "select",
            "label": "Logic Operator",
            "required": true,
            "show_if" :  "$index == 0",
            "options": {
              "if": {
                "label": "IF"
              },
              "if_not": {
                "label": "IF NOT"
              }
            },
            "val": "if"
          },
          "op": {
            "type": "select",
            "label": "Logic Operator",
            "required": true,
            "show_if" :  "$index > 0",
            "options": {
              "and": {
                "label": "AND"
              },
              "or": {
                "label": "OR"
              },
              "and_not": {
                "label": "AND NOT"
              },
              "or_not": {
                "label": "OR NOT"
              }
            },
            "val": "and"
          },
          "type": {
            "type": "select",
            "label": "Type",
            "required": true,
            "options": {
              "Table Name": {
                "label": "Table Name"
              },
              "Tags": {
                "label": "Tags"
              }
            },
            "val": "Table Name"
          },
          "condition": {
            "type": "select",
            "label": "Operator",
            "required": true,
            "options": {
              "CONTAINS": {
                "label": "CONTAINS"
              },
              "STARTS WITH": {
                "label": "STARTS WITH"
              },
              "ENDS WITH": {
                "label": "ENDS WITH"
              },
              "=": {
                "label": "EQUAL"
              },
              "REGEX MATCH": {
                "label": "REGEX MATCH"
              }
            },
            "val": "CONTAINS"
          },
          "value": {
            "type": "text",
            "label": "Input Value",
            "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "val": "",
            "required": true
          },
          "case_sensitive": {
            "type": "select",
            "label": "Case Sensitive",
            "required": true,
            "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "options": {
              "yes": {
                "label": "Case Sensitive"
              },
              "no": {
                "label": "Case Insensitive"
              }
            },
            "val": "yes"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "remove_input_table_after_processing": {
        "type": "hidden",
        "val": "false"
      },
      "is_word": {
        "type": "hidden",
        "val": "false"
      }
    }
  }
}
,
"/common-snippets/v2/SelectColumnOnlyConfig.json/SelectColumnOnlyConfig.json": {
  "placeholder": {
    "breakLine": true
  },
  "apply_columns_frame": {
    "type": "fieldset",
    "label": "Select column(s) to apply",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "apply_to_all_columns": {
        "type": "checkbox",
        "label": "All Columns",
        "show_if": "configure_input_tables=='zippydoc_table' && false",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "apply_columns__all_but_selected": {
        "type": "checkbox",
        "label": "All but selected",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "apply_columns": {
        "type": "select",
        "label": "Select Columns to Apply",
        "show_if": "configure_input_tables=='zippydoc_table'",
        "required": true,
        "width": "100%",
        "table": "table_id",
        "multiple": true,
        "bind": "COLUMNS",
        "breakLine": true
      },
      "search_tables__apply_columns_text": {
        "type": "text",
        "label": "Column(s) to apply (separated by `;`)",
        "show_if": "configure_input_tables!='zippydoc_table' && search_tables__select_columns_by=='by_name_text'",
        "val": "",
        "placeholder": "Column1; Column2; ColumnN",
        "required": true,
        "style": "width: 100%"
      },
      "search_tables__apply_columns_order": {
        "type": "select",
        "label": "Column(s) to apply",
        "required": true,
        "show_if" :  "configure_input_tables!='zippydoc_table' && search_tables__select_columns_by=='by_order'",
        "options": {
          "col1": {
            "label": "Column 1"
          },
          "col2": {
            "label": "Column 2"
          },
          "col3": {
            "label": "Column 3"
          },
          "col4": {
            "label": "Column 4"
          },
          "col5": {
            "label": "Column 5"
          },
          "col6": {
            "label": "Column 6"
          },
          "col7": {
            "label": "Column 7"
          },
          "col8": {
            "label": "Column 8"
          },
          "col9": {
            "label": "Column 9"
          },
          "col10": {
            "label": "Column 10"
          },
          "col11": {
            "label": "Column 11"
          },
          "col12": {
            "label": "Column 12"
          },
          "col13": {
            "label": "Column 13"
          },
          "col14": {
            "label": "Column 14"
          },
          "col15": {
            "label": "Column 15"
          },
          "col16": {
            "label": "Column 16"
          },
          "col17": {
            "label": "Column 17"
          },
          "col18": {
            "label": "Column 18"
          },
          "col19": {
            "label": "Column 19"
          },
          "col20": {
            "label": "Column 20"
          }
        },
        "multiple": true,
        "val": []
      }
    }
  }
}
,
"/common-snippets/v2/SelectOutputColumnConfig.json/SelectOutputColumnConfig.json": {
  "output.select_output_columns_type": {
    "type": "select",
    "label": "Select Output Columns",
    "required": true,
    "options": {
      "all": {
        "label": "All"
      },
      "standard": {
        "label": "Standard Column Selection"
      },
      "advanced": {
        "label": "Advanced Column Selection"
      }
    },
    "val": "all",
    "breakLine": true
  },
  "output_columns_frame": {
    "type": "fieldset",
    "label": "Select Output Columns",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.select_output_columns_type=='standard'",
    "repeat": false,
    "fields": {
      "output.output_columns": {
        "type": "select",
        "label": "Output Column(s)",
        "show_if": "configure_input_tables=='zippydoc_table'",
        "table": "table_id",
        "bind": "COLUMNS",
        "multiple": true,
        "required": true
      },
      "output.search_tables__output_columns_text": {
        "type": "text",
        "label": "Output Column(s) separated by `;`",
        "show_if": "configure_input_tables!='zippydoc_table' && search_tables__select_columns_by=='by_name_text'",
        "val": "",
        "placeholder": "Column1; Column2; ColumnN",
        "required": true,
        "style": "width: 100%"
      },
      "output.search_tables__output_columns_order": {
        "type": "select",
        "label": "Output Column(s)",
        "show_if": "configure_input_tables!='zippydoc_table' && search_tables__select_columns_by=='by_order'",
        "multiple": true,
        "options": {
          "col1": {
            "label": "Column 1"
          },
          "col2": {
            "label": "Column 2"
          },
          "col3": {
            "label": "Column 3"
          },
          "col4": {
            "label": "Column 4"
          },
          "col5": {
            "label": "Column 5"
          },
          "col6": {
            "label": "Column 6"
          },
          "col7": {
            "label": "Column 7"
          },
          "col8": {
            "label": "Column 8"
          },
          "col9": {
            "label": "Column 9"
          },
          "col10": {
            "label": "Column 10"
          },
          "col11": {
            "label": "Column 11"
          },
          "col12": {
            "label": "Column 12"
          },
          "col13": {
            "label": "Column 13"
          },
          "col14": {
            "label": "Column 14"
          },
          "col15": {
            "label": "Column 15"
          },
          "col16": {
            "label": "Column 16"
          },
          "col17": {
            "label": "Column 17"
          },
          "col18": {
            "label": "Column 18"
          },
          "col19": {
            "label": "Column 19"
          },
          "col20": {
            "label": "Column 20"
          }
        },
        "val": [],
        "breakLine": true
      },
      "output.all_but_selected": {
        "type": "checkbox",
        "label": "All but selected",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  },
  "output.detail_output_columns": {
    "type": "fieldset",
    "label": "Select Output Columns",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.select_output_columns_type=='advanced'",
    "repeat": true,
    "fields": {
      "field_name": {
        "type": "select",
        "label": "Select Column",
        "show_if": "configure_input_tables=='zippydoc_table'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "search_tables__field_name_text": {
        "type": "text",
        "label": "Input Column Name",
        "show_if": "configure_input_tables!='zippydoc_table' && search_tables__select_columns_by=='by_name_text'",
        "val": "",
        "required": true
      },
      "search_tables__field_name_order": {
        "type": "select",
        "label": "Select Column",
        "show_if": "configure_input_tables!='zippydoc_table' && search_tables__select_columns_by=='by_order'",
        "options": {
          "col1": {
            "label": "Column 1"
          },
          "col2": {
            "label": "Column 2"
          },
          "col3": {
            "label": "Column 3"
          },
          "col4": {
            "label": "Column 4"
          },
          "col5": {
            "label": "Column 5"
          },
          "col6": {
            "label": "Column 6"
          },
          "col7": {
            "label": "Column 7"
          },
          "col8": {
            "label": "Column 8"
          },
          "col9": {
            "label": "Column 9"
          },
          "col10": {
            "label": "Column 10"
          },
          "col11": {
            "label": "Column 11"
          },
          "col12": {
            "label": "Column 12"
          },
          "col13": {
            "label": "Column 13"
          },
          "col14": {
            "label": "Column 14"
          },
          "col15": {
            "label": "Column 15"
          },
          "col16": {
            "label": "Column 16"
          },
          "col17": {
            "label": "Column 17"
          },
          "col18": {
            "label": "Column 18"
          },
          "col19": {
            "label": "Column 19"
          },
          "col20": {
            "label": "Column 20"
          }
        },
        "val": ""
      },
      "order": {
        "type": "select",
        "label": "Order",
        "options": {
          "-": {
            "label": "-"
          },
          "asc": {
            "label": "Asc"
          },
          "desc": {
            "label": "Desc"
          }
        },
        "val": "-"
      },
      "format__category": {
        "type": "select",
        "label": "Display Format",
        "required": true,
        "options": {
          "standard": {
            "label": "Standard"
          },
          "number": {
            "label": "Number"
          },
          "percentage": {
            "label": "Percentage"
          },
          "text": {
            "label": "Text"
          },
          "date": {
            "label": "Date"
          },
          "currency": {
            "label": "Currency"
          }
        },
        "val": "standard"
      },
      "format__rounding": {
        "type": "select",
        "label": "Decimal Places for display",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "required": true,
        "options": {
          "no_rounding": {
            "label": "No rounding"
          },
          "0": {
            "label": "0 digits"
          },
          "1": {
            "label": "1 digits"
          },
          "2": {
            "label": "2 digits"
          },
          "3": {
            "label": "3 digits"
          },
          "4": {
            "label": "4 digits"
          },
          "5": {
            "label": "5 digits"
          },
          "6": {
            "label": "6 digits"
          },
          "7": {
            "label": "7 digits"
          },
          "8": {
            "label": "8 digits"
          },
          "9": {
            "label": "9 digits"
          }
        },
        "val": "2"
      },
      "format__use_1000_separator": {
        "type": "checkbox",
        "label": "Use 1000 Separator(.)",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "format__currency_symbol": {
        "type": "select",
        "label": "Symbol",
        "show_if": "this.format__category=='currency'",
        "required": true,
        "options": {
          "dollar": {
            "label": "$"
          },
          "euro": {
            "label": "€"
          },
          "pound": {
            "label": "£"
          },
          "yen": {
            "label": "¥ (Yen, currency of Japan)"
          },
          "colon": {
            "label": "₡ (Colón, currency of Costa Rica)"
          },
          "naira": {
            "label": "₦ (Naira, currency of Nigeria)"
          },
          "rupee": {
            "label": "₨ (Rupee, currency of India)"
          },
          "rupie": {
            "label": "₹ (Rupee, currency of India)"
          },
          "won": {
            "label": "₩ (Won, currency in South Korea and North Korea)"
          },
          "hebrew": {
            "label": "₪ (Currency of Israel)"
          },
          "dong": {
            "label": "₫ (Currency of Vietnam)"
          },
          "kip": {
            "label": "₭ (Kip, currency of Laos)"
          },
          "mongolia": {
            "label": "₮ (Currency of Mongolia)"
          },
          "peso": {
            "label": "₱ (Peso, currency of the Philippines)"
          },
          "guarani": {
            "label": "₲ (Guaraní, currency of Paraguay)"
          },
          "hryvnia": {
            "label": "₴ (Hryvnia, currency of Ukraine)"
          },
          "tenge": {
            "label": "₸ (Tenge, currency of Kazakhstan)"
          },
          "lira": {
            "label": "₺ (Lira, currency of Turkey)"
          },
          "manat": {
            "label": "₼ (Manat, currency of Azerbaijan)"
          },
          "rubles": {
            "label": "₽ (Rubles, currency of Russia)"
          },
          "lari": {
            "label": "₾ (Lari, currency of Georgia)"
          },
          "bitcoin": {
            "label": "₿ (Bitcoin, crypto currency)"
          }
        },
        "val": "dollar"
      },
      "format__date_format": {
        "type": "select",
        "label": "Type",
        "show_if": "this.format__category=='date'",
        "required": true,
        "options": {
          "mm/dd/yyyy": {
            "label": "3/14/2012"
          },
          "D, M dd, Y": {
            "label": "Wednesday, March 14, 2012"
          },
          "yyyy-mm-dd": {
            "label": "2012-03-14"
          },
          "m.dd.yyyy": {
            "label": "3.14.2012"
          },
          "m.dd.yy": {
            "label": "3.14.12"
          },
          "dd.m.yyyy": {
            "label": "14.3.2012"
          },
          "dd.m.yy": {
            "label": "14.3.12"
          },
          "M dd, Y": {
            "label": "March 14, 2012"
          },
          "dd-mm-yyyy": {
            "label": "14-03-2012"
          },
          "mm-dd-yyyy": {
            "label": "03-14-2012"
          },
          "dd-mm-yy": {
            "label": "14-03-12"
          },
          "mm-dd-yy": {
            "label": "03-14-12"
          }
        },
        "val": "mm/dd/yyyy"
      },
      "is_rename": {
        "type": "checkbox",
        "label": "Rename",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "rename": {
        "show_if": "this.is_rename == 'true'",
        "type": "text",
        "required": true,
        "minLength": 1,
        "maxLength": 255,
        "label": "New Column Name",
        "style": "margin-left: 10px"
      },
      "delete": {
        "type": "button",
        "label": "Delete",
        "function": "DELETE_ROW"
      }
    },
    "breakLine": true
  }
},
"/common-snippets/v2/SelectColumnRowConfig.json/SelectColumnRowConfig.json": {
  "placeholder": {
    "breakLine": true
  },
  "apply_columns_frame": {
    "type": "fieldset",
    "label": "Select column(s) to apply",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "apply_to_all_columns": {
        "type": "checkbox",
        "label": "All Columns",
        "show_if": "configure_input_tables=='zippydoc_table' && false",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "apply_columns__all_but_selected": {
        "type": "checkbox",
        "label": "All but selected",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "apply_columns": {
        "type": "select",
        "label": "Select Columns to Apply",
        "show_if": "configure_input_tables=='zippydoc_table'",
        "required": true,
        "table": "table_id",
        "multiple": true,
        "bind": "COLUMNS",
        "breakLine": true
      },
      "search_tables__apply_columns_text": {
        "type": "text",
        "label": "Column(s) to apply (separated by `;`)",
        "show_if": "configure_input_tables!='zippydoc_table' && search_tables__select_columns_by=='by_name_text'",
        "val": "",
        "placeholder": "Column1; Column2; ColumnN",
        "required": true,
        "style": "width: 100%"
      },
      "search_tables__apply_columns_order": {
        "type": "select",
        "label": "Column(s) to apply",
        "required": true,
        "show_if" :  "configure_input_tables!='zippydoc_table' && search_tables__select_columns_by=='by_order'",
        "options": {
          "col1": {
            "label": "Column 1"
          },
          "col2": {
            "label": "Column 2"
          },
          "col3": {
            "label": "Column 3"
          },
          "col4": {
            "label": "Column 4"
          },
          "col5": {
            "label": "Column 5"
          },
          "col6": {
            "label": "Column 6"
          },
          "col7": {
            "label": "Column 7"
          },
          "col8": {
            "label": "Column 8"
          },
          "col9": {
            "label": "Column 9"
          },
          "col10": {
            "label": "Column 10"
          },
          "col11": {
            "label": "Column 11"
          },
          "col12": {
            "label": "Column 12"
          },
          "col13": {
            "label": "Column 13"
          },
          "col14": {
            "label": "Column 14"
          },
          "col15": {
            "label": "Column 15"
          },
          "col16": {
            "label": "Column 16"
          },
          "col17": {
            "label": "Column 17"
          },
          "col18": {
            "label": "Column 18"
          },
          "col19": {
            "label": "Column 19"
          },
          "col20": {
            "label": "Column 20"
          }
        },
        "multiple": true,
        "val": []
      }
    }
  },
  "apply_to_all_rows": {
    "type": "checkbox",
    "label": "All Rows",
    "show_if": "configure_input_tables=='zippydoc_table' && false",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  },
  "apply_rows": {
    "type": "select",
    "label": "Select Rows to Apply",
    "show_if": "configure_input_tables=='zippydoc_table' && $table_id.numOfLabel >= 1",
    "required": true,
    "table": "table_id",
    "multiple": true,
    "bind": "LABELS",
    "breakLine": true
  },
  "intersection": {
    "type": "select",
    "label": "Selection",
    "show_if": "configure_input_tables=='zippydoc_table' && false",
    "options": {
      "all": {
        "label": "All selected Rows & Columns"
      },
      "intersection": {
        "label": "Intersection of selected Rows & Columns"
      }
    },
    "val": "intersection"
  }
}
,
"/common-snippets/v3/SelectColumnOnly.json/SelectColumnOnly.json": {
  "placeholder": {
    "breakLine": true
  },
  "apply_columns_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border: 1px solid #ccc; color: #2C3E50;line-height: 0.9; border-radius: 3px; font-family: montserrat;font-size:13 px",
    "repeat": false,
    "fields": {
      "apply_to_all_columns": {
        "type": "checkbox",
        "label": "All Columns",
        "show_if": "false",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "apply_columns": {
        "type": "select",
        "label": "Select Columns to Apply",
        "style": "float: left; width: 60%",
        "show_if": "search_tables=='false'",
        "required": true,
        "table": "table_id",
        "multiple": true,
        "bind": "COLUMNS"
      },
      "search_tables__apply_columns_text": {
        "type": "text",
        "label": "Column(s) to apply (separated by `;`)",
        "show_if": "search_tables=='true' && search_tables__select_columns_by=='by_name_text'",
        "val": "",
        "placeholder": "Column1; Column2; ColumnN",
        "required": true,
        "style": "width: 100%"
      },
      "search_tables__apply_columns_order": {
        "type": "select",
        "label": "Column(s) to apply",
        "required": true,
        "show_if" :  "search_tables=='true' && search_tables__select_columns_by=='by_order'",
        "options": {
          "col1": {
            "label": "Column 1"
          },
          "col2": {
            "label": "Column 2"
          },
          "col3": {
            "label": "Column 3"
          },
          "col4": {
            "label": "Column 4"
          },
          "col5": {
            "label": "Column 5"
          },
          "col6": {
            "label": "Column 6"
          },
          "col7": {
            "label": "Column 7"
          },
          "col8": {
            "label": "Column 8"
          },
          "col9": {
            "label": "Column 9"
          },
          "col10": {
            "label": "Column 10"
          },
          "col11": {
            "label": "Column 11"
          },
          "col12": {
            "label": "Column 12"
          },
          "col13": {
            "label": "Column 13"
          },
          "col14": {
            "label": "Column 14"
          },
          "col15": {
            "label": "Column 15"
          },
          "col16": {
            "label": "Column 16"
          },
          "col17": {
            "label": "Column 17"
          },
          "col18": {
            "label": "Column 18"
          },
          "col19": {
            "label": "Column 19"
          },
          "col20": {
            "label": "Column 20"
          }
        },
        "multiple": true,
        "val": []
      },
      "apply_columns__all_but_selected": {
        "type": "checkbox",
        "label": "All but selected",
        "style": "float: right; width: 30%",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "margin-left: 15px",
        "breakLine": true
      }
    }
  }
}
,
"/common-snippets/v3/SelectColumnRowWEmbed.json/SelectColumnRowWEmbed.json": {
  "placeholder": {
    "breakLine": true
  },
  "apply_columns_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border: 1px solid #ccc; color: #2C3E50;line-height: 0.9; border-radius: 3px; font-family: montserrat;font-size:13 px",
    "show_if": "$rootScope.hostType!='Embed'",
    "repeat": false,
    "fields": {
      "apply_to_all_columns": {
        "type": "checkbox",
        "label": "Apply to all columns",
        "show_if": "false",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "apply_columns": {
        "type": "select",
        "label": "Select Columns to Apply",
        "style": "float: left; width: 65%; padding: 15px",
        "show_if": "search_tables=='false'",
        "required": true,
        "table": "table_id",
        "multiple": true,
        "bind": "COLUMNS"
      },
      "search_tables__apply_columns_text": {
        "type": "text",
        "label": "Column(s) to apply (separated by `;`)",
        "show_if": "search_tables=='true' && search_tables__select_columns_by=='by_name_text'",
        "val": "",
        "placeholder": "Column1; Column2; ColumnN",
        "required": true,
        "style": "width: 100%"
      },
      "search_tables__apply_columns_order": {
        "type": "select",
        "label": "Column(s) to apply",
        "required": true,
        "show_if" :  "search_tables=='true' && search_tables__select_columns_by=='by_order'",
        "options": {
          "col1": {
            "label": "Column 1"
          },
          "col2": {
            "label": "Column 2"
          },
          "col3": {
            "label": "Column 3"
          },
          "col4": {
            "label": "Column 4"
          },
          "col5": {
            "label": "Column 5"
          },
          "col6": {
            "label": "Column 6"
          },
          "col7": {
            "label": "Column 7"
          },
          "col8": {
            "label": "Column 8"
          },
          "col9": {
            "label": "Column 9"
          },
          "col10": {
            "label": "Column 10"
          },
          "col11": {
            "label": "Column 11"
          },
          "col12": {
            "label": "Column 12"
          },
          "col13": {
            "label": "Column 13"
          },
          "col14": {
            "label": "Column 14"
          },
          "col15": {
            "label": "Column 15"
          },
          "col16": {
            "label": "Column 16"
          },
          "col17": {
            "label": "Column 17"
          },
          "col18": {
            "label": "Column 18"
          },
          "col19": {
            "label": "Column 19"
          },
          "col20": {
            "label": "Column 20"
          }
        },
        "multiple": true,
        "val": []
      },
      "apply_columns__all_but_selected": {
        "type": "checkbox",
        "label": "All but selected",
        "style": "float: right; width: 30%",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "style": "float: left; width: 30%",
        "breakLine": true
      }
    }
  },
  "apply_to_all_rows": {
    "type": "checkbox",
    "label": "All Rows",
    "show_if": "$rootScope.hostType!='Embed' && search_tables=='false' && false",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  },
  "apply_rows": {
    "type": "select",
    "label": "Select Rows to Apply",
    "show_if": "$rootScope.hostType!='Embed' && search_tables=='false' && $table_id.numOfLabel >= 1",
    "required": true,
    "table": "table_id",
    "multiple": true,
    "bind": "LABELS",
    "breakLine": true
  },
  "intersection": {
    "type": "select",
    "label": "Selection",
    "show_if": "$rootScope.hostType!='Embed' && search_tables=='false' && false",
    "options": {
      "all": {
        "label": "All selected Rows & Columns"
      },
      "intersection": {
        "label": "Intersection of selected Rows & Columns"
      }
    },
    "val": "intersection"
  }
}
,
"/common-snippets/v3/SelectTableWoSearch.json/SelectTableWoSearch.json": {
  "input": {
    "type": "fieldset",
    "label": "",
    "style": "border: 1px solid #ccc; color: #2C3E50; line-height: 0.9; border-radius: 3px; font-family: montserrat;font-size:13 px",
    "repeat": false,
    "fields": {
      "table_id": {
        "type": "select",
        "label": "Input Table",
        "bind": "TABLES",
        "empty": "",
        "required": true,
        "style": "margin-right: 15px"
      },
      "remove_input_table_after_processing": {
        "type": "hidden",
        "val": "false"
      },
      "is_word": {
        "type": "hidden",
        "val": "false"
      }
    }
  }
}
,
"/common-snippets/v3/SelectTables.json/SelectTables.json": {
  "input": {
    "type": "fieldset",
    "label": "Select Input Table",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "configure_input_tables": {
        "type": "select",
        "label": "Select Source",
        "options": {
          "zippydoc_table": {
            "label": "Flow Table"
          },
          "search_tables": {
            "label": "Search Tables"
          }
        },
        "val": "zippydoc_table"
      },
      "search_tables__types": {
        "type": "select",
        "label": "Select Source",
        "show_if": "configure_input_tables=='search_tables'",
        "options": {
          "owned_tables": {
            "label": "Owned tables"
          },
          "shared_tables": {
            "label": "Shared tables"
          },
          "published_tables": {
            "label": "Published tables"
          }
        },
        "multiple": true,
        "val": ["owned_tables"]
      },
      "tables": {
        "type": "fieldset",
        "label": "Select Tables",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "configure_input_tables=='zippydoc_table'",
        "repeat": true,
        "fields": {
          "table_id": {
            "type": "select",
            "label": "Select Table",
            "bind": "TABLES"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "input_table_condition": {
        "type": "fieldset",
        "label": "Search Tables",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "configure_input_tables=='search_tables'",
        "repeat": true,
        "fields": {
          "initial_op": {
            "type": "select",
            "label": "Logic Operator",
            "required": true,
            "show_if" :  "$index == 0",
            "options": {
              "if": {
                "label": "IF"
              },
              "if_not": {
                "label": "IF NOT"
              }
            },
            "val": "if"
          },
          "op": {
            "type": "select",
            "label": "Logic Operator",
            "required": true,
            "show_if" :  "$index > 0",
            "options": {
              "and": {
                "label": "AND"
              },
              "or": {
                "label": "OR"
              },
              "and_not": {
                "label": "AND NOT"
              },
              "or_not": {
                "label": "OR NOT"
              }
            },
            "val": "and"
          },
          "type": {
            "type": "select",
            "label": "Type",
            "required": true,
            "options": {
              "Table Name": {
                "label": "Table Name"
              },
              "Tags": {
                "label": "Tags"
              }
            },
            "val": "Table Name"
          },
          "condition": {
            "type": "select",
            "label": "Operator",
            "required": true,
            "options": {
              "CONTAINS": {
                "label": "CONTAINS"
              },
              "CONTAINED IN STRING": {
                "label": "CONTAINED IN"
              },
              "STARTS WITH": {
                "label": "STARTS WITH"
              },
              "ENDS WITH": {
                "label": "ENDS WITH"
              },
              "=": {
                "label": "EQUAL"
              },
              "REGEX MATCH": {
                "label": "REGEX MATCH"
              }
            },
            "val": "CONTAINS"
          },
          "value": {
            "type": "text",
            "label": "Input Value",
            "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "val": "",
            "required": true
          },
          "case_sensitive": {
            "type": "select",
            "label": "Case Sensitive",
            "required": true,
            "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "options": {
              "yes": {
                "label": "Case Sensitive"
              },
              "no": {
                "label": "Case Insensitive"
              }
            },
            "val": "yes"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      }
    }
  }
},
"/common-snippets/v3/SelectTableWEmbed.json/SelectTableWEmbed.json": {
  "input": {
    "type": "fieldset",
    "label": "",
    "style": "border: 1px solid #ccc;  color: #2C3E50;line-height: 0.9; border-radius: 3px; font-family: montserrat;font-size:13 px",
    "repeat": false,
    "fields": {
      "table_id": {
        "type": "select",
        "label": "Input Table",
        "style": "float: left; width: 65%; align: right",
        "show_if": "$rootScope.hostType!='Embed' && search_tables=='false'",
        "bind": "TABLES",
        "empty": "",
        "required": true
      },
      "search_tables": {
        "type": "checkbox",
        "label": "Search Table(s)",
        "style": "float: right; width: 30%",
        "show_if": "$rootScope.hostType!='Embed'",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "search_tables__types": {
        "type": "select",
        "label": "Table Search Source",
        "show_if": "$rootScope.hostType!='Embed' && search_tables=='true'",
        "options": {
          "owned_tables": {
            "label": "Owned tables"
          },
          "shared_tables": {
            "label": "Shared tables"
          },
          "published_tables": {
            "label": "Published tables"
          }
        },
        "multiple": true,
        "val": ["owned_tables"]
      },
      "search_tables__select_columns_by": {
        "type": "select",
        "label": "Column selection type",
        "show_if": "$rootScope.hostType!='Embed' && search_tables=='true'",
        "options": {
          "by_name_text": {
            "label": "Select columns by name"
          },
          "by_order": {
            "label": "Select columns by order"
          }
        },
        "val": "by_name_text"
      },
      "input_table_condition": {
        "type": "fieldset",
        "label": "Search Tables",
        "style": "border-radius: 3px; border: 1px solid #ccc",
        "show_if": "$rootScope.hostType!='Embed' && search_tables=='true'",
        "repeat": true,
        "fields": {
          "initial_op": {
            "type": "select",
            "label": "Logic Operator",
            "required": true,
            "show_if" :  "$index == 0",
            "options": {
              "if": {
                "label": "IF"
              },
              "if_not": {
                "label": "IF NOT"
              }
            },
            "val": "if"
          },
          "op": {
            "type": "select",
            "label": "Logic Operator",
            "required": true,
            "show_if" :  "$index > 0",
            "options": {
              "and": {
                "label": "AND"
              },
              "or": {
                "label": "OR"
              },
              "and_not": {
                "label": "AND NOT"
              },
              "or_not": {
                "label": "OR NOT"
              }
            },
            "val": "and"
          },
          "type": {
            "type": "select",
            "label": "Type",
            "required": true,
            "options": {
              "Table Name": {
                "label": "Table Name"
              },
              "Tags": {
                "label": "Tags"
              }
            },
            "val": "Table Name"
          },
          "condition": {
            "type": "select",
            "label": "Operator",
            "required": true,
            "options": {
              "CONTAINS": {
                "label": "CONTAINS"
              },
              "STARTS WITH": {
                "label": "STARTS WITH"
              },
              "ENDS WITH": {
                "label": "ENDS WITH"
              },
              "=": {
                "label": "EQUAL"
              },
              "REGEX MATCH": {
                "label": "REGEX MATCH"
              }
            },
            "val": "CONTAINS"
          },
          "value": {
            "type": "text",
            "label": "Input Value",
            "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "val": "",
            "required": true
          },
          "case_sensitive": {
            "type": "select",
            "label": "Case Sensitive",
            "required": true,
            "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "options": {
              "yes": {
                "label": "Case Sensitive"
              },
              "no": {
                "label": "Case Insensitive"
              }
            },
            "val": "yes"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "remove_input_table_after_processing": {
        "type": "hidden",
        "val": "false"
      },
      "is_word": {
        "type": "hidden",
        "val": "false"
      }
    }
  }
}
,
"/common-snippets/v3/SelectColumnRow.json/SelectColumnRow.json": {
  "placeholder": {
    "breakLine": true
  },
  "apply_columns_frame": {
    "type": "fieldset",
    "label": "",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "repeat": false,
    "fields": {
      "apply_to_all_columns": {
        "type": "checkbox",
        "label": "Apply to all columns",
        "show_if": "false",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "apply_columns": {
        "type": "select",
        "label": "Select Columns to Apply",
        "style": "float: left; width: 65%",
        "show_if": "search_tables=='false'",
        "required": true,
        "table": "table_id",
        "multiple": true,
        "bind": "COLUMNS"
      },
      "search_tables__apply_columns_text": {
        "type": "text",
        "label": "Column(s) to apply (separated by `;`)",
        "show_if": "search_tables=='true' && search_tables__select_columns_by=='by_name_text'",
        "val": "",
        "placeholder": "Column1; Column2; ColumnN",
        "required": true,
        "style": "width: 100%"
      },
      "search_tables__apply_columns_order": {
        "type": "select",
        "label": "Column(s) to apply",
        "required": true,
        "show_if" :  "search_tables=='true' && search_tables__select_columns_by=='by_order'",
        "options": {
          "col1": {
            "label": "Column 1"
          },
          "col2": {
            "label": "Column 2"
          },
          "col3": {
            "label": "Column 3"
          },
          "col4": {
            "label": "Column 4"
          },
          "col5": {
            "label": "Column 5"
          },
          "col6": {
            "label": "Column 6"
          },
          "col7": {
            "label": "Column 7"
          },
          "col8": {
            "label": "Column 8"
          },
          "col9": {
            "label": "Column 9"
          },
          "col10": {
            "label": "Column 10"
          },
          "col11": {
            "label": "Column 11"
          },
          "col12": {
            "label": "Column 12"
          },
          "col13": {
            "label": "Column 13"
          },
          "col14": {
            "label": "Column 14"
          },
          "col15": {
            "label": "Column 15"
          },
          "col16": {
            "label": "Column 16"
          },
          "col17": {
            "label": "Column 17"
          },
          "col18": {
            "label": "Column 18"
          },
          "col19": {
            "label": "Column 19"
          },
          "col20": {
            "label": "Column 20"
          }
        },
        "multiple": true,
        "val": []
      },
      "apply_columns__all_but_selected": {
        "type": "checkbox",
        "label": "All but selected",
        "style": "float: right; width: 30%",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  },
  "apply_to_all_rows": {
    "type": "checkbox",
    "label": "All Rows",
    "show_if": "search_tables=='false' && false",
    "val": "false",
    "isOn": "true",
    "isOff": "false",
    "breakLine": true
  },
  "apply_rows": {
    "type": "select",
    "label": "Select Rows to Apply",
    "show_if": "search_tables=='false' && $table_id.numOfLabel >= 1",
    "required": true,
    "table": "table_id",
    "multiple": true,
    "bind": "LABELS",
    "breakLine": true
  },
  "intersection": {
    "type": "select",
    "label": "Selection",
    "show_if": "search_tables=='false' && false",
    "options": {
      "all": {
        "label": "All selected Rows & Columns"
      },
      "intersection": {
        "label": "Intersection of selected Rows & Columns"
      }
    },
    "val": "intersection"
  }
}
,
"/common-snippets/v3/SelectOutputColumn.json/SelectOutputColumn.json": {
  "output.select_output_columns_type": {
    "type": "select",
    "label": "Select Output Columns",
    "required": true,
    "options": {
      "all": {
        "label": "All"
      },
      "standard": {
        "label": "Standard Column Selection"
      },
      "advanced": {
        "label": "Advanced Column Selection"
      }
    },
    "val": "all",
    "style": "margin-right: 15px"
  },
  "output_columns_frame": {
    "type": "fieldset",
    "label": "Select Output Columns",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.select_output_columns_type=='standard'",
    "repeat": false,
    "fields": {
      "output.output_columns": {
        "type": "select",
        "label": "Output Column(s)",
        "show_if": "search_tables=='false'",
        "table": "table_id",
        "bind": "COLUMNS",
        "multiple": true,
        "required": true,
        "breakLine": true
      },
      "output.excel_sheet__output_columns": {
        "type": "select",
        "label": "Output Column(s)",
        "show_if": "search_tables=='true'",
        "multiple": true,
        "options": {
          "A": {
            "label": "A"
          },
          "B": {
            "label": "B"
          },
          "C": {
            "label": "C"
          },
          "D": {
            "label": "D"
          },
          "E": {
            "label": "E"
          },
          "F": {
            "label": "F"
          },
          "G": {
            "label": "G"
          },
          "H": {
            "label": "H"
          },
          "I": {
            "label": "I"
          },
          "J": {
            "label": "J"
          },
          "K": {
            "label": "K"
          },
          "L": {
            "label": "L"
          },
          "M": {
            "label": "M"
          },
          "N": {
            "label": "N"
          },
          "O": {
            "label": "O"
          },
          "P": {
            "label": "P"
          },
          "Q": {
            "label": "Q"
          },
          "R": {
            "label": "R"
          },
          "S": {
            "label": "S"
          },
          "T": {
            "label": "T"
          },
          "U": {
            "label": "U"
          },
          "V": {
            "label": "V"
          },
          "W": {
            "label": "W"
          },
          "X": {
            "label": "X"
          },
          "Y": {
            "label": "Y"
          },
          "Z": {
            "label": "Z"
          },
          "AA": {
            "label": "AA"
          },
          "AB": {
            "label": "AB"
          },
          "AC": {
            "label": "AC"
          },
          "AD": {
            "label": "AD"
          },
          "AE": {
            "label": "AE"
          },
          "AF": {
            "label": "AF"
          },
          "AG": {
            "label": "AG"
          },
          "AH": {
            "label": "AH"
          },
          "AI": {
            "label": "AI"
          },
          "AJ": {
            "label": "AJ"
          },
          "AK": {
            "label": "AK"
          },
          "AL": {
            "label": "AL"
          },
          "AM": {
            "label": "AM"
          },
          "AN": {
            "label": "AN"
          },
          "AO": {
            "label": "AO"
          },
          "AP": {
            "label": "AP"
          },
          "AQ": {
            "label": "AQ"
          },
          "AR": {
            "label": "AR"
          },
          "AS": {
            "label": "AS"
          },
          "AT": {
            "label": "AT"
          },
          "AU": {
            "label": "AU"
          },
          "AV": {
            "label": "AV"
          },
          "AW": {
            "label": "AW"
          },
          "AX": {
            "label": "AX"
          },
          "AY": {
            "label": "AY"
          },
          "AZ": {
            "label": "AZ"
          }
        },
        "val": ""
      },
      "output.all_but_selected": {
        "type": "checkbox",
        "label": "All but selected",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      }
    }
  },
  "output.detail_output_columns": {
    "type": "fieldset",
    "label": "Select Output Columns",
    "style": "border-radius: 3px; border: 1px solid #ccc",
    "show_if": "output.select_output_columns_type=='advanced'",
    "repeat": true,
    "fields": {
      "field_name": {
        "type": "select",
        "label": "Select Column",
        "show_if": "search_tables=='false'",
        "table": "table_id",
        "bind": "COLUMNS",
        "required": true
      },
      "excel_sheet__field_name": {
        "type": "select",
        "label": "Select Column",
        "show_if": "search_tables=='true'",
        "options": {
          "A": {
            "label": "A"
          },
          "B": {
            "label": "B"
          },
          "C": {
            "label": "C"
          },
          "D": {
            "label": "D"
          },
          "E": {
            "label": "E"
          },
          "F": {
            "label": "F"
          },
          "G": {
            "label": "G"
          },
          "H": {
            "label": "H"
          },
          "I": {
            "label": "I"
          },
          "J": {
            "label": "J"
          },
          "K": {
            "label": "K"
          },
          "L": {
            "label": "L"
          },
          "M": {
            "label": "M"
          },
          "N": {
            "label": "N"
          },
          "O": {
            "label": "O"
          },
          "P": {
            "label": "P"
          },
          "Q": {
            "label": "Q"
          },
          "R": {
            "label": "R"
          },
          "S": {
            "label": "S"
          },
          "T": {
            "label": "T"
          },
          "U": {
            "label": "U"
          },
          "V": {
            "label": "V"
          },
          "W": {
            "label": "W"
          },
          "X": {
            "label": "X"
          },
          "Y": {
            "label": "Y"
          },
          "Z": {
            "label": "Z"
          },
          "AA": {
            "label": "AA"
          },
          "AB": {
            "label": "AB"
          },
          "AC": {
            "label": "AC"
          },
          "AD": {
            "label": "AD"
          },
          "AE": {
            "label": "AE"
          },
          "AF": {
            "label": "AF"
          },
          "AG": {
            "label": "AG"
          },
          "AH": {
            "label": "AH"
          },
          "AI": {
            "label": "AI"
          },
          "AJ": {
            "label": "AJ"
          },
          "AK": {
            "label": "AK"
          },
          "AL": {
            "label": "AL"
          },
          "AM": {
            "label": "AM"
          },
          "AN": {
            "label": "AN"
          },
          "AO": {
            "label": "AO"
          },
          "AP": {
            "label": "AP"
          },
          "AQ": {
            "label": "AQ"
          },
          "AR": {
            "label": "AR"
          },
          "AS": {
            "label": "AS"
          },
          "AT": {
            "label": "AT"
          },
          "AU": {
            "label": "AU"
          },
          "AV": {
            "label": "AV"
          },
          "AW": {
            "label": "AW"
          },
          "AX": {
            "label": "AX"
          },
          "AY": {
            "label": "AY"
          },
          "AZ": {
            "label": "AZ"
          }
        },
        "val": ""
      },
      "order": {
        "type": "select",
        "label": "Order",
        "options": {
          "-": {
            "label": "-"
          },
          "asc": {
            "label": "Asc"
          },
          "desc": {
            "label": "Desc"
          }
        },
        "val": "-"
      },
      "format__category": {
        "type": "select",
        "label": "Display Format",
        "required": true,
        "options": {
          "standard": {
            "label": "Standard"
          },
          "number": {
            "label": "Number"
          },
          "percentage": {
            "label": "Percentage"
          },
          "text": {
            "label": "Text"
          },
          "date": {
            "label": "Date"
          },
          "currency": {
            "label": "Currency"
          }
        },
        "val": "standard"
      },
      "format__rounding": {
        "type": "select",
        "label": "Decimal Places for display",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "required": true,
        "options": {
          "no_rounding": {
            "label": "No rounding"
          },
          "0": {
            "label": "0 digits"
          },
          "1": {
            "label": "1 digits"
          },
          "2": {
            "label": "2 digits"
          },
          "3": {
            "label": "3 digits"
          },
          "4": {
            "label": "4 digits"
          },
          "5": {
            "label": "5 digits"
          },
          "6": {
            "label": "6 digits"
          },
          "7": {
            "label": "7 digits"
          },
          "8": {
            "label": "8 digits"
          },
          "9": {
            "label": "9 digits"
          }
        },
        "val": "2"
      },
      "format__use_1000_separator": {
        "type": "checkbox",
        "label": "Use 1000 Separator(.)",
        "show_if": "this.format__category=='number' || this.format__category=='percentage' || this.format__category=='currency'",
        "val": "true",
        "isOn": "true",
        "isOff": "false"
      },
      "format__currency_symbol": {
        "type": "select",
        "label": "Symbol",
        "show_if": "this.format__category=='currency'",
        "required": true,
        "options": {
          "dollar": {
            "label": "$"
          },
          "euro": {
            "label": "€"
          },
          "pound": {
            "label": "£"
          },
          "yen": {
            "label": "¥ (Yen, currency of Japan)"
          },
          "colon": {
            "label": "₡ (Colón, currency of Costa Rica)"
          },
          "naira": {
            "label": "₦ (Naira, currency of Nigeria)"
          },
          "rupee": {
            "label": "₨ (Rupee, currency of India)"
          },
          "rupie": {
            "label": "₹ (Rupee, currency of India)"
          },
          "won": {
            "label": "₩ (Won, currency in South Korea and North Korea)"
          },
          "hebrew": {
            "label": "₪ (Currency of Israel)"
          },
          "dong": {
            "label": "₫ (Currency of Vietnam)"
          },
          "kip": {
            "label": "₭ (Kip, currency of Laos)"
          },
          "mongolia": {
            "label": "₮ (Currency of Mongolia)"
          },
          "peso": {
            "label": "₱ (Peso, currency of the Philippines)"
          },
          "guarani": {
            "label": "₲ (Guaraní, currency of Paraguay)"
          },
          "hryvnia": {
            "label": "₴ (Hryvnia, currency of Ukraine)"
          },
          "tenge": {
            "label": "₸ (Tenge, currency of Kazakhstan)"
          },
          "lira": {
            "label": "₺ (Lira, currency of Turkey)"
          },
          "manat": {
            "label": "₼ (Manat, currency of Azerbaijan)"
          },
          "rubles": {
            "label": "₽ (Rubles, currency of Russia)"
          },
          "lari": {
            "label": "₾ (Lari, currency of Georgia)"
          },
          "bitcoin": {
            "label": "₿ (Bitcoin, crypto currency)"
          }
        },
        "val": "dollar"
      },
      "format__date_format": {
        "type": "select",
        "label": "Type",
        "show_if": "this.format__category=='date'",
        "required": true,
        "options": {
          "mm/dd/yyyy": {
            "label": "3/14/2012"
          },
          "D, M dd, Y": {
            "label": "Wednesday, March 14, 2012"
          },
          "yyyy-mm-dd": {
            "label": "2012-03-14"
          },
          "m.dd.yyyy": {
            "label": "3.14.2012"
          },
          "m.dd.yy": {
            "label": "3.14.12"
          },
          "dd.m.yyyy": {
            "label": "14.3.2012"
          },
          "dd.m.yy": {
            "label": "14.3.12"
          },
          "M dd, Y": {
            "label": "March 14, 2012"
          },
          "dd-mm-yyyy": {
            "label": "14-03-2012"
          },
          "mm-dd-yyyy": {
            "label": "03-14-2012"
          },
          "dd-mm-yy": {
            "label": "14-03-12"
          },
          "mm-dd-yy": {
            "label": "03-14-12"
          }
        },
        "val": "mm/dd/yyyy"
      },
      "is_rename": {
        "type": "checkbox",
        "label": "Rename",
        "val": "false",
        "isOn": "true",
        "isOff": "false"
      },
      "rename": {
        "show_if": "this.is_rename == 'true'",
        "type": "text",
        "required": true,
        "minLength": 1,
        "maxLength": 255,
        "label": "New Column Name",
        "style": "margin-left: 10px"
      },
      "delete": {
        "type": "button",
        "label": "Delete",
        "function": "DELETE_ROW"
      }
    },
    "breakLine": true
  }
}
,
"/common-snippets/v3/SelectTableWoSearchWEmbed.json/SelectTableWoSearchWEmbed.json": {
  "input": {
    "type": "fieldset",
    "label": "",
    "style": "border: 1px solid #ccc; color: #2C3E50; line-height: 0.9; border-radius: 3px; font-family: montserrat;font-size:13 px",
    "show_if": "$rootScope.hostType!='Embed'",
    "repeat": false,
    "fields": {
      "table_id": {
        "type": "select",
        "label": "Input Table",
        "bind": "TABLES",
        "empty": "",
        "required": true,
        "style": "margin-right: 15px"
      },
      "remove_input_table_after_processing": {
        "type": "hidden",
        "val": "false"
      },
      "is_word": {
        "type": "hidden",
        "val": "false"
      }
    }
  }
}
,
"/common-snippets/v3/SelectTable.json/SelectTable.json": {
  "input": {
    "type": "fieldset",
    "label": "",
    "style": "border: 1px solid #ccc; color: #2C3E50;line-height: 0.9; border-radius: 3px",
    "repeat": false,
    "fields": {
      "table_id": {
        "type": "select",
        "label": "Input Table",
        "style": "float: left; width: 65%; align: right",
        "show_if": "search_tables=='false'",
        "bind": "TABLES",
        "empty": "",
        "required": true
      },
      "search_tables": {
        "type": "checkbox",
        "label": "Search Table(s)",
        "style": "float: right; width: 30%",
        "val": "false",
        "isOn": "true",
        "isOff": "false",
        "breakLine": true
      },
      "search_tables__types": {
        "type": "select",
        "label": "Table Search Source",
        "show_if": "search_tables=='true'",
        "options": {
          "owned_tables": {
            "label": "Owned tables"
          },
          "shared_tables": {
            "label": "Shared tables"
          },
          "published_tables": {
            "label": "Published tables"
          }
        },
        "multiple": true,
        "val": ["owned_tables"]
      },
      "input_table_condition": {
        "type": "fieldset",
        "label": "Search Tables",
        "style": "border: 1px solid #ccc",
        "show_if": "search_tables=='true'",
        "repeat": true,
        "fields": {
          "initial_op": {
            "type": "select",
            "label": "Logic Operator",
            "required": true,
            "show_if" :  "$index == 0",
            "options": {
              "if": {
                "label": "IF"
              },
              "if_not": {
                "label": "IF NOT"
              }
            },
            "val": "if"
          },
          "op": {
            "type": "select",
            "label": "Logic Operator",
            "required": true,
            "show_if" :  "$index > 0",
            "options": {
              "and": {
                "label": "AND"
              },
              "or": {
                "label": "OR"
              },
              "and_not": {
                "label": "AND NOT"
              },
              "or_not": {
                "label": "OR NOT"
              }
            },
            "val": "and"
          },
          "type": {
            "type": "select",
            "label": "Type",
            "required": true,
            "options": {
              "Table Name": {
                "label": "Table Name"
              },
              "Tags": {
                "label": "Tags"
              }
            },
            "val": "Table Name"
          },
          "condition": {
            "type": "select",
            "label": "Operator",
            "required": true,
            "options": {
              "CONTAINS": {
                "label": "CONTAINS"
              },
              "STARTS WITH": {
                "label": "STARTS WITH"
              },
              "ENDS WITH": {
                "label": "ENDS WITH"
              },
              "=": {
                "label": "EQUAL"
              },
              "REGEX MATCH": {
                "label": "REGEX MATCH"
              }
            },
            "val": "CONTAINS"
          },
          "value": {
            "type": "text",
            "label": "Input Value",
            "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "val": "",
            "required": true
          },
          "case_sensitive": {
            "type": "select",
            "label": "Case Sensitive",
            "required": true,
            "show_if": "this.condition == 'CONTAINS' || this.condition == 'CONTAINED IN STRING' || this.condition == '=' || this.condition == 'STARTS WITH' || this.condition == 'ENDS WITH' || this.condition == 'REGEX MATCH' || this.condition == 'NOT REGEX MATCH' || this.condition == 'IN REGEX TABLE' || this.condition == 'NOT IN REGEX TABLE'",
            "options": {
              "yes": {
                "label": "Case Sensitive"
              },
              "no": {
                "label": "Case Insensitive"
              }
            },
            "val": "yes"
          },
          "delete": {
            "type": "button",
            "label": "Delete",
            "function": "DELETE_ROW"
          }
        }
      },
      "search_tables__select_columns_by": {
        "type": "select",
        "label": "Column selection type",
        "show_if": "search_tables=='true'",
        "options": {
          "by_name_text": {
            "label": "Select columns by name"
          },
          "by_order": {
            "label": "Select columns by order"
          }
        },
        "val": "by_name_text"
      },
      "remove_input_table_after_processing": {
        "type": "hidden",
        "val": "false"
      },
      "is_word": {
        "type": "hidden",
        "val": "false"
      }
    }
  }
}
,
}
